{"nodes": [{"code": "<script>\n  \nvar defaults = {\n  width: 760, \n  height: 400, \n  uid:\"chart\", \n  margin: {top: 50, right: 0, bottom: 0, left: 0}, \n  child: \"name\", \n  value: \"value\"\n}; \n\nvar cf = defaults; \nvar margin = cf.margin,\n    width = cf.width,\n    height = cf.height - margin.top - margin.bottom,\n    formatNumber = d3.format(\",d\"),\n    transitioning;\n\n  // Great way to do a tooltip. \n var tooltip = d3.select(\"body\")\n  .append(\"div\")\n  .style(\"position\", \"absolute\")\n  .style(\"z-index\", \"10\")\n  .style(\"visibility\", \"hidden\")\n  .style(\"color\", \"white\")\n  .style(\"padding\", \"8px\")\n  .style(\"background-color\", \"rgba(0, 0, 0, 0.75)\")\n  .style(\"border-radius\", \"6px\")\n  .style(\"font\", \"12px sans-serif\")\n  .text(\"tooltip\"); \n  \n // Format number depending on the value: \n  function formatNumber(d_) {\n    // this function can be called as formatNumber_tangible_data, which is in scripts.js \n    var d = Math.abs(d_); \n    var decs = Math.floor(d) == 0? d - Math.floor(d): d % Math.floor(d) ;\n    if(decs == 0) d_ = Math.round(d_);  \n    if(d > 100000) return d3.format(\",d\")(Math.round(d_));\n    if(d > 10000) return d3.format(\"d\")(Math.round(d_)); \n    if(decs == 0) return d3.format(\"d\")(Math.round(d_)); \n    if( d > 10 &  decs > 0.1) return d3.format(\".1f\")(d_); \n    if( d > 10 & decs <= 0.1) return d3.format(\".0f\")(d_); \n    if( d > 0 & decs  > 0.01) return d3.format(\".2f\")(d_); \n    if( d > 0 & decs <= 0.01) return d3.format(\"e\")(d_);\n    return d3.format(\"s\")(d_); \n  }\n\nfunction make_title(d){\n  console.log(\"making_title\", d); \n       return d[cf.child] ? d[cf.child] + \" (\" + formatNumber(d[cf.value]) + \")\" : d.key + \" (\" + formatNumber(d[cf.value]) + \")\";\n    }\n\nfunction google_colors(n) {\nvar colores_g = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\nreturn colores_g[n % colores_g.length];\n}\n\nvar x = d3.scale.linear()\n    .domain([0, width])\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .domain([0, height])\n    .range([0, height]);\n\nvar treemap = d3.layout.treemap()\n    .children(function(d, depth) { return depth ? null : d._children; })\n    .sort(function(a, b) { return a.value - b.value; })\n    .ratio(height / width * 0.5 * (1 + Math.sqrt(5)))\n    .round(false);\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.bottom + margin.top)\n    .style(\"margin-left\", -margin.left + \"px\")\n    .style(\"margin.right\", -margin.right + \"px\")\n\t\t.classed(\"treemap-svg\", true)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .style(\"shape-rendering\", \"crispEdges\");\n\nvar grandparent = svg.append(\"g\")\n    .attr(\"class\", \"grandparent\");\n\ngrandparent.append(\"rect\")\n    .attr(\"y\", -margin.top)\n    .attr(\"width\", width)\n    .attr(\"height\", margin.top);\n\ngrandparent.append(\"text\")\n    .attr(\"x\", 6)\n    .attr(\"y\", 6 - margin.top)\n    .attr(\"dy\", \"1.3em\");\n\nd3.json(\"flare.json\", function(root) {\n  //var names = d3.map(root, function(d){return d[cf.;}).keys()\n  //console.log(\"names\", names); \n  initialize(root);\n  accumulate(root);\n  layout(root);\n  display(root);\n  \n  function initialize(root) {\n    root.x = root.y = 0;\n    root.dx = width;\n    root.dy = height;\n    root.depth = 0;\n  }\n\n  // Aggregate the values for internal nodes. This is normally done by the\n  // treemap layout, but not here because of our custom implementation.\n  // We also take a snapshot of the original children (_children) to avoid\n  // the children being overwritten when when layout is computed.\n  function accumulate(d) {\n    return (d._children = d.children)\n        ? d.value = d.children.reduce(function(p, v) { return p + accumulate(v); }, 0)\n        : d.value;\n  }\n\n  // Compute the treemap layout recursively such that each group of siblings\n  // uses the same size (11) rather than the dimensions of the parent cell.\n    // This optimizes the layout for the current zoom state. Note that a wrapper\n  // object is created for the parent node for each group of siblings so that\n  // the parents dimensions are not discarded as we recurse. Since each group\n  // of sibling was laid out in 11, we must rescale to fit using absolute\n  // coordinates. This lets us use a viewport to zoom.\n  function layout(d) {\n    if (d._children) {\n      treemap.nodes({_children: d._children});\n      d._children.forEach(function(c) {\n        c.x = d.x + c.x * d.dx;\n        c.y = d.y + c.y * d.dy;\n        c.dx *= d.dx;\n        c.dy *= d.dy;\n        c.parent = d;\n        layout(c);\n      });\n    }\n  }\n  \n  function display(d) {\n    //c20.domain(names)\n    grandparent\n        .datum(d.parent)\n        .on(\"click\", transition)\n      .select(\"text\")\n        .text(name(d));\n\n    var g1 = svg.insert(\"g\", \".grandparent\")\n        .datum(d)\n        .attr(\"class\", \"depth\");\n\n    var g = g1.selectAll(\"g\")\n        .data(d._children)\n      .enter().append(\"g\");\n\n    g.filter(function(d) { return d._children; })\n        .classed(\"children\", true)\n        .on(\"click\", transition);\n\n    g.selectAll(\".child\")\n        .data(function(d) { return d._children || [d]; })\n      .enter().append(\"rect\")\n        .attr(\"class\", \"child\")\n        .call(rect)\n    ;\n\n    g.append(\"rect\")\n        .attr(\"class\", \"parent\")\n        .call(rect)\n      //.append(\"title\")\n      //  .text(function(d) { return formatNumber(d.value); });\n    .on(\"mouseover\", function(d) {\n              tooltip.html(make_title(d));\n              tooltip.transition();\n              return tooltip.style(\"visibility\", \"visible\").style(\"opacity\", 1) //transition().duration(5000).style(\"opacity\", 0);\n          })\n          .on(\"mousemove\", function() {\n              tooltip.style(\"opacity\", 1);\n              return tooltip.style(\"top\", (d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\");\n          })\n          .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\");});\n\n    g.append(\"text\")\n        .attr(\"dy\", \".75em\")\n        .text(function(d) { return d.name; })\n        .call(text);\n    \n    //console.log(\"rects\", g.selectAll(\"rect\")); \n\n    function transition(d) {\n      if (transitioning || !d) return;\n      transitioning = true;\n\n      var g2 = display(d);\n          //console.log(\"displayed\", g2);\n      var t1 = g1.transition().duration(750),\n          t2 = g2.transition().duration(750);\n\n      // Update the domain only after entering new elements.\n      x.domain([d.x, d.x + d.dx]);\n      y.domain([d.y, d.y + d.dy]);\n\n      // Enable anti-aliasing during the transition.\n      svg.style(\"shape-rendering\", null);\n\n      // Draw child nodes on top of parent nodes.\n      svg.selectAll(\".depth\").sort(function(a, b) { return a.depth - b.depth; });\n\n      // Fade-in entering text.\n      g2.selectAll(\"text\").style(\"fill-opacity\", 0);\n\n      // Transition to the new view.\n      t1.selectAll(\"text\").call(text).style(\"fill-opacity\", 0);\n      t2.selectAll(\"text\").call(text).style(\"fill-opacity\", 1);\n      t1.selectAll(\"rect\").call(rect);\n      t2.selectAll(\"rect\").call(rect);\n      //g.selectAll(\"text\").each(function(s){console.log(\"s\",s)});\n     \n      // Remove the old node when the transition is finished.\n      t1.remove().each(\"end\", function() {\n        svg.style(\"shape-rendering\", \"crispEdges\");\n        transitioning = false;\n      });\n      \n      //t2.each(\"end\", wrapAll);;\n    }\n    return g;\n  }\n\n  function text_size(d){\n    var dx = x(d.x + d.dx) - x(d.x); \n    var dy = y(d.y + d.dy) - y(d.y); \n    var ref = (cf.width*cf.height) / (760 * 400); \n    var ss = 10 + 220 * ref * dx*dy/(cf.width*cf.height); \n    //console.log(\"size\", ss, dx,dy); \n    var s = Math.floor(Math.max(9, ss)); \n    return s;\n  }\n  \n  function wrap_size(d){\n    var w = x(d.x + d.dx) - x(d.x); \n    var text = d3.select(this); \n    var self = this;\n    var cl = self.getComputedTextLength(); \n    var fs = parseFloat(text.style(\"font-size\")); \n    var ss = w / cl * fs /3.4; \n    ss = Math.max(12,ss) + \"px\"; \n    var len = d.name.length; \n    /*console.log(\"name\", d.name, \n                \"length\", len,\n                \"font\", fs, \n                \"cl\" , cl,\n                \"cl/len\", cl /len,\n                \"w\", w, \n                \"prop\", w / cl, \n                \"ss\", ss\n               );\n    */\n    text.style(\"font-size\", ss); \n    text.attr(\"dy\", \".65em\"); \n  }\n\n  function text(text) {\n    text\n      //.style(\"font-size\", function(d){return wrap_txt(d)})\n      .attr(\"x\", function(d) { return x(d.x) + 6; })\n      //.attr(\"dx\", function(d) {return x(d.x + d.dx) - x(d.x)})\n      .attr(\"y\", function(d) { return y(d.y) + Math.max(6,text_size(d) /10); })\n      .attr(\"width\", function(d) { return x(d.x + d.dx) - x(d.x); })\n    \n    text.each(wrap_size);\n  }\n\n  \n  function color_rect(d,i){\n    //console.log(\"col\", d, i); \n    return c20(d.name); \n  }\n\n  function rect(rect) {\n    rect.attr(\"x\", function(d) { return x(d.x); })\n        .attr(\"y\", function(d) { return y(d.y); })\n        .attr(\"width\", function(d) { return x(d.x + d.dx) - x(d.x); })\n        .attr(\"height\", function(d) { return y(d.y + d.dy) - y(d.y); })\n    \t\t.style(\"fill\", function(d,i){return google_colors(i)})\n        .style(\"fill-opacity\", 0.6);\n  }\n\n  function name(d) {\n    return d.parent\n        ? name(d.parent) + \" // \" + d.name + \" (\" + formatNumber(d.value) + \")\"\n        : d.name + \" (\" + formatNumber(d.value) + \")\";\n  }\n});\n</script>", "description": "treemap", "created_at": "2016-10-14T12:25:28Z", "updated_at": "2016-10-14T12:55:36Z", "api": ["d3.format", "d3.select", "d3.scale.linear", "d3.layout.treemap", "d3.json", "d3.map"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/3c31c1147802c606ef795bc82b80f3c4'>treemap</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/74387b68a7ee51c8aaeb6cdaa52724d7'>treemap</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/0d97cfd0424ea9d2d59e5a8e744fa0a4'>treemap</a>", "uid": "miguelvb_2f65e501776381af5b3b0fe6715697bc"}, {"code": "<script>\n\tconsole.clear()\n  \nvar units = \"claims\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data (using the timelyportfolio csv method)\nd3.csv(\"sankey.csv\", function(error, data) {\n\n  //set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n    data.forEach(function (d) {\n      graph.nodes.push({ \"name\": d.source, \"status\": d.source.split(\":\")[0] });\n      graph.nodes.push({ \"name\": d.target, \"status\": d.source.split(\":\")[0] });\n      graph.links.push({ \"source\": d.source,\n                         \"target\": d.target,\n                         \"value\": +d.value });\n     });\n\n     // return only the distinct / unique nodes\n     graph.nodes = d3.keys(d3.nest()\n       .key(function (d) { return d.name; })\n       .map(graph.nodes));\n\t\n  \tconsole.log(graph.nodes);\n  \n     // loop through each link replacing the text with its index from node\n     graph.links.forEach(function (d, i) {\n       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n     });\n\n     //now loop through each nodes to make nodes an array of objects\n     // rather than an array of strings\n     graph.nodes.forEach(function (d, i) {\n       graph.nodes[i] = { \"name\": d };\n     });\n\n  sankey\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name.replace(/:.*/, \"\") + \"  \" + \n                d.target.name.replace(/:.*/, \"\") + \"\\n\" + \n          \t\t\t\"Time \" + d.source.name.replace(/.*:/, \"\") + \"  \" + \t\n          \t\t\t\t\t\t\t\td.target.name.replace(/.*:/, \"\") + \"\\n\" + \n          \t\t\tformat(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n  console.log(graph.nodes.map(function(d){\n    return d.name.replace(/:.*/, \"\");\n  }))\n  \n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  \treturn d.color = color(d.name.replace(/:.*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  \treturn d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  \treturn d.name.replace(/:.*/, \"\") + \"\\n\" + format(d.value); \n  \t\t});\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name.replace(/:.*/, \"\"); })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey from csv with d3.js", "created_at": "2016-10-12T16:52:12Z", "updated_at": "2016-10-12T18:24:28Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min"], "readme": "This is a sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks). It is based on a [simpler version here](http://bl.ocks.org/d3noob/c2637e28b79fb3bfea13).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external csv data that is formatted using just link data and named values. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/c9b90689c1438f57d649'>Sankey from csv with d3.js</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/649b7a2a2d90b430dcb45eee1cdb1d49'>Sankey from csv with d3.js</a>", "uid": "SpaceActuary_b91f25d80a103736b14477dc8a3a7c76"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%Y%m%d\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\n  // manipulate data\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n\t// remove the first column, then iterate over the cities  \n  var cities = data.columns.slice(1).map(function(id) {\n    // the id is the city name.\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: d[id]};\n      })\n    };\n  });\n\n  // the data is going to be, the an array of 3 elements, one for each series, then for each element there is an id = name of the time series, and a data array, with the time, and the temperature data.\n  \n  // get the domain for the x axis\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  // domain for the Y axis\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(d) { return d.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.temperature; }); })\n  ]);\n\n  // domain for the colors\n  z.domain(cities.map(function(c) { return c.id; }));\n\n  // append the x axis\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // append the y axis\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  // add 3 groups, one for each time series\n  var city = g.selectAll(\".city\")\n    .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  // in each time series, append a path, in the attribute d, assign the temperature values with the function line, and the stroke is the color of the scale\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-10-12T15:58:45Z", "updated_at": "2016-10-13T03:13:02Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.tsv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/d62016714ef2c71c643eaa55a022176b'>Multi-Series Line Chart</a>", "uid": "juanprq_42d34c2ebefd1be5d173b802f38bb98a"}, {"code": "<script>\n\nvar n = 4, // number of layers\n    m = 58, // number of samples per layer\n    stack = d3.layout.stack(),\n    layers = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\nvar margin = {top: 40, right: 10, bottom: 20, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .domain(d3.range(m))\n    .rangeRoundBands([0, width], .08);\n\nvar y = d3.scale.linear()\n    .domain([0, yStackMax])\n    .range([height, 0]);\n\nvar color = d3.scale.linear()\n    .domain([0, n - 1])\n    .range([\"#aad\", \"#556\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(0)\n    .tickPadding(6)\n    .orient(\"bottom\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar layer = svg.selectAll(\".layer\")\n    .data(layers)\n  .enter().append(\"g\")\n    .attr(\"class\", \"layer\")\n    .style(\"fill\", function(d, i) { return color(i); });\n\nvar rect = layer.selectAll(\"rect\")\n    .data(function(d) { return d; })\n  .enter().append(\"rect\")\n    .attr(\"x\", function(d) { return x(d.x); })\n    .attr(\"y\", height)\n    .attr(\"width\", x.rangeBand())\n    .attr(\"height\", 0);\n\nrect.transition()\n    .delay(function(d, i) { return i * 10; })\n    .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n    .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nd3.selectAll(\"input\").on(\"change\", function change() {\n  if (this.value === \"grouped\") transitionGrouped();\n  else transitionStacked();\n});\n\nfunction transitionGrouped() {\n  y.domain([0, yGroupMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"x\", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })\n      .attr(\"width\", x.rangeBand() / n)\n    .transition()\n      .attr(\"y\", function(d) { return y(d.y); })\n      .attr(\"height\", function(d) { return height - y(d.y); });\n}\n\nfunction transitionStacked() {\n  y.domain([0, yStackMax]);\n\n  rect.transition()\n      .duration(500)\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n      .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n    .transition()\n      .attr(\"x\", function(d) { return x(d.x); })\n      .attr(\"width\", x.rangeBand());\n}\n\n// Inspired by Lee Byron's test data generator.\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\n</script>", "description": "Stacked-to-Grouped Transition", "created_at": "2016-10-12T13:42:05Z", "updated_at": "2016-10-12T13:42:05Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.selectAll"], "readme": "Switch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\n\nforked from <a href='http://bl.ocks.org/davo/'>davo</a>'s block: <a href='http://bl.ocks.org/davo/4225021'>Stacked-to-Grouped Transition</a>", "uid": "lorenzopub_898a0e5a9877d47303a57d12e50720fd"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    margin = { top: 10, bottom: 25, left: 10, right: 50 }, // around the graph\n    spacing = { bottom: 15, right: 5 },\n    n = 8, // number of layers\n    m = 50, // numbe of samples per layer,\n    stack = d3.layout.stack(),\n    data = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    ySplitMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); }),\n    duration = 1000,\n    isTransition = false;\n\n    svg = d3.select('body').append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\nvar layout = 'stack';\n\nfunction translate(x, y) {\n  return \"translate(\" + x + \", \" + y + \")\";\n}\n\nfunction update(firstTime) {\n  function rowHeight() {\n    return Math.floor((height - margin.top - margin.bottom - (n - 1) * spacing.bottom) / n);\n  };\n\n  var lastRow = n - 1;\n\n  var x = d3.scale.linear()\n    .range([margin.left, width - margin.right])\n    .domain([0, m-1]);\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient('bottom');\n\n  var y = d3.scale.linear()\n\n  if (layout == 'stack') {\n    y.range([height - margin.top - margin.bottom, 0])\n      .domain([0, yStackMax]);\n  } else {\n    y.range([rowHeight(), 0])\n      .domain([0, ySplitMax])\n  }\n\n  yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"right\")\n    .ticks(layout == 'split' ? 3 : 10);\n\n  if (firstTime) {\n    svg.append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', translate(0, height - margin.top - margin.bottom + 5))\n      .call(xAxis)\n  }\n\n  var layers = svg.selectAll('g.layer')\n    .data(data, function(d) { return data.indexOf(d) });\n\n  var enterLayers = layers.enter()\n    .append('g')\n      .attr('class', 'layer')\n      .attr('width', width)\n      .attr('transform', function(d, i) {\n        if (layout == 'split') {\n          return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n        }\n      });\n\n  layers.exit().remove()\n\n  layers.transition()\n    .duration(duration)\n    .attr('transform', function(d, i) {\n      if (layout == 'stack') {\n        return translate(0, 0);\n      } else {\n        return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n      }\n    })\n    .each('start', function() { isTransition = true })\n    .each('end', function() { isTransition = false });\n\n  var zeroArea = d3.svg.area()\n    .x(function(d) { return x(d.x) })\n    .y0(y(0))\n    .y1(y(0));\n\n  var grayGradient = d3.interpolate('#666', '#ddd');\n\n  function color(d, i) {\n    i = data.indexOf(d);\n    return grayGradient(i / n);\n  }\n\n  var areas = enterLayers.append('path')\n    .attr('class', 'area')\n    .attr('d', zeroArea)\n    .style('fill', color)\n    .style('stroke', color)\n    .style('stroke-width', 1) // fill gaps between layers\n    .on('mouseover', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', '#d66').style('stroke', '#d66');\n    })\n    .on('mouseout', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', color).style('stroke', color);\n    });\n  var area = d3.svg.area()\n    .x(function(d) { return x(d.x) });\n\n  if (layout == 'stack') {\n    area.y0(function(d) { return y(d.y0); })\n      .y1(function(d) { return y(d.y0 + d.y); });\n  } else {\n    area.y0(y(0))\n      .y1(function(d) { return y(d.y)} );\n  }\n\n  layers.selectAll('path.area').transition()\n    .duration(duration)\n    .attr('d', area);\n\n  enterLayers.append('g')\n    .attr('class', 'y-axis')\n    .attr('transform', translate(width - margin.right + spacing.right, 0))\n    .attr('opacity', 0)\n\n  var yAxes = layers.selectAll('g.y-axis');\n  yAxes.transition()\n    .duration(duration)\n    .attr('opacity', function(d, i) {\n      i = data.indexOf(d);\n      if (layout == 'stack') {\n        return 1;\n      } else {\n        return 1;\n      }\n    })\n    .call(yAxis);\n}\n\n// Inspired by Lee Byron's test data generator.\n// Borrowed from http://bl.ocks.org/mbostock/3943967\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\nupdate(true)\n\nsetTimeout(function() {\n  d3.select('input#stack').attr('checked', 'checked');\n}, duration);\n\nd3.selectAll('input').on('change', function() {\n  var e = d3.select(this);\n  if (e.attr('value') == 'stack' && e.attr('checked')) {\n    layout = 'stack';\n  } else {\n    layout = 'split';\n  }\n  update()\n});\n\n</script>", "description": "Stack-to-Split Transition", "created_at": "2016-10-12T13:41:30Z", "updated_at": "2016-10-12T13:41:30Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.interpolate", "d3.selectAll"], "readme": "# Stack-Split Transition\n\nTransitions between stacked and split (small multiples) area charts.\n\n\nforked from <a href='http://bl.ocks.org/zachmargolis/'>zachmargolis</a>'s block: <a href='http://bl.ocks.org/zachmargolis/9315833'>Stack-to-Split Transition</a>\n\nforked from <a href='http://bl.ocks.org/mashehu/'>mashehu</a>'s block: <a href='http://bl.ocks.org/mashehu/281584920c26e2d617625270b75818a1'>Stack-to-Split Transition</a>", "uid": "lorenzopub_2c63ce8f3a4d535dd0e65d658f6c80d6"}, {"code": "<script>\n    var svg = d3.select('.d3-viz'),\nmargin = {top: 20, right: 80, bottom: 30, left: 50},\nwidth = svg.attr(\"width\") - margin.left - margin.right,\nheight = svg.attr(\"height\") - margin.top - margin.bottom,\ng = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar parseTime = d3.timeParse(\"%Y%m%d\"),\n    bisect = d3.bisector(function(d) { return parseTime(d.x); }).left;\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\n\nvar line = d3.line()\n.x(function(d) {\n  return x(parseTime(d.x));\n})\n.y(function(d) {\n  return y(d.y);\n});\n\nd3.json('temperature3.json', function(error, data){\n  if (error) throw error;\n\n\n  \n  \n  \n  x.domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);\n  \n  z.domain(data, function(c) { return c.id; });\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  var city = g.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n  \n  \n  var focus = svg.append(\"g\")\n          .attr(\"class\", \"focus\")\n          .style(\"display\", \"none\");\n\n//       focus.append(\"circle\")\n//           .attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n//           .attr(\"x\", 4)\n//           .attr(\"y\", -1)\n//           .attr(\"r\", 2);\n\n//       focus.append(\"text\")\n//       \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//           .attr(\"x\", 9)\n//           .attr(\"dy\", \".35em\");\n\n  for(var i=0;i<data.length;i++){\n              focus.append(\"g\")\n                .attr(\"class\", \"focus\"+i)\n                .append(\"circle\")\n              \t.style(\"stroke\",  z(data[i].id))\n              \t.style(\"fill\", z(data[i].id))\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"r\", 2);\n              svg.select(\".focus\"+i)\n                .append(\"text\")\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\");\n          }\n  \n      svg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { focus.style(\"display\", null); })\n          .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n          .on(\"mousemove\",  mousemove);\n\n//       function mousemove(c, j) {\n//         console.log(c,j);\n//         var coordinates = d3.mouse(this),\n//         \t\tx0 = x.invert(coordinates[0]),\n//             y0 = y.invert(coordinates[1]),\n//             i = bisect(c.values, x0),\n//             d0 = c.values[i - 1],\n//             d1 = c.values[i],\n//             d = x0 - d0.x > d1.x - x0 ? d1 : d0;\n// //             console.log(x0,y0,i);\n// //         \t\tconsole.log(coordinates) ;\n//         console.log(d0,d1);\n//         focus.attr(\"transform\", \"translate(\" + x(c.values[i].x) + \",\" + y(c.values[i].y) + \")\");\n//         focus.select(\"text\").text(c.values[i].y);\n//       }\n  \n  function mousemove() {\n              var x0 = x.invert(d3.mouse(this)[0]);\n              var series = data.map(function(e) {\n                    var i = bisect(e.values, x0, 1),\n                        d0 = e.values[i - 1],\n                        d1 = e.values[i];\n                    return x0 - d0.x > d1.x - x0 ? d1 : d0;\n                  });\n//     console.log(series);\n              for(var i=0; i<series.length;i++){\n                var selectedFocus = svg.selectAll(\".focus\"+i);\n                selectedFocus.attr(\"transform\", \"translate(\" + x(parseTime(series[i].x)) + \",\" + y(series[i].y) + \")\");\n                selectedFocus.select(\"text\").text(series[i].y);\n              }\n            }\n\n\n  \n  \n// building the nav chart\nvar navWidth = width,\n      navHeight = 100 - margin.top - margin.bottom;\n\nvar navChart = d3.select('.d3-viz-nav').classed('chart', true)\n  .classed('navigator', true)\n  .attr('width', navWidth + margin.left + margin.right)\n  .attr('height', navHeight + margin.top + margin.bottom)\n  .append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n  \n  \nvar navXScale = d3.scaleTime()\n\t\t\t\t.range([0, navWidth])\n        .domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}))\n        ,\n    navYScale = d3.scaleLinear()\n\t\t\t\t.range([navHeight, 0])\n        .domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);  \n  \n\n\nnavChart.append('g')\n    .attr('class', 'axis axis--x')\n    .attr('transform', 'translate(0,' + navHeight + ')')\n    .call(d3.axisBottom(x));  \n  \n \t\n  \n  var navData = d3.area()\n    .x(function (d) { return navXScale(parseTime(d.x)); })\n    .y0(navHeight)\n    .y1(function (d) { return navYScale(d.y); });\n\nvar navLine = d3.line()\n    .x(function (d) { return navXScale(parseTime(d.x)); })\n    .y(function (d) { return navYScale(d.y); });\n\nnavChart.append('path')\n\t\t.data(data)\n    .attr('class', 'data')\n    .attr('d', function(d) { return navData(d.values); });\n\nnavChart.append('path')\n\t\t.data(data)\n    .attr('class', 'line')\n    .attr('d', function(d) { return navLine(d.values); });\n  \n \n  \n  var viewport = d3.brushX()\n//     .brushX(navXScale)\n    .on(\"brush\", function () {\n        x.domain(d3.select(this).empty() ? navXScale.domain() : viewport.extent());\n        redrawChart();\n    });\n  \n  var xAxis = d3.axisBottom(x)\n//     .scale(x)\n//     .tickSize(-height);\n  \n   navChart.append(\"g\")\n    .attr(\"class\", \"viewport\")\n    .call(viewport)\n    .selectAll(\"rect\")\n  \t.attr('transform', 'translate(0,' + -navHeight + ')')\n    .attr(\"height\", 2*navHeight);\n  \n  \n  function redrawChart() {\n\n//     city.select(\"path\")\n//       .attr(\"class\", \"line\")\n//       .attr(\"d\", function(d) { return line(d.values); })\n//       .style(\"stroke\", function(d) { return z(d.id); })\n    \n//     city.selectAll('path.line')\n// //     \t\t.attr(\"class\", \"line\")\n//     \t\t.data(data)\n// //     \t\t.attr(\"class\", \"line\")\n//       .attr(\"d\", function(d) { return line(d.values); })\n//       .style(\"stroke\", function(d) { return z(d.id); })\n    \n//     city.call(line);\n    \n//     svg.select('.axis--x').call(xAxis);\n    \n    var n = data[0].values.length - 1,\n        i = Math.floor(Math.random() * n / 2),\n        j = i + Math.floor(Math.random() * n / 2) + 1;\n    x.domain([parseTime(data[0].values[i].x),\n    parseTime(data[0].values[j].x) ]);\n    var t = svg.transition().duration(750);\n    t.select(\".axis--x\").call(xAxis);\n//     t.select(\".area\").attr(\"d\", area);\n    t.select(\".line\")\n      .attr('d', line);\n    \n//     var t2 = city.transition().duration(750);\n    \n//     t2.select('.city .line')\n// //     .attr('d', line)\n//     \t.call(line)\n//     ;\n     \n    \n}\n  \n  \n  \n\n  \n});\n    \n    \n    \n\n    \n    \n    \n    // pulled from this jsfiddle http://jsfiddle.net/takuan/gakdeL1u/7/\n\n\n  </script>", "description": "multi-line plot multi-mouseover", "created_at": "2016-10-12T13:36:30Z", "updated_at": "2016-10-12T13:36:30Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse", "d3.area", "d3.brushX"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/eric-bunch/'>eric-bunch</a>'s block: <a href='http://bl.ocks.org/eric-bunch/0bdef4942ac085a93fa6bd31452cd55c'>multi-line plot multi-mouseover</a>", "uid": "lorenzopub_4b8609d749cd9759a03b74f889a579f0"}, {"code": "<script>\n// Set the dimensions of the canvas / graph\nvar margin = {top: 30, right: 20, bottom: 30, left: 50},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar parseDate = d3.time.format(\"%Y-%m-%d %H:%M:%S\");\n\n\n// Set the ranges\nvar x = d3.time.scale().range([0, width]);\nvar y = d3.scale.linear().range([height, 0]);\n\n// Define the axes\nvar xAxis = d3.svg.axis().scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis().scale(y)\n    .orient(\"left\").ticks(10);\n\n// Define the line\nvar valueline = d3.svg.line()\n    .x(function(d) { return x(d.tim); })\n    .y(function(d) { return y(d.count); });\n\n// Adds the svg canvas\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Get the data\nd3.csv(\"final_report_multi.tsv\", function(error, data) {\n    data.forEach(function(d) {\n        d.tim = parseDate.parse(d.tim);\n        d.count = +d.count; // convert it to a number\n\n    });\n\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, function(d) { return d.tim; }));\n    y.domain(d3.extent(data, function(d) { return d.count; }));\n\n var color = d3.scale.category10();\n\n // Nest the entries by symbol\n    var dataNest = d3.nest()\n        .key(function(d) {return d.dept;})\n        .entries(data)\n\t\t\t\t.sort(function(a, b) { return d3.ascending(a.tim,b.tim); })\n    ;\n    // Loop through each symbol / key\n  \tvar depts = svg.selectAll(\"path\")\n    \t\t.data(dataNest, function(d) { return d.key;}) // join\n    \t.enter().append(\"path\")\n      \t.attr(\"class\", function(d) { return d.key; })\n        .attr(\"d\", function(d) { return valueline(d.values); })\n        .style(\"stroke\", function(d) { return color(d.key); })\n\n    ;\n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n});\n\n\n/*\nvar inter = setInterval(function() {\n                updateData();\n        }, 3000); \n*/\n\n        // ** Update data section (Called from the onclick)\nfunction updateData() {\n\n    // Get the data again\n  d3.tsv(\"final_report_multi.tsv\", function(error, data) {\n    data.forEach(function(d) {\n        d.date = parseDate(d.tim);\n        d.close = d.count;\n        console.log(d.date);\n        console.log(d.close);\n\n    });\n\n        // Scale the range of the data again \n        x.domain(d3.extent(data, function(d) { return d.date; }));\n        y.domain([0, d3.max(data, function(d) { return d.close; })]);\n       //  y.domain([d3.extent(data, function(d) { return d.close; })]);\n        y.domain([0,100]);\n\n    // Select the section we want to apply our changes to\n    var svg = d3.select(\"body\").transition();\n\n     // Nest the entries by symbol\n    var dataNest = d3.nest()\n        .key(function(d) {return d.dept;})\n        .entries(data);\n\n    // Loop through each symbol / key\n    dataNest.forEach(function(d) {\n        var svg = d3.select(\"body\").transition();\n        console.log(d.values)\n        svg.select(\".line\")   // change the line\n            .duration(750)\n            .attr(\"d\", valueline(d.values)); \n        svg.select(\".x.axis\") // change the x axis\n            .duration(750)\n            .call(xAxis);\n        svg.select(\".y.axis\") // change the y axis\n            .duration(750)\n            .call(yAxis)\n    });\n\n    // Make the changes\n   //     svg.select(\".line\")   // change the line\n   //         .duration(750)\n   //         .attr(\"d\", valueline(data));\n  //      svg.select(\".x.axis\") // change the x axis\n  //          .duration(750)\n  //          .call(xAxis);\n  //      svg.select(\".y.axis\") // change the y axis\n  //          .duration(750)\n  //          .call(yAxis);\n\n    });\n}\n\n  </script>", "description": "fresh block", "created_at": "2016-10-12T06:34:44Z", "updated_at": "2016-10-12T07:33:11Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.scale.category10", "d3.nest", "d3.ascending", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ca5d734836ff929d4af2cf22a453469c'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/952ab84868355cc75dd5eb04e75a9773'>fresh block</a>", "uid": "seemantk_5eba869f4aa06353d8c9ce6f8d88c714"}, {"code": "<script>\n  var svg = d3.select('svg');\n  var points = [[465.500,366.708], [401.833,303.042], [410.332,287.251], [415.153,269.188], [415.153,250], [415.153,188.095], [364.970,137.912], [303.065,137.912], [269,137.912], [269,50], [303.065,50], [413.522,50], [503.065,139.543], [503.065,250], [503.065,293.558], [489.141,333.863], [465.500,366.708], [465.500,366.708], [429.192,417.153], [369.964,450], [303.065,450], [269,450], [269,362.087], [303.065,362.087], [345.781,362.087], [382.916,338.193], [401.833,303.042], [465.500,366.708], [688.732,349.524], [694.983,314.612], [685.780,278.070], [662.421,250], [692.686,213.630], [699.187,163.040], [679.103,120.200], [659.019,77.360], [615.973,49.999], [568.659,50], [428,50], [428,50], [462.611,71.680], [491.004,101.971], [510.401,137.912], [568.654,137.912], [580.825,137.912], [592.071,144.405], [598.156,154.945], [604.242,165.485], [604.242,178.470], [598.156,189.010], [592.071,199.551], [580.825,206.043], [568.654,206.043], [545.252,206.043], [688.732,349.524], [545.252,206.043], [689.029,349.821], [687.173,360.040], [683.992,370.117], [679.453,379.799], [659.369,422.639], [616.323,450.000], [569.009,450], [548.791,450], [491.233,392.441], [498.479,382.870], [505.009,372.726], [510.751,362.087], [569.004,362.087], [581.175,362.087], [592.421,355.594], [598.506,345.054], [604.592,334.514], [604.592,321.529], [598.506,310.989], [592.421,300.448], [581.175,293.956], [569.004,293.956], [534.938,293.956], [540.445,264.910], [540.445,235.089], [534.938,206.043], [545.252,206.043], [548.791,450], [428,450], [452.437,434.692], [473.774,415.092], [491.034,392.242], [548.791,450]];\n  var colors = ['hsl(341, 100%, 50%)', 'hsl(359, 100%, 50%)', 'hsl(18, 100%, 50%)', 'hsl(35, 100%, 50%)', 'hsl(52, 100%, 50%)', 'hsl(83, 100%, 50%)', 'hsl(127, 100%, 50%)', 'hsl(160, 100%, 50%)', 'hsl(190, 100%, 50%)', 'hsl(212, 100%, 50%)', 'hsl(227, 100%, 50%)', 'hsl(242, 100%, 50%)', 'hsl(259, 100%, 50%)', 'hsl(273, 100%, 50%)', 'hsl(296, 100%, 50%)'];\n  var cLen = colors.length;\n  var clx = 0;\n  var circles = [];\n\n  points.forEach(function(point) {\n    clx = clx < cLen ? clx : 0;\n    var circle = {};\n    circle.reqX = point[0];\n    circle.reqY = point[1];\n    circle.fill = colors[clx];\n    circles.push(circle);\n    clx += 1;\n  });\n\n  var sim = d3.forceSimulation()\n        .force('charge', d3.forceManyBody().distanceMax(50))\n        .force('center', d3.forceCenter( 480, 250 ))\n        .alphaDecay(0.06);\n\n  var circs = svg.selectAll('circle')\n        .data(circles)\n        .enter()\n        .append('circle')\n          .attr('r', 5)\n          .attr('fill', function(d) { return d.fill })\n          .attr('transform', 'translate(480,250)')\n          .attr('opacity', 1);\n\n  sim\n    .nodes(circles)\n    .on('tick', function() {\n      circs\n        .attr('transform', function(d) {\n              return 'translate(' + d.x + ',' + d.y + ')';\n        });\n    })\n    .on('end', function() {\n      circs.each(function(p, i) {\n        d3.select(this)\n          .transition()\n          .duration(500)\n            .attr('transform', function(d) {\n              return 'translate(' + d.reqX + ',' + d.reqY + ')';\n            })\n          .on('end', function () {\n              if (i + 1 == cLen) {\n                blowUpCircs();\n                appendPaths();\n              }\n          });\n      });\n    });\n\n  function blowUpCircs() {\n    circs\n      .transition()\n      .delay(200)\n      .duration(1000)\n      .attr('r', 30)\n      .attr('opacity', 0);\n  }\n\n  function appendPaths() {\n    var paths = [{ id: 'dee-top', style: 'fill:url(#lg-dt)', points: [['M465.500', 366.708], ['L401.833', 303.042], ['C410.332', 287.251], [415.153, 269.188], [415.153, 250], ['C415.153', 188.095], [364.970, 137.912], [303.065, 137.912], ['L269', 137.912], ['L269', 50], ['L303.065', 50], ['C413.522', 50], [503.065, 139.543], [503.065, 250], ['C503.065', 293.558], [489.141, 333.863], [465.500, 366.708]] }, { id: 'dee-bottom', style: 'fill:url(#lg-b)', points: [['M465.500', 366.708], ['C429.192', 417.153], [369.964, 450], [303.065, 450], ['L269', 450], ['L269', 362.087], ['L303.065', 362.087], ['C345.781', 362.087], [382.916, 338.193], [401.833, 303.042], ['L465.500', 366.708]] }, { id: 'three-top', style: 'fill:url(#lg-3t)', points: [['M688.732', 349.524], ['C694.983', 314.612], [685.780, 278.070], [662.421, 250], ['C692.686', 213.630], [699.187, 163.040], [679.103, 120.200], ['C659.019', 77.360], [615.973, 49.999], [568.659, 50], ['L428', 50], ['L428', 50], ['C462.611', 71.680], [491.004, 101.971], [510.401, 137.912], ['L568.654', 137.912], ['C580.825', 137.912], [592.071, 144.405], [598.156, 154.945], ['C604.242', 165.485], [604.242, 178.470], [598.156, 189.010], ['C592.071', 199.551], [580.825, 206.043], [568.654, 206.043], ['L545.252', 206.043], ['L688.732', 349.524]] }, { id: 'three-mid', style: 'fill:url(#lg-3m)', points: [['M545.252', 206.043], ['L689.029', 349.821], ['C687.173', 360.040], [683.992, 370.117], [679.453, 379.799], ['C659.369', 422.639], [616.323, 450.000], [569.009, 450], ['L548.791', 450], ['L491.233', 392.441], ['C498.479', 382.870], [505.009, 372.726], [510.751, 362.087], ['L569.004', 362.087], ['C581.175', 362.087], [592.421, 355.594], [598.506, 345.054], ['C604.592', 334.514], [604.592, 321.529], [598.506, 310.989], ['C592.421', 300.448], [581.175, 293.956], [569.004, 293.956], ['L534.938', 293.956], ['C540.445', 264.910], [540.445, 235.089], [534.938, 206.043], ['L545.252', 206.043]] }, { id: 'three-bottom', style: 'fill:url(#lg-b)', points: [['M688.732', 349.524], ['M548.791', 450], ['L428', 450], ['C452.437', 434.692], [473.774, 415.092], [491.034, 392.242], ['L548.791', 450]] }];\n\n    paths.forEach(function(path) {\n      var d = '';\n      var logoEl;\n      path.points.forEach(function(point){\n        d += point[0] + ',' + point[1] + ' ';\n      });\n      d += ' Z';\n      logoEl = svg.append('path')\n        .attr('id', path.id)\n        .attr('style', path.style)\n        .attr('opacity', 0)\n        .attr('d', d);\n\n      logoEl\n        .transition()\n        .delay(600)\n        .duration(600)\n          .attr('opacity', 1)\n\n    });\n  }\n</script>", "description": "D3 Logo for VisFest", "created_at": "2016-10-12T06:24:20Z", "updated_at": "2016-10-12T06:24:20Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter"], "readme": "Created for d3 VisFest unconf 2016\n\nuses forceSimulation and transitions. \n\nforked from <a href='http://bl.ocks.org/kenpenn/'>kenpenn</a>'s block: <a href='http://bl.ocks.org/kenpenn/b557ce50c952677e29354bc3c81f4c93'>D3 Logo for VisFest</a>", "uid": "ptvans_cd5c6e033b4a4b1c7ef8861c82319493"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    tau = 2 * Math.PI;\n\nvar buildings = d3.range(10).map(function(i) {\n  return {\n    x: (-0.5 + Math.random()) * width * 0.8,\n    y: (-0.5 + Math.random()) * height * 0.8,\n  };\n});\n\nvar nodes = d3.range(400).map(function(i) {\n  return {\n    r: Math.random() * 8 + 3,\n    building: Math.floor(Math.random() * buildings.length)\n  };\n});\n\n  \n  function shape(alpha){\n   for (var i = 0, n = nodes.length, node, k = alpha * 0.1; i < n; ++i) {\n    node = nodes[i];\n     var dx = node.x - buildings[node.building].x,\n         dy = node.y - buildings[node.building].y;\n     node.vx -= dx * k;\n     node.vy -= dy * k;\n   }\n  }\n  \nvar simulation = d3.forceSimulation(nodes)\n    //.velocityDecay(0.2)\n    .force(\"shape\", shape)\n    .force(\"collide\", d3.forceCollide().radius(function(d) { return d.r + 0.5; }).iterations(2))\n    .on(\"tick\", ticked);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory10);\n  \nfunction ticked() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  nodes.forEach(function(d,i) {\n    context.beginPath();\n    context.moveTo(d.x + d.r, d.y);\n    context.arc(d.x, d.y, d.r, 0, tau);\n    context.fillStyle = color(d.building);\n    context.fill();\n    context.strokeStyle = \"white\";\n    context.stroke();\n  });\n  \n  context.restore();\n}\n\n</script>", "description": "Force move 400 dots in 10 buildings", "created_at": "2016-10-12T06:21:48Z", "updated_at": "2016-10-12T06:21:48Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceCollide", "d3.scaleOrdinal"], "readme": "This example uses d3.forceCollide to prevent circles from overlapping.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/31ce330646fa8bcb7289ff3b97aab3f5'>Collision Detection</a>\n\nSee also [Bounded Force Layout - very tightly packed](http://bl.ocks.org/Fil/30afeb463ce552414f64).\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/69f1d5f68099bf6350ed42aed0941e5c'>Collision Detection in a tight square</a>\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/07f00f90524c4c2b99c944780c2f4e7c'>Force move 400 dots in 10 buildings</a>", "uid": "ptvans_a05a937fccacdc3275d80e697648ca88"}, {"code": "<script>\n\nvar months,\n    monthKeys,\n    monthParse = d3.timeParse(\"%Y-%m\");\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleTime()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar voronoi = d3.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nd3.tsv(\"unemployment.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"y\", 0.5)\n      .attr(\"dy\", \"0.32em\")\n      .style(\"text-anchor\", \"start\")\n      .style(\"fill\", \"#000\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  g.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = g.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var v = voronoi(d3.merge(data.map(function(d) { return d.values; })));\n\n  /* BEGIN */\n  // this part shows the voronoi, but it is not an active layer anymore\n  var voronoiGroup = g.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n    .data(v.polygons())\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; });\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n  /* END */\n\n  // this is the active part\n  var site = null;\n  svg.on(\"mousemove\", function(){\n    var mouse = d3.mouse(this);\n    var newsite = v.find(mouse[0], mouse[1]);\n    if(newsite !== site) {\n       if (site) mouseout(site);\n       site = newsite;\n       if (site) mouseover(site);\n    }\n    \n  });\n  \n  function mouseover(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", true);\n    d.data.city.line.parentNode.appendChild(d.data.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.data.date) + \",\" + y(d.data.value) + \")\");\n    focus.select(\"text\").text(d.data.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i, columns) {\n  if (!months) monthKeys = columns.slice(1), months = monthKeys.map(monthParse);\n  var c = {name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"), values: null};\n  c.values = monthKeys.map(function(k, i) { return {city: c, date: months[i], value: d[k] / 100}; });\n  return c;\n}\n\n</script>", "description": "Multi-Line Voronoi using Voronoi.find()", "created_at": "2016-10-11T20:53:12Z", "updated_at": "2016-10-11T21:09:13Z", "api": ["d3.timeParse", "d3.select", "d3.scaleTime", "d3.scaleLinear", "d3.voronoi", "d3.line", "d3.tsv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.merge", "d3.mouse"], "readme": "This [multi-line chart](/mbostock/3884955) uses a [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the underlying Voronoi diagram.\n\nThe main difference with <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s original block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a> is that the real action is now happening in [`voronoi.find()`](https://github.com/d3/d3-voronoi/pull/18).\n\nWe don't _need_ a hidden SVG overlay. We just keep it there to display it on demand, but it's not used for the animation. ", "uid": "Fil_425346f63abddee5fea3fdcb76904820"}, {"code": "<script>\n\nvar normalizer;\n\nvar months,\n    monthFormat = d3.time.format(\"%Y-%m\");\n\nvar margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar voronoi = d3.geom.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"unemployment.tsv\", type, function(error, cities) {\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"dy\", \".32em\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n      .data(cities)\n    .enter().append(\"path\")\n      .each(function(d) { console.log(d.values); })\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = svg.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = svg.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n      .data(voronoi(d3.nest()\n          .key(function(d) { return x(d.date) + \",\" + y(d.value); })\n          .rollup(function(v) { return v[0]; })\n          .entries(d3.merge(cities.map(function(d) { return d.values; })))\n          .map(function(d) { return d.values; })))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; })\n      .datum(function(d) { return d.point; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout)\n      .on(\"click\", click);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.city.line).classed(\"city--hover\", true);\n    d.city.line.parentNode.appendChild(d.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.value) + \")\");\n    focus.select(\"text\").text(d.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n\n  function click(d) {\n    normalizer = d.city.values;\n\n    y.domain([0,2]);\n\n    d3.select(\".axis--y\")\n      .call(d3.svg.axis()\n        .scale(y)\n        .orient(\"left\")\n        .ticks(10, \"%\"));\n\n    d3.select(\".axis--y text\")\n      .text(\"Unemployment rate as percentage of \" + d.name);\n\n    var normalLine = d3.svg.line()\n      .x(function(d) { return x(d.date); })\n      .y(function(d, i) { return y(d.value / normalizer[i].value); });\n\n    d3.selectAll(\"g.cities path\")\n      .transition()\n      .duration(5000)\n      .each(function(d) { console.log(d.values); })\n      .attr(\"d\", function(d) { return normalLine(d.values); });\n  }\n});\n\nfunction type(d, i) {\n  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);\n  var city = {\n    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"),\n    values: null\n  };\n  city.values = months.map(function(m) {\n    return {\n      city: city,\n      date: m,\n      value: d[monthFormat(m)] / 100\n    };\n  });\n  return city;\n}\n\n</script>", "description": "Multiline indexing", "created_at": "2016-10-11T14:18:51Z", "updated_at": "2016-10-11T14:18:51Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.geom.voronoi", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent", "d3.max", "d3.svg.axis", "d3.nest", "d3.merge", "d3.selectAll"], "readme": "Based on @mbostock\u2019s [multi-line chart](/mbostock/3884955). Click to re-index all lines by the selected line (i.e. display as a percentage of). Obviously most of it does not work yet (doesn't recompute voronoi, for one thing). Needs an identity line (the original x-axis) so you can click to return to \"absolute\" terms. But like, absolute is always relative, man...\n\nforked from <a href='http://bl.ocks.org/tophtucker/'>tophtucker</a>'s block: <a href='http://bl.ocks.org/tophtucker/de217b74ec93e3c4766c'>Multiline indexing</a>", "uid": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4"}, {"code": "<script>\n    // http://slavevoyages.org/tast/assessment/estimates.faces\n    d3.tsv(\"slavery.tsv\", function(err, data) {\n      var countries = Object.keys(data[0]).slice(1,7);\n      countries = [\n        \"Portugal\",\n        \"Great Britain\",\n        \"France\",\n        \"Spain\",\n\t\t\t\t\"Netherlands\",\n\t\t\t\t\"U.S.A.\",\n      ]\n      var countryData = {}\n      countries.forEach(function(country) {\n        countryData[country] = data.map(function(d) {\n          return parseInt(d[country].replace(/,/g, ''));\n        })\n      })\n      console.log(countries)\n      console.log(data[0]);\n      var width = 960;\n      var height = 500;\n      \n      var lineHeight = 211;\n      var lineOffset = 21;\n      \n      var chartHeight = 350;\n      \n      var color = d3.scale.ordinal()\n      .domain(d3.range(countries.length))\n      .range([\n        \"#7C938D\",\n        \"#544C36\",\n        \"#BB976E\",\n        \"#A4B284\",\n        \"#5E6560\",\n        \"#7A8868\",\n        \"#9AB7B5\"\n      ])\n\n      \n      var svg = d3.select(\"svg\")\n      .attr({width: width, height: height });\n      \n      var xscale = d3.scale.linear()\n      //.domain(d3.extent(data, function(d) { return +d.year }))\n      .domain([0, data.length])\n      .range([140, width - 20])\n      \n      var yscale = d3.scale.linear()\n      .domain([0, d3.max(countries, function(country) {\n        return d3.max(countryData[country])\n      })])\n      .range([lineHeight, 0])\n      \n      var area = d3.svg.area()\n        .x(function(d,i) { return xscale(i); })\n        .y0(function(d) { return lineHeight; })\n        .y1(function(d) { return yscale(d); })\n        .interpolate(\"basis\")\n\n      var xaxis = svg.selectAll(\"g.year\")\n      .data(data)\n      .enter()\n      .append(\"g\").classed(\"year\", true)\n      .attr({\n        transform: function(d,i) {\n          return \"translate(\" + [xscale(i), chartHeight] + \")\"\n        }\n      })\n      .style({\n        \"display\": function(d,i) { return i % 20 == 0 ? \"\": \"none\" },\n        \"font-size\": \"10px\"\n      })\n      xaxis\n      .append(\"line\").attr({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: -chartHeight,\n        stroke: \"#f7f7f7\",\n\n      })\n      xaxis\n      .append(\"text\")\n        .text(function(d) { return d.year })\n        .attr(\"transform\", \"rotate(0)translate(-10,12)\")\n      \n      var legend = svg.selectAll(\"g.country\")\n      .data(countries)\n      .enter()\n      .append(\"g\").classed(\"country\", true)\n        .attr(\"transform\", function(d,i) {\n          return \"translate(\" + [20, 205 + i * lineOffset] + \")\";\n        })\n        .style({\n          fill: function(d,i) { return color(i) },\n          \"font-family\": \"Helvetica\"\n        })\n        .append(\"text\")\n      \t.text(function(d) { return d })\n      \n\n      var groups = svg.selectAll(\"g.countries\")\n        .data(countries)\n        .enter().append(\"g\").classed(\"countries\", true)\n        .attr({\n          transform: function(d,i) { return \"translate(\" + [0, i * lineOffset] + \")\" },\n          fill: function(d,i) { return color(i) },\n        })\n      \n      var areas = groups.selectAll(\"path.country\")\n      \t.data(function(d) { return [countryData[d]] })\n      areas\n        .enter()\n        .append(\"path\").classed(\"country\", true)\n        .attr(\"d\", function(d) {\n          return area(d)\n        })\n      \n      \n      \n    })\n  </script>", "description": "slave voyages - embarking", "created_at": "2016-10-11T14:14:53Z", "updated_at": "2016-10-11T14:14:53Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/754c7d061c2d0b71be37'>slave voyages - embarking</a>", "uid": "lorenzopub_8501a1752dbdda8db80b1a3cb0afb7d7"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.temperature = +d.temperature;\n  });\n\n  x.domain([data[0].date, data[data.length - 1].date]);\n  y.domain(d3.extent(data, function(d) { return d.temperature; }));\n\n  svg.append(\"linearGradient\")\n      .attr(\"id\", \"temperature-gradient\")\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", 0).attr(\"y1\", y(50))\n      .attr(\"x2\", 0).attr(\"y2\", y(60))\n    .selectAll(\"stop\")\n      .data([\n        {offset: \"0%\", color: \"steelblue\"},\n        {offset: \"50%\", color: \"gray\"},\n        {offset: \"100%\", color: \"red\"}\n      ])\n    .enter().append(\"stop\")\n      .attr(\"offset\", function(d) { return d.offset; })\n      .attr(\"stop-color\", function(d) { return d.color; });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n});\n\n</script>", "description": "Gradient Encoding", "created_at": "2016-10-11T14:14:26Z", "updated_at": "2016-10-11T14:14:26Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.extent"], "readme": "This variation of a [line chart](../3883245) demonstrates how to use a linear gradient as a quantitative color encoding redundant with *y*-position. The gradient units are defined as [userSpaceOnUse](http://www.w3.org/TR/SVG/pservers.html#LinearGradientElementGradientUnitsAttribute), such that the gradient stops can be positioned explicitly rather than based on the line\u2019s bounding box.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3969722'>Gradient Encoding</a>", "uid": "lorenzopub_66fee1bf5611f0cc2085ce8f2a60bfe3"}, {"code": "<script>\n\nlet margin = {top: 100, right: 100, bottom: 100, left: 100};\n\nlet width = 960,\n    height = 500,\n    padding = 1.5, // separation between same-color circles\n    clusterPadding = 6, // separation between different-color circles\n    maxRadius = 12;\n    \nlet n = 200, // total number of nodes\n    m = 10, // number of distinct clusters\n    z = d3.scaleOrdinal(d3.schemeCategory20),\n    clusters = new Array(m);\n\nlet svg = d3.select('body')\n    .append('svg')\n    .attr('height', height)\n    .attr('width', width)\n    .append('g').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n\nlet nodes = d3.range(200).map(() => {\n    let i = Math.floor(Math.random() * m),\n        radius = Math.sqrt((i + 1) / m * -Math.log(Math.random())) * maxRadius,\n        d = {cluster: i, r: radius};\n    if (!clusters[i] || (radius > clusters[i].r)) clusters[i] = d;\n    return d;\n});\n\nlet circles = svg.append('g')\n      .datum(nodes)\n    .selectAll('.circle')\n      .data(d => d)\n    .enter().append('circle')\n      .attr('r', (d) => d.r)\n      .attr('fill', (d) => z(d.cluster))\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1);\n\nlet simulation = d3.forceSimulation(nodes)\n    .velocityDecay(0.2)\n    .force(\"x\", d3.forceX().strength(.0005))\n    .force(\"y\", d3.forceY().strength(.0005))\n    .force(\"collide\", collide)\n    .force(\"cluster\", clustering)\n    .on(\"tick\", ticked);\n\nfunction ticked() {\n    circles\n        .attr('cx', (d) => d.x)\n        .attr('cy', (d) => d.y);\n}   \n\n// These are implementations of the custom forces.\nfunction clustering(alpha) {\n    nodes.forEach(function(d) {\n      var cluster = clusters[d.cluster];\n      if (cluster === d) return;\n      var x = d.x - cluster.x,\n          y = d.y - cluster.y,\n          l = Math.sqrt(x * x + y * y),\n          r = d.r + cluster.r;\n      if (l !== r) {\n        l = (l - r) / l * alpha;\n        d.x -= x *= l;\n        d.y -= y *= l;\n        cluster.x += x;\n        cluster.y += y;\n      }  \n    });\n}\n\nfunction collide(alpha) {\n  var quadtree = d3.quadtree()\n      .x((d) => d.x)\n      .y((d) => d.y)\n      .addAll(nodes);\n\n  nodes.forEach(function(d) {\n    var r = d.r + maxRadius + Math.max(padding, clusterPadding),\n        nx1 = d.x - r,\n        nx2 = d.x + r,\n        ny1 = d.y - r,\n        ny2 = d.y + r;\n    quadtree.visit(function(quad, x1, y1, x2, y2) {\n\n      if (quad.data && (quad.data !== d)) {\n        var x = d.x - quad.data.x,\n            y = d.y - quad.data.y,\n            l = Math.sqrt(x * x + y * y),\n            r = d.r + quad.data.r + (d.cluster === quad.data.cluster ? padding : clusterPadding);\n        if (l < r) {\n          l = (l - r) / l * alpha;\n          d.x -= x *= l;\n          d.y -= y *= l;\n          quad.data.x += x;\n          quad.data.y += y;\n        }\n      }\n      return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n    });\n  });\n}\n</script>", "description": "Clustered Force Layout 4.0", "created_at": "2016-10-11T04:58:05Z", "updated_at": "2016-10-11T04:58:06Z", "api": ["d3.scaleOrdinal", "d3.select", "d3.range", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.quadtree"], "readme": "\n\nforked from <a href='http://bl.ocks.org/shancarter/'>shancarter</a>'s block: <a href='http://bl.ocks.org/shancarter/f621ac5d93498aa1223d8d20e5d3a0f4'>Clustered Force Layout 4.0</a>", "uid": "lorenzopub_1dca7b205cfe5b9733afe831c7719a9d"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 20) + \")\");\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar cluster = d3.cluster()\n    .size([360, width / 2 - 120]);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return a.height - b.height || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        return \"M\" + project(d.x, d.y)\n            + \"C\" + project(d.x, (d.y + d.parent.y) / 2)\n            + \" \" + project(d.parent.x, (d.y + d.parent.y) / 2)\n            + \" \" + project(d.parent.x, d.parent.y);\n      });\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + project(d.x, d.y) + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \"0.31em\")\n      .attr(\"x\", function(d) { return d.x < 180 === !d.children ? 6 : -6; })\n      .style(\"text-anchor\", function(d) { return d.x < 180 === !d.children ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x < 180 ? d.x - 90 : d.x + 90) + \")\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n});\n\nfunction project(x, y) {\n  var angle = (x - 90) / 180 * Math.PI, radius = y;\n  return [radius * Math.cos(angle), radius * Math.sin(angle)];\n}\n\n</script>", "description": "Radial Dendrogram", "created_at": "2016-10-11T04:57:57Z", "updated_at": "2016-10-11T04:57:57Z", "api": ["d3.select", "d3.stratify", "d3.cluster", "d3.csv"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4739610f6d96aaad2fb1e78a72b385ab'>Radial Dendrogram</a>", "uid": "lorenzopub_526f5145c24c0a1c9f0b237102b23cd1"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n\nvar tree = d3.tree()\n    .size([height - 400, width - 160]);\n\nvar cluster = d3.cluster()\n    .size([height, width - 160]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n\n  d3.selectAll(\"input\")\n      .on(\"change\", changed);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"tree\\\"]\")\n        .property(\"checked\", true)\n        .dispatch(\"change\");\n  }, 1000);\n\n  function changed() {\n    timeout = clearTimeout(timeout);\n    (this.value === \"tree\" ? tree : cluster)(root);\n    var t = d3.transition().duration(750);\n    node.transition(t).attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n    link.transition(t).attr(\"d\", diagonal);\n  }\n});\n\nfunction diagonal(d) {\n  return \"M\" + d.y + \",\" + d.x\n      + \"C\" + (d.parent.y + 100) + \",\" + d.x\n      + \" \" + (d.parent.y + 100) + \",\" + d.parent.x\n      + \" \" + d.parent.y + \",\" + d.parent.x;\n}\n\n</script>", "description": "Tidy Tree vs. Dendrogram", "created_at": "2016-10-11T04:57:33Z", "updated_at": "2016-10-11T04:57:33Z", "api": ["d3.select", "d3.tree", "d3.cluster", "d3.stratify", "d3.csv", "d3.selectAll", "d3.transition"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/e9ba78a2c1070980d1b530800ce7fa2b'>Tidy Tree vs. Dendrogram</a>", "uid": "lorenzopub_edb3d59d8a1a5d5524a6a3efb98fb27d"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d[\"New York\"]); });\n\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y1(function(d) { return y(d[\"New York\"]); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d[\"New York\"]= +d[\"New York\"];\n    d[\"San Francisco\"] = +d[\"San Francisco\"];\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(data, function(d) { return Math.min(d[\"New York\"], d[\"San Francisco\"]); }),\n    d3.max(data, function(d) { return Math.max(d[\"New York\"], d[\"San Francisco\"]); })\n  ]);\n\n  svg.datum(data);\n\n  svg.append(\"clipPath\")\n      .attr(\"id\", \"clip-below\")\n    .append(\"path\")\n      .attr(\"d\", area.y0(height));\n\n  svg.append(\"clipPath\")\n      .attr(\"id\", \"clip-above\")\n    .append(\"path\")\n      .attr(\"d\", area.y0(0));\n\n  svg.append(\"path\")\n      .attr(\"class\", \"area above\")\n      .attr(\"clip-path\", \"url(#clip-above)\")\n      .attr(\"d\", area.y0(function(d) { return y(d[\"San Francisco\"]); }));\n\n  svg.append(\"path\")\n      .attr(\"class\", \"area below\")\n      .attr(\"clip-path\", \"url(#clip-below)\")\n      .attr(\"d\", area);\n\n  svg.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (F)\");\n});\n\n</script>", "description": "Difference Chart", "created_at": "2016-10-11T04:55:29Z", "updated_at": "2016-10-11T04:55:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.select", "d3.tsv", "d3.extent", "d3.min", "d3.max"], "readme": "This variation of a [bivariate area chart](../3884914) uses clipping to alternate colors. When New York is warmer than San Francisco, the difference between the two is filled in green. When San Francisco is warmer, the difference is filled in red. A similar technique was used by [William Playfair](http://en.wikipedia.org/wiki/William_Playfair) all the way back in 1786.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3894205'>Difference Chart</a>", "uid": "lorenzopub_fca46894abbf8c1180f041ecc087505a"}, {"code": "<script>\n  \n// After position the annotation, run `copy(annotations)` in the browser's\n// console and paste over this array:\nvar annotations = [\n  {\n    \"cx\": 625,\n    \"cy\": 111,\n    \"r\": 109,\n    \"text\": \"The longer Old Faithful lays dormant, the longer the eruption last\",\n    \"textWidth\": 140,\n    \"textOffset\": [\n      121,\n      186\n    ]\n  }\n];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = function(d) { return d.waiting; },\n    y = function(d) { return d.eruptions; }\n\nvar xScale = d3.scale.linear().range([0, width]),\n    yScale = d3.scale.linear().range([height, 0]);\n\nvar xValue = function(d) { return xScale(x(d)); },\n    yValue = function(d) { return yScale(y(d)); };\n\nvar xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar ringNote = d3.ringNote()\n  .draggable(true);\n\nd3.json(\"faithful.json\", function(error, data) {\n  if (error) throw error;\n  \n  xScale.domain(d3.extent(data, x));\n  yScale.domain(d3.extent(data, y));\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Time Between Eruptions (minutes)\");\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Eruption Duration (minutes)\");\n   \n   svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", xValue)\n      .attr(\"cy\", yValue);\n      \n   svg.append(\"g\")\n     .attr(\"class\", \"annotations\")\n     .call(ringNote, annotations);\n});\n\n</script>", "description": "Chart Annotation", "created_at": "2016-10-11T04:50:48Z", "updated_at": "2016-10-11T04:50:48Z", "api": ["d3.behavior.drag", "d3.svg.line", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.ringNote", "d3.json", "d3.extent"], "readme": "Example using the [d3.ringNote](https://github.com/armollica/d3-ring-note)\nplugin to add circle annotations to a chart. Drag the dashed circles and \nthe text to move the annotation elements. These moveable, \ndashed-line circles will disappear if `ringNote.draggable(false)` is called.\n\nThe chart shows the eruption duration and waiting time between eruptions\nfor the Old Faithful geyser in Yellowstone National Park. This is\nfrom the [`datasets`](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/faithful.html)\nR package. \n\nforked from <a href='http://bl.ocks.org/armollica/'>armollica</a>'s block: <a href='http://bl.ocks.org/armollica/853c9344a7808619d863c8d7410062e6'>Chart Annotation</a>", "uid": "lorenzopub_35c309fc1c476f756ccc569584432b60"}, {"code": "<script>\n(function() {\n  d3.horizon = function() {\n    var bands = 1, // between 1 and 5, typically\n        mode = \"offset\", // or mirror\n        interpolate = \"linear\", // or basis, monotone, step-before, etc.\n        x = d3_horizonX,\n        y = d3_horizonY,\n        w = 960,\n        h = 40,\n        duration = 0;\n\n    var color = d3.scaleLinear()\n        .domain([-1, 0, 0, 1])\n        .range([\"#08519c\", \"#bdd7e7\", \"#bae4b3\", \"#006d2c\"]);\n\n    // For each small multiple\n    function horizon(g) {\n      g.each(function(d, i) {\n        var g = d3.select(this),\n            n = 2 * bands + 1,\n            xMin = Infinity,\n            xMax = -Infinity,\n            yMax = -Infinity,\n            x0, // old x-scale\n            y0, // old y-scale\n            id; // unique id for paths\n\n        // Compute x- and y-values along with extents.\n        var data = d.map(function(d, i) {\n          var xv = x.call(this, d, i),\n              yv = y.call(this, d, i);\n          if (xv < xMin) xMin = xv;\n          if (xv > xMax) xMax = xv;\n          if (-yv > yMax) yMax = -yv;\n          if (yv > yMax) yMax = yv;\n          return [xv, yv];\n        });\n\n        // Compute the new x- and y-scales, and transform.\n        var x1 = d3.scaleLinear().domain([xMin, xMax]).range([0, w]),\n            y1 = d3.scaleLinear().domain([0, yMax]).range([0, h * bands]),\n            t1 = d3_horizonTransform(bands, h, mode);\n\n        // Retrieve the old scales, if this is an update.\n        if (this.__chart__) {\n          x0 = this.__chart__.x;\n          y0 = this.__chart__.y;\n          t0 = this.__chart__.t;\n          id = this.__chart__.id;\n        } else {\n          x0 = x1.copy();\n          y0 = y1.copy();\n          t0 = t1;\n          id = ++d3_horizonId;\n        }\n\n        // We'll use a defs to store the area path and the clip path.\n        var defs = g.selectAll(\"defs\")\n            .data([null]);\n\n        // The clip path is a simple rect.\n        defs.enter().append(\"defs\").append(\"clipPath\")\n            .attr(\"id\", \"d3_horizon_clip\" + id)\n          .append(\"rect\")\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n\n        defs.select(\"rect\").transition()\n            .duration(duration)\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n\n        // We'll use a container to clip all horizon layers at once.\n        g.selectAll(\"g\")\n            .data([null])\n          .enter().append(\"g\")\n            .attr(\"clip-path\", \"url(#d3_horizon_clip\" + id + \")\");\n\n        // Instantiate each copy of the path with different transforms.\n        var path = g.select(\"g\").selectAll(\"path\")\n            .data(d3.range(-1, -bands - 1, -1).concat(d3.range(1, bands + 1)), Number);\n\n        var d0 = d3_horizonArea\n            //.interpolate(interpolate)\n            .x(function(d) { return x0(d[0]); })\n            .y0(h * bands)\n            .y1(function(d) { return h * bands - y0(d[1]); })\n            (data);\n\n        var d1 = d3_horizonArea\n            .x(function(d) { return x1(d[0]); })\n            .y1(function(d) { return h * bands - y1(d[1]); })\n            (data);\n\n        path.enter().append(\"path\")\n            .style(\"fill\", color)\n            .attr(\"transform\", t0)\n            .attr(\"d\", d0);\n\n        path.transition()\n            .duration(duration)\n            .style(\"fill\", color)\n            .attr(\"transform\", t1)\n            .attr(\"d\", d1);\n\n        path.exit().transition()\n            .duration(duration)\n            .attr(\"transform\", t1)\n            .attr(\"d\", d1)\n            .remove();\n\n        // Stash the new scales.\n        this.__chart__ = {x: x1, y: y1, t: t1, id: id};\n      });\n      d3.timerFlush();\n    }\n\n    horizon.duration = function(x) {\n      if (!arguments.length) return duration;\n      duration = +x;\n      return horizon;\n    };\n\n    horizon.bands = function(x) {\n      if (!arguments.length) return bands;\n      bands = +x;\n      color.domain([-bands, 0, 0, bands]);\n      return horizon;\n    };\n\n    horizon.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return horizon;\n    };\n\n    horizon.colors = function(x) {\n      if (!arguments.length) return color.range();\n      color.range(x);\n      return horizon;\n    };\n\n    horizon.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x + \"\";\n      return horizon;\n    };\n\n    horizon.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return horizon;\n    };\n\n    horizon.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return horizon;\n    };\n\n    horizon.width = function(x) {\n      if (!arguments.length) return w;\n      w = +x;\n      return horizon;\n    };\n\n    horizon.height = function(x) {\n      if (!arguments.length) return h;\n      h = +x;\n      return horizon;\n    };\n\n    return horizon;\n  };\n\n  var d3_horizonArea = d3.area(),\n      d3_horizonId = 0;\n\n  function d3_horizonX(d) {\n    return d[0];\n  }\n\n  function d3_horizonY(d) {\n    return d[1];\n  }\n\n  function d3_horizonTransform(bands, h, mode) {\n    return mode == \"offset\"\n        ? function(d) { return \"translate(0,\" + (d + (d < 0) - bands) * h + \")\"; }\n        : function(d) { return (d < 0 ? \"scale(1,-1)\" : \"\") + \"translate(0,\" + (d - bands) * h + \")\"; };\n  }\n})();\n\n\nvar width = 960,\n    height = 500;\nconsole.log(4);\nvar chart = d3.horizon()\n    .width(width)\n    .height(height)\n    .bands(1)\n    .mode(\"mirror\")\n    .interpolate(\"basis\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"unemployment.json\", function(error, data) {\n  if (error) throw error;\n\n  // Offset so that positive is above-average and negative is below-average.\n  var mean = data.rate.reduce(function(p, v) { return p + v; }, 0) / data.rate.length;\n\n  // Transpose column values to rows.\n  data = data.rate.map(function(rate, i) {\n    return [Date.UTC(data.year[i], data.month[i] - 1), rate - mean];\n  });\n\n  // Render the chart.\n  svg.data([data]).call(chart);\n\n  // Enable mode buttons.\n  d3.selectAll(\"#horizon-controls input[name=mode]\").on(\"change\", function() {\n    svg.call(chart.duration(0).mode(this.value));\n  });\n\n  // Enable bands buttons.\n  d3.selectAll(\"#horizon-bands button\").data([-1, 1]).on(\"click\", function(d) {\n    var n = Math.max(1, chart.bands() + d);\n    d3.select(\"#horizon-bands-value\").text(n);\n    svg.call(chart.duration(1000).bands(n).height(height / n));\n  });\n});\n\n</script>", "description": "Horizon Chart", "created_at": "2016-10-11T04:44:33Z", "updated_at": "2016-10-11T04:44:33Z", "api": ["d3.scaleLinear", "d3.select", "d3.range", "d3.timer.flush", "d3.area", "d3.timerFlush", "d3.horizon", "d3.json", "d3.selectAll"], "readme": "Horizon charts combine position and color to reduce vertical space. Start with a standard area chart, then **mirror** negative values (in blue) or **offset** them vertically. Click the **+ button** above to increase the number of bands, turning the area into a horizon.\n\nImplemented with the [d3.horizon](https://github.com/d3/d3-plugins/tree/master/horizon) plugin.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1483226'>Horizon Chart</a>\n\nforked from <a href='http://bl.ocks.org/owenr/'>owenr</a>'s block: <a href='http://bl.ocks.org/owenr/3f8133b8edf99731d54104ca1b622d30'>Horizon Chart</a>", "uid": "lorenzopub_892f7d8055010b3e537d9ac3b178ed2c"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nsvg = svg\n    .append('g');\n\n\nvar projection = d3.geoOrthographic().scale(214),\n    path = d3.geoPath().projection(projection).pointRadius(1);\n\n\nvar g = svg.append('g')\n    .attr('class', 'world')\n    .append('g')\n    .attr(\"class\", \"s\");\n\nvar defs = g.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({\n        type: \"Sphere\"\n    })\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\ng.append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\")\n    .attr(\"fill\", \"#fcfcff\");\n\ndefs.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\");\n\ng.attr(\"clip-path\", \"url(#clip)\")\n\ng.append('g')\n    .attr('class', 'countries');\n\ng.append(\"g\")\n    .attr(\"class\", \"polygons\")\n\nvar site = g.append(\"g\")\n    .attr(\"class\", \"site\")\n    .selectAll('path')\n    .data([null]);\nvar enter = site\n    .enter() \n    .append('path');\nsite = site.merge(enter);\n\nvar legend = svg\n    .append('text')\n    .attr('transform', 'translate(' + [width / 2, 30] + ')')\n    .attr('class', 'legend')\n    .attr('text-anchor', 'middle')\n    .attr('font-size', '20px')\n    .attr('font-family', 'Helvetica');\n\nvar drag = 0;\n\nd3.queue()\n    .defer(d3.json, 'countries.geojson')\n    .await(function (err, world) {\n        var visit = 0;\n        var countries = d3.select('.countries')\n            .selectAll('path')\n            .data(world.features);\n\n        var enter = countries.enter()\n            .append('path');\n        countries = countries.merge(enter);\n        countries\n            .attr('d', path)\n\n        var subregions = d3.set(world.features.map(function (d) {\n            return d.properties.subregion;\n        })).values();\n\n        go(countries, subregions[visit]);\n\n        d3.interval(visitnext, 1200)\n\n        function visitnext() {\n            if (drag) return;\n            visit = (visit + 1) % subregions.length;\n            go(countries, subregions[visit]);\n        }\n    });\n\nfunction go(countries, subregion) {\n\n    legend.text('The convex hull of ' + (subregion == 'Caribbean' || subregion == 'Seven seas (open ocean)' ? 'the ' : '') + subregion)\n\n    var sites = [],\n        centroids = [];\n\n    countries.data()\n        .filter(function (d) {\n            return d.properties.subregion == subregion;\n        })\n        .map(function (d) {\n            // remove French Guyane for the computation of bounds\n            var e = JSON.parse(JSON.stringify(d));\n            if (e.properties.iso_a3 == 'FRA') {\n                e.geometry.coordinates = d.geometry.coordinates.slice(2);\n            }\n            return e;\n        })\n        .map(function (d) {\n            var convex = d3.geoVoronoi()\n                .hull(d3.geoBounds(d))\n                .coordinates[0];\n            sites.push(convex[0]);\n            sites.push(convex[1]);\n            sites.push([convex[0][0], convex[1][1]]);\n            sites.push([convex[1][0], convex[0][1]]);\n            centroids.push(d3.geoCentroid(d));\n        });\n\n\n\n    var hull = d3.geoVoronoi().hull(sites);\n\n    // special case, sorry!\n    if (subregion == \"Antarctica\") {\n        hull = d3.geoCircle().center([0, -90]).radius(29)();\n    }\n\n    var rotation = d3.geoCentroid({\n            type: 'MultiPoint',\n            coordinates: sites\n        })\n        .map(function (x) {\n            return -x;\n        });\n\n    projection.rotate(rotation);\n\n    countries.attr(\"d\", path);\n\n    d3.select('.polygons path').remove();\n    var poly = d3.select('.polygons')\n        .append(\"path\")\n        .datum(hull)\n        .attr('d', path);\n\n    site.datum({\n            type: \"MultiPoint\",\n            coordinates: sites\n        });\n\n\n\n\n    function draw() {\n        poly.attr('d', path);\n        countries.attr(\"d\", path);\n        site.attr('d', path)\n    }\n\n    draw();\n\n\n    // drag and zoom\n    svg.select('.world')\n        .call(d3.drag()\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended)\n        )\n        .call(d3.zoom()\n            .scaleExtent([1, 8])\n            .on(\"zoom\", zoomed)\n            .on(\"start\", function () {\n                drag++;\n            })\n            .on(\"end\", function () {\n                setTimeout(function () {\n                    drag--;\n                }, 1500);\n            })\n        );\n\n    function zoomed() {\n        svg.select('.world').attr(\"transform\", d3.event.transform);\n    }\n\n    function dragstarted() {\n        drag++;\n        q = projection.rotate();\n        r = d3.mouse(this);\n    }\n\n    function dragended() {\n        setTimeout(function () {\n            drag--;\n        }, 2000);\n    }\n\n    var lambda = d3.scaleLinear()\n        .domain([0, width])\n        .range([-180, 180]);\n\n    var phi = d3.scaleLinear()\n        .domain([0, height])\n        .range([90, -90]);\n\n    function dragged() {\n        var p = d3.mouse(this);\n        projection.rotate([lambda(p[0]) - lambda(r[0]) + q[0], phi(p[1]) - phi(r[1]) + q[1]]);\n        draw();\n    }\n\n}\n</script>", "description": "geoVoronoi.hull()", "created_at": "2016-10-11T04:42:30Z", "updated_at": "2016-10-11T04:42:30Z", "api": ["d3.geoLength", "d3.select", "d3.geoOrthographic", "d3.geoPath", "d3.queue", "d3.set", "d3.interval", "d3.geoVoronoi", "d3.geoBounds", "d3.geoCentroid", "d3.geoCircle", "d3.drag", "d3.zoom", "d3.mouse", "d3.scaleLinear"], "readme": "Use [`geoVoronoi.hull`](https://github.com/Fil/d3-geo-voronoi/#geo_voronoi_hull) to compute the convex hull of a set of points in spherical coordinates.\n\nCountries are grouped by their (World Bank) subregion, and we extract the bounding box for each of them. Then we highlight the convex hull of the set of all corners of the bounding boxes.\n\n(With a special treatment for Antarctica and French Guyane.)\n\nWatch, drag, and zoom.\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/6a1ed09f6e5648a5451cb130f2b13d20'>geoVoronoi.hull()</a>", "uid": "lorenzopub_3cd429b7c660163030e9abfcefd3159a"}, {"code": "<script>\n\nvar margin = {\n    top: 1,\n    right: 1,\n    bottom: 6,\n    left: 1\n  },\n  width = 960 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\nvar fontScale = d3.scaleLinear()\n  .range([8, 30]);\n\nvar formatNumber = d3.format(\",.0f\"),\n  format = function(d) {\n    return formatNumber(d) + \" TWh\";\n  },\n  color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar weightText = svg.append(\"text\")\n  .text(\"Links weighted equally\")\n  .attr(\"x\", width/2-170)\n  .attr(\"y\", height)\n  .style(\"font-size\", \"24px\");\n\nvar sankey = d3.sankey()\n  .nodeWidth(15)\n  .nodePadding(10)\n  .size([width, height]);\n\nvar path = sankey.link();\n\nd3.json(\"energy.json\", function(energy) {\n  var empty_links = energy.links.map(function(d) {\n    d.id = d.source + \" -> \" + d.target;\n    return {\n      source: d.source,\n      target: d.target,\n      id: d.id,\n      value: 1\n    }\n  });\n\n  sankey\n    .nodes(energy.nodes)\n    .links(empty_links)\n    .layout(32);\n\n  fontScale.domain(d3.extent(energy.nodes, function(d) { return d.value }));\n\n  var link = svg.append(\"g\").selectAll(\".link\")\n    .data(empty_links, function(d) { return d.id; })\n    .enter().append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", path)\n    .style(\"stroke-width\", function(d) {\n      return Math.max(1, d.dy) + \"px\";\n    })\n    .sort(function(a, b) {\n      return b.dy - a.dy;\n    });\n\n  link.append(\"title\")\n    .text(function(d) {\n      return d.source.name + \"  \" + d.target.name + \"\\n\" + format(d.value);\n    });\n\n  var node = svg.append(\"g\").selectAll(\".node\")\n    .data(energy.nodes, function(d) { return d.name; })\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n\n  node.append(\"rect\")\n    .attr(\"height\", function(d) {\n      return d.dy;\n    })\n    .attr(\"width\", sankey.nodeWidth())\n    .style(\"fill\", function(d) {\n      return d.color = color(d.name.replace(/ .*/, \"\"));\n    })\n    .style(\"stroke\", function(d) {\n      return d3.rgb(d.color).darker(1.8);\n    })\n    .append(\"title\")\n    .text(function(d) {\n      return d.name + \"\\n\" + format(d.value);\n    });\n\n  node.append(\"text\")\n    .attr(\"x\", -6)\n    .attr(\"y\", function(d) {\n      return d.dy / 2;\n    })\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", null)\n    .style(\"fill\", function(d) {\n      return d3.rgb(d.color).darker(2.4);\n    })\n    .text(function(d) {\n      return d.name;\n    })\n    .style(\"font-size\", function(d) {\n      return Math.floor(fontScale(d.value)) + \"px\";\n    })\n    .filter(function(d) {\n      return d.x < width / 2;\n    })\n    .attr(\"x\", 6 + sankey.nodeWidth())\n    .attr(\"text-anchor\", \"start\");\n\n  function update(nodeData, linkData) {\n    sankey\n      .nodes(nodeData)\n      .links(linkData)\n      .layout(32);\n\n    sankey.relayout();\n    fontScale.domain(d3.extent(nodeData, function(d) { return d.value }));\n\n    svg.selectAll(\".link\")\n      .data(linkData, function(d) { return d.id; })\n      .sort(function(a, b) {\n        return b.dy - a.dy;\n      })\n      .transition()\n      .duration(1300)\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) {\n        return Math.max(1, d.dy) + \"px\";\n      });\n\n    svg.selectAll(\".node\")\n      .data(nodeData, function(d) { return d.name; })\n      .transition()\n      .duration(1300)\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n\n    svg.selectAll(\".node rect\")\n      .transition()\n      .duration(1300)\n      .attr(\"height\", function(d) {\n        return d.dy;\n      });\n\n    svg.selectAll(\".node text\")\n      .transition()\n      .duration(1300)\n      .attr(\"y\", function(d) {\n        return d.dy / 2;\n      })\n      .style(\"font-size\", function(d) {\n        return Math.floor(fontScale(d.value)) + \"px\";\n      });\n  };\n\n  var counter = 0;\n  function toggleTransition() {\n    counter++;\n    var activeLinks = counter % 2 ? energy.links : empty_links;\n    weightText.text(counter % 2 ? \"Links weighted by value\" : \"Links weighted equally\");\n    update(energy.nodes, activeLinks);\n    setTimeout(toggleTransition, 2400);\n  };\n\n  setTimeout(toggleTransition, 2400);\n});\n\n</script>", "description": "Sankey Transitions", "created_at": "2016-10-11T04:40:42Z", "updated_at": "2016-10-11T04:40:42Z", "api": ["d3.scaleLinear", "d3.format", "d3.scaleOrdinal", "d3.select", "d3.sankey", "d3.json", "d3.extent", "d3.rgb"], "readme": "This example created for development purposes using the [d3-sankey](https://github.com/d3/d3-sankey) plugin for D3 4.0.\n\nBased on [xaranke's port](http://bl.ocks.org/xaranke/9ada4c74a87b57ae7308) of [Mike Bostock's Sankey Diagram](https://bost.ocks.org/mike/sankey/) with drag behavior enabled and several fixes for the d3 version 4.x release.\n\nIt would be nice if d3-sankey's `value` accessor was configurable, to avoid creating the `empty_links` data structure in the code below.\n\n\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/77c7f7e8802e8824eed473dd065c450b'>Sankey Transitions</a>", "uid": "lorenzopub_cefd53c7fc67018efba0fe0460cdfd2a"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(200)\n    .map(function() { return [randomX(), randomY()]; })\n    .filter(function(d) { return 0 <= d[0] && d[0] <= width && 0 <= d[1] && d[1] <= height; });\n\nvar cells = d3.geom.voronoi()\n    .clipExtent([[-1, -1], [width + 1, height + 1]])\n    (data)\n    .map(d3.geom.polygon);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar cell = svg.append(\"g\")\n    .attr(\"class\", \"cell\")\n  .selectAll(\"g\")\n    .data(cells)\n  .enter().append(\"g\");\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-center\")\n    .attr(\"d\", function(d) { return \"M\" + d.centroid() + \"L\" + d.point; });\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-border\")\n    .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"dot\")\n  .selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; })\n    .attr(\"r\", 2.5);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"label\")\n  .selectAll(\"text\")\n    .data(cells.filter(function(d) { return d.area() > 2000; }))\n  .enter().append(\"text\")\n    .attr(\"class\", function(d) {\n      var centroid = d.centroid(),\n          point = d.point,\n          angle = Math.round(Math.atan2(centroid[1] - point[1], centroid[0] - point[0]) / Math.PI * 2);\n      return \"label--\" + (d.orient = angle === 0 ? \"right\"\n          : angle === -1 ? \"top\"\n          : angle === 1 ? \"bottom\"\n          : \"left\");\n    })\n    .attr(\"transform\", function(d) { return \"translate(\" + d.point + \")\"; })\n    .attr(\"dy\", function(d) { return d.orient === \"left\" || d.orient === \"right\" ? \".35em\" : d.orient === \"bottom\" ? \".71em\" : null; })\n    .attr(\"x\", function(d) { return d.orient === \"right\" ? 6 : d.orient === \"left\" ? -6 : null; })\n    .attr(\"y\", function(d) { return d.orient === \"bottom\" ? 6 : d.orient === \"top\" ? -6 : null; })\n    .text(function(d, i) { return i; });\n\n</script>", "description": "Voronoi Labels", "created_at": "2016-10-11T04:32:32Z", "updated_at": "2016-10-11T04:32:32Z", "api": ["d3.random.normal", "d3.range", "d3.geom.voronoi", "d3.select"], "readme": "This example demonstrates the use of a [Voronoi tessellation](http://bl.ocks.org/mbostock/4060366) as a simple heuristic for labeling scatterplots. The area of the Voronoi cell associated with each point in the scatterplot is used to determine which points are labeled: points with large cells likely have enough room to accommodate labels. Then, the vector between the point and the associated cell\u2019s centroid (shown in orange) is used to choose between four label orientations: top, right, bottom and left.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6909318'>Voronoi Labels</a>\n\nforked from <a href='http://bl.ocks.org/domhorvath/'>domhorvath</a>'s block: <a href='http://bl.ocks.org/domhorvath/9de3007d51bbee999b6923b44ec2eb22'>Voronoi Labels</a>", "uid": "lorenzopub_4155479307b8821c910dab05576d421e"}, {"code": "<script>\n\nvar svg = d3.select(\"body\")\n\t.append(\"svg\")\n\t.append(\"g\")\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"slices\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"labels\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"lines\");\n\nvar width = 960,\n    height = 450,\n\tradius = Math.min(width, height) / 2;\n\nvar pie = d3.layout.pie()\n\t.sort(null)\n\t.value(function(d) {\n\t\treturn d.value;\n\t});\n\nvar arc = d3.svg.arc()\n\t.outerRadius(radius * 0.8)\n\t.innerRadius(radius * 0.4);\n\nvar outerArc = d3.svg.arc()\n\t.innerRadius(radius * 0.9)\n\t.outerRadius(radius * 0.9);\n\nsvg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar key = function(d){ return d.data.label; };\n\nvar color = d3.scale.ordinal()\n\t.domain([\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"])\n\t.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nfunction randomData (){\n\tvar labels = color.domain();\n\treturn labels.map(function(label){\n\t\treturn { label: label, value: Math.random() }\n\t});\n}\n\nchange(randomData());\n\nd3.select(\".randomize\")\n\t.on(\"click\", function(){\n\t\tchange(randomData());\n\t});\n\n\nfunction change(data) {\n\n\t/* ------- PIE SLICES -------*/\n\tvar slice = svg.select(\".slices\").selectAll(\"path.slice\")\n\t\t.data(pie(data), key);\n\n\tslice.enter()\n\t\t.insert(\"path\")\n\t\t.style(\"fill\", function(d) { return color(d.data.label); })\n\t\t.attr(\"class\", \"slice\");\n\n\tslice\t\t\n\t\t.transition().duration(1000)\n\t\t.attrTween(\"d\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\treturn arc(interpolate(t));\n\t\t\t};\n\t\t})\n\n\tslice.exit()\n\t\t.remove();\n\n\t/* ------- TEXT LABELS -------*/\n\n\tvar text = svg.select(\".labels\").selectAll(\"text\")\n\t\t.data(pie(data), key);\n\n\ttext.enter()\n\t\t.append(\"text\")\n\t\t.attr(\"dy\", \".35em\")\n\t\t.text(function(d) {\n\t\t\treturn d.data.label;\n\t\t});\n\t\n\tfunction midAngle(d){\n\t\treturn d.startAngle + (d.endAngle - d.startAngle)/2;\n\t}\n\n\ttext.transition().duration(1000)\n\t\t.attrTween(\"transform\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn \"translate(\"+ pos +\")\";\n\t\t\t};\n\t\t})\n\t\t.styleTween(\"text-anchor\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\treturn midAngle(d2) < Math.PI ? \"start\":\"end\";\n\t\t\t};\n\t\t});\n\n\ttext.exit()\n\t\t.remove();\n\n\t/* ------- SLICE TO TEXT POLYLINES -------*/\n\n\tvar polyline = svg.select(\".lines\").selectAll(\"polyline\")\n\t\t.data(pie(data), key);\n\t\n\tpolyline.enter()\n\t\t.append(\"polyline\");\n\n\tpolyline.transition().duration(1000)\n\t\t.attrTween(\"points\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn [arc.centroid(d2), outerArc.centroid(d2), pos];\n\t\t\t};\t\t\t\n\t\t});\n\t\n\tpolyline.exit()\n\t\t.remove();\n};\n\n</script>", "description": "Pie charts labels", "created_at": "2016-10-11T04:28:57Z", "updated_at": "2016-10-11T04:29:23Z", "api": ["d3.select", "d3.layout.pie", "d3.svg.arc", "d3.scale.ordinal", "d3.interpolate"], "readme": "This variation of a donut chart demonstrates how to add labels with lines. Clicking on the button changes the displayed data.\nCheck [Pie Chart with Labels and Missing Data](http://bl.ocks.org/dbuezas/9572040) to see how to handle transitions with missing/new data.\n\n\n\nforked from <a href='http://bl.ocks.org/dbuezas/'>dbuezas</a>'s block: <a href='http://bl.ocks.org/dbuezas/9306799'>Pie charts labels</a>\n\nforked from <a href='http://bl.ocks.org/domhorvath/'>domhorvath</a>'s block: <a href='http://bl.ocks.org/domhorvath/ba3aa4bdb0652fcd8b98c59a33fcea1d'>Pie charts labels</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/678efd64f24f4eecadc6defbdc96f91e'>Pie charts labels</a>", "uid": "lorenzopub_8634242329da4dfb101c8732d73927ad"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\t\n    var x = d3.scale.linear()\n        .range([0, width]);\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n    \n    var select = d3.select('body').append('select').on('change', onChange);\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    \n    var points;\n\n    function onChange(){\n      var group = select.property('value');\n      points.style('opacity', function(d){\n        return d.group == group ? 1:0;\n      });\n    }\n\n    d3.csv(\"data.csv\", function(error, data) {\n      if (error) throw error;\n\n      // Coerce the strings to numbers.\n      data.forEach(function(d) {\n        d.x = +d.x;\n        d.y = +d.y;\n      });\n      \n      var groups = d3.set(data.map(function(d){ return d.group; })).values();\n      console.log(groups);\n      \n      // create group filtering select list\n      select.selectAll('option')\n\t\t\t\t.data(groups)\n  \t\t\t.enter().append('option').text(function(d){ return d });\n\t\t\t\n      select.property('value', 1);\n      \n\n      // Compute the scales domains.\n      x.domain(d3.extent(data, function(d) { return d.x; })).nice();\n      y.domain(d3.extent(data, function(d) { return d.y; })).nice();\n\n      // Add the x-axis.\n      svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n      // Add the y-axis.\n      svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(d3.svg.axis().scale(y).orient(\"left\"));\n\n      // Add the points!\n      points = svg.selectAll(\".point\")\n        .data(data)\n        .enter().append(\"path\")\n          .attr(\"class\", \"point\")\n          .attr(\"d\", d3.svg.symbol().type(\"triangle-up\"))\n          .attr(\"transform\", function(d){ return \"translate(\"+x(d.x)+\",\"+y(d.y)+\")\";});\n  });\n    \n  \n  </script>", "description": "select list demo", "created_at": "2016-10-10T19:44:28Z", "updated_at": "2016-10-10T19:50:25Z", "api": ["d3.scale.linear", "d3.select", "d3.csv", "d3.set", "d3.extent", "d3.svg.axis", "d3.svg.symbol"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "pbellon_0c2447557cde990871e32f8cf517e8e2"}, {"code": "<script>\n\nvar svg = d3.select(\"body\")\n\t.append(\"svg\")\n\t.append(\"g\")\n\nsvg.append(\"g\")\n\t.attr(\"class\", \"slices\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"labels\");\nsvg.append(\"g\")\n\t.attr(\"class\", \"lines\");\n\nvar width = 960,\n    height = 450,\n\tradius = Math.min(width, height) / 2;\n\nvar pie = d3.layout.pie()\n\t.sort(null)\n\t.value(function(d) {\n\t\treturn d.value;\n\t});\n\nvar arc = d3.svg.arc()\n\t.outerRadius(radius * 0.8)\n\t.innerRadius(radius * 0.4);\n\nvar outerArc = d3.svg.arc()\n\t.innerRadius(radius * 0.9)\n\t.outerRadius(radius * 0.9);\n\nsvg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nvar key = function(d){ return d.data.label; };\n\nvar color = d3.scale.ordinal()\n\t.domain([\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"])\n\t.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nfunction randomData (){\n\tvar labels = color.domain();\n\treturn labels.map(function(label){\n\t\treturn { label: label, value: Math.random() }\n\t});\n}\n\nchange(randomData());\n\nd3.select(\".randomize\")\n\t.on(\"click\", function(){\n\t\tchange(randomData());\n\t});\n\n\nfunction change(data) {\n\n\t/* ------- PIE SLICES -------*/\n\tvar slice = svg.select(\".slices\").selectAll(\"path.slice\")\n\t\t.data(pie(data), key);\n\n\tslice.enter()\n\t\t.insert(\"path\")\n\t\t.style(\"fill\", function(d) { return color(d.data.label); })\n\t\t.attr(\"class\", \"slice\");\n\n\tslice\t\t\n\t\t.transition().duration(1000)\n\t\t.attrTween(\"d\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\treturn arc(interpolate(t));\n\t\t\t};\n\t\t})\n\n\tslice.exit()\n\t\t.remove();\n\n\t/* ------- TEXT LABELS -------*/\n\n\tvar text = svg.select(\".labels\").selectAll(\"text\")\n\t\t.data(pie(data), key);\n\n\ttext.enter()\n\t\t.append(\"text\")\n\t\t.attr(\"dy\", \".35em\")\n\t\t.text(function(d) {\n\t\t\treturn d.data.label;\n\t\t});\n\t\n\tfunction midAngle(d){\n\t\treturn d.startAngle + (d.endAngle - d.startAngle)/2;\n\t}\n\n\ttext.transition().duration(1000)\n\t\t.attrTween(\"transform\", function(d) {\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn \"translate(\"+ pos +\")\";\n\t\t\t};\n\t\t})\n\t\t.styleTween(\"text-anchor\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\treturn midAngle(d2) < Math.PI ? \"start\":\"end\";\n\t\t\t};\n\t\t});\n\n\ttext.exit()\n\t\t.remove();\n\n\t/* ------- SLICE TO TEXT POLYLINES -------*/\n\n\tvar polyline = svg.select(\".lines\").selectAll(\"polyline\")\n\t\t.data(pie(data), key);\n\t\n\tpolyline.enter()\n\t\t.append(\"polyline\");\n\n\tpolyline.transition().duration(1000)\n\t\t.attrTween(\"points\", function(d){\n\t\t\tthis._current = this._current || d;\n\t\t\tvar interpolate = d3.interpolate(this._current, d);\n\t\t\tthis._current = interpolate(0);\n\t\t\treturn function(t) {\n\t\t\t\tvar d2 = interpolate(t);\n\t\t\t\tvar pos = outerArc.centroid(d2);\n\t\t\t\tpos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n\t\t\t\treturn [arc.centroid(d2), outerArc.centroid(d2), pos];\n\t\t\t};\t\t\t\n\t\t});\n\t\n\tpolyline.exit()\n\t\t.remove();\n};\n\n</script>", "description": "Pie charts labels", "created_at": "2016-10-10T15:30:26Z", "updated_at": "2016-10-10T15:30:27Z", "api": ["d3.select", "d3.layout.pie", "d3.svg.arc", "d3.scale.ordinal", "d3.interpolate"], "readme": "This variation of a donut chart demonstrates how to add labels with lines. Clicking on the button changes the displayed data.\nCheck [Pie Chart with Labels and Missing Data](http://bl.ocks.org/dbuezas/9572040) to see how to handle transitions with missing/new data.\n\n\n\nforked from <a href='http://bl.ocks.org/dbuezas/'>dbuezas</a>'s block: <a href='http://bl.ocks.org/dbuezas/9306799'>Pie charts labels</a>", "uid": "domhorvath_ba3aa4bdb0652fcd8b98c59a33fcea1d"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar randomX = d3.random.normal(width / 2, 80),\n    randomY = d3.random.normal(height / 2, 80);\n\nvar data = d3.range(200)\n    .map(function() { return [randomX(), randomY()]; })\n    .filter(function(d) { return 0 <= d[0] && d[0] <= width && 0 <= d[1] && d[1] <= height; });\n\nvar cells = d3.geom.voronoi()\n    .clipExtent([[-1, -1], [width + 1, height + 1]])\n    (data)\n    .map(d3.geom.polygon);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar cell = svg.append(\"g\")\n    .attr(\"class\", \"cell\")\n  .selectAll(\"g\")\n    .data(cells)\n  .enter().append(\"g\");\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-center\")\n    .attr(\"d\", function(d) { return \"M\" + d.centroid() + \"L\" + d.point; });\n\ncell.append(\"path\")\n    .attr(\"class\", \"cell-border\")\n    .attr(\"d\", function(d) { return \"M\" + d.join(\"L\") + \"Z\"; });\n\nsvg.append(\"g\")\n    .attr(\"class\", \"dot\")\n  .selectAll(\"circle\")\n    .data(data)\n  .enter().append(\"circle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d + \")\"; })\n    .attr(\"r\", 2.5);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"label\")\n  .selectAll(\"text\")\n    .data(cells.filter(function(d) { return d.area() > 2000; }))\n  .enter().append(\"text\")\n    .attr(\"class\", function(d) {\n      var centroid = d.centroid(),\n          point = d.point,\n          angle = Math.round(Math.atan2(centroid[1] - point[1], centroid[0] - point[0]) / Math.PI * 2);\n      return \"label--\" + (d.orient = angle === 0 ? \"right\"\n          : angle === -1 ? \"top\"\n          : angle === 1 ? \"bottom\"\n          : \"left\");\n    })\n    .attr(\"transform\", function(d) { return \"translate(\" + d.point + \")\"; })\n    .attr(\"dy\", function(d) { return d.orient === \"left\" || d.orient === \"right\" ? \".35em\" : d.orient === \"bottom\" ? \".71em\" : null; })\n    .attr(\"x\", function(d) { return d.orient === \"right\" ? 6 : d.orient === \"left\" ? -6 : null; })\n    .attr(\"y\", function(d) { return d.orient === \"bottom\" ? 6 : d.orient === \"top\" ? -6 : null; })\n    .text(function(d, i) { return i; });\n\n</script>", "description": "Voronoi Labels", "created_at": "2016-10-10T15:15:25Z", "updated_at": "2016-10-10T15:15:25Z", "api": ["d3.random.normal", "d3.range", "d3.geom.voronoi", "d3.select"], "readme": "This example demonstrates the use of a [Voronoi tessellation](http://bl.ocks.org/mbostock/4060366) as a simple heuristic for labeling scatterplots. The area of the Voronoi cell associated with each point in the scatterplot is used to determine which points are labeled: points with large cells likely have enough room to accommodate labels. Then, the vector between the point and the associated cell\u2019s centroid (shown in orange) is used to choose between four label orientations: top, right, bottom and left.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6909318'>Voronoi Labels</a>", "uid": "domhorvath_9de3007d51bbee999b6923b44ec2eb22"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    margin = { top: 10, bottom: 25, left: 10, right: 50 }, // around the graph\n    spacing = { bottom: 15, right: 5 },\n    n = 8, // number of layers\n    m = 50, // numbe of samples per layer,\n    stack = d3.layout.stack(),\n    data = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),\n    ySplitMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),\n    yStackMax = d3.max(data, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); }),\n    duration = 1000,\n    isTransition = false;\n\n    svg = d3.select('body').append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\nvar layout = 'stack';\n\nfunction translate(x, y) {\n  return \"translate(\" + x + \", \" + y + \")\";\n}\n\nfunction update(firstTime) {\n  function rowHeight() {\n    return Math.floor((height - margin.top - margin.bottom - (n - 1) * spacing.bottom) / n);\n  };\n\n  var lastRow = n - 1;\n\n  var x = d3.scale.linear()\n    .range([margin.left, width - margin.right])\n    .domain([0, m-1]);\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient('bottom');\n\n  var y = d3.scale.linear()\n\n  if (layout == 'stack') {\n    y.range([height - margin.top - margin.bottom, 0])\n      .domain([0, yStackMax]);\n  } else {\n    y.range([rowHeight(), 0])\n      .domain([0, ySplitMax])\n  }\n\n  yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"right\")\n    .ticks(layout == 'split' ? 3 : 10);\n\n  if (firstTime) {\n    svg.append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', translate(0, height - margin.top - margin.bottom + 5))\n      .call(xAxis)\n  }\n\n  var layers = svg.selectAll('g.layer')\n    .data(data, function(d) { return data.indexOf(d) });\n\n  var enterLayers = layers.enter()\n    .append('g')\n      .attr('class', 'layer')\n      .attr('width', width)\n      .attr('transform', function(d, i) {\n        if (layout == 'split') {\n          return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n        }\n      });\n\n  layers.exit().remove()\n\n  layers.transition()\n    .duration(duration)\n    .attr('transform', function(d, i) {\n      if (layout == 'stack') {\n        return translate(0, 0);\n      } else {\n        return translate(0, (lastRow - i) * (rowHeight() + spacing.bottom));\n      }\n    })\n    .each('start', function() { isTransition = true })\n    .each('end', function() { isTransition = false });\n\n  var zeroArea = d3.svg.area()\n    .x(function(d) { return x(d.x) })\n    .y0(y(0))\n    .y1(y(0));\n\n  var grayGradient = d3.interpolate('#666', '#ddd');\n\n  function color(d, i) {\n    i = data.indexOf(d);\n    return grayGradient(i / n);\n  }\n\n  var areas = enterLayers.append('path')\n    .attr('class', 'area')\n    .attr('d', zeroArea)\n    .style('fill', color)\n    .style('stroke', color)\n    .style('stroke-width', 1) // fill gaps between layers\n    .on('mouseover', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', '#d66').style('stroke', '#d66');\n    })\n    .on('mouseout', function() {\n      !isTransition && d3.select(this).transition()\n        .style('fill', color).style('stroke', color);\n    });\n  var area = d3.svg.area()\n    .x(function(d) { return x(d.x) });\n\n  if (layout == 'stack') {\n    area.y0(function(d) { return y(d.y0); })\n      .y1(function(d) { return y(d.y0 + d.y); });\n  } else {\n    area.y0(y(0))\n      .y1(function(d) { return y(d.y)} );\n  }\n\n  layers.selectAll('path.area').transition()\n    .duration(duration)\n    .attr('d', area);\n\n  enterLayers.append('g')\n    .attr('class', 'y-axis')\n    .attr('transform', translate(width - margin.right + spacing.right, 0))\n    .attr('opacity', 0)\n\n  var yAxes = layers.selectAll('g.y-axis');\n  yAxes.transition()\n    .duration(duration)\n    .attr('opacity', function(d, i) {\n      i = data.indexOf(d);\n      if (layout == 'stack') {\n        return 1;\n      } else {\n        return 1;\n      }\n    })\n    .call(yAxis);\n}\n\n// Inspired by Lee Byron's test data generator.\n// Borrowed from http://bl.ocks.org/mbostock/3943967\nfunction bumpLayer(n, o) {\n\n  function bump(a) {\n    var x = 1 / (.1 + Math.random()),\n        y = 2 * Math.random() - .5,\n        z = 10 / (.1 + Math.random());\n    for (var i = 0; i < n; i++) {\n      var w = (i / n - y) * z;\n      a[i] += x * Math.exp(-w * w);\n    }\n  }\n\n  var a = [], i;\n  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n  for (i = 0; i < 5; ++i) bump(a);\n  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });\n}\n\nupdate(true)\n\nsetTimeout(function() {\n  d3.select('input#stack').attr('checked', 'checked');\n}, duration);\n\nd3.selectAll('input').on('change', function() {\n  var e = d3.select(this);\n  if (e.attr('value') == 'stack' && e.attr('checked')) {\n    layout = 'stack';\n  } else {\n    layout = 'split';\n  }\n  update()\n});\n\n</script>", "description": "Stack-to-Split Transition", "created_at": "2016-10-10T13:26:11Z", "updated_at": "2016-10-10T13:26:12Z", "api": ["d3.layout.stack", "d3.range", "d3.max", "d3.select", "d3.scale.linear", "d3.svg.axis", "d3.svg.area", "d3.interpolate", "d3.selectAll"], "readme": "# Stack-Split Transition\n\nTransitions between stacked and split (small multiples) area charts.\n\n\nforked from <a href='http://bl.ocks.org/zachmargolis/'>zachmargolis</a>'s block: <a href='http://bl.ocks.org/zachmargolis/9315833'>Stack-to-Split Transition</a>", "uid": "mashehu_281584920c26e2d617625270b75818a1"}, {"code": "<script>\n\t\tvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    g = svg.append(\"g\");\n    \n    var tree = d3.tree()\n    .size([height, width]);\n    \n    var stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\n\t\td3.csv(\"data.csv\", function(error, data) {\n  \t\tif (error) throw error;\n           \n      var root = stratify(data).sort(function(a, b) {\n        return (a.height - b.height) || a.id.localeCompare(b.id); \n      });\n      \n      function collapse(d) {\n        if(d.children) {\n          d._children = d.children;\n          d._children.forEach(collapse);\n          d.children = null;\n        }\n      }\n      root.children.forEach(collapse);\n\n      tree(root);\n      \n      var link = g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n    \t.enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d,i) {\n            return \"M\" + d.x + \",\" + d.y\n            + \"C\" + (d.x + d.parent.x)/2  + \",\" + d.y/2\n            + \" \" + (d.x + d.parent.x)/2  + \",\" + (d.parent.y/2)\n            + \" \" + d.parent.x + \",\" + (d.parent.y/2); \n      });\n      \n      \n      var node = g.selectAll(\".node\")\n      .data(root.descendants())\n    \t.enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \t\t\t\t\" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y/2 + \")\"; \t\t\t\t});\n      \n      \n            \n      node.append(\"rect\")\n      \t.attr('x',function(d){\n        \t\tif(d.children){\n            \treturn d.children +8;                  \n          \t}\n      \t\t})\n      \t.attr('y',function(d){return d.children -8;})\n      \t.attr('width',50)\n      \t.attr('height',20)\n      \t.attr('class','rect');\n      \n       node.append(\"text\")\n      \t.attr(\"dy\", 3)\n      \t.attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      \t.style(\"text-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      \t.style('fill', 'yellow')\n      \t.text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n\n      \n     \n      \n\t\t});\n    \n  </script>", "description": "Spacetree ", "created_at": "2016-10-09T20:43:22Z", "updated_at": "2016-10-10T19:37:53Z", "api": ["d3.select", "d3.tree", "d3.stratify", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jorgeehernandez_c19d6eb6085cab208f56e79f22c39e35"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x0 = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar x1 = d3.scale.ordinal();\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#98abc5\", \"#a05d56\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".%\"));\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  var ageNames = d3.keys(data[0]).filter(function(key) { return key !== \"State\"; });\n\n  data.forEach(function(d) {\n    d.ages = ageNames.map(function(name) { return {name: name, value: +d[name]}; });\n  });\n\n  x0.domain(data.map(function(d) { return d.State; }));\n  x1.domain(ageNames).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(d) { return d3.max(d.ages, function(d) { return d.value; }); })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Porcentaje\");\n\n  var state = svg.selectAll(\".state\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"state\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x0(d.State) + \",0)\"; });\n\n  state.selectAll(\"rect\")\n      .data(function(d) { return d.ages; })\n    .enter().append(\"rect\")\n      .attr(\"width\", x1.rangeBand())\n      .attr(\"x\", function(d) { return x1(d.name); })\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(ageNames.slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "Grouped Bar Chart Modified", "created_at": "2016-10-09T20:41:22Z", "updated_at": "2016-10-09T21:04:24Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "This grouped bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding and color encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting#wiki-d3_format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887051'>Grouped Bar Chart</a>", "uid": "juanprq_07cc5a33514c56f4bf253d62066ee3f0"}, {"code": "<script>\n          \n          function pictoGram() {\n          \n            //placeholder div for jquery slider\n            d3.select(\"body\").append(\"div\").attr(\"id\",\"sliderDiv\");\n            \n            \n            //create svg element\n            var svgDoc=d3.select(\"body\").append(\"svg\").attr(\"viewBox\",\"0 0 100 100\");\n            \n             //define an icon store it in svg <defs> elements as a reusable component - this geometry can be generated from Inkscape, Illustrator or similar\n            svgDoc.append(\"defs\")\n                .append(\"g\")\n                .attr(\"id\",\"iconCustom\")\n                .append(\"path\")\n                        .attr(\"d\",\"M3.5,2H2.7C3,1.8,3.3,1.5,3.3,1.1c0-0.6-0.4-1-1-1c-0.6,0-1,0.4-1,1c0,0.4,0.2,0.7,0.6,0.9H1.1C0.7,2,0.4,2.3,0.4,2.6v1.9c0,0.3,0.3,0.6,0.6,0.6h0.2c0,0,0,0.1,0,0.1v1.9c0,0.3,0.2,0.6,0.3,0.6h1.3c0.2,0,0.3-0.3,0.3-0.6V5.3c0,0,0-0.1,0-0.1h0.2c0.3,0,0.6-0.3,0.6-0.6V2.6C4.1,2.3,3.8,2,3.5,2z\");\n            \n            \n            //background rectangle\n            svgDoc.append(\"rect\").attr(\"width\",100).attr(\"height\",50);\n            \n            //specify the number of columns and rows for pictogram layout\n            var numCols = 10;\n            var numRows = 1;\n            \n            //padding for the grid\n            var xPadding = 10;\n            var yPadding = 15;\n            \n            //horizontal and vertical spacing between the icons\n            var hBuffer = 9;\n            var wBuffer = 8;\n            \n            //generate a d3 range for the total number of required elements\n            var myIndex=d3.range(numCols*numRows);\n            \n            //text element to display number of icons highlighted\n            svgDoc.append(\"text\")\n                .attr(\"id\",\"txtValue\")\n                .attr(\"x\",xPadding)\n                .attr(\"y\",yPadding)\n                .attr(\"dy\",-3)\n                .text(\"0\" );\n \n            //create group element and create an svg <use> element for each icon\n            svgDoc.append(\"g\")\n                .attr(\"id\",\"pictoLayer\")\n                .selectAll(\"use\")\n                .data(myIndex)\n                .enter()\n                .append(\"use\")\n                    .attr(\"xlink:href\",\"#iconCustom\")\n                    .attr(\"id\",function(d)    {\n                        return \"icon\"+d;\n                    })\n                    .attr(\"x\",function(d) {\n                        var remainder=d % numCols;//calculates the x position (column number) using modulus\n                        return xPadding+(remainder*wBuffer);//apply the buffer and return value\n                    })\n                      .attr(\"y\",function(d) {\n                        var whole=Math.floor(d/numCols)//calculates the y position (row number)\n                        return yPadding+(whole*hBuffer);//apply the buffer and return the value\n                    })\n                    .classed(\"iconPlain\",true);\n \n            //create a jquery slider to control the pictogram         \n             $( \"#sliderDiv\" ).slider({\n                  orientation: \"horizontal\",\n                  min: 0,\n                  max: 10,\n                  value: 0,\n                  slide: function( event, ui ) {\n                    d3.select(\"#txtValue\").text(ui.value);\n                    d3.selectAll(\"use\").attr(\"class\",function(d,i){\n                       if (d<ui.value)  {\n                           return \"iconSelected\";\n                       }    else    {\n                           return \"iconPlain\";\n                       }\n                    });\n                  }\n             });\n            };\n          \npictoGram();\n          \n          \n          \n        </script>", "description": "fresh block", "created_at": "2016-10-09T16:46:11Z", "updated_at": "2016-10-09T16:46:14Z", "api": ["d3.select", "d3.range", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/59de7dfa17d35c2c6592d9c0995f4f4b'>fresh block</a>", "uid": "Sokrates86_be74ebd338f422474528859b2742ef7a"}, {"code": "<script>\n  \n  \tvar width = 400;\n  \tvar height = 300;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n  \n  \tvar container = d3.select(svg.parentNode);\n  \n  \tvar color = d3.scaleOrdinal(d3.schemeCategory20);\n    \n\t\tvar simulation = d3.forceSimulation()\n    \t.force(\"charge\", d3.forceManyBody())\n    \t.force(\"collide\", d3.forceCollide()\n       \t.radius(function(d) { return d.group * 5; }).iterations(1)\n       )\n    \t.force(\"link\", d3.forceLink()\n      \t.id(function(d) { return d.id; })\n        .distance(function(d) { return 10; })\n       )\n    \t.force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .force(\"x\", d3.forceX())\n      .force(\"y\", d3.forceY());\n    \n\t\td3.json(\"data.json\", function(error, graph) {\n  \t\t\n      if (error) throw error;\n\n      var link = svg.append(\"g\")\n        .attr(\"class\", \"link\")\n        .selectAll(\".link\")\n        .data(graph.links)\n        .enter()\n      \t.append(\"line\")\n        .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n     \n\t\t\tvar node = svg.append(\"g\")\n      \t.attr(\"class\", \"node\")\n      \t.selectAll(\".node\")\n        .data(graph.nodes)   \t\n    \t\t.enter()\n      \t.append(\"g\");\n      \n      node\n      \t.append(\"circle\")\n      \t.attr(\"cx\", 0)\n      \t.attr(\"cy\", 0)\n      \t.attr(\"r\", 20)\n      \t.attr(\"fill\", function(d) { return color(d.group); });\n      \n// \t\t\tnode\n//       \t.append(\"text\")\n//         .attr(\"dx\", -5)\n//         .attr(\"dy\", \".35em\")\n//         .text(function(d) { return d.id });\n      \n\t\t\tnode\n        .on(\"mouseover\", function(d) {\n          var g = d3.select(this);\n          g.select('circle')\n            .attr('r', 50);\n          g.append('text')\n            .classed('info', true)\n            .attr('dx', -5)\n            .attr('dy', \".35em\")\n            .text(d.id);\n        })\n        .on(\"mouseout\", function() {\n          var g = d3.select(this);\n          g.select('circle')\n            .attr('r', 15);\n          g.select('text.info').remove();\n        });      \n      \n      node\n      \t.call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended)\n        );      \n\n      simulation\n        .nodes(graph.nodes)\n        .on(\"tick\", tick);\n\n  \t\tsimulation.force(\"link\")\n      \t.links(graph.links);\n\n      function tick() {\n        link\n          .attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n        \n\t\t\t\tnode.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });        \n        \n      }\n\t\t});\n  \n  \tresize();\n  \n  \td3.select(window).on(\"resize\", resize);\n   \n    function resize() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      svg\n      \t.attr(\"viewBox\", \"0 0 \" + width + \" \" + height );\n      simulation\n        .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      \t.restart();\n    };  \n    \n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };    \n\n</script>", "description": "D3 Force Sandbox", "created_at": "2016-10-08T15:04:29Z", "updated_at": "2016-10-08T21:28:56Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCollide", "d3.forceLink", "d3.forceCenter", "d3.forceX", "d3.forceY", "d3.json", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "TomStanczyk_8cd26aabc37de17d837a85eeb3b420d5"}, {"code": "<script>\n\n// some colour variables\n  var tcBlack = \"#130C0E\";\n\n// rest of vars\nvar w = 960,\n    h = 800,\n    maxNodeSize = 50,\n    x_browser = 20,\n    y_browser = 25,\n    root;\n \nvar vis;\nvar force = d3.layout.force(); \n\nvis = d3.select(\"#vis\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n \nd3.json(\"marvel.json\", function(json) {\n \n  root = json;\n  root.fixed = true;\n  root.x = w / 2;\n  root.y = h / 4;\n \n \n        // Build the path\n  var defs = vis.insert(\"svg:defs\")\n      .data([\"end\"]);\n \n \n  defs.enter().append(\"svg:path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n \n     update();\n});\n \n \n/**\n *   \n */\nfunction update() {\n  var nodes = flatten(root),\n      links = d3.layout.tree().links(nodes);\n \n  // Restart the force layout.\n  force.nodes(nodes)\n        .links(links)\n        .gravity(0.05)\n    .charge(-1500)\n    .linkDistance(100)\n    .friction(0.5)\n    .linkStrength(function(l, i) {return 1; })\n    .size([w, h])\n    .on(\"tick\", tick)\n        .start();\n \n   var path = vis.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n \n    path.enter().insert(\"svg:path\")\n      .attr(\"class\", \"link\")\n      // .attr(\"marker-end\", \"url(#end)\")\n      .style(\"stroke\", \"#eee\");\n \n \n  // Exit any old paths.\n  path.exit().remove();\n \n \n \n  // Update the nodes\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id; });\n \n \n  // Enter any new nodes.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .on(\"click\", click)\n      .call(force.drag);\n \n  // Append a circle\n  nodeEnter.append(\"svg:circle\")\n      .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 4.5; })\n      .style(\"fill\", \"#eee\");\n \n   \n  // Append images\n  var images = nodeEnter.append(\"svg:image\")\n        .attr(\"xlink:href\",  function(d) { return d.img;})\n        .attr(\"x\", function(d) { return -25;})\n        .attr(\"y\", function(d) { return -25;})\n        .attr(\"height\", 50)\n        .attr(\"width\", 50);\n  \n  // make the image grow a little on mouse over and add the text details on click\n  var setEvents = images\n          // Append hero text\n          .on( 'click', function (d) {\n              d3.select(\"h1\").html(d.hero); \n              d3.select(\"h2\").html(d.name); \n              d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \"+ \"</a>\" ); \n           })\n\n          .on( 'mouseenter', function() {\n            // select element in current context\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -60;})\n              .attr(\"y\", function(d) { return -60;})\n              .attr(\"height\", 100)\n              .attr(\"width\", 100);\n          })\n          // set back\n          .on( 'mouseleave', function() {\n            d3.select( this )\n              .transition()\n              .attr(\"x\", function(d) { return -25;})\n              .attr(\"y\", function(d) { return -25;})\n              .attr(\"height\", 50)\n              .attr(\"width\", 50);\n          });\n\n  // Append hero name on roll over next to the node as well\n  nodeEnter.append(\"text\")\n      .attr(\"class\", \"nodetext\")\n      .attr(\"x\", x_browser)\n      .attr(\"y\", y_browser +15)\n      .attr(\"fill\", tcBlack)\n      .text(function(d) { return d.hero; });\n \n \n  // Exit any old nodes.\n  node.exit().remove();\n \n \n  // Re-select for update.\n  path = vis.selectAll(\"path.link\");\n  node = vis.selectAll(\"g.node\");\n \nfunction tick() {\n \n \n    path.attr(\"d\", function(d) {\n \n     var dx = d.target.x - d.source.x,\n           dy = d.target.y - d.source.y,\n           dr = Math.sqrt(dx * dx + dy * dy);\n           return   \"M\" + d.source.x + \",\" \n            + d.source.y \n            + \"A\" + dr + \",\" \n            + dr + \" 0 0,1 \" \n            + d.target.x + \",\" \n            + d.target.y;\n  });\n    node.attr(\"transform\", nodeTransform);    \n  }\n}\n\n \n/**\n * Gives the coordinates of the border for keeping the nodes inside a frame\n * http://bl.ocks.org/mbostock/1129492\n */ \nfunction nodeTransform(d) {\n  d.x =  Math.max(maxNodeSize, Math.min(w - (d.imgwidth/2 || 16), d.x));\n    d.y =  Math.max(maxNodeSize, Math.min(h - (d.imgheight/2 || 16), d.y));\n    return \"translate(\" + d.x + \",\" + d.y + \")\";\n   }\n \n/**\n * Toggle children on click.\n */ \nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n \n  update();\n}\n \n \n/**\n * Returns a list of all nodes under the root.\n */ \nfunction flatten(root) {\n  var nodes = []; \n  var i = 0;\n \n  function recurse(node) {\n    if (node.children) \n      node.children.forEach(recurse);\n    if (!node.id) \n      node.id = ++i;\n    nodes.push(node);\n  }\n \n  recurse(root);\n  return nodes;\n} \n  \n  \n</script>", "description": "d3 | Force layout with images", "created_at": "2016-10-08T01:58:37Z", "updated_at": "2016-10-08T01:58:37Z", "api": ["d3.layout.force", "d3.select", "d3.json", "d3.layout.tree"], "readme": "Force layout test/experiment with images\n\nSources:\n- [Force Layout](https://github.com/mbostock/d3/wiki/Force-Layout)\n- [Force-based label placement](http://bl.ocks.org/MoritzStefaner/1377729)\n- [Collapsible force layout with directed paths and images/text in the nodes.](http://bl.ocks.org/djjupa/5653692)\n- [Labeled Force Layout](http://bl.ocks.org/mbostock/950642)\n\n\nforked from <a href='http://bl.ocks.org/eesur/'>eesur</a>'s block: <a href='http://bl.ocks.org/eesur/be2abfb3155a38be4de4'>d3 | Force layout with images</a>", "uid": "Thanaporn-sk_9e4b66a26b9ffb649511ba89ac71ead7"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data (using the timelyportfolio csv method)\nd3.csv(\"sankey.csv\", function(error, data) {\n\n  //set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n    data.forEach(function (d) {\n      graph.nodes.push({ \"name\": d.source });\n      graph.nodes.push({ \"name\": d.target });\n      graph.links.push({ \"source\": d.source,\n                         \"target\": d.target,\n                         \"value\": +d.value });\n     });\n\n     // return only the distinct / unique nodes\n     graph.nodes = d3.keys(d3.nest()\n       .key(function (d) { return d.name; })\n       .map(graph.nodes));\n\n     // loop through each link replacing the text with its index from node\n     graph.links.forEach(function (d, i) {\n       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n     });\n\n     //now loop through each nodes to make nodes an array of objects\n     // rather than an array of strings\n     graph.nodes.forEach(function (d, i) {\n       graph.nodes[i] = { \"name\": d };\n     });\n\n  sankey\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey from csv with d3.js", "created_at": "2016-10-07T07:16:15Z", "updated_at": "2016-10-07T07:16:15Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min"], "readme": "This is a sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks). It is based on a [simpler version here](http://bl.ocks.org/d3noob/c2637e28b79fb3bfea13).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external csv data that is formatted using just link data and named values. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/c9b90689c1438f57d649'>Sankey from csv with d3.js</a>\n\nforked from <a href='http://bl.ocks.org/rschuman/'>rschuman</a>'s block: <a href='http://bl.ocks.org/rschuman/916d1e5469e5d4729d4547ebf4dad8b1'>Sankey from csv with d3.js</a>", "uid": "rschuman_354103739605441177d7a0c3f5047222"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data (using the timelyportfolio csv method)\nd3.csv(\"sankey.csv\", function(error, data) {\n\n  //set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n    data.forEach(function (d) {\n      graph.nodes.push({ \"name\": d.source });\n      graph.nodes.push({ \"name\": d.target });\n      graph.links.push({ \"source\": d.source,\n                         \"target\": d.target,\n                         \"value\": +d.value });\n     });\n\n     // return only the distinct / unique nodes\n     graph.nodes = d3.keys(d3.nest()\n       .key(function (d) { return d.name; })\n       .map(graph.nodes));\n\n     // loop through each link replacing the text with its index from node\n     graph.links.forEach(function (d, i) {\n       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n     });\n\n     //now loop through each nodes to make nodes an array of objects\n     // rather than an array of strings\n     graph.nodes.forEach(function (d, i) {\n       graph.nodes[i] = { \"name\": d };\n     });\n\n  sankey\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey from csv with d3.js", "created_at": "2016-10-07T07:01:44Z", "updated_at": "2016-10-07T07:08:52Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.csv", "d3.keys", "d3.nest", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min"], "readme": "This is a sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks). It is based on a [simpler version here](http://bl.ocks.org/d3noob/c2637e28b79fb3bfea13).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external csv data that is formatted using just link data and named values. It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/c9b90689c1438f57d649'>Sankey from csv with d3.js</a>", "uid": "rschuman_916d1e5469e5d4729d4547ebf4dad8b1"}, {"code": "<script>\n    //placeholder div for jquery slider\n            d3.select(\"body\").append(\"div\").attr(\"id\",\"sliderDiv\");\n            \n            //create svg element\n            var svgDoc = d3.select(\"body\").append(\"svg\").attr(\"viewBox\",\"0 0 100 100\");\n    var gun = \"\";\n            \n             //define an icon store it in svg <defs> elements as a reusable component - this geometry can be generated from Inkscape, Illustrator or similar\n            svgDoc.append(\"defs\")\n                .append(\"g\")\n                .attr(\"id\",\"iconCustom\")\n                .append(\"path\")\n//             \t\t.attr(\"fill\", \"#f2f2f2\")\n//                 .attr(\"stroke\", \"#b7b7b7\")\n//                 .attr(\"stroke-width\", \"0.5px\")\n            \t\t.attr(\"d\", \"M-12.7846821,-55.8284296 L-0.977060394,-55.8134372 L-0.994476539,-56 L4.84404562,-55.7864004 C4.84404562,-55.7864004 5.13403758,-55.6881496 5.266234,-55.5862771 C5.39843042,-55.4844045 5.49255637,-55.1882204 5.49255637,-55.1882204 C5.49255637,-55.1882204 5.58922036,-55.171754 5.77602821,-55.171754 C5.96283607,-55.171754 6.17646829,-55.3369652 6.17646829,-55.3369652 C6.17646829,-55.3369652 6.23497428,-55.3803 6.39837099,-55.276027 C6.56176769,-55.171754 6.41399301,-54.9184413 6.41399301,-54.9184413 C6.41399301,-54.9184413 5.97504487,-54.400656 5.97504487,-53.9687821 C5.97504487,-53.5369083 6.02147334,-53.4079147 6.21773317,-53.2389132 C6.41399301,-53.0699118 7.06788613,-53.0253557 7.06788613,-53.0253557 C7.06788613,-53.0253557 7.58061221,-52.9079433 7.7780973,-52.8070394 C7.97558239,-52.7061354 8,-52.6207293 8,-52.5461042 C8,-52.4714791 7.96634921,-52.3926426 7.81419861,-52.3480444 C7.66204801,-52.3034463 6.37771666,-52.3151959 6.37771666,-52.3151959 C6.37771666,-52.3151959 5.62497159,-52.2278525 5.44560279,-52.014295 C5.266234,-51.8007375 5.15731745,-51.754539 5.087084,-51.3156322 C5.01685055,-50.8767254 5.08270808,-50.7119774 5.08270808,-50.7119774 L4.92320594,-50.7110088 L6.23322392,-47.3607122 C6.23322392,-47.3607122 6.61664168,-46.8156794 6.61664168,-46.1970322 C6.61664168,-45.5783851 6.28354695,-45.2591648 6.28354695,-45.2591648 L5.34084722,-45.2591648 L5.34084722,-45.0002089 L0.980811689,-45.0002089 C0.980811689,-45.0002089 0.888173801,-44.9909019 0.888173801,-45.0965225 C0.888173801,-45.2021431 1.03494202,-45.2998043 1.03494202,-45.2998043 C1.03494202,-45.2998043 0.912985244,-45.4772706 1.06465449,-45.750924 C1.21632374,-46.0245775 1.35390254,-46.1710482 1.35390254,-46.3503253 C1.35390254,-46.5296025 0.745693976,-49.4587221 0.745693976,-49.4587221 C0.745693976,-49.4587221 0.727140092,-49.6840714 0.593980968,-49.8938808 C0.460821844,-50.1036902 -0.11771801,-50.0473423 -0.11771801,-50.0473423 C-0.11771801,-50.0473423 -2.91756034,-50.0378668 -2.99851479,-50.3388098 C-3.07946924,-50.6397528 -2.85796037,-50.993464 -3.04183636,-51.5525206 C-3.22571235,-52.1115772 -3.41860273,-52.8269591 -4.87070669,-52.8269591 L-11.9475293,-52.8269591 C-11.9475293,-52.8269591 -12.0941625,-52.7744014 -12.2268403,-53.0066573 C-12.3595181,-53.2389132 -12.9623442,-54.6524946 -12.9623442,-54.6524946 C-12.9623442,-54.6524946 -13.0427298,-55.1341887 -12.9686018,-55.3877541 C-12.8944738,-55.6413194 -12.7846821,-55.8284296 -12.7846821,-55.8284296 Z\");\n        \n            \n            //background rectangle\n            svgDoc.append(\"rect\").attr(\"width\",100).attr(\"height\",100);\n            \n            //specify the number of columns and rows for pictogram layout\n            var numCols = 4;\n            var numRows = 6;\n            \n            //padding for the grid\n            var xPadding = 14;\n            var yPadding = 60;\n            \n            //horizontal and vertical spacing between the icons\n            var hBuffer = 15;\n            var wBuffer = 26;\n            \n            //generate a d3 range for the total number of required elements\n            var myIndex=d3.range(numCols*numRows);\n            \n            //text element to display number of icons highlighted\n            svgDoc.append(\"text\")\n                .attr(\"id\",\"txtValue\")\n                .attr(\"x\",xPadding)\n                .attr(\"y\",yPadding)\n                .attr(\"dy\",-3)\n                .text(\"0\");\n \n            //create group element and create an svg <use> element for each icon\n            svgDoc.append(\"g\")\n                .attr(\"id\",\"pictoLayer\")\n                .selectAll(\"use\")\n                .data(myIndex)\n                .enter()\n                .append(\"use\")\n                    .attr(\"xlink:href\",\"#iconCustom\")\n                    .attr(\"id\",function(d)    {\n                        return \"icon\"+d;\n                    })\n                    .attr(\"x\",function(d) {\n                        var remainder=d % numCols;//calculates the x position (column number) using modulus\n                        return xPadding+(remainder*wBuffer);//apply the buffer and return value\n                    })\n                      .attr(\"y\",function(d) {\n                        var whole=Math.floor(d/numCols)//calculates the y position (row number)\n                        return yPadding+(whole*hBuffer);//apply the buffer and return the value\n                    })\n                    .classed(\"iconPlain\",true);\n \n            //create a jquery slider to control the pictogram         \n             $( \"#sliderDiv\" ).slider({\n                  orientation: \"horizontal\",\n                  min: 0,\n                  max: numCols*numRows,\n                  value: 0,\n                  slide: function( event, ui ) {\n                    d3.select(\"#txtValue\").text(ui.value);\n                    d3.selectAll(\"use\").attr(\"class\",function(d,i){\n                       if (d<ui.value)  {\n                           return \"iconSelected\";\n                       }    else    {\n                           return \"iconPlain\";\n                       }\n                    });\n                  }\n             });\n\n  </script>", "description": "fresh block", "created_at": "2016-10-07T02:52:48Z", "updated_at": "2016-10-07T03:36:39Z", "api": ["d3.select", "d3.range", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jermspeaks_25f4772e1b65b5d12997c351ffa491ea"}, {"code": "<script>\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t//////////////////////// Set-Up ////////////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar margin = {top: 100, right: 100, bottom: 100, left: 100},\n\t\t\t\twidth = Math.min(700, window.innerWidth - 10) - margin.left - margin.right,\n\t\t\t\theight = Math.min(width, window.innerHeight - margin.top - margin.bottom - 20);\n\t\t\t\t\t\n\t\t\t////////////////////////////////////////////////////////////// \n\t\t\t//////////////////// Draw the Chart ////////////////////////// \n\t\t\t////////////////////////////////////////////////////////////// \n\n\t\t\tvar color = d3.scale.ordinal()\n\t\t\t\t.range([\"#EDC951\",\"#CC333F\",\"#00A0B0\"]);\n\t\t\t\t\n\t\t\tvar radarChartOptions = {\n\t\t\t  w: width,\n\t\t\t  h: height,\n\t\t\t  margin: margin,\n\t\t\t  maxValue: 1,\n\t\t\t  wrapWidth: 135,\n\t\t\t  levels: 5,\n\t\t\t  roundStrokes: true,\n\t\t\t  color: color,\n\t\t\t  axisName: \"statement\",\n\t\t\t  value: \"percentCorrect\"\n\t\t\t};\n\n      \n      function transformResponse(response){\n  \t\t\tconst timeFormat = d3.time.format('%Y-%m-%d');\n  \t\t\tconst event = timeFormat.parse(response[0].event);\n  \t\t\tconst values = response[0].image;\n  \t\t\tconst slug = response[0].slug;\n\n  \t\t\tevent.setDate(event.getDate() - 1);\n\n        const series = values.map((d) => (\n          {\n            date: new Date(event.setDate(event.getDate() + 1)),\n            value: +d[0][0]\n          }));\n\n        return {\n          name: slug.split('_')[2],\n          values: series,\n        };\n      }\n\n\t\t\t//Load the data and Call function to draw the Radar chart\n\t\t\td3.json(\"http://api.cal-adapt.org/api/series/tasmax_day_HadGEM2-ES_rcp45/rasters/?g=%7B%27type%27%3A%27Point%27%2C%27coordinates%27%3A%5B-121.46%2C38.58%5D%7D&format=json\", function(error, response){\n        var data = transformResponse(response.results);\n        console.log(data);\n\t\t\t\t//RadarChart(\".radarChart\", data, radarChartOptions);\n\t\t\t});\n      \n\t\t\t\n\t\t</script>", "description": "radar chart with smallest area on top", "created_at": "2016-10-07T02:13:52Z", "updated_at": "2016-10-07T03:54:09Z", "api": ["d3.scale.ordinal", "d3.time.format", "d3.json", "d3.scale.category10", "d3.mean", "d3.max", "d3.format", "d3.scale.linear", "d3.select", "d3.range", "d3.svg.line.radial", "d3.selectAll"], "readme": "this version tries out `radarChart.js` with a new dataset and makes some improvements.\n\n\\+ parameter-ize the `axisName` and `value` fields:\n\n    var radarChartOptions = {\n      w: width,\n      h: height,\n      margin: margin,\n      maxValue: 1,\n      wrapWidth: 135,\n      levels: 5,\n      roundStrokes: true,\n      color: color,\n      axisName: \"statement\",\n      value: \"percentCorrect\"\n    };\n\n\\+ subtract `Math.PI/2` from `angleSlice*i` when drawing the radial axis lines so that they line up with the axis label text and the points (it seems this is only a problem your dataset has a number of elements that is not divisible by four)\n\n\\+ sort the data for the areas from largest to smallest by average value (an approximation of actual blob area) so that that the smallest area is drawn last and therefore appears on top\n\n    //Calculate the average value for each area\n    data.forEach(function(d){\n    \td[value + \"Average\"] = d3.mean(d.values, function(e){ return e[value] }); \n    })\n\n    //Sort\n    data = data.sort(function(a, b){\n    \tvar a = a[value + \"Average\"],\n    \t\t\tb = b[value + \"Average\"];\n    \treturn b - a;\n\t  })\n\nan iteration on the bl.ock [radar chart for nested data](http://bl.ocks.org/micahstubbs/44bb05aab218a40a4c12) by [@micahstubbs](http://bl.ocks.org/micahstubbs)\n\nand a further iteration on the bl.ock [Radar Chart Redesign](http://bl.ocks.org/nbremer/21746a9668ffdf6d8242) created by [@nbremer](http://bl.ocks.org/nbremer)\n\nthe data is a subset of [table 7-8: Correct answers to factual knowledge questions in physical and biological sciences, by country/region: Most recent year](http://www.nsf.gov/statistics/seind14/index.cfm/etc/tables.htm#chp7) from the US National Science Foundation\n\nforked from <a href='http://bl.ocks.org/micahstubbs/'>micahstubbs</a>'s block: <a href='http://bl.ocks.org/micahstubbs/465725cdc547c7cc8491'>radar chart with smallest area on top</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/5d4c1e750e44bdccabc2dd1454c4497f'>radar chart with smallest area on top</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/359ab69c2be255204dc2f056c1389df8'>radar chart with smallest area on top</a>", "uid": "mukhtyar_1104e58a0b17e1c2c11335d9260b4248"}, {"code": "<script>\n    var width = 960,\n        height = 470;\n\n    var stop = false;\n\n    var pointCount = 20000,\n        polygonCount = 100,\n        steps = 0;\n\n    var voronoi = d3.voronoi().extent([[0, 0],[width, height]]);\n    var colorScale = d3.scaleLinear().range([\"white\", \"green\", \"black\"])\n\n    var pointCoords = randomPoints(pointCount),\n        voronoiPoints = randomPoints(polygonCount),\n        populations = [];\n\n    d3.select(\"#specs\").html(\"  \" + d3.format(\",\")(pointCount) + \" points, \" + polygonCount + \" polygons\")\n    d3.select(\"#average\").html(\" - Average: \" + pointCount/polygonCount)\n\n    var svg = d3.select(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n\n    var points = svg.selectAll(\"circle\")\n        .data(pointCoords)\n      .enter().append(\"circle\")\n        .attr(\"r\", 1)\n        .attr(\"cx\", function(d) {return d[0]})\n        .attr(\"cy\", function(d) {return d[1]})\n\n    var polygons = svg.selectAll(\"polygon\")\n        .data(voronoi(voronoiPoints).polygons())\n      .enter().append(\"polygon\")\n        .attr(\"points\", function(d) {return d})\n\n    var centroids = svg.selectAll(\"text\")\n        .data(voronoiPoints)\n      .enter().append(\"text\")\n        .attr(\"x\", function(d) {return d[0]})\n        .attr(\"y\", function(d) {return d[1]})\n        .attr(\"text-anchor\", \"middle\")\n\n    voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n    pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n    d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n    var extent = d3.extent(populations, function(d) {return d.length});\n    colorScale.domain([extent[0],pointCount/polygonCount,extent[1]])\n\n    centroids.html(function(d, i) {return populations[i].length})\n    polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n\n    function start(){\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n      \tgroupPoints();\n\n        var stopVal = 0;\n        for (i=0; i<voronoiPoints.length; i++) {\n            var newPoint = getNewCenter(i)\n            stopVal += (voronoiPoints[i][0] == newPoint[0] && voronoiPoints[i][1] == newPoint[1]) ? 1 : 0;\n            voronoiPoints[i] = newPoint;\n            if (stopVal == voronoiPoints.length) {stop = true};\n        }\n\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n        d3.select(\"#steps\").html(\" - Steps: \" + ++steps)\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        d3.timeout(start, 50);\n    }\n\n    function groupPoints() {        \n        voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n        pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n        d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n        centroids.html(function(d, i) {return populations[i].length})\n\n        polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n    }\n\n\n    function getNewCenter(n) {\n        var centerX = d3.sum(populations[n], function(d) {return d[0]})/populations[n].length;\n        var centerY = d3.sum(populations[n], function(d) {return d[1]})/populations[n].length;\n        return [centerX, centerY];\n    }\n\n    function randomPoints(count) {\n        return d3.range(count)\n            .map(function() {\n          var angle = Math.random() * 2 * Math.PI,\n              r = Math.random();\n          return [r * Math.sin(angle) * width/2 + width/2, r * Math.cos(angle)  * height/2 + height/2];})    \n    }\n\n    function findClosest(coords) {      \n        var closestDist = Infinity,\n            closestPoint;\n\n        for (i=0; i<voronoiPoints.length; i++) {\n            var thisDist = calcDistance(coords, voronoiPoints[i]);\n            if (thisDist < closestDist) {\n                closestDist = thisDist;\n                closestPoint = i;\n            }\n        }\n\n        function calcDistance(coord1, coord2) {\n            var distX = coord2[0] - coord1[0];\n            var distY = coord2[1] - coord1[1];\n            return Math.sqrt(distX * distX + distY * distY);\n        }\n\n        return closestPoint\n    }\n\n    function redraw() {\n        voronoiPoints = randomPoints(polygonCount);\n        steps = 0;\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        d3.select(\"#steps\").html(\" - Iteration: \" + steps)\n\n        groupPoints();\n    }\n</script>", "description": "K-Means Voronoi Relaxation [UNLISTED]", "created_at": "2016-10-06T10:36:32Z", "updated_at": "2016-10-06T10:38:00Z", "api": ["d3.voronoi", "d3.scaleLinear", "d3.select", "d3.format", "d3.deviation", "d3.extent", "d3.timeout", "d3.sum", "d3.range"], "readme": "This is an experiment in moving and shaping voronoi polygons to normalize the dispersion of points. The idea arose while <a href=\"http://bl.ocks.org/alexmacy/6272668a45ce0f8a1fed7880814bc21e\" target=\"_blank\">mapping emergency calls logged by the San Francisco Fire Department</a>, and was also inspired by Noah Veltman's <a href=\"http://bl.ocks.org/veltman/3d1fb70e6993d4eb2eff7112c9e7bcf4\" target=\"_blank\">Voronoi relaxation</a>.\n\n\nTo do this, I kind of combined aspects of <a href=\"//en.wikipedia.org/wiki/Lloyd%27s_algorithm\" target=\"_blank\">Lloyd's algorithm</a> and <a href=\"https://en.wikipedia.org/wiki/K-means_clustering\" target=\"_blank\">k-means clustering</a>.\n\nforked from <a href='http://bl.ocks.org/alexmacy/'>alexmacy</a>'s block: <a href='http://bl.ocks.org/alexmacy/3986db72dc4b81db8e788dd837ee6e3b'>K-Means Voronoi Relaxation</a>", "uid": "Fil_8a0d9f3c727608e236d65e7bc50dd015"}, {"code": "<script>\n    var width = 960,\n        height = 470;\n\n    var stop = false;\n\n    var pointCount = 20000,\n        polygonCount = 100,\n        steps = 0;\n\n    var voronoi = d3.voronoi().extent([[0, 0],[width, height]]);\n    var colorScale = d3.scaleLinear().range([\"white\", \"green\", \"black\"])\n\n    var pointCoords = randomPoints(pointCount),\n        voronoiPoints = randomPoints(polygonCount),\n        populations = [];\n\n    d3.select(\"#specs\").html(\"  \" + d3.format(\",\")(pointCount) + \" points, \" + polygonCount + \" polygons\")\n    d3.select(\"#average\").html(\" - Average: \" + pointCount/polygonCount)\n\n    var svg = d3.select(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n\n    var points = svg.selectAll(\"circle\")\n        .data(pointCoords)\n      .enter().append(\"circle\")\n        .attr(\"r\", 1)\n        .attr(\"cx\", function(d) {return d[0]})\n        .attr(\"cy\", function(d) {return d[1]})\n\n    var polygons = svg.selectAll(\"polygon\")\n        .data(voronoi(voronoiPoints).polygons())\n      .enter().append(\"polygon\")\n        .attr(\"points\", function(d) {return d})\n\n    var centroids = svg.selectAll(\"text\")\n        .data(voronoiPoints)\n      .enter().append(\"text\")\n        .attr(\"x\", function(d) {return d[0]})\n        .attr(\"y\", function(d) {return d[1]})\n        .attr(\"text-anchor\", \"middle\")\n\n    voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n    pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n    d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n    var extent = d3.extent(populations, function(d) {return d.length});\n    colorScale.domain([extent[0],pointCount/polygonCount,extent[1]])\n\n    centroids.html(function(d, i) {return populations[i].length})\n    polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n\n    function start(){\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n      \tgroupPoints();\n\n        var stopVal = 0;\n        for (i=0; i<voronoiPoints.length; i++) {\n            var newPoint = getNewCenter(i)\n            stopVal += (voronoiPoints[i][0] == newPoint[0] && voronoiPoints[i][1] == newPoint[1]) ? 1 : 0;\n            voronoiPoints[i] = newPoint;\n            if (stopVal == voronoiPoints.length) {stop = true};\n        }\n\n        if (stop) {\n            console.log(\"stopping\")\n            return stop = false;\n        }\n\n        d3.select(\"#steps\").html(\" - Steps: \" + ++steps)\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        d3.timeout(start, 50);\n    }\n\n    function groupPoints() {        \n        voronoiPoints.forEach(function(d, i) {return populations[i] = [];})\n\n        pointCoords.forEach(function(d) {populations[findClosest(d)].push(d);})\n\n        d3.select(\"#deviation\").html(\" - Deviation: \" + d3.deviation(populations, function(d) {return d.length}).toFixed(2))\n\n        centroids.html(function(d, i) {return populations[i].length})\n\n        polygons.attr(\"fill\", function(d, i) {return colorScale(populations[i].length)})\n    }\n\n\n    function getNewCenter(n) {\n        var centerX = d3.sum(populations[n], function(d) {return d[0]})/populations[n].length;\n        var centerY = d3.sum(populations[n], function(d) {return d[1]})/populations[n].length;\n        return [centerX, centerY];\n    }\n\n    function randomPoints(count) {\n        return d3.range(count)\n            .map(function() {return [Math.random() * width, Math.random() * height];})    \n    }\n\n    function findClosest(coords) {      \n        var closestDist = Infinity,\n            closestPoint;\n\n        for (i=0; i<voronoiPoints.length; i++) {\n            var thisDist = calcDistance(coords, voronoiPoints[i]);\n            if (thisDist < closestDist) {\n                closestDist = thisDist;\n                closestPoint = i;\n            }\n        }\n\n        function calcDistance(coord1, coord2) {\n            var distX = coord2[0] - coord1[0];\n            var distY = coord2[1] - coord1[1];\n            return Math.sqrt(distX * distX + distY * distY);\n        }\n\n        return closestPoint\n    }\n\n    function redraw() {\n        voronoiPoints = randomPoints(polygonCount);\n        steps = 0;\n\n        polygons.data(voronoi(voronoiPoints).polygons())\n            .attr(\"points\", function(d) {return d})\n\n        centroids.data(voronoiPoints)\n            .attr(\"x\", function(d) {return d[0]})\n            .attr(\"y\", function(d) {return d[1]})\n\n        d3.select(\"#steps\").html(\" - Iteration: \" + steps)\n\n        groupPoints();\n    }\n</script>", "description": "K-Means Voronoi Relaxation", "created_at": "2016-10-06T04:31:39Z", "updated_at": "2016-10-07T02:28:11Z", "api": ["d3.voronoi", "d3.scaleLinear", "d3.select", "d3.format", "d3.deviation", "d3.extent", "d3.timeout", "d3.sum", "d3.range"], "readme": "This is an experiment in moving and shaping voronoi polygons to normalize the dispersion of points. The idea arose while <a href=\"http://bl.ocks.org/alexmacy/6272668a45ce0f8a1fed7880814bc21e\" target=\"_blank\">mapping emergency calls logged by the San Francisco Fire Department</a>, and was also inspired by Noah Veltman's <a href=\"http://bl.ocks.org/veltman/3d1fb70e6993d4eb2eff7112c9e7bcf4\" target=\"_blank\">Voronoi relaxation</a>.\n\n\nTo do this, I kind of combined aspects of <a href=\"//en.wikipedia.org/wiki/Lloyd%27s_algorithm\" target=\"_blank\">Lloyd's algorithm</a> and <a href=\"https://en.wikipedia.org/wiki/K-means_clustering\" target=\"_blank\">k-means clustering</a>.", "uid": "alexmacy_3986db72dc4b81db8e788dd837ee6e3b"}, {"code": "<script>\n      var jsondata = [\n        {\n          \"dayWise\":[\n            { \"currenttime\": \"2015-01-29\", \"avgresptime\": 272.20001220703125}, \n            { \"currenttime\": \"2015-01-30\", \"avgresptime\": 177},\n            { \"currenttime\": \"2015-01-31\", \"avgresptime\": 34}\n          ]\n        }\n      ];\n\n      var format = d3.time.format(\"%Y-%m-%d\");\n      \n      var data = jsondata[0].dayWise.map(function (d){\n        d.date = format.parse(d.currenttime);\n        return d;\n      })\n\n      var margin = {top: 9, right: 31, bottom: 38, left: 36},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n      var x = d3.time.scale()\n        .range([0, width]);\n      \n      var y = d3.scale.linear()\n        .range([height, 0]);\n\n      var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\");\n\n      var yAxis = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\");\n\n      var line = d3.svg.line()\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.avgresptime); })\n\n      var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      x.domain(d3.extent(data, function(d) { return d.date; }));\n      y.domain(d3.extent(data, function(d) {return d.avgresptime; }));\n\n      svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n      svg.append(\"g\")\n        \t.attr(\"class\", \"y axis\")\n        \t.call(yAxis)\n        .append(\"text\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", 6)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(\"avgresptime\");\n\n      svg.append(\"path\")\n          .datum(data)\n          .attr(\"class\", \"line\")\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \"blue\")\n          .attr(\"d\", line);\n    </script>", "description": "[Unlisted] Line Chart Example", "created_at": "2016-10-05T05:16:19Z", "updated_at": "2016-10-09T14:38:29Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.extent"], "readme": "This example fixes broken code originally written by Tejashwini S., posted to the D3 mailing list - [constructing line graph in d3.js](https://groups.google.com/forum/#!topic/d3-js/pOJgXVLrvp4).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "curran_66449dd909dfff72f6b1820e9558444c"}, {"code": "<script>\n    \n  var margin = {top: 20, right: 20, bottom: 30, left: 50},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n  function compute(params) {\n\t  var Zc = params.Zc, // control depth (cm)\n        Zw = params.Zw, // weir depth (cm)\n        W = params.W,     // mean cell width = area / flow path length (km)\n        a = params.a,     // empirical\n        b = params.b,     // empirical\n      pump_capacity = params.pump_capacity;\n\n  var Z_arr = d3.range(0, 100, 1);\n\n  var Q_arr = Z_arr.map(function (Z) {\n    var Q = W * a * Math.pow((Z - Zw), b);\n    //   console.log(Z, Q)\n      return Z < Zc && Z < Zw ? 0 :\n      Q > pump_capacity ? pump_capacity : Q;\n    });\n\n    return d3.zip(Z_arr, Q_arr);\n  }\n\n  var data = compute({Zc: 40, Zw: 40, W: 1, a: 1, b: 1.5, pump_capacity: 100});\n\n  var x = d3.scaleLinear()\n\t  .domain([0, 100])\n    .range([0]);\n\n  var y = d3.scaleLinear()\n    .domain([0, 110])\n    .range([height, 0]);\n\n  var line = d3.line()\n    .x(function(d) { return x(d[0]); })\n    .y(function(d) { return y(d[1]); });\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n  x.domain(d3.extent(data, function(d) { return d[0]; }));\n  y.domain(d3.extent(data, function(d) { return d[1]; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"class\", \"axis-title\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Q\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n</script>", "description": "fresh block", "created_at": "2016-10-05T01:43:35Z", "updated_at": "2016-10-05T01:44:13Z", "api": ["d3.range", "d3.zip", "d3.scaleLinear", "d3.line", "d3.select", "d3.extent", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "walkerjeffd_f106208f55304c0b18d7bbe68a18a591"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree Example by john guerra", "created_at": "2016-10-04T23:30:55Z", "updated_at": "2016-10-04T23:31:06Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/32be58cf91f613d45c687095bad39432'>Collapsible Tree</a>", "uid": "jcamilort_1af13c226335fe8547c8d89cbd69097b"}, {"code": "<script>\n\nvar width = 960,\n    height = 506;\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleOrdinal()\n    .range(d3.schemeCategory10\n        .map(function(c) { c = d3.rgb(c); c.opacity = 0.6; return c; }));\n  \nvar dstring = `id,value\nflare,\nflare.1998,\nflare.1998.gc,\nflare.1998.gc.F22345,80000\nflare.1998.gc.D000000424,80000\nflare.1998.gc.F22560,0\nflare.1998.gr,\nflare.1998.gr.D000000082,2330000\nflare.1998.gr.D000026353,1150000\nflare.1998.gr.D000048692,698393\nflare.1998.gr.F16181,200000\nflare.1998.gr.D000000757,100000\nflare.1998.gr.F15297,20000\nflare.1999,\nflare.1999.gc,\nflare.1999.gc.D000000424,720000\nflare.1999.gc.F22345,80000\nflare.1999.gc.F11667,40000\nflare.1999.gc.F22560,0\nflare.1999.gr,\nflare.1999.gr.D000026353,3040000\nflare.1999.gr.D000000082,1680000\nflare.1999.gr.D000048692,808396\nflare.1999.gr.D000000757,180000\nflare.1999.gr.F16181,123570\nflare.1999.gr.D000054336,60000\nflare.2000,\nflare.2000.gc,\nflare.2000.gc.D000000424,340000\nflare.2000.gc.F22345,80000\nflare.2000.gc.F8317,20000\nflare.2000.gc.F22560,0\nflare.2000.gr,\nflare.2000.gr.D000026353,4150000\nflare.2000.gr.D000000082,1230000\nflare.2000.gr.D000048692,1020758\nflare.2000.gr.D000000757,190000\nflare.2000.gr.D000054336,100000\nflare.2000.gr.F22300,20000\nflare.2001,\nflare.2001.gc,\nflare.2001.gc.F8317,1869618\nflare.2001.gc.D000024445,180000\nflare.2001.gc.F22345,40000\nflare.2001.gc.F22560,24081\nflare.2001.gr,\nflare.2001.gr.D000026353,3491228\nflare.2001.gr.D000000082,1555000\nflare.2001.gr.D000048692,969933\nflare.2001.gr.D000054336,120000\nflare.2001.gr.D000000757,100000\nflare.2001.gr.F22300,0\nflare.2002,\nflare.2002.gc,\nflare.2002.gc.F8317,1395526\nflare.2002.gc.D000024445,320000\nflare.2002.gc.F22345,100000\nflare.2002.gc.F22560,26528\nflare.2002.gc.D000048421,0\nflare.2002.gr,\nflare.2002.gr.D000026353,3100000\nflare.2002.gr.D000000082,1500000\nflare.2002.gr.D000048692,804546\nflare.2002.gr.D000000757,160000\nflare.2002.gr.D000054336,120000\nflare.2003,\nflare.2003.gc,\nflare.2003.gc.F8317,689791\nflare.2003.gc.D000024445,160000\nflare.2003.gc.F22560,91874\nflare.2003.gc.F22345,80000\nflare.2003.gc.D000048421,0\nflare.2003.gr,\nflare.2003.gr.D000026353,1640000\nflare.2003.gr.D000000082,1610000\nflare.2003.gr.D000048692,803326\nflare.2003.gr.D000054336,120000\nflare.2003.gr.D000000757,110000\nflare.2004,\nflare.2004.gc,\nflare.2004.gc.D000024445,960000\nflare.2004.gc.F8317,275400\nflare.2004.gc.F22345,80000\nflare.2004.gc.F22560,36946\nflare.2004.gc.D000048421,0\nflare.2004.gr,\nflare.2004.gr.D000026353,1753290\nflare.2004.gr.D000000082,1635000\nflare.2004.gr.D000048692,634110\nflare.2004.gr.D000000757,200000\nflare.2004.gr.D000054336,120000\nflare.2005,\nflare.2005.gc,\nflare.2005.gc.D000024445,190000\nflare.2005.gc.F22345,40000\nflare.2005.gc.F22560,0\nflare.2005.gc.D000048421,0\nflare.2005.gr,\nflare.2005.gr.D000000082,1790000\nflare.2005.gr.D000026353,1306414\nflare.2005.gr.D000048692,654173\nflare.2005.gr.D000000757,200000\nflare.2005.gr.D000054336,120000\nflare.2006,\nflare.2006.gc,\nflare.2006.gc.D000024445,90100\nflare.2006.gc.D000048421,0\nflare.2006.gc.F22345,0\nflare.2006.gc.F22560,0\nflare.2006.gc.F8317,0\nflare.2006.gr,\nflare.2006.gr.D000000082,1620000\nflare.2006.gr.D000048692,643961\nflare.2006.gr.D000026353,600270\nflare.2006.gr.D000000757,200000\nflare.2006.gr.D000054336,120000\nflare.2007,\nflare.2007.gc,\nflare.2007.gc.D000024445,135800\nflare.2007.gc.D000027471,60000\nflare.2007.gc.F22560,12574\nflare.2007.gc.D000048421,0\nflare.2007.gc.F22345,0\nflare.2007.gr,\nflare.2007.gr.D000000082,1815000\nflare.2007.gr.D000026353,1159880\nflare.2007.gr.D000048692,647362\nflare.2007.gr.D000000757,200000\nflare.2007.gr.D000054336,120000\nflare.2007.gr.D000047892,20000\nflare.2008,\nflare.2008.gc,\nflare.2008.gc.D000024445,75000\nflare.2008.gc.D000027471,40000\nflare.2008.gc.D000055282,35000\nflare.2008.gc.F22560,0\nflare.2008.gc.D000048421,0\nflare.2008.gc.F22345,0\nflare.2008.gr,\nflare.2008.gr.D000000082,1665000\nflare.2008.gr.D000026353,1158063\nflare.2008.gr.D000048692,845708\nflare.2008.gr.D000000757,230000\nflare.2008.gr.D000054336,120000\nflare.2008.gr.D000047892,80000\nflare.2008.gr.D000025229,30000\nflare.2009,\nflare.2009.gc,\nflare.2009.gc.D000027471,120000\nflare.2009.gc.D000024445,60000\nflare.2009.gc.D000055282,40000\nflare.2009.gc.D000048421,31425\nflare.2009.gc.F22345,0\nflare.2009.gc.F22560,0\nflare.2009.gr,\nflare.2009.gr.D000000082,2141000\nflare.2009.gr.D000026353,1405365\nflare.2009.gr.D000048692,1053505\nflare.2009.gr.D000054336,230000\nflare.2009.gr.D000000757,200000\nflare.2009.gr.D000047892,150000\nflare.2009.gr.D000025229,30000\nflare.2010,\nflare.2010.gc,\nflare.2010.gc.D000027471,210000\nflare.2010.gc.D000055282,40000\nflare.2010.gc.D000024445,40000\nflare.2010.gc.D000048421,0\nflare.2010.gc.F22345,0\nflare.2010.gc.F22560,0\nflare.2010.gr,\nflare.2010.gr.D000000082,2650000\nflare.2010.gr.D000026353,1664065\nflare.2010.gr.D000048692,723532\nflare.2010.gr.D000054336,455000\nflare.2010.gr.D000000757,200000\nflare.2010.gr.D000047892,115000\nflare.2010.gr.D000025229,40000\nflare.2011,\nflare.2011.gc,\nflare.2011.gc.D000027471,200000\nflare.2011.gc.D000024445,40000\nflare.2011.gc.D000055282,40000\nflare.2011.gc.F22345,0\nflare.2011.gc.D000048421,0\nflare.2011.gc.F22560,0\nflare.2011.gr,\nflare.2011.gr.D000000082,2905000\nflare.2011.gr.D000026353,1307996\nflare.2011.gr.D000048692,692655\nflare.2011.gr.D000054336,320000\nflare.2011.gr.D000000757,210000\nflare.2011.gr.D000047892,100000\nflare.2011.gr.D000025229,45000\nflare.2012,\nflare.2012.gc,\nflare.2012.gc.D000027471,200000\nflare.2012.gc.D000024445,40000\nflare.2012.gc.D000055282,10000\nflare.2012.gc.F22345,0\nflare.2012.gc.D000048421,0\nflare.2012.gc.F22560,0\nflare.2012.gr,\nflare.2012.gr.D000000082,2980000\nflare.2012.gr.D000026353,1299650\nflare.2012.gr.D000054336,810000\nflare.2012.gr.D000048692,580261\nflare.2012.gr.D000000757,330000\nflare.2012.gr.D000047892,70000\nflare.2012.gr.D000025229,60000\nflare.2013,\nflare.2013.gc,\nflare.2013.gc.D000027471,1700000\nflare.2013.gc.D000024445,250000\nflare.2013.gc.F9162,160000\nflare.2013.gc.F3989,65000\nflare.2013.gc.F22345,36865\nflare.2013.gc.F22560,5900\nflare.2013.gc.D000048421,0\nflare.2013.gc.D000055282,0\nflare.2013.gr,\nflare.2013.gr.D000062593,6760000\nflare.2013.gr.D000000082,3410000\nflare.2013.gr.D000054336,2470000\nflare.2013.gr.D000026353,1325238\nflare.2013.gr.D000048692,706814\nflare.2013.gr.D000000757,360000\nflare.2013.gr.F2322,110000\nflare.2013.gr.D000047892,75000\nflare.2013.gr.D000025229,75000\nflare.2014,\nflare.2014.gc,\nflare.2014.gc.D000067401,1770000\nflare.2014.gc.D000024445,108000\nflare.2014.gc.F22345,24396\nflare.2014.gc.F9162,20000\nflare.2014.gc.F3989,20000\nflare.2014.gc.F22560,0\nflare.2014.gr,\nflare.2014.gr.D000000082,3360000\nflare.2014.gr.D000062593,3080000\nflare.2014.gr.D000054336,3070000\nflare.2014.gr.D000026353,1451994\nflare.2014.gr.D000048692,501488\nflare.2014.gr.D000000757,390000\nflare.2014.gr.D000025229,80000\nflare.2014.gr.D000047892,80000\nflare.2015,\nflare.2015.gc,\nflare.2015.gc.D000067401,1420000\nflare.2015.gc.D000024445,152009\nflare.2015.gc.F3989,40000\nflare.2015.gc.F22345,36947\nflare.2015.gc.F9162,30000\nflare.2015.gc.F22560,0\nflare.2015.gr,\nflare.2015.gr.D000000082,3605564\nflare.2015.gr.D000054336,3520000\nflare.2015.gr.D000062593,1630000\nflare.2015.gr.D000026353,1445344\nflare.2015.gr.D000048692,530439\nflare.2015.gr.D000000757,475000\nflare.2015.gr.D000047892,120000\nflare.2015.gr.D000025229,80000\nflare.2016,\nflare.2016.gc,\nflare.2016.gc.D000067401,740000\nflare.2016.gc.D000024445,51300\nflare.2016.gc.F3989,50000\nflare.2016.gc.F9162,40000\nflare.2016.gc.F22560,0\nflare.2016.gc.F22345,0\nflare.2016.gr,\nflare.2016.gr.D000000082,1645000\nflare.2016.gr.D000054336,1640000\nflare.2016.gr.D000062593,1167487\nflare.2016.gr.D000026353,334919\nflare.2016.gr.D000000757,310000\nflare.2016.gr.D000048692,264698\nflare.2016.gr.D000047892,70000\nflare.2016.gr.D000025229,40000`;\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .padding(1)\n    .round(true);\n  \nvar data = d3.csvParse(dstring, function(d) {\n  return {\n    id: d.id, // lowercase\n    value: +d.value // lowercase\n  };\n});\n\nvar root = stratify(data)\n  .sum(function(d) { return d.value; })\n  //.sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\nconsole.log(\"root\");\nconsole.log(root.children[0]);\n  \ntreemap(root.children[0]);\n\nd3.select(\"body\")\n  .selectAll(\".node\")\n  .data(root.leaves())\n  .enter().append(\"div\")\n    .attr(\"class\", \"node\")\n    .attr(\"title\", function(d) { return d.id + \"\\n\" + format(d.value); })\n    .style(\"left\", function(d) { return d.x0 + \"px\"; })\n    .style(\"top\", function(d) { return d.y0 + \"px\"; })\n    .style(\"width\", function(d) { return d.x1 - d.x0 + \"px\"; })\n    .style(\"height\", function(d) { return d.y1 - d.y0 + \"px\"; })\n    .style(\"background\", function(d) { while (d.depth > 1) d = d.parent; return color(d.id); })\n  .append(\"div\")\n    .attr(\"class\", \"node-label\")\n    .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\n\"); })\n  .append(\"div\")\n    .attr(\"class\", \"node-value\")\n    .text(function(d) { return format(d.value); });\n\n\nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Tree Map", "created_at": "2016-10-04T21:05:52Z", "updated_at": "2016-10-04T22:40:25Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.rgb", "d3.stratify", "d3.treemap", "d3.csvParse", "d3.select"], "readme": "forked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6bbb0a7ff7686b124d80'>pack</a>\n", "uid": "LayneSmith_7c65581a759b5f4f301fdf27a3a2fa8b"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    size = Math.max(width, height);\n\nvar color = d3.scaleRainbow()\n    .domain([0, 2 * Math.PI]);\n\nvar circles = d3.packSiblings(d3.range(2000)\n    .map(d3.randomUniform(8, 26))\n    .map(function(r) { return {r: r}; }))\n  .filter(function(d) { return -500 < d.x && d.x < 500 && -500 < d.y && d.y < 500; });\n\nsvg\n  .select(\"g\")\n  .selectAll(\"circle\")\n  .data(circles)\n  .enter().append(\"circle\")\n    .style(\"fill\", function(d) { return color(d.angle = Math.atan2(d.y, d.x)); })\n    .attr(\"cx\", function(d) { return Math.cos(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"cy\", function(d) { return Math.sin(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"r\", function(d) { return d.r - 0.25; })\n  .transition()\n    .ease(d3.easeCubicOut)\n    .delay(function(d) { return Math.sqrt(d.x * d.x + d.y * d.y) * 8; })\n    .duration(1400)\n    .attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; });\n\n</script>", "description": "Rainbow Pack (adapted for d3.unconf badge)", "created_at": "2016-10-04T07:27:44Z", "updated_at": "2016-10-04T07:30:02Z", "api": ["d3.select", "d3.scaleRainbow", "d3.packSiblings", "d3.range", "d3.randomUniform"], "readme": "A quick test of [d3-hierarchy](https://github.com/d3/d3-hierarchy)\u2019s new circle-packing layout.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/b07f8ae91c5e9e45719c'>Rainbow Pack</a>\n\nforked from <a href='http://bl.ocks.org/kerryrodden/'>kerryrodden</a>'s block: <a href='http://bl.ocks.org/kerryrodden/1272d31a85475acdc059bafd2fb4e36b'>Rainbow Pack (adapted for d3.unconf badge)</a>", "uid": "enjalot_5fb88c1beadbb93a029cd3797d195c6f"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    size = Math.max(width, height);\n\nvar color = d3.scaleRainbow()\n    .domain([0, 2 * Math.PI]);\n\nvar circles = d3.packSiblings(d3.range(2000)\n    .map(d3.randomUniform(8, 26))\n    .map(function(r) { return {r: r}; }))\n  .filter(function(d) { return -500 < d.x && d.x < 500 && -500 < d.y && d.y < 500; });\n\nsvg\n  .select(\"g\")\n  .selectAll(\"rect\")\n  .data(circles)\n  .enter().append(\"rect\")\n    .style(\"fill\", function(d) { return color(d.angle = Math.atan2(d.y, d.x)); })\n    .attr(\"x\", function(d) { return d.r/2 + Math.cos(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"y\", function(d) { return d.r/2 + Math.sin(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"width\", function(d) { return d.r - 0.25; })\n    .attr(\"height\", function(d) { return d.r - 0.25; })\n  .transition()\n    .ease(d3.easeCubicOut)\n  .delay(function(d) { return Math.sqrt(d.x * d.x + d.y * d.y) * 5; })\n    .duration(1000)\n    .attr(\"x\", function(d) { return d.x; })\n    .attr(\"y\", function(d) { return d.y; });\n\n</script>", "description": "Rainbow Pack (adapted for d3.unconf badge)", "created_at": "2016-10-04T05:39:31Z", "updated_at": "2016-10-04T07:21:33Z", "api": ["d3.select", "d3.scaleRainbow", "d3.packSiblings", "d3.range", "d3.randomUniform"], "readme": "A quick test of [d3-hierarchy](https://github.com/d3/d3-hierarchy)\u2019s new circle-packing layout.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/b07f8ae91c5e9e45719c'>Rainbow Pack</a>\n\nforked from <a href='http://bl.ocks.org/kerryrodden/'>kerryrodden</a>'s block: <a href='http://bl.ocks.org/kerryrodden/1272d31a85475acdc059bafd2fb4e36b'>Rainbow Pack (adapted for d3.unconf badge)</a>", "uid": "enjalot_fe2bc0193873d4a1026e1bd15353878f"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    size = Math.max(width, height);\n\nvar color = d3.scaleRainbow()\n    .domain([0, 2 * Math.PI]);\n\nvar circles = d3.packSiblings(d3.range(2000)\n    .map(d3.randomUniform(8, 26))\n    .map(function(r) { return {r: r}; }))\n  .filter(function(d) { return -500 < d.x && d.x < 500 && -500 < d.y && d.y < 500; });\n\nsvg\n  .select(\"g\")\n  .selectAll(\"circle\")\n  .data(circles)\n  .enter().append(\"circle\")\n    .style(\"fill\", function(d) { return color(d.angle = Math.atan2(d.y, d.x)); })\n    .attr(\"cx\", function(d) { return Math.cos(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"cy\", function(d) { return Math.sin(d.angle) * (size / Math.SQRT2 + 30); })\n    .attr(\"r\", function(d) { return d.r - 0.25; })\n  .transition()\n    .ease(d3.easeCubicOut)\n    .delay(function(d) { return Math.sqrt(d.x * d.x + d.y * d.y) * 10; })\n    .duration(1000)\n    .attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; });\n\n</script>", "description": "Rainbow Pack (adapted for d3.unconf badge)", "created_at": "2016-10-04T04:57:09Z", "updated_at": "2016-10-04T05:26:32Z", "api": ["d3.select", "d3.scaleRainbow", "d3.packSiblings", "d3.range", "d3.randomUniform"], "readme": "A quick test of [d3-hierarchy](https://github.com/d3/d3-hierarchy)\u2019s new circle-packing layout.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/b07f8ae91c5e9e45719c'>Rainbow Pack</a>", "uid": "kerryrodden_1272d31a85475acdc059bafd2fb4e36b"}, {"code": "<script>\n!(function(){\n    \"use strict\"\n\n    var width,height\n    var chartWidth, chartHeight\n    var margin\n    var svg = d3.select(\"#graph\").append(\"svg\")\n    var chartLayer = svg.append(\"g\").classed(\"chartLayer\", true)\n    \n    main()\n    \n    function main() {\n        var range = 100\n        var data = {\n            nodes:d3.range(0, range).map(function(d){ return {label: \"l\"+d ,r:~~d3.randomUniform(8, 28)()}}),\n            links:d3.range(0, range).map(function(){ return {source:~~d3.randomUniform(range)(), target:~~d3.randomUniform(range)()} })        \n        }\n        \n        setSize(data)\n        drawChart(data)    \n    }\n    \n    function setSize(data) {\n        width = document.querySelector(\"#graph\").clientWidth\n        height = document.querySelector(\"#graph\").clientHeight\n    \n        margin = {top:0, left:0, bottom:0, right:0 }\n        \n        \n        chartWidth = width - (margin.left+margin.right)\n        chartHeight = height - (margin.top+margin.bottom)\n        \n        svg.attr(\"width\", width).attr(\"height\", height)\n        \n        \n        chartLayer\n            .attr(\"width\", chartWidth)\n            .attr(\"height\", chartHeight)\n            .attr(\"transform\", \"translate(\"+[margin.left, margin.top]+\")\")\n            \n            \n    }\n    \n    function drawChart(data) {\n        \n        var simulation = d3.forceSimulation()\n            .force(\"link\", d3.forceLink().id(function(d) { return d.index }))\n            .force(\"collide\",d3.forceCollide( function(d){return d.r + 8 }).iterations(16) )\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"center\", d3.forceCenter(chartWidth / 2, chartWidth / 2))\n            .force(\"y\", d3.forceY(0))\n            .force(\"x\", d3.forceX(0))\n    \n        var link = svg.append(\"g\")\n            .attr(\"class\", \"links\")\n            .selectAll(\"line\")\n            .data(data.links)\n            .enter()\n            .append(\"line\")\n            .attr(\"stroke\", \"black\")\n        \n        var node = svg.append(\"g\")\n            .attr(\"class\", \"nodes\")\n            .selectAll(\"circle\")\n            .data(data.nodes)\n            .enter().append(\"circle\")\n            .attr(\"r\", function(d){  return d.r })\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));    \n        \n        \n        var ticked = function() {\n            link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n    \n            node\n                .attr(\"cx\", function(d) { return d.x; })\n                .attr(\"cy\", function(d) { return d.y; });\n        }  \n        \n        simulation\n            .nodes(data.nodes)\n            .on(\"tick\", ticked);\n    \n        simulation.force(\"link\")\n            .links(data.links);    \n        \n        \n        \n        function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        \n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n        \n        function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        } \n                \n    }\n}());\n</script>", "description": "D3 v4 - force layout", "created_at": "2016-10-03T19:22:07Z", "updated_at": "2016-10-03T19:22:07Z", "api": ["d3.select", "d3.range", "d3.randomUniform", "d3.forceSimulation", "d3.forceLink", "d3.forceCollide", "d3.forceManyBody", "d3.forceCenter", "d3.forceY", "d3.forceX", "d3.drag"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/shimizu/'>shimizu</a>'s block: <a href='http://bl.ocks.org/shimizu/e6209de87cdddde38dadbb746feaf3a3'>D3 v4 - force layout</a>", "uid": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693"}, {"code": "<script>\n \nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal().range(d3.schemeCategory20b);\n\nvar n = 4000;\n  \nvar data = d3.range(n)\n    .map(function(d,i) { return [Math.random() * width, Math.random() * height, color(i), Math.random()]; });\n\nvar voronoi = d3.voronoi() \n    .size([width, height]);\n\nvar sites = data.sort(function(a,b) {\n  return d3.descending(a[3], b[3]);\n})\n.slice(0,n/10); \n\nvar diagram = voronoi(sites);\ndiagram.find = find;\n\n\nd3.select('svg')\n.append('g')\n.selectAll('circle')\n.data(data)\n.enter()\n.append('circle')\n.attr('r', function(d) {return 10 * d[3] * d[3];})\n.attr('transform', function(d) { return 'translate('+ [ d[0], d[1] ] +')'; })\n.attr('fill', function(d) {\n  var found = diagram.find(d[0],d[1]);\n  return sites[found.index][2];\n});\n\n\nfunction find (x, y, radius){ \n  // optimization: start from most recent result  \n  var i, next = diagram.find.found || Math.floor(Math.random() * diagram.cells.length);\n  var cell = diagram.cells[next] || diagram.cells[next=0];\n  var dx = x - cell.site[0], \n      dy = y - cell.site[1],\n      dist = dx*dx + dy*dy;\n  \n \n  do { \n    cell = diagram.cells[i=next]; \n    next = null;\n    cell.halfedges.forEach(function(e) {\n      var edge = diagram.edges[e];\n      var ea = edge.left;\n      if (ea === cell.site || !ea) {\n        ea = edge.right;\n      }\n      if (ea){\n\t\t\t\tvar dx = x - ea[0],\n            dy = y - ea[1],\n            ndist = dx*dx + dy*dy;\n        if (ndist < dist){\n          dist = ndist;\n          next = ea.index;\n          return;\n        }\n      }\n    });\n\n  } while (next !== null);\n\n  diagram.find.found = i;\n  if (!radius || dist < radius * radius) return cell.site;\n}\n\n</script>", "description": "Voronoi binning", "created_at": "2016-10-01T16:51:47Z", "updated_at": "2016-10-01T16:51:48Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.range", "d3.voronoi", "d3.descending"], "readme": "Use <a href='http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc'>Voronoi.find()</a> to group data by the Voronoi cells of the top 10% data points.\n\n\nSee also the <a href='//bl.ocks.org/Fil/959437d834f4a01eb4d1023cdd107554'>animated version</a>.\n\nOriginal work by Philippe Rivi\u00e8re for d3-voronoi ([issue 17](https://github.com/d3/d3-voronoi/issues/17)).\n\n\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/7c3c41f1524dcf2caea54290cceddf0a'>Voronoi binning</a>", "uid": "jermspeaks_135b6e0db7d35aa4bfed34c9e946e751"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1)\n    .align(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\nvar z = d3.scaleOrdinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar stack = d3.stack();\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n  z.domain(data.columns.slice(1));\n\n  stack.keys(data.columns.slice(1));\n  \n  g.selectAll(\".serie\")\n    .data(stack(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"serie\")\n      .attr(\"fill\", function(d) { return z(d.key); })\n    .selectAll(\"rect\")\n    .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.data.State); })\n      .attr(\"y\", function(d) { return y(d[1]); })\n      .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n      .attr(\"width\", x.bandwidth());\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"s\"))\n    .append(\"text\")\n      .attr(\"x\", 2)\n      .attr(\"y\", y(y.ticks(10).pop()))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Population\");\n\n  var legend = g.selectAll(\".legend\")\n    .data(data.columns.slice(1).reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", z);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n});\n\nfunction type(d, i, columns) {\n  for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  return d;\n}\n\n</script>", "description": "Stacked Bar Chart", "created_at": "2016-10-01T01:02:27Z", "updated_at": "2016-10-01T01:02:27Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.stack", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This stacked bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](/mbostock/3019563) and a number of D3 features:\n\n* [d3-dsv](https://github.com/d3/d3-dsv) - load and parse data\n* [d3-scale](https://github.com/d3/d3-scale) - *x*- and *y*-position, and color encoding\n* [d3-format](https://github.com/d3/d3-format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3-array](https://github.com/d3/d3-array) - compute simple statistics (e.g., max)\n* [d3-axis](https://github.com/d3/d3-axis) - display axes\n* [d3-shape](https://github.com/d3/d3-shape) - computed stacked positions\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3886208'>Stacked Bar Chart</a>", "uid": "john-guerra_95c69d114b7d59f934c282fc643d2234"}, {"code": "<script>\n    \n    \nd3.csv('trends.csv', function(err, d){\n  if(err) console.log(err);\n  //console.log(d)\n  \n  var nested_data = d3.nest()\n\t\t.key(function(d) { return d.date; })\n\t\t.entries(d);\n  \n  //console.log(nested_data);\n  \n  var mqpdata = nested_data.map(function(d){\n    var obj = {\n      month: new Date(d.key, 0, 1)\n    }\n    \n    d.values.forEach(function(v){\n      obj[v.key] = +v.value;\n    })\n    \n    return obj;\n  })\n  \n  buildStreamGraph(mqpdata);\n  \n})\n\n\nfunction buildStreamGraph(mqpdata) {\nvar data = mqpdata;\n  \n\nvar stack = d3.stack()\n    .keys([\"AE\", \"AREN\", \"BBT\", \"BC\", \"BME\", \"CE\", \"CH\", \"CM\", \"CS\", \"ECE\", \"EV\", \"HU\", \"ID\", \"IE\", \"IMGD\", \"MA\", \"ME\", \"MG\", \"PH\", \"RBE\", \"SSPS\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 800,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([100, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height/2, -200]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); })\n    .on('mouseover', function(d){      \n      d3.select(this).style('fill',d3.rgb( d3.select(this).style(\"fill\") ).brighter());\n  \t\td3.select(\"#major\").text(d.key);\n    })\n    .on('mouseout', function(d){      \n      d3.select(this).style('fill', \n         d3.rgb( d3.select(this).style(\"fill\") ).darker());\n         d3.select(\"#major\").text(\"Mouse over\");\n})\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n}\n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T20:08:30Z", "updated_at": "2016-09-30T20:19:04Z", "api": ["d3.csv", "d3.nest", "d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.scaleOrdinal", "d3.area", "d3.select", "d3.rgb"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>\n\nforked from <a href='http://bl.ocks.org/codementum/'>codementum</a>'s block: <a href='http://bl.ocks.org/codementum/c82471c137b3744ed8c28006fc1da41d'>Streamgraph</a>", "uid": "ivanempire_b6a1d0d2c5bc40a1e3f85b8980f189ef"}, {"code": "<script>\n    \n    \nd3.csv('trends.csv', function(err, d){\n  if(err) console.log(err);\n  //console.log(d)\n  \n  var nested_data = d3.nest()\n\t\t.key(function(d) { return d.date; })\n\t\t.entries(d);\n  \n  //console.log(nested_data);\n  \n  var mqpdata = nested_data.map(function(d){\n    var obj = {\n      month: new Date(d.key, 0, 1)\n    }\n    \n    d.values.forEach(function(v){\n      obj[v.key] = +v.value;\n    })\n    \n    return obj;\n  })\n  \n  console.log(mqpdata);\n  buildStreamGraph(mqpdata);\n  \n})\n\n\nfunction buildStreamGraph(mqpdata) {\n    \nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n  \n  console.log(data)\n  \ndata = mqpdata;\n  \n\nvar stack = d3.stack()\n    .keys([\"AE\", \"AREN\", \"BBT\", \"BC\", \"BME\", \"CE\", \"CH\", \"CM\", \"CS\", \"ECE\", \"EV\", \"HU\", \"ID\", \"IE\", \"IMGD\", \"MA\", \"ME\", \"MG\", \"PH\", \"RBE\", \"SSPS\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 800,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([100, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height/2, -200]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); })\n    .on('mouseover', function(d){      \n      d3.select(this).style('fill', \n         d3.rgb( d3.select(this).style(\"fill\") ).brighter() \n      )\n    })\n    .on('mouseout', function(d){      \n      d3.select(this).style('fill', \n         d3.rgb( d3.select(this).style(\"fill\") ).darker() \n      )\n    })\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n}\n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:24:29Z", "updated_at": "2016-09-30T20:08:42Z", "api": ["d3.csv", "d3.nest", "d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.scaleOrdinal", "d3.area", "d3.select", "d3.rgb"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>", "uid": "codementum_c82471c137b3744ed8c28006fc1da41d"}, {"code": "<script>\nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n\nvar stack = d3.stack()\n    .keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 600,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([0, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height, 0]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); });\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:20:55Z", "updated_at": "2016-09-30T19:20:55Z", "api": ["d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.area", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>", "uid": "codementum_2ee76715d716e59efab283ce915de740"}, {"code": "<script>\nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n\nvar stack = d3.stack()\n    .keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 600,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([0, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height, 0]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); });\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:20:39Z", "updated_at": "2016-09-30T19:20:39Z", "api": ["d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.area", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ivanempire/'>ivanempire</a>'s block: <a href='http://bl.ocks.org/ivanempire/0e4e400b7f56a59e59719c7b01bc2cd8'>Streamgraph</a>", "uid": "codementum_ae610a1e44e562afcaa327982629a37c"}, {"code": "<script>\nvar data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  34, bananas:  60, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400},\n  {month: new Date(2015, 4, 1), apples:  500, bananas:  23, cherries: 100, dates: 50},\n  {month: new Date(2015, 5, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 6, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 7, 1), apples: 320, bananas: 1000, cherries: 640, dates: 700},\n  {month: new Date(2015, 8, 1), apples: 1200, bananas: 1000, cherries: 800, dates: 400},\n  {month: new Date(2015, 9, 1), apples: 34, bananas: 1000, cherries: 640, dates: 1000},\n  {month: new Date(2015, 10, 1), apples: 3840, bananas: 1000, cherries: 800, dates: 700},\n  {month: new Date(2015, 11, 1), apples: 1200, bananas: 480, cherries: 100, dates: 2000},\n];\n\nvar stack = d3.stack()\n    .keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n    .order(d3.stackOrderNone)\n    .offset(d3.stackOffsetWiggle);\n\nvar series = stack(data);\n\nvar width = 600,\n    height = 500;\n\nvar x = d3.scaleTime()\n    .domain(d3.extent(data, function(d){ return d.month; }))\n    .range([0, width]);\n\n// setup axis\nvar xAxis = d3.axisBottom(x);\n\nvar y = d3.scaleLinear()\n    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])\n    .range([height, 0]);\n\nvar color = d3.scaleLinear()\n    .range([\"#51D0D7\", \"#31B5BB\"]);\n\nvar area = d3.area()\n    .x(function(d) { console.info('in area function', d); return x(d.data.month); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); })\n    .curve(d3.curveBasis);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"path\")\n    .data(series)\n    .enter().append(\"path\")\n    .attr(\"d\", area)\n    .style(\"fill\", function() { return color(Math.random()); });\n\nsvg.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);  \n  </script>", "description": "Streamgraph", "created_at": "2016-09-30T19:12:43Z", "updated_at": "2016-09-30T19:24:15Z", "api": ["d3.stack", "d3.scaleTime", "d3.extent", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.area", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nd3.json(\"miserables.json\", function(error, graph) {\n  if (error) throw error;\n\n  var link = svg.append(\"g\")\n      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(graph.links)\n    .enter().append(\"line\")\n      .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  var node = svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n    .selectAll(\"circle\")\n    .data(graph.nodes)\n    .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", function(d) { return color(d.group); })\n      .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n});\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\n</script>", "description": "Force-Directed Graph", "created_at": "2016-09-29T19:12:03Z", "updated_at": "2016-09-29T19:12:03Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.json", "d3.drag"], "readme": "This simple force-directed graph shows character co-occurence in *Les Mis\u00e9rables*. A physical simulation of charged particles and springs places related characters in closer proximity, while unrelated characters are farther apart. Layout algorithm inspired by [Tim Dwyer](http://www.csse.monash.edu.au/~tdwyer/) and [Thomas Jakobsen](http://web.archive.org/web/20080410171619/http://www.teknikus.dk/tj/gdc2001.htm). Data based on character coappearence in Victor Hugo's *Les Mis\u00e9rables*, compiled by [Donald Knuth](http://www-cs-faculty.stanford.edu/~uno/sgb.html).\n\nCompare this display to a force layout with [curved links](/mbostock/4600693), a force layout with [fisheye distortion](http://bost.ocks.org/mike/fisheye/) and a [matrix diagram](http://bost.ocks.org/mike/miserables/).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4062045'>Force-Directed Graph</a>", "uid": "riyazshaikh_2a2ad9a6eed7f21c66b10f11155d9bac"}, {"code": "<script>\n\n\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 40, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%x\"),\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    toolTime = d3.timeFormat(\"%B %d, \" + \"20\" + \"%y\"),\n    abbreviateNum = d3.format('.2s');\n\nvar xAxisTime = d3.timeFormat(\"%b\");\n\nvar x0AxisYear = d3.timeFormat(\"20\" + \"%y\")\n\nvar viridisColors = [\"#440154\",\"#440256\",\"#450457\",\"#450559\",\"#46075a\",\"#46085c\",\"#460a5d\",\"#460b5e\",\"#470d60\",\"#470e61\",\"#471063\",\"#471164\",\"#471365\",\"#481467\",\"#481668\",\"#481769\",\"#48186a\",\"#481a6c\",\"#481b6d\",\"#481c6e\",\"#481d6f\",\"#481f70\",\"#482071\",\"#482173\",\"#482374\",\"#482475\",\"#482576\",\"#482677\",\"#482878\",\"#482979\",\"#472a7a\",\"#472c7a\",\"#472d7b\",\"#472e7c\",\"#472f7d\",\"#46307e\",\"#46327e\",\"#46337f\",\"#463480\",\"#453581\",\"#453781\",\"#453882\",\"#443983\",\"#443a83\",\"#443b84\",\"#433d84\",\"#433e85\",\"#423f85\",\"#424086\",\"#424186\",\"#414287\",\"#414487\",\"#404588\",\"#404688\",\"#3f4788\",\"#3f4889\",\"#3e4989\",\"#3e4a89\",\"#3e4c8a\",\"#3d4d8a\",\"#3d4e8a\",\"#3c4f8a\",\"#3c508b\",\"#3b518b\",\"#3b528b\",\"#3a538b\",\"#3a548c\",\"#39558c\",\"#39568c\",\"#38588c\",\"#38598c\",\"#375a8c\",\"#375b8d\",\"#365c8d\",\"#365d8d\",\"#355e8d\",\"#355f8d\",\"#34608d\",\"#34618d\",\"#33628d\",\"#33638d\",\"#32648e\",\"#32658e\",\"#31668e\",\"#31678e\",\"#31688e\",\"#30698e\",\"#306a8e\",\"#2f6b8e\",\"#2f6c8e\",\"#2e6d8e\",\"#2e6e8e\",\"#2e6f8e\",\"#2d708e\",\"#2d718e\",\"#2c718e\",\"#2c728e\",\"#2c738e\",\"#2b748e\",\"#2b758e\",\"#2a768e\",\"#2a778e\",\"#2a788e\",\"#29798e\",\"#297a8e\",\"#297b8e\",\"#287c8e\",\"#287d8e\",\"#277e8e\",\"#277f8e\",\"#27808e\",\"#26818e\",\"#26828e\",\"#26828e\",\"#25838e\",\"#25848e\",\"#25858e\",\"#24868e\",\"#24878e\",\"#23888e\",\"#23898e\",\"#238a8d\",\"#228b8d\",\"#228c8d\",\"#228d8d\",\"#218e8d\",\"#218f8d\",\"#21908d\",\"#21918c\",\"#20928c\",\"#20928c\",\"#20938c\",\"#1f948c\",\"#1f958b\",\"#1f968b\",\"#1f978b\",\"#1f988b\",\"#1f998a\",\"#1f9a8a\",\"#1e9b8a\",\"#1e9c89\",\"#1e9d89\",\"#1f9e89\",\"#1f9f88\",\"#1fa088\",\"#1fa188\",\"#1fa187\",\"#1fa287\",\"#20a386\",\"#20a486\",\"#21a585\",\"#21a685\",\"#22a785\",\"#22a884\",\"#23a983\",\"#24aa83\",\"#25ab82\",\"#25ac82\",\"#26ad81\",\"#27ad81\",\"#28ae80\",\"#29af7f\",\"#2ab07f\",\"#2cb17e\",\"#2db27d\",\"#2eb37c\",\"#2fb47c\",\"#31b57b\",\"#32b67a\",\"#34b679\",\"#35b779\",\"#37b878\",\"#38b977\",\"#3aba76\",\"#3bbb75\",\"#3dbc74\",\"#3fbc73\",\"#40bd72\",\"#42be71\",\"#44bf70\",\"#46c06f\",\"#48c16e\",\"#4ac16d\",\"#4cc26c\",\"#4ec36b\",\"#50c46a\",\"#52c569\",\"#54c568\",\"#56c667\",\"#58c765\",\"#5ac864\",\"#5cc863\",\"#5ec962\",\"#60ca60\",\"#63cb5f\",\"#65cb5e\",\"#67cc5c\",\"#69cd5b\",\"#6ccd5a\",\"#6ece58\",\"#70cf57\",\"#73d056\",\"#75d054\",\"#77d153\",\"#7ad151\",\"#7cd250\",\"#7fd34e\",\"#81d34d\",\"#84d44b\",\"#86d549\",\"#89d548\",\"#8bd646\",\"#8ed645\",\"#90d743\",\"#93d741\",\"#95d840\",\"#98d83e\",\"#9bd93c\",\"#9dd93b\",\"#a0da39\",\"#a2da37\",\"#a5db36\",\"#a8db34\",\"#aadc32\",\"#addc30\",\"#b0dd2f\",\"#b2dd2d\",\"#b5de2b\",\"#b8de29\",\"#bade28\",\"#bddf26\",\"#c0df25\",\"#c2df23\",\"#c5e021\",\"#c8e020\",\"#cae11f\",\"#cde11d\",\"#d0e11c\",\"#d2e21b\",\"#d5e21a\",\"#d8e219\",\"#dae319\",\"#dde318\",\"#dfe318\",\"#e2e418\",\"#e5e419\",\"#e7e419\",\"#eae51a\",\"#ece51b\",\"#efe51c\",\"#f1e51d\",\"#f4e61e\",\"#f6e620\",\"#f8e621\",\"#fbe723\",\"#fde725\"]\nvar viridisThreeColors = [viridisColors[110],viridisColors[25],viridisColors[200]]\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(viridisThreeColors);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.area); });\n\nd3.csv(\"data_updated.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var bands = data.columns.slice(1).map(function(id) {\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, area: d[id]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(bands, function(c) { return d3.min(c.values, function(d) { return d.area; }); }),\n    d3.max(bands, function(c) { return d3.max(c.values, function(d) { return d.area; }); })\n  ]);\n\n  z.domain(bands.map(function(c) { return c.id; }));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x months\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).tickFormat(xAxisTime).tickSizeOuter(0).tickPadding(10).ticks(d3.timeMonth));\n\n  g.append('g')\n      .attr('class', 'axis axis--x years')\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).tickFormat(x0AxisYear).tickSizeOuter(0).tickPadding(25).ticks(d3.timeYear));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(5, \"s\").tickSizeOuter(0).tickPadding(5))\n    .append(\"text\")\n      // .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", 92)\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#3d3d3d\")\n      .text(\"Area in square kilometers\");\n\n  // g.append(\"g\")\n  //     .attr(\"class\", \"axis axis--y\")\n  //     .attr(\"transform\", \"translate( \" + (width + 20) + \", 0 )\")\n  //     .call(d3.axisRight(y).ticks(5, \"s\").tickSizeOuter(0).tickPadding(5));\n\n  var band = g.selectAll(\".band\")\n    .data(bands)\n    .enter().append(\"g\")\n      .attr(\"class\", \"band\");\n\n  band.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) {  console.log(d.values[1]); return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  band.append(\"text\")\n      .attr('class', 'bands')\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + (x(d.value.date) - 10) + \",\" + (y(d.value.area) - 8) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      // .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n\n  //set your focus circle and make sure it's invisible\n  var focus = band.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append('line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 0)\n      .attr('y2', height)\n      .style('stroke-width', 1)\n      .style('stroke-dasharray', '1,6')\n      .style('stroke', '#12BCC2');\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  //Create area of focus for your mouse event\n  band.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  //Mouse move function for watching over focus.\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        y0 = y(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0,\n        thisBand = \"\";\n    focus.transition()\n      .duration(50)\n      .attr('transform', 'translate(' + x(x0) + ', 0)');\n    // focus.append('line')\n    // console.log(xx0);\n    // focus.select('text').text('Test');\n    d3.select(\"#tooltip\")\n      // .style(\"left\", width - 50 + \"px\")\n      // .style(\"top\", \"50px\")\n      .select('#date')\n      .text(\"Coverage for \" + toolTime(d.date));\n    d3.select(\"#tooltip\")\n      .select(\"#value\")\n      .html('<span id=\"box\" class=\"legendTitle\">Total</span><div id=\"boxSpacer\">' + abbreviateNum(d.Total) + '</div>    ' + '<span id=\"box\" class=\"legendRGB\">RGB</span><div id=\"boxSpacer\">' + abbreviateNum(d.RGB) + '</div>    ' + '<span id=\"box\" class=\"legendNIR\">NIR</span>' + abbreviateNum(d.NIR) + ' sq. km  ');\n    //Show the tooltip\n    d3.select(\"#tooltip\").classed(\"hidden\", false);\n  }\n\n  //Annotations\n  var annotations = g.append('g').attr('class','annotations');\n\n  // Doves //\n  // Flock 1D\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 97)\n      .attr('y1', y(5000000))\n      .attr('x2', 97)\n      .attr('y2', y(1000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 78)\n      .attr('y', y(6000000))\n      .text('Flock 1d');\n\n  // FLOCK 1E\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 184)\n      .attr('y1', y(8000000))\n      .attr('x2', 184)\n      .attr('y2', y(1000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 166)\n      .attr('y', y(9000000))\n      .text('Flock 1e');\n\n  // FLOCK 2B\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 303)\n      .attr('y1', y(13000000))\n      .attr('x2', 303)\n      .attr('y2', y(3000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 285)\n      .attr('y', y(14000000))\n      .text('Flock 2b');\n\n  //Flock 2e\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 408)\n      .attr('y1', y(20300000))\n      .attr('x2', 408)\n      .attr('y2', y(14500000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 390)\n      .attr('y', y(21200000))\n      .text('Flock 2e');\n\n  //Flock 2e'\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 508)\n      .attr('y1', y(24900000))\n      .attr('x2', 508)\n      .attr('y2', y(19200000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 490)\n      .attr('y', y(25800000))\n      .text(\"Flock 2e'\");\n\n  //Flock 2p\n  // annotations.append('g')\n  //   .append('line')\n  //     .attr('x1', 594)\n  //     .attr('y1', y(29000000))\n  //     .attr('x2', 594)\n  //     .attr('y2', y(13500000))\n  //     .attr(\"stroke-width\", 1)\n  //     .attr('stroke-dasharray', '1, 2')\n  //     .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('line')\n      .attr('x1', 594)\n      .attr('y1', y(12500000))\n      .attr('x2', 594)\n      .attr('y2', y(29000000))\n      .attr(\"stroke-width\", 1)\n      .attr('stroke-dasharray', '1, 2')\n      .attr(\"stroke\", \"#12BCC2\");\n  annotations.append('g')\n    .append('text')\n      .attr('x', 576)\n      .attr('y', y(30000000))\n      .text('Flock 2p');\n\n  //Build 12 Deployment\n  // annotations.append('g')\n  //   .append('text')\n  //     .attr('x', 460)\n  //     .attr('y', y(30500000))\n  //     .text('Build 12 Dove Satellites Deployed');\n  // annotations.append('g')\n  //   .append('line')\n  //     .attr('x1', 533)\n  //     .attr('y1', y(1000000))\n  //     .attr('x2', 533)\n  //     .attr('y2', y(29000000))\n  //     .attr(\"stroke-width\", 1)\n  //     .attr('stroke-dasharray', '2, 2, 5')\n  //     .attr(\"stroke\", \"rgb(119,119,119)\");\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n\n</script>", "description": "Multi-Series Line Chart (Planet Coverage)", "created_at": "2016-09-29T18:17:15Z", "updated_at": "2016-10-06T17:46:19Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.timeFormat", "d3.format", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.csv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.axisRight", "d3.mouse"], "readme": "**Planet Coverage**\n\nSimple multi series line chart looking at Planet's coverage of the Earth overtime.\n\n**Credits**\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c"}, {"code": "<script>\n\nvar pi = Math.PI,\n    tau = 2 * pi;\n\nvar width = Math.max(960, window.innerWidth),\n    height = Math.max(500, window.innerHeight);\n\n// Initialize the projection to fit the world in a 11 square centered at the origin.\nvar projection = d3.geoMercator()\n    .scale(1 / tau)\n    .translate([0, 0]);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nvar tile = d3.tile()\n    .size([width, height]);\n\nvar zoom = d3.zoom()\n    .scaleExtent([1 << 11, 1 << 14])\n    .on(\"zoom\", zoomed);\n\nvar svg = d3.select(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar raster = svg.append(\"g\");\n\nvar vector = svg.append(\"path\");\n\nd3.csv(\"us-state-capitals.csv\", type, function(error, capitals) {\n  if (error) throw error;\n\n  vector\n      .datum({type: \"FeatureCollection\", features: capitals});\n\n  // Compute the projected initial center.\n  var center = projection([-98.5, 39.5]);\n\n  // Apply a zoom transform equivalent to projection.{scale,translate,center}.\n  svg\n      .call(zoom)\n      .call(zoom.transform, d3.zoomIdentity\n          .translate(width / 2, height / 2)\n          .scale(1 << 12)\n          .translate(-center[0], -center[1]));\n});\n\nfunction zoomed() {\n  var transform = d3.event.transform;\n\n  var tiles = tile\n      .scale(transform.k)\n      .translate([transform.x, transform.y])\n      ();\n\n  projection\n      .scale(transform.k / tau)\n      .translate([transform.x, transform.y]);\n\n  vector\n      .attr(\"d\", path);\n\n  var image = raster\n      .attr(\"transform\", stringify(tiles.scale, tiles.translate))\n    .selectAll(\"image\")\n    .data(tiles, function(d) { return d; });\n\n  image.exit().remove();\n\n  image.enter().append(\"image\")\n      .attr(\"xlink:href\", function(d) { return \"http://\" + \"abc\"[d[1] % 3] + \".tile.openstreetmap.org/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".png\"; })\n      .attr(\"x\", function(d) { return d[0] * 256; })\n      .attr(\"y\", function(d) { return d[1] * 256; })\n      .attr(\"width\", 256)\n      .attr(\"height\", 256);\n}\n\nfunction type(d) {\n  return {\n    type: \"Feature\",\n    properties: {name: d.description, state: d.name},\n    geometry: {type: \"Point\", coordinates: [+d.longitude, +d.latitude]}\n  };\n}\n\nfunction stringify(scale, translate) {\n  var k = scale / 256, r = scale % 1 ? Number : Math.round;\n  return \"translate(\" + r(translate[0] * scale) + \",\" + r(translate[1] * scale) + \") scale(\" + k + \")\";\n}\n\n</script>", "description": "Raster & Vector IV", "created_at": "2016-09-29T14:58:26Z", "updated_at": "2016-09-29T14:58:26Z", "api": ["d3.geoMercator", "d3.geoPath", "d3.tile", "d3.zoom", "d3.select", "d3.csv"], "readme": "Using [d3-tile](https://github.com/d3/d3-tile) to display raster image tiles underneath a [CSV dataset](https://github.com/d3/d3-dsv) of point locations (U.S. state capitals), and [d3-zoom](https://github.com/d3/d3-zoom) for pan & zoom. See also the [TopoJSON version](/mbostock/5342063) and the [static version](/mbostock/94b9fd26e12c586f342d).\n\nTiles copyright [OpenStreetMap contributors](https://www.openstreetmap.org/copyright).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/9535021'>Raster & Vector IV</a>", "uid": "scresawn_af4615e705cf683d4a68e0968c9701d1"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    tau = 2 * Math.PI;\n\nvar buildings = d3.range(10).map(function(i) {\n  return {\n    x: (-0.5 + Math.random()) * width * 0.8,\n    y: (-0.5 + Math.random()) * height * 0.8,\n  };\n});\n\nvar nodes = d3.range(400).map(function(i) {\n  return {\n    r: Math.random() * 8 + 3,\n    building: Math.floor(Math.random() * buildings.length)\n  };\n});\n\n  \n  function shape(alpha){\n   for (var i = 0, n = nodes.length, node, k = alpha * 0.1; i < n; ++i) {\n    node = nodes[i];\n     var dx = node.x - buildings[node.building].x,\n         dy = node.y - buildings[node.building].y;\n     node.vx -= dx * k;\n     node.vy -= dy * k;\n   }\n  }\n  \nvar simulation = d3.forceSimulation(nodes)\n    //.velocityDecay(0.2)\n    .force(\"shape\", shape)\n    .force(\"collide\", d3.forceCollide().radius(function(d) { return d.r + 0.5; }).iterations(2))\n    .on(\"tick\", ticked);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory10);\n  \nfunction ticked() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n\n  nodes.forEach(function(d,i) {\n    context.beginPath();\n    context.moveTo(d.x + d.r, d.y);\n    context.arc(d.x, d.y, d.r, 0, tau);\n    context.fillStyle = color(d.building);\n    context.fill();\n    context.strokeStyle = \"white\";\n    context.stroke();\n  });\n  \n  context.restore();\n}\n\n</script>", "description": "Force move 400 dots in 10 buildings", "created_at": "2016-09-29T14:10:47Z", "updated_at": "2016-10-02T13:11:49Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceCollide", "d3.scaleOrdinal"], "readme": "This example uses d3.forceCollide to prevent circles from overlapping.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/31ce330646fa8bcb7289ff3b97aab3f5'>Collision Detection</a>\n\nSee also [Bounded Force Layout - very tightly packed](http://bl.ocks.org/Fil/30afeb463ce552414f64).\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/69f1d5f68099bf6350ed42aed0941e5c'>Collision Detection in a tight square</a>", "uid": "Fil_07f00f90524c4c2b99c944780c2f4e7c"}, {"code": "<script>\n\nvar width = 960,\n    height = 700,\n    radius = Math.min(width, height) / 2;\n\nvar x = d3.scale.linear()\n    .range([0, 2 * Math.PI]);\n\nvar y = d3.scale.linear()\n    .range([0, radius]);\n\nvar color = d3.scale.category20c();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 10) + \")\");\n\nvar partition = d3.layout.partition()\n    .value(function(d) { return d.size; });\n\nvar arc = d3.svg.arc()\n    .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x))); })\n    .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))); })\n    .innerRadius(function(d) { return Math.max(0, y(d.y)); })\n    .outerRadius(function(d) { return Math.max(0, y(d.y + d.dy)); });\n\nd3.json(\"flare.json\", function(error, root) {\n  var g = svg.selectAll(\"g\")\n      .data(partition.nodes(root))\n    .enter().append(\"g\");\n\n  var path = g.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); })\n    .on(\"click\", click);\n\n  var text = g.append(\"text\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + computeTextRotation(d) + \")\"; })\n    .attr(\"x\", function(d) { return y(d.y); })\n    .attr(\"dx\", \"6\") // margin\n    .attr(\"dy\", \".35em\") // vertical-align\n    .text(function(d) { return d.name; });\n\n  function click(d) {\n    // fade out all text elements\n    text.transition().attr(\"opacity\", 0);\n\n    path.transition()\n      .duration(750)\n      .attrTween(\"d\", arcTween(d))\n      .each(\"end\", function(e, i) {\n          // check if the animated element's data e lies within the visible angle span given in d\n          if (e.x >= d.x && e.x < (d.x + d.dx)) {\n            // get a selection of the associated text element\n            var arcText = d3.select(this.parentNode).select(\"text\");\n            // fade in the text element and recalculate positions\n            arcText.transition().duration(750)\n              .attr(\"opacity\", 1)\n              .attr(\"transform\", function() { return \"rotate(\" + computeTextRotation(e) + \")\" })\n              .attr(\"x\", function(d) { return y(d.y); });\n          }\n      });\n  }\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n// Interpolate the scales!\nfunction arcTween(d) {\n  var xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n      yd = d3.interpolate(y.domain(), [d.y, 1]),\n      yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);\n  return function(d, i) {\n    return i\n        ? function(t) { return arc(d); }\n        : function(t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); return arc(d); };\n  };\n}\n\nfunction computeTextRotation(d) {\n  return (x(d.x + d.dx / 2) - Math.PI / 2) / Math.PI * 180;\n}\n\n</script>", "description": "Zoomable Sunburst with Labels", "created_at": "2016-09-29T07:40:08Z", "updated_at": "2016-09-29T07:40:09Z", "api": ["d3.scale.linear", "d3.scale.category20c", "d3.select", "d3.layout.partition", "d3.svg.arc", "d3.json", "d3.interpolate"], "readme": "Zoomable Sunburst with Labels\n\nforked from <a href='http://bl.ocks.org/metmajer/'>metmajer</a>'s block: <a href='http://bl.ocks.org/metmajer/5480307'>Zoomable Sunburst with Labels</a>", "uid": "matt1306_5ef518ec9d7153f9624e46c7ca97b77d"}, {"code": "<script>\n\nvar width = 960,\n    height = 500,\n    padding = 6, // separation between same-color nodes\n    clusterPadding = 15, // separation between different-color nodes\n    maxRadius = 40,\n    x_browser = 20,\n    y_browser = 25;\n\nvar n = 20, // total number of nodes\n    m = 3; // number of distinct clusters\n\nvar color = d3.scale.category10()\n    .domain(d3.range(m));\n\n// The largest node for each cluster.\nvar clusters = new Array(m);\nvar tags = [\"cute\", \"sassy\", \"tidy\", \"grumpy\"];\nvar title = [\"lord\", \"lady\", \"sir\", \"madame\", \"monsieur\"];\nvar names = [\"fluffykins\", \"fuzzington\", \"furstonly\", \"floppybottom\"];\n//prevent default autocomplete helper text\n$(\"#search\").autocomplete({\n    source: tags,\n    messages: {\n        noResults: '',\n        results: function() {}\n    }\n});\n\nvar nodes = d3.range(n).map(function() {\n  var i = Math.floor(Math.random() * m),\n      r = Math.sqrt((i + 1) / m * -Math.log(Math.random())) * maxRadius,\n      d = {\n        link: \"https://placekitten.com/g/48/48\",\n        tag: tags[Math.floor(Math.random() * 3)],\n        hero: title[Math.floor(Math.random() * 4)] + \" \" + names[Math.floor(Math.random() * 4)],\n        cluster: i,\n        radius: r,\n        x: Math.cos(i / m * 2 * Math.PI) * 200 + width / 2 + Math.random(),\n        y: Math.sin(i / m * 2 * Math.PI) * 200 + height / 2 + Math.random()\n      };\n  if (!clusters[i] || (r > clusters[i].radius)) clusters[i] = d;\n  return d;\n});\n  console.log(JSON.stringify(nodes, null, 4));\n\nvar force = d3.layout.force()\n    .nodes(nodes)\n    .size([width, height])\n    .gravity(.02)\n    .charge(0)\n    .on(\"tick\", tick)\n    .start();\n\nvar svg = d3.select(\"#vis\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n    //pan and zoom behavior (competes with dragging nodes)\n  // .call(d3.behavior.zoom().on(\"zoom\", function () {\n  //   svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")\" + \" scale(\" + d3.event.scale + \")\")\n  // }))\n  // .append(\"g\");\n\n// var node = svg.selectAll(\"circle\")\n//     .data(nodes)\n//   .enter().append(\"circle\")\n//     .style(\"fill\", function(d) { return color(d.cluster); })\n//     .call(force.drag);\n\nvar node = svg.selectAll(\"image\")\n    .data(nodes)\n    .enter().append(\"image\")\n    .attr(\"class\", function(d){return d.tag;})\n    .attr(\"xlink:href\",  \"http://placekitten.com/g/48/48\")\n    .attr(\"x\", function(d){ return d.x; })\n    .attr(\"y\", function(d){ return d.y; })\n    .attr(\"height\", 50)\n    .attr(\"width\", 50)\n    .call(force.drag);\n\n\nnode.transition()\n    .duration(750)\n    .delay(function(d, i) { return i * 5; })\n    .attrTween(\"r\", function(d) {\n      var i = d3.interpolate(0, d.radius);\n      return function(t) { return d.radius = i(t); };\n    });\n\n    // make the image grow a little on mouse over and add the text details on click\n      var setEvents = node\n              // Append hero text\n              .on( 'click', function (d) {\n                  d3.select(\"h1\").html(d.hero);\n                  d3.select(\"h2\").html(d.name);\n                  d3.select(\"h3\").html (\"Take me to \" + \"<a href='\" + d.link + \"' >\"  + d.hero + \" web page \"+ \"</a>\" );\n               })\n\n              .on( 'mouseenter', function() {\n                // select element in current context\n                d3.select( this )\n                  .transition()\n                  // .attr(\"x\", function(d) { return d.x-60;})\n                  // .attr(\"y\", function(d) { return d.y-60;})\n                  .attr(\"height\", 100)\n                  .attr(\"width\", 100);\n              })\n              // set back\n              .on( 'mouseleave', function() {\n                d3.select( this )\n                  .transition()\n                  // .attr(\"x\", function(d) { return d.x+25;})\n                  // .attr(\"y\", function(d) { return d.y+25;})\n                  .attr(\"height\", 50)\n                  .attr(\"width\", 50);\n              });\n\n      // Append hero name on roll over next to the node as well\n      node.append(\"text\")\n          .attr(\"class\", function(d){return d.tag;})\n          .attr(\"x\", x_browser)\n          .attr(\"y\", y_browser +15)\n          .attr(\"fill\", \"#130C0E\")\n          .text(function(d) { return d.hero; });\n\n      //search\n      var optArray = [];\n      for (var i = 0; i < node.length - 1; i++) {\n          optArray.push(node[i].tag);\n      }\n      optArray = optArray.sort();\n      $(function () {\n          $(\"#search\").autocomplete({\n              source: optArray\n          });\n      });\n      function searchNode() {\n        console.log(\"inside search\");\n          //find the node\n          var selectedVal = document.getElementById('search').value;\n          // var node = svg.selectAll(\".node\");\n          if (selectedVal == \"none\") {\n            console.log(\"inside none\");\n              node.style(\"stroke\", \"white\").style(\"stroke-width\", \"1\");\n          } else {\n            console.log(\"inside not none\");\n            console.log(\"node\");\n            console.log(node);\n              var selected = node.filter(function (d) {\n                console.log(\"data\");\n                console.log(d);\n                console.log(\"selectedVal\");\n                console.log(selectedVal);\n                  return d.tag !== selectedVal;\n              });\n              console.log(\"selected\");\n              console.log(selected);\n              selected.style(\"opacity\", \"0\");\n              // var link = svg.selectAll(\".link\")\n              // link.style(\"opacity\", \"0\");\n              d3.selectAll(\"image\").transition()\n                  .duration(15000)\n                  .style(\"opacity\", 1);\n          }\n      }\n\nfunction tick(e) {\n  node\n      .each(cluster(10 * e.alpha * e.alpha))\n      .each(collide(.5))\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; });\n}\n\n// Move d to be adjacent to the cluster node.\nfunction cluster(alpha) {\n  return function(d) {\n    var cluster = clusters[d.cluster];\n    if (cluster === d) return;\n    var x = d.x - cluster.x,\n        y = d.y - cluster.y,\n        l = Math.sqrt(x * x + y * y),\n        r = d.radius + cluster.radius;\n    if (l != r) {\n      l = (l - r) / l * alpha;\n      d.x -= x *= l;\n      d.y -= y *= l;\n      cluster.x += x;\n      cluster.y += y;\n    }\n  };\n}\n\n// Resolves collisions between d and all other circles.\nfunction collide(alpha) {\n  var quadtree = d3.geom.quadtree(nodes);\n  return function(d) {\n    var r = d.radius + maxRadius + Math.max(padding, clusterPadding),\n        nx1 = d.x - r,\n        nx2 = d.x + r,\n        ny1 = d.y - r,\n        ny2 = d.y + r;\n    quadtree.visit(function(quad, x1, y1, x2, y2) {\n      if (quad.point && (quad.point !== d)) {\n        var x = d.x - quad.point.x,\n            y = d.y - quad.point.y,\n            l = Math.sqrt(x * x + y * y),\n            r = d.radius + quad.point.radius + (d.cluster === quad.point.cluster ? padding : clusterPadding);\n        if (l < r) {\n          l = (l - r) / l * alpha;\n          d.x -= x *= l;\n          d.y -= y *= l;\n          quad.point.x += x;\n          quad.point.y += y;\n        }\n      }\n      return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n    });\n  };\n}\n\n</script>", "description": "Kittenpile", "created_at": "2016-09-28T23:31:31Z", "updated_at": "2016-09-28T23:31:39Z", "api": ["d3.scale.category10", "d3.range", "d3.layout.force", "d3.select", "d3.behavior.zoom", "d3.interpolate", "d3.selectAll", "d3.geom.quadtree"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nHelpful references:\n\nd3 | Force layout with images\nhttp://bl.ocks.org/eesur/be2abfb3155a38be4de4\n\nCluster Force Layout IV\nhttps://bl.ocks.org/mbostock/7882658\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/10169c6b43ddd04286c7f61502fd00af'>Kittenpile</a>", "uid": "cehsu_fa7324f633d7f99cf3d2c68e027ec1da"}, {"code": "<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar bisecttime = d3.bisector(function(d) { return d.time; }).left,\n    formatValue = d3.format(\",.2f\"),\n    displayValue = function(d) { return formatValue(d); };\n    \nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n    .x(function(d) { return x(d.time); })\n    .y(function(d) { return y(d.sentiment); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.time = +d.time;\n    d.sentiment = +d.sentiment;\n  });\n\n  data.sort(function(a, b) {\n    return a.time - b.time;\n  });\n  \n  x.domain([data[0].time, data[data.length - 1].time]);\n  y.domain(d3.extent(data, function(d) { return d.sentiment; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sentiment\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisecttime(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.time > d1.time - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.time) + \",\" + y(d.sentiment) + \")\");\n    focus.select(\"text\").text(\"Sentiment Value: \" \n                              + displayValue(d.sentiment) \n                              + \"\\n Words: \"\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ d.words\n                             );\n  }\n});\n\n</script>", "description": "sentiment time-series mouseover", "created_at": "2016-09-28T23:01:22Z", "updated_at": "2016-09-28T23:04:25Z", "api": ["d3.bisector", "d3.format", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lgoerl/'>lgoerl</a>'s block: <a href='http://bl.ocks.org/lgoerl/8cd5584d81953601ef1d90ba6a7821b6'>sentiment time-series mouseover</a>", "uid": "BBischof_75ed4879d155c31412f58840480ae1d6"}, {"code": "<script>\n\nvar margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar bisecttime = d3.bisector(function(d) { return d.time; }).left,\n    formatValue = d3.format(\",.2f\"),\n    displayValue = function(d) { return formatValue(d); };\n    \nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.line()\n\t\t.interpolate(\"cardinal\")\n    .x(function(d) { return x(d.time); })\n    .y(function(d) { return y(d.sentiment); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.time = +d.time;\n    d.sentiment = +d.sentiment;\n  });\n\n  data.sort(function(a, b) {\n    return a.time - b.time;\n  });\n  \n  x.domain([data[0].time, data[data.length - 1].time]);\n  y.domain(d3.extent(data, function(d) { return d.sentiment; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sentiment\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  var focus = svg.append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus.append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dy\", \".35em\");\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"mouseover\", function() { focus.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisecttime(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.time > d1.time - x0 ? d1 : d0;\n    focus.attr(\"transform\", \"translate(\" + x(d.time) + \",\" + y(d.sentiment) + \")\");\n    focus.select(\"text\").text(\"Sentiment Value: \" \n                              + displayValue(d.sentiment) \n                              + \"\\n Topics: \"\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ d.topics\n                             );\n  }\n});\n\n</script>", "description": "sentiment time-series mouseover", "created_at": "2016-09-28T21:46:15Z", "updated_at": "2016-10-13T21:56:16Z", "api": ["d3.bisector", "d3.format", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "lgoerl_8cd5584d81953601ef1d90ba6a7821b6"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar  pC = pieChart(tF); // create the pie-chart.\n  var leg= legend(tF);  // create the legend.\t\n\tvar hG = histoGram(sF); // create the histogram.\n  \t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  var pieCreated = 'no';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n          p[i].style.fontWeight=\"normal\";\n        }else{\n          if(status != name.method ){\n          \t  \n          }\n          try {\n      \t\t\tdocument.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {}\n      \t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n        startPie();\n     \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n          startPie();\n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n            startPie();\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n       startPie();\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n      startPie();\n    }\n  \n  function startPie(){\n       if(pieCreated != 'yes'){\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    pieCreated='yes';\n    dashboard('#td_pie',freqData);\n         \n       }\n  }\n  \n  \n  \n  \n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches", "created_at": "2016-09-27T21:14:21Z", "updated_at": "2016-09-27T21:14:21Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/3845b2a1ebddd45ea0bd8dd0a360845a'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/42e11366b38e106c8ad071b011d41861'>World's Biggest Data Breaches</a>", "uid": "apolan_b450cdd26523642c1286a8f850a536b9"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar  pC = pieChart(tF); // create the pie-chart.\n  var leg= legend(tF);  // create the legend.\t\n\tvar hG = histoGram(sF); // create the histogram.\n  \t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n          p[i].style.fontWeight=\"normal\";\n        }else{\n          if(status != name.method ){\n          \t  \n          }\n          try {\n      \t\t\tdocument.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {}\n      \t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n     \n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n    \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    \n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "fresh block", "created_at": "2016-09-27T20:53:24Z", "updated_at": "2016-09-27T20:53:24Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/3845b2a1ebddd45ea0bd8dd0a360845a'>fresh block</a>", "uid": "apolan_42e11366b38e106c8ad071b011d41861"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar  pC = pieChart(tF); // create the pie-chart.\n  var leg= legend(tF);  // create the legend.\t\n\tvar hG = histoGram(sF); // create the histogram.\n  \t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n          p[i].style.fontWeight=\"normal\";\n        }else{\n          if(status != name.method ){\n          \t  \n          }\n          try {\n      \t\t\tdocument.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {}\n      \t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n     \n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n    \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    \n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "fresh block", "created_at": "2016-09-27T20:53:17Z", "updated_at": "2016-09-27T20:53:17Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "apolan_3845b2a1ebddd45ea0bd8dd0a360845a"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#e54e25\", inside:\"#018040\",accidentally:\"#9a3a96\",lost:\"#2c3e50\",poor:\"#593718\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n  var status = 'none';\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){      \n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        \n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else if(status != name.method){\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          if(status != name.method ){\n          \tp[i].style.fontWeight=\"normal\";  \n          }\n               try {\n      document.getElementById(\"p_\"+name.method).remove();  \t\n\t\t\t}\n\t\tcatch(err) {\n \t\t}\n      \t\t\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n\n  \n  function action_hacked() {\n     if(status == 'hacked'){\n       return;\n     }\n   \n    window.alert(\"entra hacked: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'hacked';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'hacked';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n     \n    var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){   \n        if(p[i].id == status+\"_style\"){ \n           p[i].style.fontWeight=\"normal\";\n        }\n      }\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n    \n  }\n  \n    function action_inside() {\n     if(status == 'inside'){\n       return;\n     }\n    window.alert(\"entra inside: \" + status);\n    \n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'inside';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'inside';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    \n   \n    }\n  \n    function action_lost() {\n     if(status == 'lost'){\n       return;\n     }\n    window.alert(\"entra lost\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'lost';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'lost';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n    function action_accidentally() {\n     if(status == 'accidentally'){\n       return;\n     }\n    window.alert(\"entra accidentally\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'accidentally';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'accidentally';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n  }\n  \n  \n    function action_poor() {\n     if(status == 'poor'){\n       return;\n     }\n    window.alert(\"entra poor\");\n    if(status != 'none'){\n  \t  document.getElementById(\"p_2\"+status).remove();\n      status = 'poor';\n      var p1 = document.getElementById(\"p_\"+status);\n      p1.setAttribute(\"id\",\"p_2\"+status);\n    }else{\n\t\t\tstatus = 'poor';\n   \t\tvar p1 = document.getElementById(\"p_\"+status);\n    \tp1.setAttribute(\"id\",\"p_2\"+status);\n    }\n    }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:43:49Z", "updated_at": "2016-09-27T20:39:12Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/dd366a46fdf36a20c13d1b9feb4bf360'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8a3bca89ab69d0c7f18999c49cd07bb0'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/eefbf8a634c47a355133a1c9ef7626ec'>World's Biggest Data Breaches1</a>", "uid": "apolan_f5b1cc1c6a98bf5e00b9b4cb92bbf261"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:32:25Z", "updated_at": "2016-09-27T19:43:48Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/dd366a46fdf36a20c13d1b9feb4bf360'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8a3bca89ab69d0c7f18999c49cd07bb0'>World's Biggest Data Breaches1</a>", "uid": "apolan_eefbf8a634c47a355133a1c9ef7626ec"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:30:37Z", "updated_at": "2016-09-27T19:30:37Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/dd366a46fdf36a20c13d1b9feb4bf360'>World's Biggest Data Breaches1</a>", "uid": "apolan_8a3bca89ab69d0c7f18999c49cd07bb0"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:28:43Z", "updated_at": "2016-09-27T19:28:43Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/e7b8bb30c2824dac837743397ac120e7'>World's Biggest Data Breaches1</a>", "uid": "apolan_dd366a46fdf36a20c13d1b9feb4bf360"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:27:41Z", "updated_at": "2016-09-27T19:27:42Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f544e6f2a795c4d080d1096b2811d874'>World's Biggest Data Breaches1</a>", "uid": "apolan_e7b8bb30c2824dac837743397ac120e7"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:26:56Z", "updated_at": "2016-09-27T19:26:56Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/d333b5f5e38c55d4914df30bdcd7bdf9'>World's Biggest Data Breaches1</a>", "uid": "apolan_f544e6f2a795c4d080d1096b2811d874"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:26:03Z", "updated_at": "2016-09-27T19:26:03Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/16c60f32c2cbc187689546b0228cc9cf'>World's Biggest Data Breaches1</a>", "uid": "apolan_d333b5f5e38c55d4914df30bdcd7bdf9"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:25:15Z", "updated_at": "2016-09-27T19:25:15Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ff1d445a5f258d15642c2db9a3a350d4'>World's Biggest Data Breaches1</a>", "uid": "apolan_16c60f32c2cbc187689546b0228cc9cf"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:22:19Z", "updated_at": "2016-09-27T19:22:19Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/8e147b3a6df133f8382d62456fb5a195'>World's Biggest Data Breaches1</a>", "uid": "apolan_ff1d445a5f258d15642c2db9a3a350d4"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:21:33Z", "updated_at": "2016-09-27T19:22:14Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/ad60c13c34ec6b9f5e24704ed044670f'>World's Biggest Data Breaches1</a>", "uid": "apolan_8e147b3a6df133f8382d62456fb5a195"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:10:59Z", "updated_at": "2016-09-27T19:10:59Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/0d2b2dc43fbdc1d30c4fb1aab3c5ea0a'>World's Biggest Data Breaches1</a>", "uid": "apolan_ad60c13c34ec6b9f5e24704ed044670f"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:10:26Z", "updated_at": "2016-09-27T19:10:26Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/a2e4a101c3e40087233129ac543b8898'>World's Biggest Data Breaches1</a>", "uid": "apolan_0d2b2dc43fbdc1d30c4fb1aab3c5ea0a"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:09:21Z", "updated_at": "2016-09-27T19:10:18Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/5894e4fe188966b8e48bd23e4b7b66fb'>World's Biggest Data Breaches1</a>", "uid": "apolan_a2e4a101c3e40087233129ac543b8898"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:08:31Z", "updated_at": "2016-09-27T19:08:31Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9ccd1766410275a223944f7782308669'>World's Biggest Data Breaches1</a>", "uid": "apolan_5894e4fe188966b8e48bd23e4b7b66fb"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:06:47Z", "updated_at": "2016-09-27T19:06:47Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/1b05b8274792a54d35d9f78afe2c6e5b'>World's Biggest Data Breaches1</a>", "uid": "apolan_9ccd1766410275a223944f7782308669"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:06:02Z", "updated_at": "2016-09-27T19:06:02Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/82eb96fb0b4bc0c2561f9ae460125b17'>World's Biggest Data Breaches1</a>", "uid": "apolan_1b05b8274792a54d35d9f78afe2c6e5b"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:04:42Z", "updated_at": "2016-09-27T19:04:42Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/f1d01b567b46dea43a5703963466781b'>World's Biggest Data Breaches1</a>", "uid": "apolan_82eb96fb0b4bc0c2561f9ae460125b17"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-27T19:00:23Z", "updated_at": "2016-09-27T19:04:15Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/9dd1ec5c7529a419db0336bb906fd192'>World's Biggest Data Breaches1</a>", "uid": "apolan_f1d01b567b46dea43a5703963466781b"}, {"code": "<script>\n  var start = Date.now();\n  var svg = d3.select('svg');\n  var cyclerColors = ['hsl(273, 100%, 50%)', 'hsl(212, 100%, 50%)', 'hsl(127, 100%, 50%)', 'hsl(52, 100%, 50%)', 'hsl(35, 100%, 50%)', 'hsl(341, 100%, 50%)'];\n  var cyx = 0;\n  var cyLen = cyclerColors.length;\n  var cyclers = d3.selectAll('.cycler');\n  var points = [[500.948995,905.346405], [395.340687,799.738097], [409.437025,773.544805], [417.43529,743.583227], [417.43529,711.753555], [417.43529,609.068457], [334.192571,525.825738], [231.507474,525.825738], [175,525.825738], [175,380], [231.507474,380], [414.729902,380], [563.261028,528.531126], [563.261028,711.753555], [563.261028,784.006278], [540.163333,850.864247], [500.948995,905.346405], [500.948995,905.276555], [440.721461,988.953248], [342.477178,1043.43726], [231.507474,1043.43726], [175,1043.43726], [175,897.61152], [231.507474,897.61152], [302.362898,897.61152], [363.961099,857.976633], [395.340687,799.668246], [500.948995,905.276555],[871.239524,876.842108], [881.607931,818.931422], [866.342126,758.316347], [827.595698,711.753555], [877.796722,651.425417], [888.581847,567.508324], [855.267199,496.446652], [821.95255,425.38498], [750.548548,379.999234], [672.065257,380], [438.744076,380], [438.744076,380], [496.156385,415.962562], [543.253253,466.20887], [575.429457,525.825738], [672.057966,525.825738], [692.246142,525.825738], [710.900786,536.596001], [720.994874,554.079475], [731.088963,571.562948], [731.088963,593.103476], [720.994874,610.586949], [710.900786,628.070422], [692.246142,638.840686], [672.057966,638.840685], [633.238095,638.840685], [871.239523,876.842113],[634.495842,638.840685], [871.475641,875.820485], [868.44033,893.290466], [863.075829,910.523553], [855.323111,927.060457], [822.008462,998.122129], [750.60446,1043.50788], [672.121169,1043.50711], [639.12732,1043.50711], [543.343182,947.722971], [555.269613,931.93619], [566.02272,915.214001], [575.485369,897.681371], [672.113878,897.681371], [692.302054,897.681371], [710.956698,886.911108], [721.050787,869.427634], [731.144875,851.944161], [731.144875,830.403633], [721.050787,812.92016], [710.956698,795.436687], [692.302054,784.666423], [672.113878,784.666424], [615.606404,784.666424], [624.739964,736.486894], [624.739964,687.020215], [615.606404,638.840685], [634.495842,638.840685]];\n  var ptLen = points.length;\n  var colors = ['hsl(341, 100%, 50%)', 'hsl(359, 100%, 50%)', 'hsl(18, 100%, 50%)', 'hsl(35, 100%, 50%)', 'hsl(52, 100%, 50%)', 'hsl(83, 100%, 50%)', 'hsl(127, 100%, 50%)', 'hsl(160, 100%, 50%)', 'hsl(190, 100%, 50%)', 'hsl(212, 100%, 50%)', 'hsl(227, 100%, 50%)', 'hsl(242, 100%, 50%)', 'hsl(259, 100%, 50%)', 'hsl(273, 100%, 50%)', 'hsl(296, 100%, 50%)'];\n  var cLen = colors.length;\n  var clx = 0;\n  var circles = [];\n  var stopCycling = false;\n\n  //console.log(cyclerColors.reverse());\n\n  function setCycleColors() {\n    cyclers.each(function() {\n      cyx = cyx < cyLen ? cyx : 0;\n      d3.select(this)\n        .attr('fill', cyclerColors[cyx])\n        .datum({'cyx': cyx});\n      cyx += 1;\n    });\n  }\n\n  setCycleColors();\n\n  function cycleColors() {\n    if(stopCycling) { return; }\n    cyclers.each(function(d) {\n      var idx = d.cyx + 1 < cyLen ? d.cyx + 1 : 0;\n      d3.select(this)\n        .attr('fill', cyclerColors[idx])\n        .datum({'cyx': idx});\n    });\n    setTimeout(cycleColors, 200);\n  }\n\n  cycleColors();\n\n  points.forEach(function(point) {\n    clx = clx < cLen ? clx : 0;\n    var circle = {};\n    circle.reqX = point[0];\n    circle.reqY = point[1];\n    circle.fill = colors[clx];\n    circles.push(circle);\n    clx += 1;\n  });\n\n  var sim = d3.forceSimulation()\n        .force('charge', d3.forceManyBody().distanceMax(50))\n        .force('center', d3.forceCenter( 525, 737 ))\n        .alphaDecay(0.06);\n\n  var circs = svg.selectAll('circle')\n        .data(circles)\n        .enter()\n        .append('circle')\n          .attr('r', 5)\n          .attr('fill', function(d) { return d.fill })\n          .attr('transform', 'translate(525,750)')\n          .attr('opacity', 1);\n\n  sim\n    .nodes(circles)\n    .on('tick', function() {\n      circs\n        .attr('transform', function(d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        });\n    })\n    .on('end', function() {\n      var elapsed = Date.now() - start;\n      console.log('force end: ' + elapsed + 'ms');\n      circs.each(function(p, i) {\n        d3.select(this)\n          .transition()\n          .duration(300)\n            .attr('transform', function(d) {\n              return 'translate(' + d.reqX + ',' + d.reqY + ')';\n            })\n          .on('end', function () {\n            var elapsed = Date.now() - start;\n            if (i + 1 == cLen) {\n              console.log('move end: ' + elapsed + 'ms');\n              blowUpCircs();\n              appendPaths();\n            }\n          });\n      });\n    });\n\n  function blowUpCircs() {\n    var px = 0;\n    circs\n      .transition()\n      .delay(200)\n      .duration(700)\n      .attr('r', 30)\n      .attr('opacity', 0)\n      .on('end', function () {\n        var elapsed = Date.now() - start;\n        px += 1;\n        if (px == ptLen) {\n          console.log('blowup end: ' + elapsed + 'ms');\n        }\n      });\n  }\n\n  function appendPaths() {\n    var paths = [\n         { id: \"dee-top\", style: \"fill:url(#lg-dt)\", points: [[\"M500.948995\",\"905.346405\"], [\"L395.340687\",\"799.738097\"], [\"C409.437025\",\"773.544805\"], [\"417.43529\",\"743.583227\"], [\"417.43529\",\"711.753555\"], [\"C417.43529\",\"609.068457\"], [\"334.192571\",\"525.825738\"], [\"231.507474\",\"525.825738\"], [\"L175\",\"525.825738\"], [\"L175\",\"380\"], [\"L231.507474\",\"380\"], [\"C414.729902\",\"380\"], [\"563.261028\",\"528.531126\"], [\"563.261028\",\"711.753555\"], [\"C563.261028\",\"784.006278\"], [\"540.163333\",\"850.864247\"], [\"500.948995\",\"905.346405\"]] },\n         { id: \"dee-bottom\", style: \"fill:url(#lg-b)\", points: [[\"M500.948995\",\"905.276555\"], [\"C440.721461\",\"988.953248\"], [\"342.477178\",\"1043.43726\"], [\"231.507474\",\"1043.43726\"], [\"L175\",\"1043.43726\"], [\"L175\",\"897.61152\"], [\"L231.507474\",\"897.61152\"], [\"C302.362898\",\"897.61152\"], [\"363.961099\",\"857.976633\"], [\"395.340687\",\"799.668246\"], [\"L500.948995\",\"905.276555\"]] },\n         { id: \"three-top\", style: \"fill:url(#lg-3t)\", points: [[\"M871.239524\",\"876.842108\"], [\"C881.607931\",\"818.931422\"], [\"866.342126\",\"758.316347\"], [\"827.595698\",\"711.753555\"], [\"C877.796722\",\"651.425417\"], [\"888.581847\",\"567.508324\"], [\"855.267199\",\"496.446652\"], [\"C821.95255\",\"425.38498\"], [\"750.548548\",\"379.999234\"], [\"672.065257\",\"380\"], [\"L438.744076\",\"380\"], [\"L438.744076\",\"380\"], [\"C496.156385\",\"415.962562\"], [\"543.253253\",\"466.20887\"], [\"575.429457\",\"525.825738\"], [\"L672.057966\",\"525.825738\"], [\"C692.246142\",\"525.825738\"], [\"710.900786\",\"536.596001\"], [\"720.994874\",\"554.079475\"], [\"C731.088963\",\"571.562948\"], [\"731.088963\",\"593.103476\"], [\"720.994874\",\"610.586949\"], [\"C710.900786\",\"628.070422\"], [\"692.246142\",\"638.840686\"], [\"672.057966\",\"638.840685\"], [\"L633.238095\",\"638.840685\"], [\"L871.239523\",\"876.842113\"]] },\n         { id: \"three-mid\", style: \"fill:url(#lg-3m)\", points: [[\"M634.495842\",\"638.840685\"], [\"L871.475641\",\"875.820485\"], [\"C868.44033\",\"893.290466\"], [\"863.075829\",\"910.523553\"], [\"855.323111\",\"927.060457\"], [\"C822.008462\",\"998.122129\"], [\"750.60446\",\"1043.50788\"], [\"672.121169\",\"1043.50711\"], [\"L639.12732\",\"1043.50711\"], [\"L543.343182\",\"947.722971\"], [\"C555.269613\",\"931.93619\"], [\"566.02272\",\"915.214001\"], [\"575.485369\",\"897.681371\"], [\"L672.113878\",\"897.681371\"], [\"C692.302054\",\"897.681371\"], [\"710.956698\",\"886.911108\"], [\"721.050787\",\"869.427634\"], [\"C731.144875\",\"851.944161\"], [\"731.144875\",\"830.403633\"], [\"721.050787\",\"812.92016\"], [\"C710.956698\",\"795.436687\"], [\"692.302054\",\"784.666423\"], [\"672.113878\",\"784.666424\"], [\"L615.606404\",\"784.666424\"], [\"C624.739964\",\"736.486894\"], [\"624.739964\",\"687.020215\"], [\"615.606404\",\"638.840685\"], [\"L634.495842\",\"638.840685\"]] },\n         { id: \"three-bottom\", style: \"fill:url(#lg-b)\", points: [[\"M639.109699\",\"1043.50711\"], [\"L438.744076\",\"1043.50711\"], [\"C479.279866\",\"1018.11585\"], [\"514.673385\",\"985.604107\"], [\"543.303748\",\"947.701158\"], [\"L639.109699\",\"1043.50711\"]] }\n        ];\n    var pax = 0;\n    var paLen = paths.length;\n\n    paths.forEach(function(path) {\n      var d = '';\n      var logoEl;\n      path.points.forEach(function(point){\n        d += point[0] + ',' + point[1] + ' ';\n      });\n      d += ' Z';\n      logoEl = svg.append('path')\n        .attr('id', path.id)\n        .attr('style', path.style)\n        .attr('opacity', 0)\n        .attr('d', d);\n\n      logoEl\n        .transition()\n        .delay(600)\n        .duration(600)\n          .attr('opacity', 1)\n        .on('end', function() {\n          var elapsed = Date.now() - start;\n          pax += 1;\n          if (pax == paLen) {\n            console.log('logo end: ' + elapsed + 'ms');\n            stopCycling = true;\n          }\n        });\n    });\n  }\n</script>", "description": "D3 badge for viSFest", "created_at": "2016-09-27T04:55:13Z", "updated_at": "2016-09-28T07:14:19Z", "api": ["d3.select", "d3.selectAll", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter"], "readme": "Badge for d3 viSFest unconf 2016\n\nuses forceSimulation and transitions.\n\ntweaked for [badgetron](http://badgetron.com) using [blockbuilder](http://blockbuilder.org)", "uid": "kenpenn_02163b2968906ad90857cdf681c0304b"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {Hacked:\"#807dba\", inside:\"#e08214\",accidentally:\"#79cccc\",lost:\"#9440aa\",poor:\"#7a2e30\"}[c]; }\n    \n    // compute total for each year.\n    fData.forEach(function(d){d.total=d.freq.Hacked+d.freq.inside+d.freq.accidentally+d.freq.lost+d.freq.poor;\n                             });\n   \n  \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; }));\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.svg.axis().scale(x).orient(\"bottom\"));\n\n        // Create function for y-axis map.\n        var y = d3.scale.linear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){                                             \n                                  \n     if (d[1] >= 1000000000) {\n        return (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n     }\n     if (d[1] >= 1000000) {\n        return (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (d[1] >= 1000) {\n        return (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return d[1];            \n                                                                       })\n            .attr(\"x\", function(d) { return x(d[0])+x.rangeBand()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.year == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){\n                   if (d[1] >= 1000000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000000) {\n\t\t\t\t\t\treturn (d[1] / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n\t\t\t\t\t}\n\t\t\t\t\tif (d[1] >= 1000) {\n\t\t\t\t\t\treturn (d[1] / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n\t\t\t\t\t}\n\t\t\t\t\treturn d[1];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", function(d) {return y(d[1])-5; });\n\t\t\t\t\t\t}        \n\t\t\t\t\t\treturn hG;\n\t\t\t\t\t}\n    \n    // function to handle pieChart.\n    function pieChart(pD){\n        var pC ={},    pieDim ={w:250, h: 250};\n        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;\n                \n        // create svg for pie chart.\n        var piesvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", pieDim.w).attr(\"height\", pieDim.h).append(\"g\")\n            .attr(\"transform\", \"translate(\"+pieDim.w/2+\",\"+pieDim.h/2+\")\");\n        \n        // create function to draw the arcs of the pie slices.\n        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);\n\n        // create a function to compute the pie slice angles.\n        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });\n\n        // Draw the pie slices.\n        piesvg.selectAll(\"path\").data(pie(pD)).enter().append(\"path\").attr(\"d\", arc)\n            .each(function(d) { this._current = d; })\n            .style(\"fill\", function(d) { return segColor(d.data.type); })\n            .on(\"mouseover\",mouseover).on(\"mouseout\",mouseout);\n\n        // create function to update pie-chart. This will be used by histogram.\n        pC.update = function(nD){\n            piesvg.selectAll(\"path\").data(pie(nD)).transition().duration(500)\n                .attrTween(\"d\", arcTween);\n        }        \n        // Utility function to be called on mouseover a pie slice.\n        function mouseover(d){\n            // call the update function of histogram with new data.\n            hG.update(fData.map(function(v){ \n                return [v.year,v.freq[d.data.type]];}),segColor(d.data.type));\n        }\n        //Utility function to be called on mouseout a pie slice.\n        function mouseout(d){\n            // call the update function of histogram with all data.\n            hG.update(fData.map(function(v){\n                return [v.year,v.total];}), barColor);\n        }\n        // Animating the pie-slice requiring a custom function which specifies\n        // how the intermediate paths should be drawn.\n        function arcTween(a) {\n            var i = d3.interpolate(this._current, a);\n            this._current = i(0);\n            return function(t) { return arc(i(t));    };\n        }    \n        return pC;\n    }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['Hacked','inside','lost','accidentally','poor'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.year,d.total];});\n\n\t// Se modifica\n\tvar hG = histoGram(sF); // create the histogram.\n  var  pC = pieChart(tF); // create the pie-chart.\n       var leg= legend(tF);  // create the legend.\t\n\t\t\n    }\n\tfunction enable(){\n\t\tdashboard('#dashboard',freqData);\n\t}\n\t\n\tfunction deleteAll(){\n\t\tdocument.write(\" \");\n\t\t\n\t}\n  \n\t/*\n  Metodo que inicia la visualizacion\n  */\n  function startVis(){\n  var items=[{method:'hacked',label:'Hacked',description:'Story: Investigators believe the data was obtained via software installed on machines that customers use to swipe magnetic strips on their cards when paying for merchandise at Target stores. Originally 40m customers. Now 70m! of records', color:'#e54e25'},\n             {method:'inside',label:'Inside Job',description:'Story: Two multimedia discs containing the names, social security numbers, addresses, cell phone numbers, email addresses and workplaces of Korean customers sorted by age were stolen. They were found by an office worker in a backstreets trash pile in Seoul. Experts say a GS Caltex employee likely stole the information for personal purposes given there were no signs of hacking.', color:'#018040'},\n             {method:'lost',label:'Lost data',description:'Story: Names, Social Security numbers, health insurance identification numbers, health insurance information, dates of birth, diagnoses, other medical information, disability codes, addresses, and phone numbers may have been exposed via a laptop theft.', color:'#2c3e50'},\n             {method:'accidentally',label:'Accidentally published',description:'Story: An employee of the agency inadvertently sent the passport numbers, visa details and other personal identifiers of all world leaders attending the G20 Brisbane summit to the organisers of the Asian Cup football tournament. Barack Obama, Vladimir Putin, Angela Merkel, Xi Jinping, Narendra Modi, David Cameron and many others.', color:'#9a3a96'},\n             {method:'poor',label:'Poor Security',description:'Story: A freedom of information request resulted in the release of data on all 173 million journeys undertaken by New York taxis in one year. Unfortunately, the data was incorrectly anonymised and relatively easy to decode, revealing the driver IDs, pickup & dropoff times, and GPS routes taken for every single cab journey.', color:'#593718'}\n             ]    \n\t\n    var div_parent = document.createElement(\"div\");\n  \tdiv_parent.setAttribute(\"id\",\"div_parent\"); \n    div_parent.overflow = \"hidden\";\n    \n    // Creacion de la tabla de los elementos\n    var table = document.createElement(\"TABLE\");\n    table.setAttribute(\"id\", \"myTable\");\n    var rowPic = document.createElement(\"TR\");\n    rowPic.setAttribute(\"id\", \"rowPic\");\n    var rowNode = document.createElement(\"TR\");\n    rowNode.setAttribute(\"id\", \"rowNode\");\n    var rowStory = document.createElement(\"TR\");\n    rowStory.setAttribute(\"id\", \"rowStory\");\n    var td_story = document.createElement('TD');\n    td_story.setAttribute(\"id\",\"td_story\");\n\t\ttd_story.style.textAlign = 'center';\n    \n    \n    document.getElementById(\"root_div\").appendChild(div_parent);\n   \n    // loop de los elementos legenda\n    items.forEach(function(name){\n    var node = document.createElement(\"p\");\n    node.style.display=\"inline\";\n    node.id=name.method+\"_style\";\n   \tnode.style.margin =\"0px 0px 0px 0px\";\n    node.style.fontSize =\"x-large\";\n      \n    node.onmouseover = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"#A4A4A4\";\n        }else{\n          // Crea la descripcion del legend\n          p[i].style.fontWeight=\"bold\";\n          \n          rowStory.style.borderColor=name.color;\n          var p1 = document.createElement(\"p\");\n          p1.setAttribute(\"id\",\"p_\"+name.method);\n          p1.innerHTML=\"<br><br>\"+name.description;\n          p1.style.margin = \"5px 10px 5px 10px\";\n          p1.style.fontSize =\"large\";\n          p1.style.color =\"black\";\n          \n          td_story.appendChild(p1);\n          //td_story.appendChild(p1);\n          }\n\t\t\t}\n      p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n           p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_gray2.png';\n\n        }else{\n\n        }\n\t\t\t}\n    };\n      \n    node.onmouseout  = function(){\n      var p = document.getElementsByTagName(\"p\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_style\"){\n          p[i].style.color = \"black\";\n        }else{\n          //node.style.fontSize =\"medium\";\n          p[i].style.fontWeight=\"normal\";\n      \t\tdocument.getElementById(\"p_\"+name.method).remove();\n        }\n\t\t\t}\n      var p = document.getElementsByTagName(\"img\");\n      for(i = 0;i < p.length; i++){\n        if(p[i].id != name.method+\"_pic\"){\n          p[i].src =            p[i].src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+(p[i].id).replace(\"_pic\",\"\")+'_color2.png';\n        }else{\n          //node.style.fontSize =\"medium\";\n          //p[i].style.fontWeight=\"normal\";\n        }\n\t\t\t}\n    };\n      \n \n \n    node.innerHTML = name.label;\n    var img =  document.createElement('img');\n    img.src = 'https://cocreacionseguros.files.wordpress.com/2016/05/'+name.method+'_color2.png';\n    img.setAttribute(\"id\", name.method+\"_pic\");  \n    img.heigth=60;\n    img.width=60;\n    \n      \n     if(name.method==\"hacked\"){\n    \tnode.onclick=action_hacked;\n      img.onclick=action_hacked;\n    }else if(name.method==\"inside\"){\n    \tnode.onclick=action_inside;\n      img.onclick=action_inside;\n    }else if(name.method==\"lost\"){\n    \tnode.onclick=action_lost;\n      img.onclick=action_lost;\n    }else if(name.method==\"accidentally\"){\n    \tnode.onclick=action_accidentally;\n      img.onclick=action_accidentally;\n    }else if(name.method==\"poor\"){\n    \tnode.onclick=action_poor;\n      img.onclick=action_poor;\n    }  \n      \n    var col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.style.width = '2px';\n    col.style.textAlign = 'center';\n    col.appendChild(node);  \n    rowPic.appendChild(col);\n    \n    col = document.createElement('TD');\n    col.setAttribute(\"width\",\"150px\");\n    col.appendChild(img);\n    col.style.textAlign = 'center';\n    rowNode.appendChild(col);\n      \n\n      \n      \n    });\n    \n    td_story.colSpan = \"5\";\n\t\trowStory.appendChild(td_story);\n    \n    table.appendChild(rowNode);\n    table.appendChild(rowPic);\n    table.appendChild(rowStory);\n    div_parent.appendChild(table);\n     \n  }\n  \n  \n  \n  function action_hacked() {\n    \n    window.alert(\"entra hacke\");\n        // Creacion de la tabla de los elementos\n    var table = document.getElementById(\"myTable\");\n    \n    var rowPie = document.createElement(\"TR\");\n    rowPie.setAttribute(\"id\", \"rowPie\");\n    \n    var td_pie = document.createElement('TD');\n    td_pie.colSpan = \"5\";\n    td_pie.setAttribute(\"id\",\"td_pie\");\n\t\ttd_pie.style.textAlign = 'center';\n    rowPie.appendChild(td_pie);\n    \n    table.appendChild(rowPie);\n    \n    dashboard('#td_pie',freqData);\n    \n    \n  }\n  \n    function action_inside() {\n    window.alert(\"entra inside\");\n  }\n  \n    function action_lost() {\n    window.alert(\"entra lost\");\n  }\n  \n    function action_accidentally() {\n    window.alert(\"entra accidentally\");\n  }\n  \n  \n    function action_poor() {\n    window.alert(\"entra poor\");\n  }\n  startVis();\n  </script>\n\n\n\n  \n  \n  <script>\n    // Es el overview de la situacion\nvar freqData=[\n {year:'2004',freq:{Hacked:0, inside:92000000, lost:0, accidentally:0, poor:0}}\n,{year:'2005',freq:{Hacked:40000000, inside:0, lost:4100000, accidentally:0, poor:130000}}\n,{year:'2006',freq:{Hacked:4000000, inside:2600000, lost:43700000, accidentally:20000000, poor:0}}\n,{year:'2007',freq:{Hacked:106100000, inside:18190000, lost:31960000, accidentally:0, poor:0}}\n,{year:'2008',freq:{Hacked:24500000, inside:11100000, lost:18906000, accidentally:11600000, poor:0}}\n,{year:'2009',freq:{Hacked:176560000, inside:0, lost:80202000, accidentally:0, poor:0}}\n,{year:'2010',freq:{Hacked:5960000, inside:1000000, lost:9210000, accidentally:0, poor:0}}\n,{year:'2011',freq:{Hacked:198815000, inside:2500000, lost:21435000, accidentally:4580000, poor:1680000}}\n,{year:'2012',freq:{Hacked:462330000, inside:202000000, lost:800000, accidentally:27480000, poor:300000}}\n,{year:'2013',freq:{Hacked:294906000, inside:3700000, lost:4300000, accidentally:7680000, poor:300000}}\n,{year:'2014',freq:{Hacked:393000000, inside:20000000, lost:0, accidentally:0, poor:132000}}\n,{year:'2015',freq:{Hacked:187200000, inside:0, lost:0, accidentally:500000, poor:3950000}}\n,{year:'2016',freq:{Hacked:457670436, inside:68614105, lost:0, accidentally:0, poor:191000010}}\n];\n\n</script>", "description": "World's Biggest Data Breaches1", "created_at": "2016-09-26T19:29:30Z", "updated_at": "2016-09-27T19:00:10Z", "api": ["d3.select", "d3.scale.ordinal", "d3.svg.axis", "d3.scale.linear", "d3.max", "d3.keys", "d3.svg.arc", "d3.layout.pie", "d3.interpolate", "d3.format", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "apolan_9dd1ec5c7529a419db0336bb906fd192"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar nodes = d3.range(20).map(function() { return {radius: Math.random() * 12 + 4}; }),\n    root = nodes[0],\n    color = d3.scale.category10();\n\nroot.radius = 0;\nroot.fixed = true;\n\nvar force = d3.layout.force()\n    .gravity(0.05)\n    .charge(function(d, i) { return i ? 0 : -2000; })\n    .nodes(nodes)\n    .size([width, height]);\n\nforce.start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(nodes.slice(1))\n  .enter().append(\"circle\")\n    .attr(\"r\", function(d) { return d.radius; })\n    .style(\"fill\", function(d, i) { return color(i % 3); });\n\nforce.on(\"tick\", function(e) {\n//   var q = d3.geom.quadtree(nodes),\n//       i = 0,\n//       n = nodes.length;\n\n  // while (++i < n) q.visit(collide(nodes[i]));\n\n  svg.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; });\n});\n\nsvg.on(\"mousemove\", function() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n  force.resume();\n});\n\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\n</script>", "description": "Collision Detection", "created_at": "2016-09-26T15:35:23Z", "updated_at": "2016-09-26T15:35:23Z", "api": ["d3.range", "d3.scale.category10", "d3.layout.force", "d3.select", "d3.geom.quadtree", "d3.mouse"], "readme": "Mouseover to repel nodes. Adapted from my [talk on force layouts](http://vimeo.com/29458354). Compare to the [canvas version](/mbostock/3231307).\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3231298'>Collision Detection</a>", "uid": "iansinnott_d25e6ebe9526b3cc0b82344e13727309"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\nvar x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n  \nvar colours = d3.scaleOrdinal()\n    .range([\"#6F257F\", \"#CA0D59\"]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.area; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n      \t.attr(\"class\", \"axis axis--y\")\n      \t.call(d3.axisLeft(y).ticks(5).tickFormat(function(d) { return parseInt(d / 1000) + \"K\"; }).tickSizeInner([-width]))\n      .append(\"text\")\n    \t\t.attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Average House Price - ()\");\n\n    g.selectAll(\".bar\")\n      \t.data(data)\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.area); })\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.value); })\n        .attr(\"fill\", function(d) { return colours(d.area); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n      \t\t\t\t.html((d.area) + \"<br><span>\" + \"\" + (d.value) + \"</span>\");\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n    });\n</script>", "description": "Bar Chart with Tooltip with Tooltip D3 V4", "created_at": "2016-09-26T14:17:11Z", "updated_at": "2016-09-26T14:17:11Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>. \n\nit uses a json file storing area names and average house prices. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/274bf248fd0f362d64674920e85c1eb7'>Bar Chart with Tooltip with Tooltip D3 V4</a>\n\nforked from <a href='http://bl.ocks.org/Ananda90/'>Ananda90</a>'s block: <a href='http://bl.ocks.org/Ananda90/d4e8bbacefa42f1bc74caf82f971eea4'>Bar Chart with Tooltip with Tooltip D3 V4</a>", "uid": "Ananda90_45cb6fc5500665cb3bddb12a4a1c9345"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\nvar x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n  \nvar colours = d3.scaleOrdinal()\n    .range([\"#6F257F\", \"#CA0D59\"]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.area; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n      \t.attr(\"class\", \"axis axis--y\")\n      \t.call(d3.axisLeft(y).ticks(5).tickFormat(function(d) { return parseInt(d / 1000) + \"K\"; }).tickSizeInner([-width]))\n      .append(\"text\")\n    \t\t.attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Average House Price  ()\");\n\n    g.selectAll(\".bar\")\n      \t.data(data)\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.area); })\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.value); })\n        .attr(\"fill\", function(d) { return colours(d.area); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n      \t\t\t\t.html((d.area) + \"<br><span>\" + \"\" + (d.value) + \"</span>\");\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n    });\n</script>", "description": "Bar Chart with Tooltip with Tooltip D3 V4", "created_at": "2016-09-26T14:03:06Z", "updated_at": "2016-09-26T14:21:45Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>. \n\nit uses a json file storing area names and average house prices. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/274bf248fd0f362d64674920e85c1eb7'>Bar Chart with Tooltip with Tooltip D3 V4</a>", "uid": "Ananda90_d4e8bbacefa42f1bc74caf82f971eea4"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar parseTime = d3.timeParse(\"%Y\")\n    bisectDate = d3.bisector(function(d) { return d.year; }).left;\n\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.year); })\n    .y(function(d) { return y(d.value); });\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    data.forEach(function(d) {\n      d.year = parseTime(d.year);\n      d.value = +d.value;\n    });\n\n    x.domain(d3.extent(data, function(d) { return d.year; }));\n    y.domain([d3.min(data, function(d) { return d.value; }) / 1.005, d3.max(data, function(d) { return d.value; }) * 1.005]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(6).tickFormat(function(d) { return parseInt(d / 1000) + \"k\"; }))\n      .append(\"text\")\n        .attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Population\");\n\n    g.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line);\n\n    var focus = g.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n    focus.append(\"line\")\n        .attr(\"class\", \"x-hover-line hover-line\")\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height);\n\n    focus.append(\"line\")\n        .attr(\"class\", \"y-hover-line hover-line\")\n        .attr(\"x1\", width)\n        .attr(\"x2\", width);\n\n    focus.append(\"circle\")\n        .attr(\"r\", 6);\n\n    focus.append(\"text\")\n        .attr(\"x\", 15)\n      \t.attr(\"dy\", \".31em\");\n\n    svg.append(\"rect\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    function mousemove() {\n      var x0 = x.invert(d3.mouse(this)[0]),\n          i = bisectDate(data, x0, 1),\n          d0 = data[i - 1],\n          d1 = data[i],\n          d = x0 - d0.year > d1.year - x0 ? d1 : d0;\n      focus.attr(\"transform\", \"translate(\" + x(d.year) + \",\" + y(d.value) + \")\");\n      focus.select(\"text\").text(function() { return d.value; });\n      focus.select(\".x-hover-line\").attr(\"y2\", height - y(d.value));\n      focus.select(\".y-hover-line\").attr(\"x2\", width + width);\n    }\n});\n\n</script>", "description": "Line Chart with Circle Tooltip D3 V4", "created_at": "2016-09-26T13:33:46Z", "updated_at": "2016-09-26T13:33:46Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3883245'>Line Chart</a>\n\nit uses a json file storing year values and population values. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/cfb7dcd7951826b9eacd54f0647f48d3'>Line Chart with Circle Tooltip D3 V4</a>", "uid": "Ananda90_fe3056ca5c47fd949cdb4a4df6513e9a"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 50, bottom: 30, left: 100},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n  \nvar x = d3.scaleLinear().range([0, width]);\nvar y = d3.scaleBand().range([height, 0]);\n\nvar g = svg.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nd3.json(\"data.json\", function(error, data) {\n  \tif (error) throw error;\n  \n  \tdata.sort(function(a, b) { return a.value - b.value; });\n  \n  \tx.domain([0, d3.max(data, function(d) { return d.value; })]);\n    y.domain(data.map(function(d) { return d.area; })).padding(0.1);\n\n    g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n       \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n      \t.call(d3.axisBottom(x).ticks(5).tickFormat(function(d) { return parseInt(d / 1000); }).tickSizeInner([-height]));\n\n    g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(d3.axisLeft(y));\n\n    g.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", 0)\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", function(d) { return y(d.area); })\n        .attr(\"width\", function(d) { return x(d.value); })\n        .on(\"mousemove\", function(d){\n      // Replace hard coded vals (50, 90) with 50% of the tooltip wioth and height + a top buffer\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 90 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html((d.area) + \"<br><span>\" + \"\" + (d.value) + \"</span>\");\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n});\n</script>", "description": "Horizontal Bar Chart with Tooltip D3 V4", "created_at": "2016-09-26T10:28:16Z", "updated_at": "2016-09-26T14:22:02Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart shows average house prices in various areas of Liverpool, UK\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/alandunning/'>alandunning</a>'s block: <a href='http://bl.ocks.org/alandunning/7008d0332cc28a826b37b3cf6e7bd998'>Horizontal Bar Chart with Tooltip D3 V4</a>", "uid": "Ananda90_c181d1fc7b6e5acd63f2155319387412"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 20, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  svg.selectAll(\".bar\") \n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth() + 1)\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(pokemon) {      \n      y.domain([0, pokemon.value+1]);\n      \n      svg.selectAll(\".bar\")\n        .attr(\"class\", function(d) {\n          if (d.value <= 2 * (+pokemon.value) && d.pokemon == pokemon.pokemon) {\n            return \"bar \" + d.type;            \n          } else if (d.value <= 2 * (+pokemon.value)) {\n            return \"bar \" + d.type + \" dim\";\n          } else {\n            return \"bar \" + d.type + \" grayedout\";\n          }\n        })\n        .attr(\"x\", function(d) {\n          return x(d.pokemon);\n        })\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", pokemon.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(pokemon.pokemon + \"\\n\" + pokemon.type.split(\"_\").join(\",\") + \"\\n\" + pokemon.value);\n       \n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function() {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function() {\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon #2", "created_at": "2016-09-26T08:28:01Z", "updated_at": "2016-09-26T08:43:43Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "New version of Pokemon, designed with [Syntagmatic](http://bl.ocks.org/syntagmatic). We also suspect this dataset is related to Pokemon Go. Mainly because of all the Pidgeys.\n", "uid": "dhoboy_116056d5a74c478c49058952fc14b98c"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  var bars = svg.selectAll(\".bar\") \n    .data(poke);\n\n  bars.enter()\n    .append(\"rect\")\n    .attr(\"id\", function(d,i) { \n      return d.pokemon; \n    })\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth() + 1)\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(pokemon) {\n      console.log(\"mouseover \" + pokemon.pokemon)\n       y.domain([0, pokemon.value+1]);\n       var filteredPoke = poke.filter(function(d) {\n        return +d.value <= +pokemon.value+1;\n       });\n\n       console.log(\"filteredPoke: \", filteredPoke)\n\n       //svg.select(\"#\" + d.pokemon)\n       var bars = svg.selectAll(\".bar\")\n         .data(filteredPoke, function(d) { return d.pokemon; }); // if a bar is out of the range, don't show\n \n       bars.exit().remove();\n\n       bars.enter()\n       .append(\"rect\")\n        .attr(\"id\", function(d,i) { \n          return d.pokemon; \n        })\n        .attr(\"class\", function(d) {\n          return \"bar \" + d.type;\n        })\n        .attr(\"x\", function(d) {\n          return x(d.pokemon);\n        })\n        .merge(bars)//.transition.duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", pokemon.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(pokemon.pokemon + \"\\n\" + pokemon.type.split(\"_\").join(\",\") + \"\\n\" + pokemon.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function(pokemon) {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function(pokemon) {\n      console.log(\"mouseout: \", pokemon.pokemon)\n       y.domain(d3.extent(poke, function(d) { return d.value; }));\n       //var filteredPoke = poke.filter(function(p) {\n       // return +p.value <= d.value+1;\n       //});\n\n       //svg.select(\"#\" + d.pokemon)\n       var bars = svg.selectAll(\".bar\")\n         .data(poke, function(d) { return d.pokemon; }); // if a bar is out of the range, don't show\n\n       bars.exit().remove();\n     \n       bars.enter()\n       .append(\"rect\")\n        .attr(\"id\", function(d,i) { \n          return d.pokemon; \n        })\n        .attr(\"class\", function(d) {\n          return \"bar \" + d.type;\n        })\n        .attr(\"x\", function(d) {\n          return x(d.pokemon);\n        })\n        .merge(bars)//.transition.duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n         \n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon 4", "created_at": "2016-09-26T07:31:02Z", "updated_at": "2016-09-26T07:38:16Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "dhoboy_8136f9742eac4dfa09643ee0d40fc1f9"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  var bars = svg.selectAll(\".bar\") \n    .data(poke);\n\n  bars.enter()\n    .append(\"rect\")\n    .attr(\"id\", function(d,i) { \n      return d.pokemon; \n    })\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(d) {\n       y.domain([0, d.value+1]);\n       svg.select(\"#\" + d.pokemon)\n       //.transition().duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       //svg.select(\".axis\")\n       //  .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", d.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(d.pokemon + \"\\n\" + d.type.split(\"_\").join(\",\") + \"\\n\" + d.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function(d) {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function(d) {\n       y.domain(d3.extent(poke, function(d) { return d.value; }));\n       svg.selectAll(\".bar\")\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n        \n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon 3", "created_at": "2016-09-26T06:47:35Z", "updated_at": "2016-09-26T06:55:33Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "dhoboy_16e9d71cec3b05b4da60b977e44e5d25"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n  var bars = svg.selectAll(\".bar\") \n    .data(poke);\n\n  bars.enter()\n    .append(\"rect\")\n    .attr(\"id\", function(d,i) { \n      return d.pokemon; \n    })\n    .attr(\"class\", function(d) {\n      return \"bar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar\";\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(d) {\n       y.domain([0, (d.value + 1)*2]);\n       //svg.select(\"#\" + d.pokemon)\n       svg.selectAll(\".bar\")\n       .transition().duration(550)\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n\n       svg.select(\".axis\")\n         .call(yAxis)\n             \n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", d.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(d.pokemon + \"\\n\" + d.type.split(\"_\").join(\",\") + \"\\n\" + d.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function(d) {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function(d) {\n       /*y.domain(d3.extent(poke, function(d) { return d.value; }));\n       svg.selectAll(\".bar\")\n         .attr(\"y\", function(d) {\n           return y(d.value);\n         })\n         .attr(\"height\", function(d) { return height - y(d.value); })\n        */\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon 2", "created_at": "2016-09-26T06:43:38Z", "updated_at": "2016-09-26T06:45:38Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "dhoboy_3b60a1892ecad3d5b28f71ab40ad5886"}, {"code": "<script>\n\nvar margin = {top: 20, right: 30, bottom: 50, left: 60};\nvar width = 1000 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.2)\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar yAxis = d3.axisLeft(y)\n  .ticks(10)\n\nvar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nd3.csv(\"pokemon.csv\", function(poke) {  \n  poke = poke.map(function(d) {\n    d.value = +d.value;\n    return d;\n  });\n\n  x.domain(poke.map(function(d) { return d.pokemon; }));\n  y.domain(d3.extent(poke, function(d) { return d.value; }));\n\n/*  var types = d3.nest()\n                .key(function(d) { return d.type; })\n                .entries(poke);\n\n  console.log(\"types: \", types) */\n\n  svg.selectAll(\".bar\") \n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return y(d.value);\n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height - y(d.value); })\n    .attr(\"class\", \"bar\")\n\n  svg.selectAll(\".topofbar\")\n    .data(poke)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", function(d) {\n      return \"topofbar \" + d.type;\n    })\n    .attr(\"x\", function(d) {\n      return x(d.pokemon);\n    })\n    .attr(\"y\", function(d) {\n      return 0; \n    })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", function(d) { return height; })\n    .on(\"mouseover\", function(d) {\n       tooltip.html(\"\");\n       tooltip.append(\"img\").attr(\"src\", d.thumb);\n       tooltip.append(\"pre\");\n       tooltip.select(\"pre\")\n         .text(d.pokemon + \"\\n\" + d.type.split(\"_\").join(\",\") + \"\\n\" + d.value);\n       return tooltip.style(\"visibility\", \"visible\");\n     })\n     .on(\"mousemove\", function() {\n       return tooltip.style(\"top\", (d3.event.pageY-20) + \"px\").style(\"left\", (d3.event.pageX+10) + \"px\");\n     })\n     .on(\"mouseout\", function() {\n       return tooltip.style(\"visibility\", \"hidden\");\n     });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .call(yAxis);\n});\n</script>", "description": "Pokemon", "created_at": "2016-09-26T05:26:15Z", "updated_at": "2016-09-26T05:38:31Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.select", "d3.csv", "d3.extent", "d3.nest"], "readme": "Meaningless Pokemon data from pastebin graphed. Supplemented with types and thumbnails from [bulbapedia](http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_National_Pok%C3%A9dex_number).\nHover colors from [iwanthue](http://tools.medialab.sciences-po.fr/iwanthue/) based on the Pokemon's type.", "uid": "dhoboy_1178601925731459c224bd4d69a1791d"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 60, right: 20, bottom: 110, left: 100},\n    margin2 = {top: 60, right: 590, bottom: 100, left: 400},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    width2 = +svg.attr(\"width\") - margin2.right;\n \nvar parseTime = d3.timeParse(\"%Y\");\nvar x = d3.scaleTime().range([7, width-10]), \n    x2 = d3.scaleTime().range([7, width2]),\n    y = d3.scaleLinear().range([1,height-10]),\n    y2 = y.copy();\n \nvar xAxis = d3.axisTop(x),\n    yAxis = d3.axisLeft(y);\n\n  var force = d3.forceManyBody()\n      .strength(10);\n\n  var simulation = d3.forceSimulation()\n      .force(\"charge\", force)\n  \nvar brush = d3.brushY()\n    .extent([[0, 0], [width2, height]])\n    .on(\"brush\", brushed);\n  \nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  \t.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  \nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + 20 + \",\" + 58 + \")\");\n  \nd3.csv(\"Data_Breaches.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  \n  x.domain(d3.extent(data, function(d) { return d.Year; }));\n  y.domain([d3.min(data, function(d) { return d.RecordsStolen; }), d3.max(data, function(d) { return d.RecordsStolen; })]);\n  x2.domain(x.domain());\n  y2.domain(y.domain()); \nvar div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n  \n  // set the colour scale\n  var color = d3.scaleOrdinal(d3.schemeCategory20);\n// append scatter plot to main chart area \n var dots = focus.append(\"g\");\n    dots.attr(\"clip-path\", \"url(#clip)\");\n    dots.selectAll(\"dot\") \n        .data(data)\n        .enter()\n      \t.append(\"circle\")\n        .attr('class', 'dot')\n        .attr(\"r\",3)\n        .style(\"opacity\", .7)\n        .attr(\"cx\", function(d) { return x(d.Year); })\n        .attr(\"cy\", function(d) { return y(d.RecordsStolen); })\n      .style(\"fill\", function(d) { return color(d.MethodOfLeak); })\n \n.on(\"mouseover\", function(d) {\n       div.transition()\n         .duration(200)\n      .style(\"background-color\", color(d.MethodOfLeak) )\n         .style(\"opacity\", .9);\n    div .html(\n        '<a href= \"'+d.Source+'\" target=\"_blank\">' + //with a link\n        d.Entity +\n        \"</a>\" +\n        \"<br/>\"  + numberWithCommas(d.RecordsStolen)+\n        \"<br/>\"  + d.MethodOfLeak)     \n        .style(\"left\", (d3.event.pageX+10) + \"px\")             \n        .style(\"top\", (d3.event.pageY - 28) + \"px\");\n       });\n  \nfocus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .call(xAxis);\n\nfocus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n      \nfocus.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 0 - margin.left)\n      .attr(\"x\",0 - (height / 2))\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Records Stolen\");  \n      \nsvg.append(\"text\")             \n      .attr(\"transform\",\n            \"translate(\" + ((width + margin.right + margin.left)/2) + \" ,\" + 30 + \")\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Year\");\n        \n\ncontext.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, y2.range());\n  \n});\n\n\n//create brush function redraw scatterplot with selection\nfunction brushed() {\n  \n  var selection = d3.event.selection;\n  y.domain(selection.map(y2.invert, y));\n  focus.selectAll(\".dot\")\n        .attr(\"cx\", function(d) { return x(d.Year); })\n        .attr(\"cy\", function(d) { return y(d.RecordsStolen); });\n  focus.select(\".axis--y\").call(yAxis);\n}\n\n\n  \nfunction type(d) {\n  d.Year = parseTime(d.Year);\n  d.RecordsStolen = +d.RecordsStolen;\n  return d;\n}\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n</script>", "description": "Data Breaches zoom", "created_at": "2016-09-25T22:04:55Z", "updated_at": "2016-09-30T15:45:39Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.axisTop", "d3.axisLeft", "d3.forceManyBody", "d3.forceSimulation", "d3.brushY", "d3.csv", "d3.extent", "d3.min", "d3.max", "d3.scaleOrdinal"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "davidgutierrez_858fa2687bc3067c6f1a58c944050709"}, {"code": "<script>\n\nvar margin = {top: 30, right: 40, bottom: 20, left: 200},\n    width = 900 - margin.left - margin.right,\n    height = 800 - margin.top - margin.bottom;\n\nvar dimensions = [\n  /*{\n    name: \"Entity\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: \"string\"\n  },*/\n  {\n    name: \"Year\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: \"string\"\n  },\n  {\n    name: \"RecordsLost\",\n    scale: d3.scale.linear().range([0,height]),\n    type: \"number\"\n  },\n  {\n    name: \"MethodLeak\",\n    scale: d3.scale.ordinal().rangePoints([0, height]),\n    type: \"string\"\n  },\n];\n\nvar x = d3.scale.ordinal()\n    .domain(dimensions.map(function(d) { return d.name; }))\n    .rangePoints([0, width]);\n\nvar line = d3.svg.line()\n    .defined(function(d) { return !isNaN(d[1]); });\n\nvar yAxis = d3.svg.axis()\n    .orient(\"left\");\n\nvar div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar dimension = svg.selectAll(\".dimension\")\n    .data(dimensions)\n  .enter().append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x(d.name) + \")\"; });\n\nd3.csv(\"DataLeak.csv\", function(data) {\n  dimensions.forEach(function(dimension) {\n    dimension.scale.domain(dimension.type === \"number\"\n        ? d3.extent(data, function(d) { return +d[dimension.name]; })\n        : data.map(function(d) { return d[dimension.name]; }).sort());\n  });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", draw);\n\n  dimension.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(yAxis.scale(d.scale)); })\n    .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d.name; });\n\n  var ordinal_labels = svg.selectAll(\".axis text\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  var projection = svg.selectAll(\".background path,.foreground path\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  function mouseover(d) {\n    svg.classed(\"active\", true).on(\"mouseover\", function (e) {\n          div.transition()\n             .duration(200)\n             .style(\"opacity\", .9);\n          div.html(d.Entity)\n             .style(\"left\", (d3.event.pageX) + \"px\")\n             .style(\"top\", (d3.event.pageY - 28) + \"px\");\n       })\n       .on(\"mouseout\", function (d) {\n            div.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        });\n\n    // this could be more elegant\n    if (typeof d === \"string\") {\n      \n      projection.classed(\"inactive\", function(p) { return p.name !== d; });\n      projection.filter(function(p) { return p.name === d; }).each(moveToFront);\n      ordinal_labels.classed(\"inactive\", function(p) { return p !== d; });\n      ordinal_labels.filter(function(p) { return p === d; }).each(moveToFront);\n    } else {\n      projection.classed(\"inactive\", function(p) { return p !== d; });\n      projection.filter(function(p) { return p === d; }).each(moveToFront);\n      ordinal_labels.classed(\"inactive\", function(p) { return p !== d.name; });\n      ordinal_labels.filter(function(p) { return p === d.name; }).each(moveToFront);\n    }\n  }\n\n  function mouseout(d) {\n    svg.classed(\"active\", false);\n    projection.classed(\"inactive\", false);\n    ordinal_labels.classed(\"inactive\", false);\n  }\n\n  function moveToFront() {\n    this.parentNode.appendChild(this);\n  }\n});\n\nfunction draw(d) {\n  return line(dimensions.map(function(dimension) {\n    return [x(dimension.name), dimension.scale(d[dimension.name])];\n  }));\n}\n\n</script>", "description": "BonoVisual", "created_at": "2016-09-25T04:15:36Z", "updated_at": "2016-09-27T02:55:18Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Franramy_5e7efcb2c53be893f3c1be6f456cce30"}, {"code": "<script>\nfunction dashboard(id, fData){\n    var barColor = 'steelblue';\n    function segColor(c){ return {hacked:\"#807dba\", Lost:\"#e08214\",InsideJob:\"#41ab5d\",Others:\"#aa406a\"}[c]; }\n    \n    // compute total for each state.\n    fData.forEach(function(d){d.total=d.freq.hacked+d.freq.Lost+d.freq.InsideJob+d.freq.Others;});\n    \n    // function to handle histogram.\n    function histoGram(fD){\n        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n     \n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scaleBand().range([0, hGDim.w], 0.1)\n                .domain(fD.map(function(d) { return d[0]; })).padding(.1);\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.axisBottom().scale(x));\n\n        // Create function for y-axis map.\n        var y = d3.scaleLinear().range([hGDim.h, 0])\n                .domain([0, d3.max(fD, function(d) { return d[1]; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars = hGsvg.selectAll(\".bar\").data(fD).enter()\n                .append(\"g\").attr(\"class\", \"bar1\");\n        \n        //create the rectangles.\n        bars.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d[0]); })\n            .attr(\"y\", function(d) { return y(d[1]); })\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n            .attr('fill',barColor)\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n        //Create the frequency labels above the rectangles.\n        bars.append(\"text\").text(function(d){ return d3.format(\",\")(d[1])})\n            .attr(\"x\", function(d) { return x(d[0])+x.bandwidth()/2; })\n            .attr(\"y\", function(d) { return y(d[1])-5; })\n        \n            .attr(\"text-anchor\", \"middle\")\n        ;\n        \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            var st = fData.filter(function(s){ return s.State == d[0];})[0],\n                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});\n               \n            // call update functions of pie-chart and legend.    \n            pC.update(nD);\n            leg.update(nD);\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n            pC.update(tF);\n            leg.update(tF);\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n        hG.update = function(nD, color){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar1\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d[1]); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d[1]); })\n                .attr(\"fill\", color);\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){ return d3.format(\",\")(d[1])})\n                .attr(\"y\", function(d) {return y(d[1])-5; });            \n        }        \n        return hG;\n    }\n    \n    // function to handle pieChart.\n  \n  \n  function secondBarChart(pD){\n    var pC={},    hGDim = {t: 60, r: 2, b: 30, l: 10};\n        hGDim.w = 500 - hGDim.l - hGDim.r, \n        hGDim.h = 300 - hGDim.t - hGDim.b;\n    \n            \n        //create svg for histogram.\n        var hGsvg = d3.select(id).append(\"svg\")\n            .attr(\"width\", hGDim.w + hGDim.l + hGDim.r)\n            .attr(\"height\", hGDim.h + hGDim.t + hGDim.b).append(\"g\")\n            .attr(\"transform\", \"translate(\" + hGDim.l + \",\" + hGDim.t + \")\");\n\n        // create function for x-axis mapping.\n        var x = d3.scaleBand().range([0, hGDim.w], 0.1)\n                .domain(pD.map(function(d) { return (d.type); })).padding(.1);\n\n        // Add x-axis to the histogram svg.\n        hGsvg.append(\"g\").attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + hGDim.h + \")\")\n            .call(d3.axisBottom().scale(x));\n\n        // Create function for y-axis map.\n        var y = d3.scaleLinear().range([hGDim.h, 0])\n                .domain([0, d3.max(pD, function(d) { return d.freq; })]);\n\n        // Create bars for histogram to contain rectangles and freq labels.\n        var bars2 = hGsvg.selectAll(\".bar\").data(pD).enter()\n                .append(\"g\").attr(\"class\", \"bar2\");\n        \n        //create the rectangles.\n        bars2.append(\"rect\")\n            .attr(\"x\", function(d) { return x(d.type); })\n            .attr(\"y\", function(d) { return y(d.freq); })\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", function(d) { return hGDim.h - y(d.freq); })\n            .attr('fill',function(d) { return segColor(d.type); })\n            .on(\"mouseover\",mouseover)// mouseover is defined below.\n            .on(\"mouseout\",mouseout);// mouseout is defined below.\n            \n    \n        //Create the frequency labels above the rectangles.\n        bars2.append(\"text\").text(function(d){ return getPercent(d,tF);})\n            .attr(\"x\", function(d) { return x(d.type)+x.bandwidth()/2; })\n            .attr(\"y\", function(d) { return y(d.freq)-5; })\n            .attr(\"text-anchor\", \"middle\");\n        \n       pC.update = function(nD){\n            // update the domain of the y-axis map to reflect change in frequencies.\n            y.domain([0, d3.max(nD, function(d) { return d.freq; })]);\n            \n            // Attach the new data to the bars.\n            var bars = hGsvg.selectAll(\".bar2\").data(nD);\n            \n            // transition the height and color of rectangles.\n            bars.select(\"rect\").transition().duration(500)\n                .attr(\"y\", function(d) {return y(d.freq); })\n                .attr(\"height\", function(d) { return hGDim.h - y(d.freq); })\n                .attr(\"fill\",  function(d) { return segColor(d.type); });\n\n            // transition the frequency labels location and change value.\n            bars.select(\"text\").transition().duration(500)\n                .text(function(d){ return getPercent(d,nD);})\n                .attr(\"y\", function(d) {return y(d.freq)-5; });            \n        } \n       \n        function mouseover(d){  // utility function to be called on mouseover.\n            // filter for selected state.\n            hG.update(fData.map(function(v){ \n                return [v.State,v.freq[d.type]];}),segColor(d.type));\n        }\n        \n        function mouseout(d){    // utility function to be called on mouseout.\n            // reset the pie-chart and legend.    \n           hG.update(fData.map(function(v){\n                return [v.State,v.total];}), barColor);\n        }\n    \n     function getPercent(d,aD){ // Utility function to compute percentage.\n       var p = Math.max(0, d3.precisionFixed(0.05) - 2),\n    f = d3.format(\".\" + p + \"%\")\n       return f((d.freq/d3.sum(aD.map(function(v){ return v.freq; }))));\n        }\n        \n        // create function to update the bars. This will be used by pie-chart.\n            \n        return pC;\n  }\n    \n    // function to handle legend.\n    function legend(lD){\n        var leg = {};\n            \n        // create table for legend.\n        var legend = d3.select(id).append(\"table\").attr('class','legend');\n        \n        // create one row per segment.\n        var tr = legend.append(\"tbody\").selectAll(\"tr\").data(lD).enter().append(\"tr\");\n            \n        // create the first column for each segment.\n        tr.append(\"td\").append(\"svg\").attr(\"width\", '16').attr(\"height\", '16').append(\"rect\")\n            .attr(\"width\", '16').attr(\"height\", '16')\n\t\t\t.attr(\"fill\",function(d){ return segColor(d.type); });\n            \n        // create the second column for each segment.\n        tr.append(\"td\").text(function(d){ return d.type;});\n\n        // create the third column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendFreq')\n            .text(function(d){ return d3.format(\",\")(d.freq);});\n\n        // create the fourth column for each segment.\n        tr.append(\"td\").attr(\"class\",'legendPerc')\n            .text(function(d){ return getLegend(d,lD);});\n\n        // Utility function to be used to update the legend.\n        leg.update = function(nD){\n            // update the data attached to the row elements.\n            var l = legend.select(\"tbody\").selectAll(\"tr\").data(nD);\n\n            // update the frequencies.\n            l.select(\".legendFreq\").text(function(d){ return d3.format(\",\")(d.freq);});\n\n            // update the percentage column.\n            l.select(\".legendPerc\").text(function(d){ return getLegend(d,nD);});        \n        }\n        \n        function getLegend(d,aD){ // Utility function to compute percentage.\n            return d3.format(\"%\")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));\n        }\n\n        return leg;\n    }\n    \n    // calculate total frequency by segment for all state.\n    var tF = ['hacked','Lost','InsideJob','Others'].map(function(d){ \n        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))\n               }; \n    });    \n    \n    // calculate total frequency by state for all segment.\n    var sF = fData.map(function(d){return [d.State,d.total];});\n\n    var hG = histoGram(sF), // create the histogram.\n        pC = secondBarChart(tF), // create the pie-chart.\n        leg= legend(tF);  // create the legend.\n}\n  \nfunction dashboard1( data){\n  var chartWidth       = 700,\n    barHeight        = 20,\n    groupHeight      = barHeight * data.series.length,\n    gapBetweenGroups = 10,\n    spaceForLabels   = 150,\n    spaceForLegend   = 150;\n\n// Zip the series data together (first values, second values, etc.)\nvar zippedData = [];\nfor (var i=0; i<data.labels.length; i++) {\n  for (var j=0; j<data.series.length; j++) {\n    zippedData.push(data.series[j].values[i]);\n  }\n}\n\n// Color scale\nvar color =d3.scaleOrdinal(d3.schemeCategory20);\nvar chartHeight = barHeight * zippedData.length + gapBetweenGroups * data.labels.length;\n\nvar x = d3.scaleLinear()\n    .domain([0, d3.max(zippedData)])\n    .range([0, chartWidth]);\n\nvar y = d3.scaleLinear()\n    .range([chartHeight + gapBetweenGroups, 0]);\n\nvar yAxis = d3.axisLeft()\n    .scale(y)\n    .tickFormat('')\n    .tickSize(0);\n\n// Specify the chart area and dimensions\nvar chart = d3.select(\".chart\").append(\"svg\")\n    .attr(\"width\", spaceForLabels + chartWidth + spaceForLegend)\n    .attr(\"height\", chartHeight);\n\n// Create bars\nvar bar = chart.selectAll(\"g\")\n    .data(zippedData)\n    .enter().append(\"g\")\n    .attr(\"transform\", function(d, i) {\n      return \"translate(\" + spaceForLabels + \",\" + (i * barHeight + gapBetweenGroups * (0.5 + Math.floor(i/data.series.length))) + \")\";\n    });\n\n// Create rectangles of the correct width\nbar.append(\"rect\")\n    .attr(\"fill\", function(d,i) { return color(i % data.series.length); })\n    .attr(\"class\", \"bar\")\n    .attr(\"width\", x)\n    .attr(\"height\", barHeight - 1);\n\n// Add text label in bar\nbar.append(\"text\")\n    .attr(\"x\", function(d) { return x(d) - 3; })\n    .attr(\"y\", barHeight / 2)\n    .attr(\"fill\", \"red\")\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d; });\n\n// Draw labels\nbar.append(\"text\")\n    .attr(\"class\", \"label\")\n    .attr(\"x\", function(d) { return - 10; })\n    .attr(\"y\", groupHeight / 2)\n    .attr(\"dy\", \".35em\")\n    .text(function(d,i) {\n      if (i % data.series.length === 0)\n        return data.labels[Math.floor(i/data.series.length)];\n      else\n        return \"\"});\n\nchart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + spaceForLabels + \", \" + -gapBetweenGroups/2 + \")\")\n      .call(yAxis);\n\n// Draw legend\nvar legendRectSize = 18,\n    legendSpacing  = 4;\n\nvar legend = chart.selectAll('.legend')\n    .data(data.series)\n    .enter()\n    .append('g')\n    .attr('transform', function (d, i) {\n        var height = legendRectSize + legendSpacing;\n        var offset = -gapBetweenGroups/2;\n        var horz = spaceForLabels + chartWidth + 40 - legendRectSize;\n        var vert = i * height - offset;\n        return 'translate(' + horz + ',' + vert + ')';\n    });\n\nlegend.append('rect')\n    .attr('width', legendRectSize)\n    .attr('height', legendRectSize)\n    .style('fill', function (d, i) { return color(i); })\n    .style('stroke', function (d, i) { return color(i); });\n\nlegend.append('text')\n    .attr('class', 'legend')\n    .attr('x', legendRectSize + legendSpacing)\n    .attr('y', legendRectSize - legendSpacing)\n    .text(function (d) { return d.label; });\n}\n  \n  \nfunction drawBars() {\n\nvar margin = {top: 80, right: 180, bottom: 80, left: 180},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"#barras3\").append(\"svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"YearsVsEntities.tsv\", function(error, dataG){\n\n  \n\t// filter year\n\tvar data = dataG.filter(function(d){return d.Year == '2005';});\n \n\t// Get every column value\n\tvar elements = Object.keys(data[0])\n\t\t.filter(function(d){\n\t\t\treturn ((d != \"Year\") & (d != \"Entity\"));\n\t\t});\n  \n\n\tvar y = d3.scaleLinear()\n\t\t\t.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d.Records;\n\t\t\t})])\n\t\t\t.range([height, 0]);\n\n\tvar x = d3.scaleBand()\n\t\t\t.domain(data.map(function(d){ return d.Entity;}))\n\t\t\t.range([0, width]);\n\n\n\tvar xAxis = d3.axisBottom()\n\t\t.scale(x);\n\n\tvar yAxis = d3.axisLeft()\n\t\t.scale(y);\n\n\tsvg.append(\"g\")\n    \t.attr(\"class\", \"x axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis)\n    \t.selectAll(\"text\")\n    \t.style(\"font-size\", \"8px\")\n      \t.style(\"text-anchor\", \"end\")\n      \t.attr(\"dx\", \"-.8em\")\n      \t.attr(\"dy\", \"-.55em\")\n      \t.attr(\"transform\", \"rotate(-90)\" );\n\n\n \tsvg.append(\"g\")\n    \t.attr(\"class\", \"y axis\")\n    \t.call(yAxis);\n\n\tsvg.selectAll(\"rectangle\")\n\t\t.data(data)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/data.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d.Records);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / data.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d.Records);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Entity + \" : \" + d.Records;\n\t\t});\n\n\n\t\n  var selector = d3.select(\"#drop\")\n    \t.append(\"select\")\n    \t.attr(\"id\",\"dropdown\")\n    \t.on(\"change\", function(d){\n        \tselection = document.getElementById(\"dropdown\");\n        \n\t\t\tvar dataS = dataG.filter(function(d){return d.Year == selection.value;});\n\t\t      \n        \ty.domain([0, d3.max(dataS, function(d){\n\t\t\t\treturn +d.Records;})]);\n        \tx.domain(dataS.map(function(d){ return d.Entity;}))\n\t\t\t.range([0, width]);\n\n        \tyAxis.scale(y);\n        \txAxis.scale(x);\n  svg.selectAll(\".rectangle\").remove();\n\n        \n\n        \n    svg.selectAll(\"rectangle\")\n\t\t.data(dataS)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/dataS.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d.Records);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / dataS.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d.Records);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Entity + \" : \" + d.Records;\n\t\t});\n\n      \n        d3.selectAll(\"g.y.axis\")\n           \t\t.transition()\n           \t\t.call(yAxis);\n d3.selectAll(\"g.x.axis\")\n           .attr(\"transform\", \"translate(0,\" + height + \")\")\n           .call(xAxis)\n        \t .selectAll(\"text\")\n    \t\t\t .style(\"font-size\", \"8px\")\n      \t   .style(\"text-anchor\", \"end\")\n      \t   .attr(\"dx\", \"-.8em\")\n      \t   .attr(\"dy\", \"-.55em\")\n      \t   .attr(\"transform\", \"rotate(-90)\" );\n\n         });\n\n  var elementosSelector=[\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\"];\n    selector.selectAll(\"option\")\n      .data(elementosSelector)\n      .enter().append(\"option\")\n      .attr(\"value\", function(d){\n        return d;\n      })\n      .text(function(d){\n        return d;\n      })\n\n});\n\n}\n  \n</script>\n\n<script>\nvar freqData=[\n{State:'2004',freq:{hacked:0, Lost:0, InsideJob:92000000, Others:0}}\n,{State:'2005',freq:{hacked:40000000, Lost:4100000, InsideJob:0, Others:125000}}\n,{State:'2006',freq:{hacked:4000000, Lost:43700000, InsideJob:2600000, Others:20000000}}\n,{State:'2007',freq:{hacked:106100000, Lost:31960000, InsideJob:18226405, Others:0}}\n,{State:'2008',freq:{hacked:24500000, Lost:18916500, InsideJob:11100000, Others:11550000}}\n,{State:'2009',freq:{hacked:176521778, Lost:80290788, InsideJob:0, Others:0}}\n,{State:'2010',freq:{hacked:5976400, Lost:9214156, InsideJob:903000, Others:43000}}\n,{State:'2011',freq:{hacked:198735838, Lost:21450838, InsideJob:2500000, Others:6276811}}\n,{State:'2012',freq:{hacked:467760000, Lost:800000, InsideJob:208200000, Others:27766024}}\n,{State:'2013',freq:{hacked:236376000, Lost:4300000, InsideJob:3700000, Others:7926000}}\n,{State:'2014',freq:{hacked:892870000, Lost:0, InsideJob:20000000, Others:128000}}\n,{State:'2015',freq:{hacked:187197000, Lost:0, InsideJob:0, Others:195450000}}\n,{State:'2016',freq:{hacked:458461160, Lost:0, InsideJob:0, Others:68614115}}\n];\n\n  \n  \n  var dataGroup = {\n  labels: [\n    '2007', '2009', '2011',\n    '2013', '2015'\n  ],\n  series: [\n    {\n      label: 'goverment',\n      values: [31249000,84460378, 5998461, 2076000, 26100000]\n    },\n    {\n      label: 'Otros',\n      values: [123437405, 140352188, 124801594, 68776000, 13590000]\n    },\n    {\n      label: 'web',\n      values: [1600000, 32000000, 93262000, 18145000, 342957000]\n    },\n  ]\n};\n\n\ndashboard('#dashboard',freqData);\ndashboard1(dataGroup);\ndrawBars();\n\n</script>", "description": "Bonus", "created_at": "2016-09-25T00:20:54Z", "updated_at": "2016-09-28T02:48:55Z", "api": ["d3.select", "d3.scaleBand", "d3.axisBottom", "d3.scaleLinear", "d3.max", "d3.format", "d3.keys", "d3.precisionFixed", "d3.sum", "d3.scaleOrdinal", "d3.axisLeft", "d3.tsv", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "nychi713_23d300d92301d0ba57bd5f155c30cb9a"}, {"code": "<script>\n\nvar canvas = document.querySelector(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    width = canvas.width,\n    height = canvas.height,\n    radius = 20;\n\nvar circles = d3.range(324).map(function(i) {\n  return {\n    x: (i % 25) * (radius + 1) * 2,\n    y: Math.floor(i / 25) * (radius + 1) * 2\n  };\n});\n\nvar simulation = d3.forceSimulation(circles)\n    .force(\"collide\", d3.forceCollide(radius + 1).iterations(4))\n    .on(\"tick\", drawCircles);\n\nd3.select(canvas)\n    .call(d3.drag()\n        .container(canvas)\n        .subject(dragsubject)\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n\nfunction drawCircles() {\n  context.clearRect(0, 0, width, height);\n  context.save();\n  context.beginPath();\n  circles.forEach(drawCircle);\n  context.fill();\n  context.strokeStyle = \"#fff\";\n  context.stroke();\n}\n\nfunction drawCircle(d) {\n  if (d.found) return;\n  context.moveTo(d.x + radius, d.y);\n  context.arc(d.x, d.y, radius, 0, 2 * Math.PI);\n}\n  \nsimulation.find = function(x, y, radius, quantity = 0) {\n  nodes = simulation.nodes();\n  var i = 0,\n      n = nodes.length,\n      dx,\n      dy,\n      d2,\n      node,\n      closest,\n      innerRadius;\n\n\tif (n < quantity) return nodes.concat();\n  if (quantity) closest = [];\n\n  if (radius == null) radius = Infinity;\n  else radius *= radius;\n\n  for (i = 0; i < n; ++i) {\n    node = nodes[i];\n    dx = x - node.x;\n    dy = y - node.y;\n    d2 = dx * dx + dy * dy;\n    if (d2 < radius) {\n      if (quantity > 1) {\n        if (!closest.length) {\n          closest.push(node);\n          innerRadius = d2;\n        } else {\n          if (d2 < innerRadius) {\n            innerRadius = d2;\n            closest.unshift(node);\n          \tif (closest.length >= quantity) {\n              d2 = closest[closest.length - 1];\n              radius = d2.x * d2.x + d2.y * d2.y;\n            }\n          } else {\n            closest.push(node);\n          \tif (closest.length >= quantity) radius = d2;\n          }\n        }\n      } else {\n        closest = quantity ? [node] : node;\n  \t    radius = d2;\n      }\n    }\n  }\n\n  return closest;\n};\n\nfunction dragsubject() {\n  simulation.find(d3.event.x, d3.event.y, 100, 20).forEach(function (d) { d.found = true; });\n  return simulation.find(d3.event.x, d3.event.y, radius);\n}\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  simulation.nodes().forEach(function (d) { d.found = false; })\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\n</script>", "description": "Simulation.find() multiple", "created_at": "2016-09-24T06:06:43Z", "updated_at": "2016-09-24T06:17:32Z", "api": ["d3.range", "d3.forceSimulation", "d3.forceCollide", "d3.select", "d3.drag"], "readme": "This example demonstrates using [d3.drag](https://github.com/d3/d3-drag) with [d3.forceCollide](https://github.com/d3/d3-force#forceCollide) to implement draggable circles with collision detection.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/2990a882e007f8384b04827617752738'>Force Dragging II</a>", "uid": "ericsoco_f378d8a1fc9ba25ba9253b5ebf16b457"}, {"code": "<script>\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n   \n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth()-50)\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"fill\", function(d){\n    \tif(d.method == \"poor security\"){\n      \treturn \"red\";\n      }else if(d.method == \"lost / stolen media\"){\n        return \"blue\";\n      }else if(d.method == \"accidentally published\"){\n        return \"green\";\n      }else if(d.method == \"hacked\"){\n        return \"purple\";\n      }else if(d.method == \"inside job\"){\n        return \"purple\";\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index +\" Metodo:\"+d.method; \n            }\n    });\n   \n});\n</script>", "description": "Bono parcial 1", "created_at": "2016-09-24T00:04:29Z", "updated_at": "2016-09-28T04:55:10Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "", "uid": "carlosfelipetorres_ddf6bfd96d1bdf9a90c1888c207b9318"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar EPI_Score =\t80.47;\nvar Ten_Year_Percent_Change = 1.89;\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"opacity\", function(d){\n    \tif(d.value > 0 && d.value <= 40){\n      \treturn 0.3;\n      }else if(d.value > 40 && d.value <= 80){\n        return 0.5;\n      }else if(d.value > 80 && d.value <= 90){\n        return 0.7;\n      }else if(d.value > 90 && d.value <= 100){\n        return 0.9;\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index; \n            }\n    });\n   \n});\n</script>", "description": "Bono parcial", "created_at": "2016-09-23T23:57:52Z", "updated_at": "2016-09-23T23:57:52Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "carlosfelipetorres_1e477d3c4bca8daedbd6cce0af1e3567"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar EPI_Score =\t80.47;\nvar Ten_Year_Percent_Change = 1.89;\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"opacity\", function(d){\n    \tif(d.value > 0 && d.value <= 40){\n      \treturn 0.3;\n      }else if(d.value > 40 && d.value <= 80){\n        return 0.5;\n      }else if(d.value > 80 && d.value <= 90){\n        return 0.7;\n      }else if(d.value > 90 && d.value <= 100){\n        return 0.9;\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index; \n            }\n    });\n   \n});\n</script>", "description": "Bono parcial", "created_at": "2016-09-23T23:57:51Z", "updated_at": "2016-09-24T00:00:08Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "carlosfelipetorres_658b04db6bcc17c65fe8050ecde99261"}, {"code": "<script>\nif (!window.d3) {\n    document.write('<script src=\"js/d3.min.js\"><\\/script>');\n}\n</script>\n\n\n<div id=\"container\">\n\n<!--[if lte IE 8]><a href=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png\" class=\"cboxElement\"><img class=\"aligncenter size-full wp-image-21566\" alt=\"The Aha Moments Of Entrepreneurs\" src=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?zoom=2&amp;resize=660%2C587\" width=\"650\" height=\"577\" src-orig=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?resize=660%2C587\" scale=\"2\"></a><![endif]-->\n<svg id=\"latetostart-graph\" version=\"1.2\" baseProfile=\"tiny\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n\t y=\"0px\" width=\"970px\" height=\"800px\" viewBox=\"0 0 970 800\" preserveAspectRatio=\"xMidYMid\" style=\"background-color: #ece8e3;\" xml:space=\"preserve\">\n<g id=\"Footer\">\n\t<text transform=\"matrix(1.0001 0 0 1 35.0942 765.6021)\" fill=\"#554263\" font-family=\"'BebasNeue'\" font-size=\"51.768\">IT'S NEVER TOO LATE.</text>\n<a xlink:href=\"http://fundersandfounders.com/\"  target=\"_top\">\t\n<g id=\"logo\">\n\t<g id=\"letters\">\n\t\t<path fill=\"#238FCF\" d=\"M716.82,751.874h-5.808v4.058h5.601v2.396h-5.601v8.041h-2.517v-16.893h8.324V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M721.698,755.714v6.114c0,1.767,0.687,2.649,2.062,2.649s2.061-0.883,2.061-2.649v-6.114h2.429v6.169\n\t\t\tc0,0.855-0.104,1.592-0.312,2.211c-0.202,0.555-0.551,1.054-1.048,1.498c-0.819,0.723-1.864,1.084-3.13,1.084\n\t\t\tc-1.261,0-2.301-0.361-3.119-1.084c-0.503-0.444-0.861-0.943-1.07-1.498c-0.199-0.496-0.302-1.232-0.302-2.211v-6.169H721.698z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M731.313,755.714h2.44v0.984c0.849-0.854,1.807-1.28,2.87-1.28c1.224,0,2.178,0.391,2.862,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.282-0.407-0.791-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M751.186,747.891h2.438v18.479h-2.438v-1.115c-0.957,0.949-2.041,1.422-3.251,1.422\n\t\t\tc-1.437,0-2.632-0.533-3.581-1.596c-0.944-1.088-1.415-2.445-1.415-4.07c0-1.592,0.471-2.918,1.415-3.982\n\t\t\tc0.937-1.072,2.111-1.609,3.53-1.609c1.229,0,2.329,0.512,3.302,1.531V747.891z M745.422,761.01c0,1.02,0.269,1.852,0.81,2.493\n\t\t\tc0.553,0.649,1.251,0.975,2.095,0.975c0.898,0,1.625-0.313,2.18-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.555-0.634-1.274-0.951-2.16-0.951c-0.834,0-1.53,0.321-2.094,0.961\n\t\t\tC745.698,759.252,745.422,760.054,745.422,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M766.262,761.621h-7.531c0.063,0.877,0.345,1.572,0.841,2.091c0.496,0.511,1.135,0.766,1.911,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.831-0.832,1.327-1.617l2.051,1.158c-0.316,0.547-0.651,1.016-1.003,1.406\n\t\t\tc-0.352,0.389-0.729,0.71-1.134,0.961c-0.402,0.253-0.839,0.438-1.307,0.555c-0.468,0.115-0.975,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.829-0.51-3.777-1.532c-0.951-1.026-1.424-2.391-1.424-4.091c0-1.686,0.459-3.049,1.381-4.092\n\t\t\tc0.928-1.029,2.157-1.543,3.69-1.543c1.548,0,2.771,0.5,3.672,1.5c0.89,0.99,1.338,2.366,1.338,4.125L766.262,761.621z\n\t\t\t M763.771,759.609c-0.339-1.314-1.154-1.97-2.449-1.97c-0.297,0-0.573,0.046-0.833,0.136c-0.259,0.092-0.495,0.224-0.706,0.395\n\t\t\tc-0.212,0.172-0.394,0.377-0.546,0.618c-0.151,0.24-0.266,0.514-0.344,0.821H763.771z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M768.919,755.714h2.429v0.952c0.445-0.475,0.841-0.8,1.188-0.973c0.351-0.184,0.769-0.275,1.252-0.275\n\t\t\tc0.641,0,1.309,0.211,2.006,0.635l-1.109,2.254c-0.463-0.336-0.911-0.504-1.35-0.504c-1.324,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.429V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M783.297,757.53l-2.01,1.081c-0.314-0.647-0.709-0.972-1.176-0.972c-0.224,0-0.414,0.074-0.572,0.224\n\t\t\ts-0.236,0.341-0.236,0.574c0,0.406,0.467,0.812,1.403,1.213c1.286,0.561,2.155,1.078,2.6,1.552\n\t\t\tc0.448,0.473,0.671,1.109,0.671,1.911c0,1.027-0.375,1.889-1.125,2.579c-0.727,0.655-1.603,0.983-2.632,0.983\n\t\t\tc-1.764,0-3.013-0.871-3.744-2.614l2.07-0.975c0.289,0.511,0.506,0.835,0.659,0.975c0.295,0.277,0.646,0.416,1.058,0.416\n\t\t\tc0.82,0,1.23-0.38,1.23-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.732-0.359\n\t\t\tc-0.245-0.117-0.495-0.238-0.744-0.363c-0.708-0.348-1.203-0.699-1.491-1.049c-0.367-0.445-0.552-1.018-0.552-1.719\n\t\t\tc0-0.926,0.314-1.691,0.939-2.298c0.644-0.604,1.419-0.907,2.333-0.907C781.64,755.418,782.64,756.122,783.297,757.53z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M800.727,755.714h2.438v10.655h-2.438v-1.115c-1,0.949-2.077,1.422-3.227,1.422\n\t\t\tc-1.454,0-2.656-0.533-3.604-1.596c-0.943-1.088-1.416-2.445-1.416-4.07c0-1.599,0.473-2.928,1.416-3.994\n\t\t\tc0.941-1.064,2.122-1.598,3.538-1.598c1.225,0,2.322,0.512,3.293,1.531V755.714z M794.963,761.01c0,1.02,0.27,1.852,0.81,2.493\n\t\t\tc0.555,0.649,1.252,0.975,2.094,0.975c0.9,0,1.627-0.313,2.182-0.94c0.552-0.65,0.828-1.474,0.828-2.473\n\t\t\tc0-1.001-0.276-1.824-0.828-2.474c-0.555-0.634-1.273-0.951-2.159-0.951c-0.835,0-1.533,0.321-2.095,0.961\n\t\t\tC795.239,759.252,794.963,760.054,794.963,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M806.232,755.714h2.438v0.984c0.85-0.854,1.808-1.28,2.872-1.28c1.223,0,2.176,0.391,2.859,1.172\n\t\t\tc0.59,0.662,0.885,1.747,0.885,3.248v6.531h-2.439v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.279-0.407-0.79-0.611-1.531-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.717,0.808c-0.332,0.532-0.497,1.461-0.497,2.787v5.135h-2.438V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M826.102,747.891h2.438v18.479h-2.438v-1.115c-0.958,0.949-2.041,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.634-0.533-3.583-1.596c-0.943-1.088-1.413-2.445-1.413-4.07c0-1.592,0.47-2.918,1.413-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.229,0,2.332,0.512,3.303,1.531V747.891z M820.338,761.01c0,1.02,0.271,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.253,0.975,2.096,0.975c0.899,0,1.625-0.313,2.179-0.94c0.555-0.65,0.831-1.474,0.831-2.473\n\t\t\tc0-1.001-0.276-1.824-0.831-2.474c-0.554-0.634-1.272-0.951-2.158-0.951c-0.835,0-1.532,0.321-2.095,0.961\n\t\t\tC820.615,759.252,820.338,760.054,820.338,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M847.213,751.874h-5.807v4.058h5.601v2.396h-5.601v8.041h-2.515v-16.893h8.321V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M849.167,760.965c0-1.539,0.543-2.848,1.63-3.929c1.087-1.077,2.409-1.618,3.973-1.618\n\t\t\tc1.567,0,2.897,0.544,3.992,1.63c1.081,1.087,1.62,2.423,1.62,4.005c0,1.596-0.544,2.936-1.631,4.016\n\t\t\tc-1.093,1.072-2.436,1.607-4.025,1.607c-1.576,0-2.896-0.547-3.962-1.641C849.7,763.955,849.167,762.599,849.167,760.965z\n\t\t\t M851.649,761.01c0,1.064,0.28,1.908,0.842,2.527c0.575,0.627,1.336,0.94,2.278,0.94c0.949,0,1.707-0.31,2.278-0.932\n\t\t\tc0.567-0.619,0.851-1.446,0.851-2.481c0-1.036-0.283-1.865-0.851-2.484c-0.579-0.628-1.336-0.94-2.278-0.94\n\t\t\tc-0.93,0-1.681,0.312-2.255,0.94C851.938,759.207,851.649,760.018,851.649,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M865.378,755.714v6.114c0,1.767,0.686,2.649,2.064,2.649c1.373,0,2.06-0.883,2.06-2.649v-6.114h2.428\n\t\t\tv6.169c0,0.855-0.104,1.592-0.314,2.211c-0.2,0.555-0.548,1.054-1.043,1.498c-0.821,0.723-1.865,1.084-3.13,1.084\n\t\t\tc-1.264,0-2.301-0.361-3.121-1.084c-0.505-0.444-0.86-0.943-1.068-1.498c-0.203-0.496-0.303-1.232-0.303-2.211v-6.169H865.378z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M874.995,755.714h2.44v0.984c0.848-0.854,1.806-1.28,2.87-1.28c1.224,0,2.177,0.391,2.861,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.143-1.773-0.431-2.175c-0.281-0.407-0.793-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.378,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M894.865,747.891h2.441v18.479h-2.441v-1.115c-0.957,0.949-2.039,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.632-0.533-3.582-1.596c-0.943-1.088-1.414-2.445-1.414-4.07c0-1.592,0.471-2.918,1.414-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.231,0,2.33,0.512,3.302,1.531V747.891z M889.104,761.01c0,1.02,0.269,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.252,0.975,2.092,0.975c0.902,0,1.628-0.313,2.184-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.556-0.634-1.274-0.951-2.161-0.951c-0.833,0-1.53,0.321-2.094,0.961\n\t\t\tC889.378,759.252,889.104,760.054,889.104,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M909.944,761.621h-7.534c0.065,0.877,0.346,1.572,0.844,2.091c0.497,0.511,1.133,0.766,1.909,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.832-0.832,1.328-1.617l2.052,1.158c-0.318,0.547-0.652,1.016-1.004,1.406\n\t\t\tc-0.354,0.389-0.73,0.71-1.134,0.961c-0.404,0.253-0.839,0.438-1.308,0.555c-0.468,0.115-0.974,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.828-0.51-3.775-1.532c-0.952-1.026-1.428-2.391-1.428-4.091c0-1.686,0.461-3.049,1.382-4.092\n\t\t\tc0.931-1.029,2.16-1.543,3.693-1.543c1.547,0,2.77,0.5,3.67,1.5c0.892,0.99,1.339,2.366,1.339,4.125L909.944,761.621z\n\t\t\t M907.452,759.609c-0.338-1.314-1.155-1.97-2.452-1.97c-0.294,0-0.57,0.046-0.83,0.136c-0.259,0.092-0.495,0.224-0.708,0.395\n\t\t\tc-0.21,0.172-0.392,0.377-0.543,0.618c-0.151,0.24-0.266,0.514-0.345,0.821H907.452z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M912.6,755.714h2.43v0.952c0.445-0.475,0.842-0.8,1.187-0.973c0.352-0.184,0.77-0.275,1.251-0.275\n\t\t\tc0.643,0,1.311,0.211,2.007,0.635l-1.112,2.254c-0.459-0.336-0.907-0.504-1.346-0.504c-1.326,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.43V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M926.976,757.53l-2.006,1.081c-0.316-0.647-0.711-0.972-1.178-0.972c-0.222,0-0.412,0.074-0.571,0.224\n\t\t\tc-0.158,0.149-0.237,0.341-0.237,0.574c0,0.406,0.468,0.812,1.401,1.213c1.289,0.561,2.155,1.078,2.603,1.552\n\t\t\tc0.445,0.473,0.67,1.109,0.67,1.911c0,1.027-0.375,1.889-1.123,2.579c-0.726,0.655-1.604,0.983-2.632,0.983\n\t\t\tc-1.766,0-3.014-0.871-3.748-2.614l2.072-0.975c0.288,0.511,0.507,0.835,0.66,0.975c0.295,0.277,0.646,0.416,1.057,0.416\n\t\t\tc0.819,0,1.231-0.38,1.231-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.733-0.359\n\t\t\tc-0.245-0.117-0.494-0.238-0.744-0.363c-0.706-0.348-1.203-0.699-1.49-1.049c-0.367-0.445-0.55-1.018-0.55-1.719\n\t\t\tc0-0.926,0.312-1.691,0.937-2.298c0.642-0.604,1.42-0.907,2.336-0.907C925.319,755.418,926.321,756.122,926.976,757.53z\"/>\n\t</g>\n\t<g id=\"foundation\">\n\t\t<defs>\n\t\t\t<rect id=\"SVGID_1_\" x=\"640\" y=\"739.99\" width=\"307\" height=\"39.402\"/>\n\t\t</defs>\n\t\t<clipPath id=\"SVGID_2_\">\n\t\t\t<use xlink:href=\"#SVGID_1_\"  overflow=\"visible\"/>\n\t\t</clipPath>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M669.63,763.875c-1.371,0-2.481-1.113-2.481-2.481v-7.728\n\t\t\tc0-1.371,1.11-2.481,2.481-2.481h2.768v-2.37c0-1.43-1.163-2.59-2.595-2.59h-22.259c-1.433,0-2.593,1.161-2.593,2.59v18.045\n\t\t\tc0,1.432,1.16,2.594,2.593,2.594h13.357l8.583,6.209l-2.974-6.209h3.292c1.432,0,2.595-1.162,2.595-2.594v-2.985H669.63z\n\t\t\t M662.454,753.008c0,0.188-0.102,0.282-0.312,0.282h-0.427c-0.13,0-0.216-0.028-0.254-0.082c-0.041-0.056-0.086-0.233-0.136-0.538\n\t\t\tc-0.117-0.732-0.317-1.225-0.604-1.48c-0.288-0.253-0.706-0.381-1.255-0.381h-1.143v6.387h0.716c0.284,0,0.481-0.064,0.594-0.191\n\t\t\tc0.113-0.125,0.226-0.384,0.342-0.766c0.087-0.285,0.148-0.445,0.18-0.484c0.034-0.039,0.118-0.061,0.257-0.061h0.477\n\t\t\tc0.188,0,0.284,0.088,0.284,0.26v3.756c0,0.182-0.075,0.271-0.229,0.271h-0.531c-0.125,0-0.207-0.023-0.246-0.07\n\t\t\tc-0.04-0.049-0.092-0.176-0.155-0.386c-0.142-0.487-0.291-0.782-0.45-0.888c-0.157-0.104-0.332-0.158-0.522-0.158h-0.716v5.908\n\t\t\tc0,0.377,0.137,0.66,0.413,0.848c0.187,0.123,0.281,0.27,0.281,0.434v0.492c0,0.167-0.094,0.248-0.281,0.248h-3.395\n\t\t\tc-0.16,0-0.238-0.075-0.238-0.229v-0.512c0-0.157,0.093-0.303,0.282-0.434c0.275-0.196,0.412-0.479,0.412-0.848v-12.883\n\t\t\tc0-0.368-0.145-0.651-0.435-0.845c-0.195-0.125-0.292-0.27-0.292-0.435v-0.491c0-0.157,0.081-0.239,0.24-0.239h5.633\n\t\t\tc0.166,0,0.432-0.016,0.794-0.043c0.197-0.022,0.312-0.033,0.347-0.033c0.175,0,0.281,0.022,0.317,0.067\n\t\t\tc0.037,0.042,0.053,0.135,0.053,0.281V753.008z\"/>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M699.28,746.213h-22.259c-1.434,0-2.594,1.159-2.594,2.591v2.381h2.809\n\t\t\tc1.368,0,2.479,1.11,2.479,2.48v7.729c0,1.368-1.111,2.481-2.479,2.481h-2.809v2.977c0,1.431,1.16,2.592,2.594,2.592h3.295\n\t\t\tl-2.976,6.208l8.584-6.208h13.355c1.435,0,2.595-1.161,2.595-2.592v-18.048C701.875,747.372,700.715,746.213,699.28,746.213\n\t\t\t M691.856,750.212c0,0.166-0.099,0.31-0.295,0.435c-0.291,0.195-0.435,0.478-0.435,0.847v12.88c0,0.37,0.136,0.655,0.412,0.849\n\t\t\tc0.187,0.131,0.281,0.277,0.281,0.436v0.512c0,0.152-0.079,0.227-0.239,0.227h-3.393c-0.188,0-0.284-0.082-0.284-0.248v-0.49\n\t\t\tc0-0.166,0.096-0.312,0.284-0.436c0.275-0.189,0.413-0.472,0.413-0.849v-5.907h-0.72c-0.186,0-0.361,0.055-0.521,0.16\n\t\t\tc-0.16,0.103-0.311,0.398-0.447,0.885c-0.063,0.211-0.115,0.34-0.155,0.387c-0.041,0.047-0.125,0.071-0.247,0.071h-0.533\n\t\t\tc-0.149,0-0.229-0.093-0.229-0.274v-3.752c0-0.172,0.095-0.26,0.282-0.26h0.479c0.138,0,0.223,0.02,0.257,0.06\n\t\t\tc0.033,0.04,0.093,0.2,0.179,0.485c0.116,0.383,0.229,0.639,0.343,0.764c0.111,0.127,0.312,0.192,0.592,0.192h0.72v-6.384h-1.145\n\t\t\tc-0.549,0-0.968,0.126-1.254,0.378c-0.289,0.255-0.488,0.747-0.604,1.478c-0.051,0.305-0.098,0.484-0.139,0.541\n\t\t\tc-0.04,0.053-0.123,0.08-0.255,0.08h-0.424c-0.212,0-0.315-0.093-0.315-0.281v-3.243c0-0.145,0.02-0.239,0.053-0.282\n\t\t\tc0.039-0.044,0.144-0.065,0.316-0.065c0.037,0,0.154,0.009,0.348,0.032c0.365,0.03,0.628,0.043,0.795,0.043h5.638\n\t\t\tc0.158,0,0.24,0.082,0.24,0.241V750.212z\"/>\n\t</g>\n\t<g>\n\t\t<path fill=\"#238FCF\" d=\"M676.855,762.039c-0.237-0.238-0.463-0.476-0.789-0.827c-0.727,0.676-1.541,0.964-2.468,0.964\n\t\t\tc-1.641,0-2.593-1.103-2.593-2.368c0-1.152,0.688-1.942,1.653-2.468v-0.038c-0.438-0.551-0.701-1.165-0.701-1.767\n\t\t\tc0-1.027,0.738-2.08,2.142-2.08c1.053,0,1.867,0.702,1.867,1.792c0,0.89-0.514,1.591-1.854,2.255v0.038\n\t\t\tc0.714,0.827,1.516,1.754,2.055,2.355c0.389-0.589,0.651-1.403,0.814-2.468h1.002c-0.226,1.328-0.589,2.38-1.215,3.12\n\t\t\tc0.45,0.476,0.889,0.952,1.391,1.491H676.855z M675.528,760.586c-0.501-0.551-1.441-1.579-2.381-2.656\n\t\t\tc-0.451,0.288-1.09,0.827-1.09,1.716c0,0.964,0.714,1.704,1.729,1.704C674.514,761.35,675.127,761.024,675.528,760.586z\n\t\t\t M672.96,755.437c0,0.602,0.275,1.065,0.639,1.516c0.852-0.489,1.403-0.94,1.403-1.654c0-0.514-0.288-1.09-0.978-1.09\n\t\t\tC673.323,754.209,672.96,754.786,672.96,755.437z\"/>\n\t</g>\n</g>\n</a>\n<g id=\"lifeline\">\n\t<path fill-rule=\"evenodd\" fill=\"none\" stroke=\"#ED145B\" stroke-width=\"2.9594\" stroke-miterlimit=\"10\" d=\"M45.749,263.686\n\t\tc0,0,128.451-0.846,258.228-0.584c32.683,0.063,26.091-18.948,39.901-18.948c13.811,0,11.825,19.022,41.78,18.79\n\t\tc13.959,0.184,26.474,0.346,41.41,0.49c31.9,0.135,25.73-49.361,44.366-49.361c18.635,0,11.062,49.904,42.592,49.975\n\t\tc196.096,0.969,432.558,0.637,432.558,0.637\"/>\n\t<g id=\"Ellipse_1\">\n\t\t<circle fill=\"#ED145B\" cx=\"37.167\" cy=\"263.686\" r=\"8.583\"/>\n\t</g>\n\t<g id=\"growth_stages\">\n\t\t<path id=\"old_2_\" fill=\"#554263\" d=\"M505.136,189.292c0.342-1.685-0.666-2.909-1.909-3.377c0.775-1.133,1.232-2.505,1.232-3.989\n\t\t\tc0-3.866-3.088-7.001-6.901-7.001c-3.811,0-6.901,3.135-6.901,7.001c0,3.868,3.09,7.002,6.901,7.002\n\t\t\tc0.666,0,1.304-0.1,1.912-0.279c-0.704,3.019-1.819,5.889-3.026,8.728c-0.651-1.013-1.325-2.013-1.982-3.022\n\t\t\tc0.907-4.445-3.805-9.742-8.9-6.791c-5.716,3.309-10.22,8.66-12.827,14.762c-1.302,3.048-0.879,6.53,2.202,8.334\n\t\t\tc0.092,0.056,0.191,0.1,0.288,0.148c0.542,0.393,1.207,0.662,2,0.738c5.921,0.569,11.899,0.682,17.859,0.726\n\t\t\tc-1.819,5.581-3.941,11.072-6.094,16.515c-1.872,4.728,5.657,6.761,7.503,2.097c2.798-7.07,5.548-14.224,7.641-21.548\n\t\t\tc0.889-3.11-1.807-5.078-4.254-4.86c-0.107-0.021-0.214-0.04-0.329-0.051C501.581,199.43,504.058,194.624,505.136,189.292z\n\t\t\t M490.583,198.779c1.191,1.804,2.353,3.625,3.288,5.586c-2.821-0.025-5.646-0.074-8.465-0.184\n\t\t\tC486.802,202.046,488.506,200.202,490.583,198.779z\"/>\n\t\t<path id=\"older_2_\" fill=\"#554263\" d=\"M349.294,188.247c-9.975,1.869-16.944,11.187-16.343,21.435\n\t\t\tc0.011,0.189,0.033,0.368,0.058,0.547c-0.366,1.837,0.324,4.01,2.493,4.896c3.459,1.418,7.407,3.581,8.714,7.368\n\t\t\tc1.398,4.055-1.631,8.376-4.075,11.275c-3.226,3.827,2.234,9.407,5.487,5.552c4.403-5.226,7.531-11.101,6.274-18.123\n\t\t\tc-0.035-0.193-0.09-0.376-0.133-0.564c0.299-0.43,0.517-0.941,0.583-1.561c0.805-7.585,2.917-14.945,3.646-22.543\n\t\t\tc0.594-1.29,0.776-2.785,0.42-4.116C355.549,189.126,352.411,187.664,349.294,188.247z M347.011,213.094\n\t\t\tc-0.783-0.692-1.617-1.333-2.491-1.922c0.071-0.435,0.098-0.903,0.07-1.407c-0.035-0.583-0.008-1.168,0.027-1.749\n\t\t\tc0.015-0.205,0.032-0.405,0.052-0.607c0.01-0.054,0.02-0.11,0.034-0.186c0.139-0.786,0.352-1.556,0.588-2.317\n\t\t\tc0.101-0.274,0.155-0.425,0.165-0.468c0.174-0.371,0.365-0.733,0.562-1.092c0.645-1.173,0.286-0.605,1.246-1.594\n\t\t\tc0.498-0.515,1.205-0.938,2.038-1.283C348.666,204.696,347.75,208.881,347.011,213.094z M369.03,190.552\n\t\t\tc0,3.395-2.72,6.148-6.075,6.148c-3.358,0-6.078-2.753-6.078-6.148c0-3.396,2.72-6.147,6.078-6.147\n\t\t\tC366.31,184.404,369.03,187.156,369.03,190.552z\"/>\n\t\t<g id=\"married_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M310.222,217.412L310.222,217.412L310.222,217.412L310.222,217.412z M301.229,201.511\n\t\t\t\tc-0.536-1.28-1.549-2.312-2.811-2.88c0.005-0.052,0.016-0.104,0.016-0.159c0-1.329-1.077-2.406-2.408-2.406\n\t\t\t\tc-1.329,0-2.407,1.077-2.407,2.406c0,0.106,0.017,0.206,0.028,0.306c-1.197,0.632-2.128,1.697-2.595,2.983\n\t\t\t\tc-1.665,1.851-3.661,4.484-5.605,8.05c-1.893-2.446-5.057-3.787-8.072-4.567l-2.822,5.801l0.613-5.175h0.104v-0.859h-2.135v0.859\n\t\t\t\th0.109l0.724,5.179l-2.823-6.038c-0.262,0.073,0.065,0.012-0.184,0.108c-4.414,1.064-8.322,3.025-9.969,7.482\n\t\t\t\tc-1.736,4.7-0.996,10.46-0.437,15.206c0.346,2.944,5.006,2.976,4.656,0c-0.463-3.947-0.218-7.871-0.109-11.863\n\t\t\t\tc0.044-1.656,0.648-2.866,1.573-3.779l-0.053,20.432v20.342c0,1.674,1.225,3.027,2.945,3.027s3.114-1.354,3.114-3.027v-21.194\n\t\t\t\tc0,0,0.099-1.073,1.194-1.087c1.095-0.011,1.067,1.034,1.067,1.034v21.187c0,1.673,1.395,3.029,3.115,3.029\n\t\t\t\ts3.114-1.356,3.114-3.029l0.104-21.866c0-0.207,0.021-14.781,0.026-18.663c0.731,0.814,0.796,2.066,1.419,3.294\n\t\t\t\tc-0.184,0.459-0.365,0.927-0.543,1.409l-0.132,0.36h1.591c0.828,1.879,1.223,3.944,1.32,6.027\n\t\t\t\tc-0.113,1.261-0.165,2.539-0.173,3.822c-0.001,0.073,0.013,0.134,0.019,0.202c-0.339,2.969,4.312,2.932,4.657-0.009\n\t\t\t\tc0.209-1.793,0.112-3.566-0.161-5.33c0.165-1.232,0.457-2.431,0.973-3.621c0.468,0.783,1.847,3.742-0.337,8.867\n\t\t\t\tc-4.493,10.535-3.522,20.137-3.511,20.235c0.028,0.271,0.26,0.478,0.532,0.478h3.427v5.149c0,1.539,0.961,2.786,2.309,2.786\n\t\t\t\tc1.348,0,2.439-1.247,2.439-2.786v-5.149h1.773v5.097c0,1.537,1.09,2.783,2.442,2.783c1.348,0,2.44-1.246,2.44-2.783l0.041-5.097\n\t\t\t\th3.141c0.264,0,0.488-0.193,0.53-0.455c0.059-0.391,1.447-9.708-3.052-20.258c-1.764-4.142-1.22-6.848-0.689-8.16\n\t\t\t\tc0.862,2.312,1.751,5.227,1.767,8.05c0.018,2.76,4.298,2.76,4.28,0c-0.022-3.404-0.322-6.769-1.413-9.849h3.832l-0.113-0.352\n\t\t\t\tC309.937,216.551,306.708,207.022,301.229,201.511z M274.177,223.227c-0.524,0-0.948-0.425-0.948-0.95\n\t\t\t\tc0-0.522,0.424-0.949,0.948-0.949c0.523,0,0.949,0.426,0.949,0.949C275.127,222.802,274.701,223.227,274.177,223.227z\n\t\t\t\t M274.177,220.242c-0.524,0-0.948-0.425-0.948-0.949c0-0.524,0.424-0.948,0.948-0.948c0.523,0,0.949,0.424,0.949,0.948\n\t\t\t\tC275.127,219.816,274.701,220.242,274.177,220.242z M274.248,217.255c-0.525,0-0.949-0.426-0.949-0.95\n\t\t\t\tc0-0.523,0.424-0.948,0.949-0.948c0.523,0,0.949,0.425,0.949,0.948C275.197,216.829,274.771,217.255,274.248,217.255z\n\t\t\t\t M278.14,211.877l0.473-1.382l-1.455,1.964l1.455-3.928l0.51,3.928L278.14,211.877z M282.815,216.877\n\t\t\t\tc0.08-0.209,0.161-0.413,0.241-0.617c0.115,0.204,0.224,0.409,0.328,0.617H282.815z M291.259,203.573\n\t\t\t\tc0.743-0.232,2.067-0.771,3.199-1.902c2.975,2.376,5.793,2.217,6.648,2.102c-0.085,2.64-2.255,4.766-4.918,4.766\n\t\t\t\tc-2.718,0-4.928-2.209-4.928-4.926C291.257,203.6,291.259,203.586,291.259,203.573z M301.462,227.792\n\t\t\t\tc3.822,8.969,3.247,17.233,3.031,19.222h-17.042c-0.129-2.035-0.348-10.277,3.462-19.222c2.198-5.146,1.065-8.371,0.408-9.604\n\t\t\t\tc0.559-0.229,1.557-0.569,2.863-0.775h4.381c1.188,0.198,2.033,0.519,2.509,0.741\n\t\t\t\tC300.421,219.362,299.246,222.598,301.462,227.792z M293.126,211.974c-0.481,0-0.871-0.389-0.871-0.87\n\t\t\t\tc0-0.48,0.39-0.869,0.871-0.869c0.479,0,0.868,0.389,0.868,0.869C293.994,211.584,293.605,211.974,293.126,211.974z\n\t\t\t\t M294.864,213.939c0,0.48-0.39,0.87-0.87,0.87c-0.481,0-0.868-0.389-0.868-0.87c0-0.479,0.386-0.869,0.868-0.869\n\t\t\t\tC294.474,213.071,294.864,213.46,294.864,213.939z M295.357,215.733c0-0.48,0.389-0.869,0.87-0.869\n\t\t\t\tc0.06,0,0.118,0.004,0.176,0.018c0.459,0.023,0.826,0.4,0.826,0.865c0,0.159-0.045,0.309-0.121,0.437\n\t\t\t\tc-0.227-0.01-0.46-0.017-0.704-0.017c-0.309,0-0.605,0.011-0.896,0.028C295.42,216.061,295.357,215.907,295.357,215.733z\n\t\t\t\t M299.464,213.954c0,0.479-0.39,0.869-0.869,0.869c-0.481,0-0.871-0.39-0.871-0.869s0.39-0.869,0.871-0.869\n\t\t\t\tC299.074,213.084,299.464,213.474,299.464,213.954z M298.595,211.119c0-0.481,0.389-0.871,0.869-0.871\n\t\t\t\tc0.479,0,0.869,0.389,0.869,0.871c0,0.479-0.391,0.869-0.869,0.869C298.984,211.988,298.595,211.598,298.595,211.119z\n\t\t\t\t M306.199,216.877c-0.74-1.903-1.799-3.69-3.301-5.3c-0.726-0.775-4.865-2.277-6.526-2.277c-1.689,0-5.92,1.464-6.681,2.277\n\t\t\t\tc-0.901,0.967-1.637,2-2.248,3.082c-0.199-0.684-0.399-1.37-0.591-2.06c-0.239-0.855-0.604-1.617-1.059-2.302\n\t\t\t\tc1.689-3.15,3.43-5.569,4.951-7.368c-0.041,0.262-0.065,0.525-0.065,0.797c0,0,0.021-0.004,0.051-0.012\n\t\t\t\tc0.057,2.965,2.481,5.357,5.458,5.357c3.011,0,5.462-2.449,5.462-5.46c0-0.32-0.033-0.632-0.086-0.938\n\t\t\t\tc4.437,4.963,7.299,12.496,7.913,14.203H306.199z M273.85,203.855c2.925,0,5.295-2.37,5.295-5.294\n\t\t\t\tc0-2.922-2.37-5.292-5.295-5.292c-2.924,0-5.295,2.37-5.295,5.292C268.555,201.485,270.926,203.855,273.85,203.855z\"/>\n\t\t</g>\n\t\t<g id=\"graduated_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M221.743,201.814c0,2.791,2.259,5.052,5.044,5.052c2.784,0,5.043-2.261,5.043-5.052H221.743z\n\t\t\t\t M221.164,201.046l11.46-0.044l-0.004-0.786l1.119-0.625c0.158,0.18,0.285,0.387,0.354,0.616\n\t\t\t\tc0.104,0.354,0.048,0.716-0.174,1.108c-0.381,0.676-0.44,1.173-0.178,1.479c0.139,0.166,0.36,0.236,0.623,0.236\n\t\t\t\tc0.443-0.002,1.017-0.213,1.556-0.531l0.014,0.058l1.64-0.583l-0.144-0.551l-1.076,0.383l-0.037-0.064\n\t\t\t\tc-0.067,0.052-0.134,0.1-0.2,0.148l-0.324,0.116l0.022,0.083c-0.822,0.5-1.61,0.648-1.817,0.405\n\t\t\t\tc-0.119-0.135-0.032-0.488,0.223-0.945c0.283-0.501,0.353-0.999,0.214-1.48c-0.074-0.251-0.2-0.472-0.355-0.67l0.267-0.149\n\t\t\t\tl-7.745-4.66l-6.938,4.713l1.496,0.776L221.164,201.046z M223.456,207.828l3.44,8.147l4.163-8.064\n\t\t\t\tC228.65,207.549,225.764,207.625,223.456,207.828z M234.818,209.625c-0.141-0.166-0.292-0.302-0.445-0.425\n\t\t\t\tc-0.075-0.155-0.167-0.299-0.28-0.428c-0.196-0.098-0.409-0.188-0.63-0.27l-6.784,13.146l-5.711-13.522\n\t\t\t\tc-0.12,0.019-0.247,0.037-0.354,0.055c-3.123-3.489-5.323-7.671-6.626-12.327c-0.099-0.353-0.25-0.646-0.418-0.912l4.103,0.459\n\t\t\t\tl0.251-2.263l-14.615-1.637l-0.251,2.263l5.688,0.638c-0.842,0.694-1.33,1.786-0.946,3.161c2.08,7.433,6.1,13.681,11.895,18.534\n\t\t\t\tl-3.584,27.806h3.66l0.046,9.754c0,1.598,1.327,2.891,2.967,2.891c1.638,0,2.968-1.293,2.968-2.891v-9.754h2.152v9.81\n\t\t\t\tc0,1.595,1.328,2.89,2.966,2.89s2.802-1.295,2.802-2.89v-9.81h3.295l-1.544-14.587c1.759,1.776,5.604,1.07,5.556-2.148\n\t\t\t\tC240.875,220.62,239.116,214.639,234.818,209.625z\"/>\n\t\t</g>\n\t\t<g id=\"child_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M37.149,217.647c3.196,0,5.787-2.569,5.787-5.739c0-3.169-2.591-5.74-5.787-5.74\n\t\t\t\tc-3.196,0-5.788,2.57-5.788,5.74C31.362,215.079,33.953,217.647,37.149,217.647z M50.382,226.969\n\t\t\t\tc-3.131-2.397-6.369-4.639-9.889-6.442c-0.997-0.805-2.254-1.296-3.624-1.306c-1.521-0.01-2.934,0.59-4,1.559\n\t\t\t\tc-2.859,1.619-5.546,3.505-8.156,5.503c-1.192,0.911-1.828,2.338-0.993,3.751c0.689,1.167,2.588,1.901,3.785,0.986\n\t\t\t\tc1.13-0.866,2.277-1.711,3.443-2.522v1.183h11.758v-1.476c1.67,1.102,3.292,2.283,4.884,3.5c1.197,0.917,3.096,0.183,3.785-0.985\n\t\t\t\tC52.21,229.308,51.573,227.881,50.382,226.969z M38.519,237.301c0.41-0.264,0.623-0.551,0.623-0.551l3.564-4.208v-2.52H30.96\n\t\t\t\tl0.04,2.062l3.196,4.476l0.075,0.075c0.47,0.349,0.937,0.618,1.388,0.802l0.068,0.019c0.395,0.074,0.73,0.109,1.057,0.111h0.034\n\t\t\t\tc0.52,0,1.06-0.077,1.605-0.225L38.519,237.301z M36.818,236.883v0.344l-0.03-0.344c-0.274,0-0.561-0.03-0.898-0.091\n\t\t\t\tc-0.374-0.156-0.764-0.383-1.161-0.671l-3.041-4.26l-0.021-1.15h10.35v1.582l-3.417,4.036c-0.004,0.003-0.142,0.188-0.412,0.37\n\t\t\t\tC37.719,236.821,37.259,236.883,36.818,236.883z M34,236.86l-0.055-0.058l-3.208-4.492c-2.235,2.106-3.761,4.597-3.833,7.723\n\t\t\t\tc-0.071,3.081,2.06,5.811,4.289,7.705c2.693,2.288,6.625-1.575,3.911-3.879C32.323,241.494,31.829,239.327,34,236.86z\n\t\t\t\t M39.423,236.948c-0.001,0.002-0.016,0.02-0.025,0.035c2.401,2.559,1.969,4.784-0.896,7.218\n\t\t\t\tc-2.714,2.304,1.218,6.167,3.911,3.878c2.432-2.064,4.008-4.507,4.289-7.703c0.258-2.937-1.694-5.684-3.721-7.623L39.423,236.948\n\t\t\t\tz\"/>\n\t\t</g>\n\t</g>\n</g>\n<g id=\"sub-header\">\n\t<text transform=\"matrix(1.0003 0 0 1 308.4204 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">quarter-life crisis</text>\n\t<text transform=\"matrix(1.0003 0 0 1 445.6016 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">mid-life crisis</text>\n</g>\n<g id=\"header\">\n\t<g id=\"author\">\n\t\t<a xlink:href=\"http://fundersandfounders.com/author/anna-vital/\" target=\"_top\"><text transform=\"matrix(1 0 0 1 840.0454 92.1748)\" fill=\"#8E8099\" font-family=\"'HelveticaCYPlain'\" font-size=\"19\">by Anna Vital</text>\n\t\t</a>\n\t</g>\n\t\n\t\t<text transform=\"matrix(1.0026 0 0 1 159.4043 90.1201)\" fill=\"#554263\" style=\"font-family: Lucida, sans-serif; font-stretch: condensed; font-weight: bold; \" font-size=\"60\">TOO LATE TO START?</text>\n\t\n\t<text transform=\"matrix(1.0003 0 0 1 35.4619 322.2427)\" fill=\"#C2BFC7\" font-family=\"'Helvetica-Oblique'\" font-size=\"16.2095\">years of life</text>\n</g>\n</svg>\n</div>\n<script type=\"text/javascript\">\nvar FnF = FnF || {};\nFnF.founders = {\n \"name\": \"Founders\",\n \"children\": [\n  {\n   \"name\": \"15..19\",\n   \"range\" : 15,\n   \"children\": [\t\t\n\t\t{\"company\": \"Dell\", \"name\": \"Michael\", \"lastname\": \"Dell\", \"birth\": \"1965\", \"founded\": \"1984-11-04\", \"age\": 18, \"more\" : \"assembling computers \\n in his college apartment\", \"link\" : \"en.wikipedia.org/wiki/Michael_Dell\"},\n\t\t{\"company\": \"UPS\", \"name\": \"James\", \"lastname\" : \"Casey\", \"birth\": \"1888-03-29\", \"founded\": \"1907-08-28\", \"age\": 19, \"more\" : \"delivering packages \\n on $100 borrowed from a friend\", \"link\" : \"en.wikipedia.org/wiki/James_E._Casey\"},\n\t\t{\"company\": \"Facebook\", \"name\": \"Mark\", \"lastname\": \"Zuckerberg\", \"birth\": \"1984-05-14\", \"founded\": \"2004-02-04\", \"age\": 19, \"more\" : \"launching the website \\n at his dorm room in Harvard\", \"link\" : \"en.wikipedia.org/wiki/Mark_Zuckerberg\"}\t\t\n  ]},\n  {\n   \"name\": \"20..24\",\n   \"range\" : 20,\n   \"children\": [\t\t\n\t\t{\"company\": \"Microsoft\", \"name\": \"Bill\", \"lastname\" : \"Gates\", \"birth\": \"1955-10-28\", \"founded\": \"1975-04-04\", \"age\": 20, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Bill_Gates\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Jobs\", \"birth\": \"1955-02-24\", \"founded\": \"1976-04-01\", \"age\": 21, \"more\" : \"making computers in garage\", \"link\" : \"en.wikipedia.org/wiki/Steve_Jobs\"},\n\t\t{\"company\": \"Burberry\", \"name\": \"Thomas\", \"lastname\" : \"Burberry\", \"birth\": \"1835-08-27\", \"founded\": \"1856\", \"age\": 21, \"more\" : \"selling sports clothes \\n from a small London shop\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Burberry\"},\n\t\t{\"company\": \"Tesco\", \"name\": \"Jack\", \"lastname\" : \"Cohen\", \"birth\": \"1898-10-06\", \"founded\": \"1919\", \"age\": 21, \"more\" : \"buying one market stall\", \"link\" : \"en.wikipedia.org/wiki/Jack_Cohen_(businessman)\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"Arthur\", \"lastname\" : \"Davidson\", \"birth\": \"1881-02-11\", \"founded\": \"1903\", \"age\": 22, \"more\" : \"making a bike easy \\nfor him to go fishing\", \"link\" : \"en.wikipedia.org/wiki/Arthur_Davidson_(motorcycling)\"},\n\t\t{\"company\": \"Microsoft\", \"name\": \"Paul\", \"lastname\" : \"Allen\", \"birth\": \"1953-01-21\", \"founded\": \"1975-04-04\", \"age\": 22, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Paul_Allen\"},\n\t\t{\"company\": \"Walt Disney\", \"name\": \"Walt\", \"lastname\" : \"Disney\", \"birth\": \"1901-12-05\", \"founded\": \"1923-10-16\", \"age\": 22, \"more\" : \"after his other studio went bust\", \"link\" : \"en.wikipedia.org/wiki/Walt_Disney\"},\n\t\t{\"company\": \"Heineken\", \"name\": \"Gerard\", \"lastname\" : \"Heineken\", \"birth\": \"1841-09-29\", \"founded\": \"1864\", \"age\": 23, \"more\" : \"the first brewery \\nto have a lab\", \"link\" : \"en.wikipedia.org/wiki/Gerard_Adriaan_Heineken\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"William\", \"lastname\" : \"Harley\", \"birth\": \"1880-12-29\", \"founded\": \"1903\", \"age\": 23, \"more\" : \"making bikes \\n with his friend Arthur\", \"link\" : \"en.wikipedia.org/wiki/William_S._Harley\"}\n  ]},\n  {\n   \"name\": \"25..29\",\n   \"range\" : 25,\n   \"children\": [\t\t\n\t\t{\"company\": \"Best Buy\", \"name\": \"Richard\", \"lastname\" : \"Schulze\", \"birth\": \"1941\", \"founded\": \"1966\", \"age\": 25, \"more\" : \"mortgaging his home \\n to open an audio store\", \"link\" : \"en.wikipedia.org/wiki/Richard_M._Schulze\"},\n\t\t{\"company\": \"Google\", \"name\": \"Sergey\", \"lastname\" : \"Brin\", \"birth\": \"1973-08-21\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Sergey_Brin\"},\n\t\t{\"company\": \"Google\", \"name\": \"Larry\", \"lastname\" : \"Page\", \"birth\": \"1973-03-26\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Larry_Page\"},\n\t\t{\"company\": \"HP\", \"name\": \"William\", \"lastname\" : \"Hewlett\", \"birth\": \"1913-05-20\", \"founded\": \"1939-01-01\", \"age\": 25, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/William_Redington_Hewlett\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Akio\", \"lastname\" : \"Morita\", \"birth\": \"1921-01-26\", \"founded\": \"1946-05-07\", \"age\": 25, \"more\" : \"creating audio tape\", \"link\" : \"en.wikipedia.org/wiki/Akio_Morita\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Wozniak\", \"birth\": \"1950-08-11\", \"founded\": \"1976-04-01\", \"age\": 26, \"more\" : \"designed a computer \\nall by himself\", \"link\" : \"en.wikipedia.org/wiki/Steve_Wozniak\"},\n\t\t{\"company\": \"HP\", \"name\": \"David\", \"lastname\" : \"Packard\", \"birth\": \"1912-09-07\", \"founded\": \"1939-01-01\", \"age\": 26, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/David_Packard\"},\n\t\t{\"company\": \"Nike\", \"name\": \"Phil\", \"lastname\" : \"Knight\", \"birth\": \"1938-02-24\", \"founded\": \"1964-01-25\", \"age\": 26, \"more\" : \"cold calling a running \\nshoe firm in Japan\", \"link\" : \"en.wikipedia.org/wiki/Phil_Knight\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Steve\", \"lastname\" : \"Case\", \"birth\": \"1958-08-21\", \"founded\": \"1985\", \"age\": 27, \"more\" : \"letting  people connect \\nthrough Internet portal\", \"link\" : \"en.wikipedia.org/wiki/Steve_Case\" },\t\t\n\t\t{\"company\": \"Whole Foods\", \"name\": \"John\", \"lastname\" : \"Mackey\", \"birth\": \"1953-08-15\", \"founded\": \"1980\", \"age\": 27, \"more\" : \"opening a health food store \\nwith his girlfriend\", \"link\" : \"en.wikipedia.org/wiki/John_Mackey(businessman)\"},\n\t\t{\"company\": \"FedEx\", \"name\": \"Fred\", \"lastname\" : \"Smith\", \"birth\": \"1944-08-11\", \"founded\": \"1971-06-18\", \"age\": 27, \"more\" : \"based on his college paper \\nabout overnight delivery\", \"link\" : \"en.wikipedia.org/wiki/Frederick_W._Smith\"},\n\t\t{\"company\": \"Walgreens\", \"name\": \"Charles\", \"lastname\" : \"Walgreen\", \"birth\": \"1873-10-09\", \"founded\": \"1901\", \"age\": 28, \"more\" : \"buying a pharmacy \\nfrom his boss\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rudolph_Walgreen\"},\n\t\t{\"company\": \"eBay\", \"name\": \"Pierre\", \"lastname\" : \"Omidyar\", \"birth\": \"1967-06-21\", \"founded\": \"1995-09-03\", \"age\": 28, \"more\" : \"writing code for \\nauction website\", \"link\" : \"en.wikipedia.org/wiki/Pierre_Omidyar\"},\n\t\t{\"company\": \"L'Oral\", \"name\": \"Eugne\", \"lastname\" : \"Schueller\", \"birth\": \"1881-03-20\", \"founded\": \"1909\", \"age\": 28, \"more\" : \"with a new hair dye formula\", \"link\" : \"en.wikipedia.org/wiki/Eugne_Schueller\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Sandra\", \"lastname\" : \"Lerner\", \"birth\": \"1955\", \"founded\": \"1984-12\", \"age\": 28, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Sandra_Lerner\"},\n\t\t{\"company\": \"Expedia\", \"name\": \"Richard\", \"lastname\" : \"Barton\", \"birth\": \"1967-06-02\", \"founded\": \"1996\", \"age\": 29, \"more\" : \"while working at Microsoft\", \"link\" : \"en.wikipedia.org/wiki/Rich_Barton\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Charles\", \"lastname\" : \"Rolls\", \"birth\": \"1877-08-27\", \"founded\": \"1906\", \"age\": 29, \"more\" : \"selling all cars \\nhis partner made\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rolls\"},\n\t\t{\"company\": \"Visa\", \"name\": \"Dee\", \"lastname\" : \"Hock\", \"birth\": \"1929\", \"founded\": \"1958\", \"age\": 29, \"more\" : \"convincing banks to give up \\nownership of credit cards\", \"link\" : \"en.wikipedia.org/wiki/Dee_Hock\"}\n   ]},\n  {\n   \"name\": \"30..34\",\n   \"range\" : 30,\n   \"children\": [\t\t\n\t\t{\"company\": \"Amazon\", \"name\": \"Jeff\", \"lastname\" : \"Bezos\", \"birth\": \"1964-01-12\", \"founded\": \"1994\", \"age\": 30, \"more\" : \"pioneering e-commerce, \\nstarting selling books\", \"link\" : \"en.wikipedia.org/wiki/Jeff_Bezos\"},\n\t\t{\"company\": \"H&M\", \"name\": \"Erling\", \"lastname\" : \"Persson\", \"birth\": \"1917-01-21\", \"founded\": \"1947\", \"age\": 30, \"more\" : \"selling women's clothing\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Nintendo\", \"name\": \"Fusajiro\", \"lastname\" : \"Yamauchi\", \"birth\": \"1859-11-22\", \"founded\": \"1889-09-23\", \"age\": 30, \"more\" : \"from a small hanafuda \\ngame firm\", \"link\" : \"en.wikipedia.org/wiki/Hiroshi_Yamauchi\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Leonard\", \"lastname\" : \"Bosack\", \"birth\": \"1952\", \"founded\": \"1984-12\", \"age\": 31, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Intuit\", \"name\": \"Scott\", \"lastname\" : \"Cook\", \"birth\": \"1952\", \"founded\": 1983, \"age\": 31, \"more\" : \"after hearing wife's complain \\nabout paying bills\", \"link\" : \"en.wikipedia.org/wiki/Scott_Cook\"},\n\t\t{\"company\": \"Siemens\", \"name\": \"Werner\", \"lastname\" : \"von Siemens\", \"birth\": \"1816-12-13\", \"founded\": \"1847-10-12\", \"age\": 31, \"more\" : \"inventing needle telegraph\", \"link\" : \"en.wikipedia.org/wiki/Werner_von_Siemens\"},\n\t\t{\"company\": \"Xerox\", \"name\": \"Chester\", \"lastname\" : \"Carlson\", \"birth\": \"1906-02-08\", \"founded\": \"1938\", \"age\": 32, \"more\" : \"after 22 years of trying \\nto make a dry copy\", \"link\" : \"en.wikipedia.org/wiki/Chester_Carlson\"},\n\t\t{\"company\": \"Acer\", \"name\": \"Stan\", \"lastname\" : \"Shih\", \"birth\": \"1944-12-08\", \"founded\": \"1976\", \"age\": 32, \"more\" : \"selling clones of Apple II \\ncomputer\", \"link\" : \"en.wikipedia.org/wiki/Stan_Shih\"},\n\t\t{\"company\": \"Baidu\", \"name\": \"Robin\", \"lastname\" : \"Li\", \"birth\": \"1968-11-17\", \"founded\": \"2000-01-01\", \"age\": 32, \"more\" : \"developing search algorithms \\nbefore Google\", \"link\" : \"en.wikipedia.org/wiki/Robin_Li\"},\n\t\t{\"company\": \"Peugeot\", \"name\": \"Armand\", \"lastname\" : \"Peugeot\", \"birth\": \"1849-03-26\", \"founded\": \"1882\", \"age\": 32, \"more\" : \"producing coffee grinders \\nand bicycles\", \"link\" : \"en.wikipedia.org/wiki/Armand_Peugeot\"},\n\t\t{\"company\": \"Oracle\", \"name\": \"Larry\", \"lastname\" : \"Ellison\", \"birth\": \"1944-08-17\", \"founded\": \"1977\", \"age\": 33, \"more\" : \"making a database \\nfor the CIA\", \"link\" : \"en.wikipedia.org/wiki/Larry_Ellison\"},\n\t\t{\"company\": \"Procter & Gamble\", \"name\": \"James\", \"lastname\" : \"Gamble\", \"birth\": \"1803-04-03\", \"founded\": \"1837-10-31\", \"age\": 33, \"more\" : \"having invented the formula \\nof ivory soap\", \"link\" : \"en.wikipedia.org/wiki/James_Gamble_%28industrialist%29\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"William\", \"lastname\" : \"Fargo\", \"birth\": \"1818-05-20\", \"founded\": \"1852-03-18\", \"age\": 34, \"more\" : \"pioneering banking \\nin California\", \"link\" : \"en.wikipedia.org/wiki/William_Fargo\"}\n  ]},\n  {\n   \"name\": \"35..39\",\n   \"range\" : 35,\n   \"children\": [\t\n   \t\t{\"company\": \"Procter&Gamble\", \"name\": \"William\", \"lastname\" : \"Procter\", \"birth\": \"1801-12-07\", \"founded\": \"1837-10-31\", \"age\": 35, \"more\" : \"making candles with \\nhis brother-in-law\", \"link\" : \"http://en.wikipedia.org/wiki/William_Procter_%28candlemaker%29\"},\t\n\t\t{\"company\": \"Boeing\", \"name\": \"William\", \"lastname\" : \"Boeing\", \"birth\": \"1881-10-01\", \"founded\": \"1916-07-15\", \"age\": 35, \"more\" : \"after crashing his plane, \\nunable to repair it\", \"link\" : \"en.wikipedia.org/wiki/William_Boeing\"},\n\t\t{\"company\": \"Salesforce\", \"name\": \"Marc\", \"lastname\" : \"Benioff\", \"birth\": \"1964-09-25\", \"founded\": \"1999\", \"age\": 35, \"more\" : \"in his apartment proclaiming \\n'The End of Software'\", \"link\" : \"en.wikipedia.org/wiki/Marc_Benioff\"},\n\t\t{\"company\": \"Carlsberg\", \"name\": \"J. C.\", \"lastname\" : \"Jacobsen\", \"birth\": \"1811-09-02\", \"founded\": \"1847\", \"age\": 36, \"more\" : \"using science to make good \\nbeer consistently\", \"link\" : \"en.wikipedia.org/wiki/J._C._Jacobsen\"},\n\t\t{\"company\": \"Hitachi\", \"name\": \"Namihei\", \"lastname\" : \"Odaira\", \"birth\": \"1874\", \"founded\": \"1910\", \"age\": 36, \"more\" : \"creating electric motor\\n while working in a mine\", \"link\" : \"en.wikipedia.org/wiki/Namihei_Odaira\"},\n\t\t{\"company\": \"LinkedIn\", \"name\": \"Reid\", \"lastname\" : \"Hoffman\", \"birth\": \"1967-08-05\", \"founded\": \"2003-05\", \"age\": 36, \"more\" : \"creating first business-minded \\nsocial network in 2002\", \"link\" : \"en.wikipedia.org/wiki/Reid_Hoffman\"},\n\t\t{\"company\": \"Macy's\", \"name\": \"Rowland\", \"lastname\" : \"Macy\", \"birth\": \"1822-08-30\", \"founded\": \"1858\", \"age\": 36, \"more\" : \"as a dried goods store in NYC \\nafter 4 of his stores failed\", \"link\" : \"en.wikipedia.org/wiki/Rowland_Hussey_Macy\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Doris\", \"lastname\" : \"Fisher\", \"birth\": \"1932\", \"founded\": \"1969\", \"age\": 37, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Doris_F._Fisher\"},\n\t\t{\"company\": \"Hershey's\", \"name\": \"Milton\", \"lastname\" : \"Hershey\", \"birth\": \"1857-09-13\", \"founded\": \"1894\", \"age\": 37, \"more\" : \"making fresh-milk caramels \\nand hawking them by night\", \"link\" : \"en.wikipedia.org/wiki/Milton_S._Hershey\"},\n\t\t{\"company\": \"Hugo Boss\", \"name\": \"Hugo\", \"lastname\" : \"Boss\", \"birth\": \"1885-07-08\", \"founded\": \"1923\", \"age\": 38, \"more\" : \"with six sewing machines \\nleft from his bankruptcy\", \"link\" : \"en.wikipedia.org/wiki/Hugo_Boss_(fashion_designer)\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Masaru\", \"lastname\" : \"Ibuka\", \"birth\": \"1908-04-11\", \"founded\": \"1946-05-07\", \"age\": 38, \"more\" : \"applying transistor technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Masaru_Ibuka\"},\n\t\t{\"company\": \"Public Storage\", \"name\": \"Wayne\", \"lastname\" : \"Hughes\", \"birth\": \"1934-09-28\", \"founded\": \"1972\", \"age\": 38, \"more\" : \"pioneering self-storage\", \"link\" : \"en.wikipedia.org/wiki/B._Wayne_Hughes\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Min\", \"lastname\" : \"Kao\", \"birth\": \"1949\", \"founded\": \"1989\", \"age\": 39, \"more\" : \"applying GPS technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Min_Kao\"},\n\t\t{\"company\": \"HTC\", \"name\": \"Cher\", \"lastname\" : \"Wang\", \"birth\": \"1958-09-14\", \"founded\": \"1997-05-15\", \"age\": 39, \"more\" : \"making tablets and \\nsmartphones\", \"link\" : \"en.wikipedia.org/wiki/Cher_Wang\"},\n\t\t{\"company\": \"Zara (Inditex)\", \"name\": \"Amancio\", \"lastname\" : \"Ortega\", \"birth\": \"1936-03-28\", \"founded\": \"1975\", \"age\": 39, \"more\" : \"organizing local women into \t\\na bathrobe sewing firm\", \"link\" : \"en.wikipedia.org/wiki/Amancio_Ortega_Gaona\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Gordon\", \"lastname\" : \"Moore\", \"birth\": \"1929-01-03\", \"founded\": \"1968-07-18\", \"age\": 39, \"more\" : \"creating a faster RAM \\nmemory chips\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Moore\"},\n\t\t{\"company\": \"Lenovo\", \"name\": \"Liu\", \"lastname\" : \"Chuanzhi\", \"birth\": \"1944-04-29\", \"founded\": \"1984\", \"age\": 39, \"more\" : \"importing TVs and \\nservicing computers\", \"link\" : \"en.wikipedia.org/wiki/Liu_Chuanzhi\"}\n  ]},\n  {\n   \"name\": \"40..44\",\n   \"range\" : 40,\n   \"children\": [\t\t\n\t\t{\"company\": \"Costco\", \"name\": \"Jeffrey\", \"lastname\" : \"Brotman\", \"birth\": \"1943\", \"founded\": \"1983-09-15\", \"age\": 40, \"more\" : \"converting a plane hangar \\ninto a warehouse for shopping\", \"link\" : \"en.wikipedia.org/wiki/Jeffrey_Brotman\"},\n\t\t{\"company\": \"Ford\", \"name\": \"Henry\", \"lastname\" : \"Ford\", \"birth\": \"1863-07-30\", \"founded\": \"1903-06-16\", \"age\": 40, \"more\" : \"wanting to build \\na car for the masses\", \"link\" : \"en.wikipedia.org/wiki/Henry_Ford\"},\n\t\t{\"company\": \"Volvo\", \"name\": \"Gustaf\", \"lastname\" : \"Larson\", \"birth\": \"1887-07-08\", \"founded\": \"1927\", \"age\": 40, \"more\" : \"making an oral contract with \\nco-founder to make first 10 cars\", \"link\" : \"en.wikipedia.org/wiki/Gustaf_Larson\"},\n\t\t{\"company\": \"Christian Dior\", \"name\": \"Christian\", \"lastname\" : \"Dior\", \"birth\": \"1905\", \"founded\": \"1946-12-16\", \"age\": 41, \"more\" : \"inventing a voluptuous look \\namid boxy post-war styles\", \"link\" : \"en.wikipedia.org/wiki/Christian_Dior\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Donald\", \"lastname\" : \"Fisher\", \"birth\": \"1928-09-03\", \"founded\": \"1969\", \"age\": 41, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Donald_Fisher\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Robert\", \"lastname\" : \"Noyce\", \"birth\": \"1927-12-12\", \"founded\": \"1968-07-18\", \"age\": 41, \"more\" : \"co-inventing \\nthe integrated circuit\", \"link\" : \"en.wikipedia.org/wiki/Robert_Noyce\"},\n\t\t{\"company\": \"Coca-Cola\", \"name\": \"Asa\", \"lastname\" : \"Candler\", \"birth\": \"1851-12-30\", \"founded\": \"1892\", \"age\": 41, \"more\" : \"buying the Coca-Cola recipe \\nfor $550 (about $14,000 today)\", \"link\" : \"en.wikipedia.org/wiki/Asa_Griggs_Candler\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"John\", \"lastname\" : \"Warnock\", \"birth\": \"1940-10-06\", \"founded\": \"1982-12\", \"age\": 42, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/John_Warnock\"},\n\t\t{\"company\": \"Lululemon\", \"name\": \"Chip\", \"lastname\" : \"Wilson\", \"birth\": \"1956-03-03\", \"founded\": \"1998\", \"age\": 42, \"more\" : \"creating cotton yoga pants \\nfor active women\", \"link\" : \"en.wikipedia.org/wiki/Chip_Wilson\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Jerry\", \"lastname\" : \"Baldwin\", \"birth\": \"1929\", \"founded\": \"1971-03-30\", \"age\": 42, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Jerry_Baldwin\"},\n\t\t{\"company\": \"Honda\", \"name\": \"Soichiro\", \"lastname\" : \"Honda\", \"birth\": \"1906-11-17\", \"founded\": \"1948-09-24\", \"age\": 42, \"more\" : \"producing motorized bikes\", \"link\" : \"en.wikipedia.org/wiki/Soichiro_Honda\"},\n\t\t{\"company\": \"Dish Network\", \"name\": \"Charlie\", \"lastname\" : \"Ergen\", \"birth\": \"1953-03-01\", \"founded\": 1996, \"age\": 43, \"more\" : \"selling satellite dishes \\ndoor to door in Colorado\", \"link\" : \"en.wikipedia.org/wiki/Charlie_Ergen\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"Charles\", \"lastname\" : \"Geschke\", \"birth\": \"1939-09-11\", \"founded\": \"1982-12\", \"age\": 43, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/Charles_Geschke\"},\n\t\t{\"company\": \"Dollar Tree\", \"name\": \"Macon\", \"lastname\" : \"Brock Jr\", \"birth\": \"1943\", \"founded\": \"1986\", \"age\": 43, \"more\" : \"as a toy store in a mall\", \"link\" : \"en.wikipedia.org/wiki/Dollar_Tree\"},\n\t\t{\"company\": \"Comcast\", \"name\": \"Ralph\", \"lastname\" : \"Roberts\", \"birth\": \"1920-03-13\", \"founded\": \"1963\", \"age\": 43, \"more\" : \"buying a small rural \\nantenna TV system\", \"link\" : \"en.wikipedia.org/wiki/Ralph_J._Roberts\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Henry\", \"lastname\" : \"Royce\", \"birth\": \"1863-03-27\", \"founded\": \"1906\", \"age\": 43, \"more\" : \"making a deal with Rolls to sell\\nhim all the cars he could make\", \"link\" : \"en.wikipedia.org/wiki/Henry_Royce\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Jim\", \"lastname\" : \"Kimsey\", \"birth\": \"1939-09-15\", \"founded\": \"1983\", \"age\": 44, \"more\" : \"marketing a game \\n console for Atari\", \"link\" : \"en.wikipedia.org/wiki/Jim_Kimsey\"},\n\t\t{\"company\": \"Walmart\", \"name\": \"Sam\", \"lastname\" : \"Walton\", \"birth\": \"1918-03-29\", \"founded\": \"1962\", \"age\": 44, \"more\" : \"purchasing a Ben Franklin \\nvariety store\", \"link\" : \"en.wikipedia.org/wiki/Sam_Walton\"}\n  ]},\n  {\n   \"name\": \"45..49\",\n   \"range\" : 45,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"General Electric\", \"name\": \"Thomas\", \"lastname\" : \"Edison\", \"birth\": \"1847-02-11\", \"founded\": \"1892\", \"age\": 45, \"more\" : \"bringing his various inventions \\ninto one company\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Edison\"},\n\t\t{\"company\": \"Costco\", \"name\": \"James\", \"lastname\" : \"Sinegal\", \"birth\": \"1936-01-01\", \"founded\": \"1983-09-15\", \"age\": 47, \"more\" : \"as one of the first warehouse \\nstores in the U.S.\", \"link\" : \"en.wikipedia.org/wiki/James_Sinegal\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"Henry\", \"lastname\" : \"Wells\", \"birth\": \"1805-12-12\", \"founded\": \"1852-03-18\", \"age\": 47, \"more\" : \"first to introduce banking \\nto the Wild West\", \"link\" : \"en.wikipedia.org/wiki/Henry_Wells\"},\n\t\t{\"company\": \"Goldman Sachs\", \"name\": \"Marcus\", \"lastname\" : \"Goldman\", \"birth\": \"1821-12-09\", \"founded\": \"1869\", \"age\": 48, \"more\" : \"as a one-man broker\\n of debt IOUs\", \"link\" : \"en.wikipedia.org/wiki/Marcus_Goldman\"},\n\t\t{\"company\": \"Home Depot\", \"name\": \"Bernard\", \"lastname\" : \"Marcus\", \"birth\": \"1929\", \"founded\": \"1978\", \"age\": 48, \"more\" : \"after being fired from \\nhome improvement store\", \"link\" : \"en.wikipedia.org/wiki/Bernard_Marcus\"},\n\t\t{\"company\": \"Adidas\", \"name\": \"Adolf\", \"lastname\" : \"Dassler\", \"birth\": \"1900-11-03\", \"founded\": \"1949-08-18\", \"age\": 48, \"more\" : \"vying with his brother to make\\nshoes for Olympic runners\", \"link\" : \"en.wikipedia.org/wiki/Adolf_Dassler\"},\n\t\t{\"company\": \"Ryanair\", \"name\": \"Tony\", \"lastname\" : \"Ryan\", \"birth\": \"1936-02-02\", \"founded\": \"1985\", \"age\": 49, \"more\" : \"with a single 15-seat plane \\nflying from London\", \"link\" : \"nytimes.com/2007/10/04/business/04ryan.html\"},\n\t\t{\"company\": \"Seagate\", \"name\": \"Alan\", \"lastname\" : \"Shugart\", \"birth\": \"1930-09-27\", \"founded\": 1979, \"age\": 49, \"more\" : \"introducing low-cost \\nfloppy disks\", \"link\" : \"en.wikipedia.org/wiki/Alan_Shugart\"}\n  ]},\n  {\n   \"name\": \"50..54\",\n   \"range\" : 50,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Morgan Stanley\", \"name\": \"Harold\", \"lastname\" : \"Stanley\", \"birth\": \"1885-10-02\", \"founded\": \"1935-09-05\", \"age\": 50, \"more\" : \"trading bonds for companies \\npioneering investment banking\", \"link\" : \"en.wikipedia.org/wiki/Harold_Stanley\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Gary\", \"lastname\" : \"Burrell\", \"birth\": \"1937\", \"founded\": \"1989\", \"age\": 51, \"more\" : \"first to use GPS technology \\nfor non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Gary_Burrell\"},\n\t\t{\"company\": \"Hyundai Motor\", \"name\": \"Chung\", \"lastname\" : \"Ju-yung\", \"birth\": \"1915-11-25\", \"founded\": \"1967-12-29\", \"age\": 51, \"more\" : \"borrowing money to start \\nan auto service garage\", \"link\" : \"en.wikipedia.org/wiki/Chung_Ju-yung\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Gordon\", \"lastname\" : \"Bowker\", \"birth\": \"1920\", \"founded\": \"1971-03-30T08:00:00.000Z\", \"age\": 51, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Bowker\"},\n\t\t{\"company\": \"Campbell Soup\", \"name\": \"Joseph\", \"lastname\" : \"Campbell\", \"birth\": \"1817-05-15\", \"founded\": \"1869\", \"age\": 52, \"more\" : \"condensing soups by halving \\nthe amount of water\", \"link\" : \"en.wikipedia.org/wiki/Joseph_A._Campbell\"},\n\t\t{\"company\": \"Nestl\", \"name\": \"Henri\", \"lastname\" : \"Nestl\", \"birth\": \"1814-08-10\", \"founded\": \"1866\", \"age\": 52, \"more\" : \"inventing powered milk \\nand breast milk substitute\", \"link\" : \"en.wikipedia.org/wiki/Henri_Nestl%C3%A9\"},\n\t\t{\"company\": \"Nissan Motor\", \"name\": \"Yoshisuke\", \"lastname\" : \"Aikawa\", \"birth\": \"1880-11-06\", \"founded\": \"1933-12-26\", \"age\": 52, \"more\" : \"transforming his \\nbrother-in-law's business\", \"link\" : \"en.wikipedia.org/wiki/Yoshisuke_Aikawa\"},\n\t\t{\"company\": \"Este Lauder\", \"name\": \"Este\", \"lastname\" : \"Lauder\", \"birth\": \"1906-07-01\", \"founded\": \"1961\", \"age\": 54, \"more\" : \"selling creams made by\\nher uncle to her friends\", \"link\" : \"en.wikipedia.org/wiki/Est%C3%A9e_Lauder_(businesswoman)\"}\n  ]},\n  {\n   \"name\": \"55..59\",\n   \"range\" : 55,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Las Vegas Sands\", \"name\": \"Sheldon\", \"lastname\" : \"Adelson\", \"birth\": \"1933-08-04\", \"founded\": \"1988\", \"age\": 55, \"more\" : \"turning an old hotel into the only \\nprivate convention center\", \"link\" : \"en.wikipedia.org/wiki/Sheldon_Adelson\"},\n\t\t{\"company\": \"Porsche\", \"name\": \"Ferdinand\", \"lastname\" : \"Porsche\", \"birth\": \"1875-09-03\", \"founded\": \"1931\", \"age\": 56, \"more\" : \"creating racing car for which \\nhe had no customer\", \"link\" : \"en.wikipedia.org/wiki/Ferdinand_Porsche\"},\n\t\t{\"company\": \"Kawasaki\", \"name\": \"Kawasaki\", \"lastname\" : \"Shz\", \"birth\": \"1837\", \"founded\": \"1896-10-15\", \"age\": 59, \"more\" : \"as a ship building \\ncompany\", \"link\" : \"en.wikipedia.org/wiki/Kawasaki_Sh%C5%8Dz%C5%8D\"}\n  ]},\n  {\n   \"name\": \"60..64\",\n   \"range\" : 60,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Bank of America\", \"name\": \"Amadeo\", \"lastname\" : \"Giannini\", \"birth\": \"1870-05-06\", \"founded\": \"1930-11-03\", \"age\": 60, \"more\" : \"the first to offer banking \\nfor the middle-class \", \"link\" : \"en.wikipedia.org/wiki/Amadeo_Giannini\"},\n\t\t{\"company\": \"IBM\", \"name\": \"Charles\", \"lastname\" : \"Flint\", \"birth\": \"1850-01-24\", \"founded\": \"1911-06-16\", \"age\": 61, \"more\" : \"foreseeing that punch-card \\n will change the world\", \"link\" : \"en.wikipedia.org/wiki/Charles_Ranlett_Flint\"}\n  ]}\n ]\n}\nFnF.aspectRatio = 970 / 800;\nFnF.chart = d3.select(\"#latetostart-graph\").node();\nFnF.resizeTimer;\nFnF.doResize = function() {\n\tconsole.log('running FnF.doResize()');\n\tclearTimeout(FnF.resizeTimer);\n\tFnF.resizeTimer = setTimeout(function(){\n\t\tvar targetWidth = FnF.chart.parentNode.offsetWidth;\n\t\tconsole.log('resizing to w=' + targetWidth);\n\t\tFnF.chart.style.width = targetWidth + \"px\";\n\t\tFnF.chart.style.height = targetWidth / FnF.aspectRatio + \"px\";\t\n\t}, 100);\n}\nFnF.OFFSET = 120;\nFnF.LEAF_DROP = 50;\nFnF.INITIAL_Y_OFFSET = 300;\nFnF.WIDTH = 970;\nFnF.YEAR_STEP = 4.25;\nFnF.margin = {top: 0, right: 10, bottom: 0, left: 10};\nFnF.width = FnF.WIDTH - FnF.margin.right - FnF.margin.left;\nFnF.height = 800 - FnF.margin.top - FnF.margin.bottom;\n    \nFnF.i = 0;\nFnF.duration = 750;\n// var    root, prevSelected;\nFnF.tree = d3.layout.tree()\n\t.separation(function(a, b) { return a.parent === b.parent ? 1 : 2; })\n    .size([FnF.width, FnF.height]);\nFnF.diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.x, d.y]; });\n    \n    \nvar line = d3.svg.line()\n    .interpolate(\"linear\")\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n    \nFnF.svg = d3.select(\"#container svg\").append(\"svg\")\n    .attr(\"width\", FnF.width + FnF.margin.right + FnF.margin.left)\n    .attr(\"height\", FnF.height + FnF.margin.top + FnF.margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + FnF.margin.left + \",\" + FnF.margin.top + \")\");\nFnF.collapse = function (d) {\n\tif (d.children) {\n\t  d._children = d.children;\n\t  d._children.forEach(FnF.collapse);\n\t  d.children = null;\n\t}\n}\nFnF.root = FnF.founders;\nFnF.root.x0 = FnF.height / 2;\nFnF.root.y0 = 300; // for smooth first transition\nFnF.root.children.forEach(function(d) {\n\tif (!d.range || d.range != 35){\n\t\tFnF.collapse(d);\n\t}\n});\nFnF.svg.append(\"svg:line\")\n\t.attr(\"x1\", 25)\n\t.attr(\"y1\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"x2\", FnF.WIDTH - 30)\n\t.attr(\"y2\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"stroke-width\", 4.25)\n\t.attr(\"stroke-dasharray\", \"\" + FnF.YEAR_STEP + \", \" + FnF.YEAR_STEP*2)\n\t.style(\"stroke\", \"rgb(195,190,199)\");\n    \nFnF.doResize();\nFnF.clearInfo = function () {\n  FnF.svg.selectAll(\".year_born\").remove();\n}\nFnF.leafSelect = function(d) {\n  if (d.selected) {\n    d.selected = false;\n    d._selected= true;\n  } else {\n    if (FnF.prevSelected) {\n      FnF.prevSelected.selected = false;\n      FnF.prevSelected._selected = false;\n    }\n     d.selected = true;\n    FnF.prevSelected = d;\n  }\n  var theName = d.name;\n  var theLastName = d.lastname; \n  FnF.clearInfo();\n  FnF.svg.append(\"text\")\n  \t.attr(\"x\", \"15\")\n  \t.attr(\"y\", \"200\")\n  \t.classed(\"year_born\", true)\n  \t.text( d.birth.split(\"-\")[0] );\n}\nFnF.click = function(d) {\n  if (!(d.children || d._children)) {\n  \tFnF.leafSelect(d);\n  \tFnF.update(d);\n  \treturn;\n  }\n  \n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  if (d.parent) {\n    d.parent.children.forEach(function(element) {\n      if (d !== element) {\n        FnF.collapse(element);\n      }\n    });\n  }\n  FnF.update(d);\n  if (FnF.prevSelected) {\n  \tFnF.prevSelected.selected = false;\n  \tFnF.prevSelected._selected = false;\n  }\n  FnF.prevSelected = null;\n  FnF.clearInfo();\n}\n   \nFnF.update = function(source) {\n  // Compute the new tree layout.\n  var nodes = FnF.tree.nodes(FnF.root).reverse();\n  nodes.splice(nodes.length-1,1);\n  links = FnF.tree.links(nodes);\n  nodes.forEach(normalizeNode);\n  // Update the nodes\n  var node = FnF.svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++FnF.i); });\n      \n  var rootNodesCollapsed = node.filter(function(d) {\n        return (d.children || d._children);\n  });\n  \n  rootNodesCollapsed.select(\".info-text\")\n    .select(\"text\")\n  \t.attr(\"dy\",\"-2em\")\n  \t.classed(\"years\", true)\n  \t.text(function(d) {\n  \t\tif (d.children && !d._children)\t{\n  \t\t\treturn d.name;\n  \t\t} else if (d.range == 25 || d.range == 35) {\n      \t\t\treturn d.range;\n      \t}\n  \t});\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x0 + \",\" + source.y0 + \")\"; })\n      .on(\"click\", FnF.click);\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeEnter.append(\"g\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && !d.children && !d._children ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"text-anchor\", \"middle\")\n      .call(function(text){\n      \ttext.each(function(d){\n\t\t\t\t\tvar atext = d3.select(this);\n\t\t\t\t\tif (d.children && !d._children) {\n\t\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6).text(d.name);\n\t\t\t\t\t} else if (d.children || d._children) {\n\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6)\n\t\t\t\t\t\t     .text( (d.range == 25 || d.range == 35) ? d.range : \"\");      \t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar startedAt = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"0.8em\").style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tstartedAt.append('tspan').classed(\"more-text\", true).text('at ');\n\t\t\t\t\tstartedAt.append('tspan').text(d.age);\n\t\t\t\t\tvar founder = atext.append('text').classed(\"founder\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"1.7em\").text(d.name);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"2.7em\").text(d.lastname);\n\t\t\t\t\tvar company = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"4.5em\").classed(\"company\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tcompany.append('tspan').classed(\"more-text\", true).text('started ');\n\t\t\t\t\tcompany.append('tspan').text(d.company);\n\t\t\t\t\tif (d.more && d.link) {\n            var aStory = d.more.split(\"\\n\");\n            var shortStory = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"7em\").classed(\"more-text short-story\", true).style(\"fill-opacity\", 1e-6);\n            shortStory.append('tspan').classed(\"more-text\", true).text(aStory[0]);\n            if (aStory[1]) {\n              shortStory.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"8.5em\").classed(\"more-text\", true).text(aStory[1]);\n            }\n\t\t\t\t\t\tshortStory.append(\"a\").attr(\"xlink:href\", \"http://\"+ d.link).attr(\"target\", \"_blank\").append('tspan').text(\" [..]\");\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x > FnF.WIDTH - 60) {\n\t\t\t\t\t\tstartedAt.classed(\"align-right\", true);\n\t\t\t\t\t\tfounder.classed(\"align-right\", true);\n\t\t\t\t\t\tcompany.classed(\"align-right\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-right\", true);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x < 50) {\n\t\t\t\t\t\tstartedAt.classed(\"align-left\", true);\n\t\t\t\t\t\tfounder.classed(\"align-left\", true);\n\t\t\t\t\t\tcompany.classed(\"align-left\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-left\", true);\n\t\t\t\t\t}\n\t\t\t   }\n      \t})\n      })\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) {\n      \treturn \"translate(\" + d.x + \",\" + d.y  + \")\" + (d.selected && !d.children && !d._children ? \"scale(1.6,1.6)\" : \"\"); \n      });\n      \n  nodeUpdate.select(\".info-text\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && d.depth > 1 ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", function(d) { \n      \treturn \"translate(\" + \n      \t        (d.selected && !d.children && !d._children ? (d.x < 50 ? \"-5\" : d.x > FnF.WIDTH - 50 ? \"5\" : \"0\" ) : \"0\") +\n      \t        \",0)\"; \n      });\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", function (d) { return d._children || d.children ? 6.5 : 4.5 } )\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeUpdate.selectAll(\"text\")\n      .style(\"fill-opacity\", 1);\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x + \",\" + source.y + \")\"; })\n      .remove();\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n  nodeExit.selectAll(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n  // Update the links\n  var link = FnF.svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return FnF.diagonal({source: o, target: o});\n      });\n      \n  // Transition links to their new position.\n  link.transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d){\n        if (d.target.selected) {\n//           var o = {x: d.source.x, y: d.source.y - FnF.LEAF_DROP};\n//           return FnF.diagonal({source: o, target: o});\n          d.target.y = d.target.y - FnF.LEAF_DROP;\n        }\n\t\treturn FnF.diagonal(d);\n      }).attrTween(\"d\", function (d, i, a) { \n       if (d.target.selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + (d.target.y + FnF.LEAF_DROP ));\n       } else if (d.target._selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + d.target.y);\n         d.target._selected = false;\n       } else {\n         return d3.interpolate(a, FnF.diagonal(d));\n       }  \n  \t  });\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return FnF.diagonal({source: o, target: o});\n      }).remove();\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n   \n   \nFnF.update(FnF.root);\nd3.select(window).on(\"resize\", FnF.doResize);\nd3.select(window).on(\"load\", FnF.doResize);\n//d3.select(self.frameElement).style(\"height\", \"800px\");\n// Normalize for fixed-depth.\nfunction normalizeNode(d){\n  \tif (d.parent && d.parent.depth === 0) {\n  \t\td.y = FnF.INITIAL_Y_OFFSET;\n  \t\td.x = d.range * FnF.YEAR_STEP * 3 + 15;\n  \t} else {\n  \t    d.y = FnF.INITIAL_Y_OFFSET + d.depth * FnF.OFFSET;\n        // updating selected node position  \t    \n  \t    if ( d.selected && (d.depth === 2) ) {\n  \t    \td.y = d.y + FnF.LEAF_DROP;\n  \t    }\n  \t}\n}\n</script>", "description": "fresh block", "created_at": "2016-09-23T23:53:08Z", "updated_at": "2016-09-23T23:53:08Z", "api": ["d3.select", "d3.layout.tree", "d3.svg.diagonal", "d3.svg.line", "d3.interpolate"], "readme": "Here is a visualization of the relationship between age and success. Tap on the circles below and investigate for yourself.\nSource: [fundersandfounders.com](http://fundersandfounders.com/too-late-to-start-life-crisis/)", "uid": "markvital_89be160315aca0c92569aa93e883f4a1"}, {"code": "<script>\nif (!window.d3) {\n    document.write('<script src=\"js/d3.min.js\"><\\/script>');\n}\n</script>\n\n\n<div id=\"container\">\n\n<!--[if lte IE 8]><a href=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png\" class=\"cboxElement\"><img class=\"aligncenter size-full wp-image-21566\" alt=\"The Aha Moments Of Entrepreneurs\" src=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?zoom=2&amp;resize=660%2C587\" width=\"650\" height=\"577\" src-orig=\"http://i1.wp.com/fundersandfounders.com/wp-content/uploads/2014/06/never-too-late-when-companies-started-infographic.png?resize=660%2C587\" scale=\"2\"></a><![endif]-->\n<svg id=\"latetostart-graph\" version=\"1.2\" baseProfile=\"tiny\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n\t y=\"0px\" width=\"970px\" height=\"800px\" viewBox=\"0 0 970 800\" preserveAspectRatio=\"xMidYMid\" style=\"background-color: #ece8e3;\" xml:space=\"preserve\">\n<g id=\"Footer\">\n\t<text transform=\"matrix(1.0001 0 0 1 35.0942 765.6021)\" fill=\"#554263\" font-family=\"'BebasNeue'\" font-size=\"51.768\">IT'S NEVER TOO LATE.</text>\n<a xlink:href=\"http://fundersandfounders.com/\"  target=\"_top\">\t\n<g id=\"logo\">\n\t<g id=\"letters\">\n\t\t<path fill=\"#238FCF\" d=\"M716.82,751.874h-5.808v4.058h5.601v2.396h-5.601v8.041h-2.517v-16.893h8.324V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M721.698,755.714v6.114c0,1.767,0.687,2.649,2.062,2.649s2.061-0.883,2.061-2.649v-6.114h2.429v6.169\n\t\t\tc0,0.855-0.104,1.592-0.312,2.211c-0.202,0.555-0.551,1.054-1.048,1.498c-0.819,0.723-1.864,1.084-3.13,1.084\n\t\t\tc-1.261,0-2.301-0.361-3.119-1.084c-0.503-0.444-0.861-0.943-1.07-1.498c-0.199-0.496-0.302-1.232-0.302-2.211v-6.169H721.698z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M731.313,755.714h2.44v0.984c0.849-0.854,1.807-1.28,2.87-1.28c1.224,0,2.178,0.391,2.862,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.282-0.407-0.791-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M751.186,747.891h2.438v18.479h-2.438v-1.115c-0.957,0.949-2.041,1.422-3.251,1.422\n\t\t\tc-1.437,0-2.632-0.533-3.581-1.596c-0.944-1.088-1.415-2.445-1.415-4.07c0-1.592,0.471-2.918,1.415-3.982\n\t\t\tc0.937-1.072,2.111-1.609,3.53-1.609c1.229,0,2.329,0.512,3.302,1.531V747.891z M745.422,761.01c0,1.02,0.269,1.852,0.81,2.493\n\t\t\tc0.553,0.649,1.251,0.975,2.095,0.975c0.898,0,1.625-0.313,2.18-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.555-0.634-1.274-0.951-2.16-0.951c-0.834,0-1.53,0.321-2.094,0.961\n\t\t\tC745.698,759.252,745.422,760.054,745.422,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M766.262,761.621h-7.531c0.063,0.877,0.345,1.572,0.841,2.091c0.496,0.511,1.135,0.766,1.911,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.831-0.832,1.327-1.617l2.051,1.158c-0.316,0.547-0.651,1.016-1.003,1.406\n\t\t\tc-0.352,0.389-0.729,0.71-1.134,0.961c-0.402,0.253-0.839,0.438-1.307,0.555c-0.468,0.115-0.975,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.829-0.51-3.777-1.532c-0.951-1.026-1.424-2.391-1.424-4.091c0-1.686,0.459-3.049,1.381-4.092\n\t\t\tc0.928-1.029,2.157-1.543,3.69-1.543c1.548,0,2.771,0.5,3.672,1.5c0.89,0.99,1.338,2.366,1.338,4.125L766.262,761.621z\n\t\t\t M763.771,759.609c-0.339-1.314-1.154-1.97-2.449-1.97c-0.297,0-0.573,0.046-0.833,0.136c-0.259,0.092-0.495,0.224-0.706,0.395\n\t\t\tc-0.212,0.172-0.394,0.377-0.546,0.618c-0.151,0.24-0.266,0.514-0.344,0.821H763.771z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M768.919,755.714h2.429v0.952c0.445-0.475,0.841-0.8,1.188-0.973c0.351-0.184,0.769-0.275,1.252-0.275\n\t\t\tc0.641,0,1.309,0.211,2.006,0.635l-1.109,2.254c-0.463-0.336-0.911-0.504-1.35-0.504c-1.324,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.429V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M783.297,757.53l-2.01,1.081c-0.314-0.647-0.709-0.972-1.176-0.972c-0.224,0-0.414,0.074-0.572,0.224\n\t\t\ts-0.236,0.341-0.236,0.574c0,0.406,0.467,0.812,1.403,1.213c1.286,0.561,2.155,1.078,2.6,1.552\n\t\t\tc0.448,0.473,0.671,1.109,0.671,1.911c0,1.027-0.375,1.889-1.125,2.579c-0.727,0.655-1.603,0.983-2.632,0.983\n\t\t\tc-1.764,0-3.013-0.871-3.744-2.614l2.07-0.975c0.289,0.511,0.506,0.835,0.659,0.975c0.295,0.277,0.646,0.416,1.058,0.416\n\t\t\tc0.82,0,1.23-0.38,1.23-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.732-0.359\n\t\t\tc-0.245-0.117-0.495-0.238-0.744-0.363c-0.708-0.348-1.203-0.699-1.491-1.049c-0.367-0.445-0.552-1.018-0.552-1.719\n\t\t\tc0-0.926,0.314-1.691,0.939-2.298c0.644-0.604,1.419-0.907,2.333-0.907C781.64,755.418,782.64,756.122,783.297,757.53z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M800.727,755.714h2.438v10.655h-2.438v-1.115c-1,0.949-2.077,1.422-3.227,1.422\n\t\t\tc-1.454,0-2.656-0.533-3.604-1.596c-0.943-1.088-1.416-2.445-1.416-4.07c0-1.599,0.473-2.928,1.416-3.994\n\t\t\tc0.941-1.064,2.122-1.598,3.538-1.598c1.225,0,2.322,0.512,3.293,1.531V755.714z M794.963,761.01c0,1.02,0.27,1.852,0.81,2.493\n\t\t\tc0.555,0.649,1.252,0.975,2.094,0.975c0.9,0,1.627-0.313,2.182-0.94c0.552-0.65,0.828-1.474,0.828-2.473\n\t\t\tc0-1.001-0.276-1.824-0.828-2.474c-0.555-0.634-1.273-0.951-2.159-0.951c-0.835,0-1.533,0.321-2.095,0.961\n\t\t\tC795.239,759.252,794.963,760.054,794.963,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M806.232,755.714h2.438v0.984c0.85-0.854,1.808-1.28,2.872-1.28c1.223,0,2.176,0.391,2.859,1.172\n\t\t\tc0.59,0.662,0.885,1.747,0.885,3.248v6.531h-2.439v-5.943c0-1.049-0.144-1.773-0.432-2.175c-0.279-0.407-0.79-0.611-1.531-0.611\n\t\t\tc-0.806,0-1.379,0.269-1.717,0.808c-0.332,0.532-0.497,1.461-0.497,2.787v5.135h-2.438V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M826.102,747.891h2.438v18.479h-2.438v-1.115c-0.958,0.949-2.041,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.634-0.533-3.583-1.596c-0.943-1.088-1.413-2.445-1.413-4.07c0-1.592,0.47-2.918,1.413-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.229,0,2.332,0.512,3.303,1.531V747.891z M820.338,761.01c0,1.02,0.271,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.253,0.975,2.096,0.975c0.899,0,1.625-0.313,2.179-0.94c0.555-0.65,0.831-1.474,0.831-2.473\n\t\t\tc0-1.001-0.276-1.824-0.831-2.474c-0.554-0.634-1.272-0.951-2.158-0.951c-0.835,0-1.532,0.321-2.095,0.961\n\t\t\tC820.615,759.252,820.338,760.054,820.338,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M847.213,751.874h-5.807v4.058h5.601v2.396h-5.601v8.041h-2.515v-16.893h8.321V751.874z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M849.167,760.965c0-1.539,0.543-2.848,1.63-3.929c1.087-1.077,2.409-1.618,3.973-1.618\n\t\t\tc1.567,0,2.897,0.544,3.992,1.63c1.081,1.087,1.62,2.423,1.62,4.005c0,1.596-0.544,2.936-1.631,4.016\n\t\t\tc-1.093,1.072-2.436,1.607-4.025,1.607c-1.576,0-2.896-0.547-3.962-1.641C849.7,763.955,849.167,762.599,849.167,760.965z\n\t\t\t M851.649,761.01c0,1.064,0.28,1.908,0.842,2.527c0.575,0.627,1.336,0.94,2.278,0.94c0.949,0,1.707-0.31,2.278-0.932\n\t\t\tc0.567-0.619,0.851-1.446,0.851-2.481c0-1.036-0.283-1.865-0.851-2.484c-0.579-0.628-1.336-0.94-2.278-0.94\n\t\t\tc-0.93,0-1.681,0.312-2.255,0.94C851.938,759.207,851.649,760.018,851.649,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M865.378,755.714v6.114c0,1.767,0.686,2.649,2.064,2.649c1.373,0,2.06-0.883,2.06-2.649v-6.114h2.428\n\t\t\tv6.169c0,0.855-0.104,1.592-0.314,2.211c-0.2,0.555-0.548,1.054-1.043,1.498c-0.821,0.723-1.865,1.084-3.13,1.084\n\t\t\tc-1.264,0-2.301-0.361-3.121-1.084c-0.505-0.444-0.86-0.943-1.068-1.498c-0.203-0.496-0.303-1.232-0.303-2.211v-6.169H865.378z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M874.995,755.714h2.44v0.984c0.848-0.854,1.806-1.28,2.87-1.28c1.224,0,2.177,0.391,2.861,1.172\n\t\t\tc0.589,0.662,0.885,1.747,0.885,3.248v6.531h-2.44v-5.943c0-1.049-0.143-1.773-0.431-2.175c-0.281-0.407-0.793-0.611-1.533-0.611\n\t\t\tc-0.806,0-1.378,0.269-1.716,0.808c-0.332,0.532-0.496,1.461-0.496,2.787v5.135h-2.44V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M894.865,747.891h2.441v18.479h-2.441v-1.115c-0.957,0.949-2.039,1.422-3.249,1.422\n\t\t\tc-1.438,0-2.632-0.533-3.582-1.596c-0.943-1.088-1.414-2.445-1.414-4.07c0-1.592,0.471-2.918,1.414-3.982\n\t\t\tc0.937-1.072,2.11-1.609,3.529-1.609c1.231,0,2.33,0.512,3.302,1.531V747.891z M889.104,761.01c0,1.02,0.269,1.852,0.809,2.493\n\t\t\tc0.554,0.649,1.252,0.975,2.092,0.975c0.902,0,1.628-0.313,2.184-0.94c0.553-0.65,0.83-1.474,0.83-2.473\n\t\t\tc0-1.001-0.277-1.824-0.83-2.474c-0.556-0.634-1.274-0.951-2.161-0.951c-0.833,0-1.53,0.321-2.094,0.961\n\t\t\tC889.378,759.252,889.104,760.054,889.104,761.01z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M909.944,761.621h-7.534c0.065,0.877,0.346,1.572,0.844,2.091c0.497,0.511,1.133,0.766,1.909,0.766\n\t\t\tc0.604,0,1.104-0.146,1.5-0.438c0.389-0.291,0.832-0.832,1.328-1.617l2.052,1.158c-0.318,0.547-0.652,1.016-1.004,1.406\n\t\t\tc-0.354,0.389-0.73,0.71-1.134,0.961c-0.404,0.253-0.839,0.438-1.308,0.555c-0.468,0.115-0.974,0.174-1.521,0.174\n\t\t\tc-1.569,0-2.828-0.51-3.775-1.532c-0.952-1.026-1.428-2.391-1.428-4.091c0-1.686,0.461-3.049,1.382-4.092\n\t\t\tc0.931-1.029,2.16-1.543,3.693-1.543c1.547,0,2.77,0.5,3.67,1.5c0.892,0.99,1.339,2.366,1.339,4.125L909.944,761.621z\n\t\t\t M907.452,759.609c-0.338-1.314-1.155-1.97-2.452-1.97c-0.294,0-0.57,0.046-0.83,0.136c-0.259,0.092-0.495,0.224-0.708,0.395\n\t\t\tc-0.21,0.172-0.392,0.377-0.543,0.618c-0.151,0.24-0.266,0.514-0.345,0.821H907.452z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M912.6,755.714h2.43v0.952c0.445-0.475,0.842-0.8,1.187-0.973c0.352-0.184,0.77-0.275,1.251-0.275\n\t\t\tc0.643,0,1.311,0.211,2.007,0.635l-1.112,2.254c-0.459-0.336-0.907-0.504-1.346-0.504c-1.326,0-1.986,1.016-1.986,3.043v5.523\n\t\t\th-2.43V755.714z\"/>\n\t\t<path fill=\"#238FCF\" d=\"M926.976,757.53l-2.006,1.081c-0.316-0.647-0.711-0.972-1.178-0.972c-0.222,0-0.412,0.074-0.571,0.224\n\t\t\tc-0.158,0.149-0.237,0.341-0.237,0.574c0,0.406,0.468,0.812,1.401,1.213c1.289,0.561,2.155,1.078,2.603,1.552\n\t\t\tc0.445,0.473,0.67,1.109,0.67,1.911c0,1.027-0.375,1.889-1.123,2.579c-0.726,0.655-1.604,0.983-2.632,0.983\n\t\t\tc-1.766,0-3.014-0.871-3.748-2.614l2.072-0.975c0.288,0.511,0.507,0.835,0.66,0.975c0.295,0.277,0.646,0.416,1.057,0.416\n\t\t\tc0.819,0,1.231-0.38,1.231-1.138c0-0.438-0.317-0.848-0.951-1.227c-0.243-0.123-0.489-0.243-0.733-0.359\n\t\t\tc-0.245-0.117-0.494-0.238-0.744-0.363c-0.706-0.348-1.203-0.699-1.49-1.049c-0.367-0.445-0.55-1.018-0.55-1.719\n\t\t\tc0-0.926,0.312-1.691,0.937-2.298c0.642-0.604,1.42-0.907,2.336-0.907C925.319,755.418,926.321,756.122,926.976,757.53z\"/>\n\t</g>\n\t<g id=\"foundation\">\n\t\t<defs>\n\t\t\t<rect id=\"SVGID_1_\" x=\"640\" y=\"739.99\" width=\"307\" height=\"39.402\"/>\n\t\t</defs>\n\t\t<clipPath id=\"SVGID_2_\">\n\t\t\t<use xlink:href=\"#SVGID_1_\"  overflow=\"visible\"/>\n\t\t</clipPath>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M669.63,763.875c-1.371,0-2.481-1.113-2.481-2.481v-7.728\n\t\t\tc0-1.371,1.11-2.481,2.481-2.481h2.768v-2.37c0-1.43-1.163-2.59-2.595-2.59h-22.259c-1.433,0-2.593,1.161-2.593,2.59v18.045\n\t\t\tc0,1.432,1.16,2.594,2.593,2.594h13.357l8.583,6.209l-2.974-6.209h3.292c1.432,0,2.595-1.162,2.595-2.594v-2.985H669.63z\n\t\t\t M662.454,753.008c0,0.188-0.102,0.282-0.312,0.282h-0.427c-0.13,0-0.216-0.028-0.254-0.082c-0.041-0.056-0.086-0.233-0.136-0.538\n\t\t\tc-0.117-0.732-0.317-1.225-0.604-1.48c-0.288-0.253-0.706-0.381-1.255-0.381h-1.143v6.387h0.716c0.284,0,0.481-0.064,0.594-0.191\n\t\t\tc0.113-0.125,0.226-0.384,0.342-0.766c0.087-0.285,0.148-0.445,0.18-0.484c0.034-0.039,0.118-0.061,0.257-0.061h0.477\n\t\t\tc0.188,0,0.284,0.088,0.284,0.26v3.756c0,0.182-0.075,0.271-0.229,0.271h-0.531c-0.125,0-0.207-0.023-0.246-0.07\n\t\t\tc-0.04-0.049-0.092-0.176-0.155-0.386c-0.142-0.487-0.291-0.782-0.45-0.888c-0.157-0.104-0.332-0.158-0.522-0.158h-0.716v5.908\n\t\t\tc0,0.377,0.137,0.66,0.413,0.848c0.187,0.123,0.281,0.27,0.281,0.434v0.492c0,0.167-0.094,0.248-0.281,0.248h-3.395\n\t\t\tc-0.16,0-0.238-0.075-0.238-0.229v-0.512c0-0.157,0.093-0.303,0.282-0.434c0.275-0.196,0.412-0.479,0.412-0.848v-12.883\n\t\t\tc0-0.368-0.145-0.651-0.435-0.845c-0.195-0.125-0.292-0.27-0.292-0.435v-0.491c0-0.157,0.081-0.239,0.24-0.239h5.633\n\t\t\tc0.166,0,0.432-0.016,0.794-0.043c0.197-0.022,0.312-0.033,0.347-0.033c0.175,0,0.281,0.022,0.317,0.067\n\t\t\tc0.037,0.042,0.053,0.135,0.053,0.281V753.008z\"/>\n\t\t<path clip-path=\"url(#SVGID_2_)\" fill=\"#238FCF\" d=\"M699.28,746.213h-22.259c-1.434,0-2.594,1.159-2.594,2.591v2.381h2.809\n\t\t\tc1.368,0,2.479,1.11,2.479,2.48v7.729c0,1.368-1.111,2.481-2.479,2.481h-2.809v2.977c0,1.431,1.16,2.592,2.594,2.592h3.295\n\t\t\tl-2.976,6.208l8.584-6.208h13.355c1.435,0,2.595-1.161,2.595-2.592v-18.048C701.875,747.372,700.715,746.213,699.28,746.213\n\t\t\t M691.856,750.212c0,0.166-0.099,0.31-0.295,0.435c-0.291,0.195-0.435,0.478-0.435,0.847v12.88c0,0.37,0.136,0.655,0.412,0.849\n\t\t\tc0.187,0.131,0.281,0.277,0.281,0.436v0.512c0,0.152-0.079,0.227-0.239,0.227h-3.393c-0.188,0-0.284-0.082-0.284-0.248v-0.49\n\t\t\tc0-0.166,0.096-0.312,0.284-0.436c0.275-0.189,0.413-0.472,0.413-0.849v-5.907h-0.72c-0.186,0-0.361,0.055-0.521,0.16\n\t\t\tc-0.16,0.103-0.311,0.398-0.447,0.885c-0.063,0.211-0.115,0.34-0.155,0.387c-0.041,0.047-0.125,0.071-0.247,0.071h-0.533\n\t\t\tc-0.149,0-0.229-0.093-0.229-0.274v-3.752c0-0.172,0.095-0.26,0.282-0.26h0.479c0.138,0,0.223,0.02,0.257,0.06\n\t\t\tc0.033,0.04,0.093,0.2,0.179,0.485c0.116,0.383,0.229,0.639,0.343,0.764c0.111,0.127,0.312,0.192,0.592,0.192h0.72v-6.384h-1.145\n\t\t\tc-0.549,0-0.968,0.126-1.254,0.378c-0.289,0.255-0.488,0.747-0.604,1.478c-0.051,0.305-0.098,0.484-0.139,0.541\n\t\t\tc-0.04,0.053-0.123,0.08-0.255,0.08h-0.424c-0.212,0-0.315-0.093-0.315-0.281v-3.243c0-0.145,0.02-0.239,0.053-0.282\n\t\t\tc0.039-0.044,0.144-0.065,0.316-0.065c0.037,0,0.154,0.009,0.348,0.032c0.365,0.03,0.628,0.043,0.795,0.043h5.638\n\t\t\tc0.158,0,0.24,0.082,0.24,0.241V750.212z\"/>\n\t</g>\n\t<g>\n\t\t<path fill=\"#238FCF\" d=\"M676.855,762.039c-0.237-0.238-0.463-0.476-0.789-0.827c-0.727,0.676-1.541,0.964-2.468,0.964\n\t\t\tc-1.641,0-2.593-1.103-2.593-2.368c0-1.152,0.688-1.942,1.653-2.468v-0.038c-0.438-0.551-0.701-1.165-0.701-1.767\n\t\t\tc0-1.027,0.738-2.08,2.142-2.08c1.053,0,1.867,0.702,1.867,1.792c0,0.89-0.514,1.591-1.854,2.255v0.038\n\t\t\tc0.714,0.827,1.516,1.754,2.055,2.355c0.389-0.589,0.651-1.403,0.814-2.468h1.002c-0.226,1.328-0.589,2.38-1.215,3.12\n\t\t\tc0.45,0.476,0.889,0.952,1.391,1.491H676.855z M675.528,760.586c-0.501-0.551-1.441-1.579-2.381-2.656\n\t\t\tc-0.451,0.288-1.09,0.827-1.09,1.716c0,0.964,0.714,1.704,1.729,1.704C674.514,761.35,675.127,761.024,675.528,760.586z\n\t\t\t M672.96,755.437c0,0.602,0.275,1.065,0.639,1.516c0.852-0.489,1.403-0.94,1.403-1.654c0-0.514-0.288-1.09-0.978-1.09\n\t\t\tC673.323,754.209,672.96,754.786,672.96,755.437z\"/>\n\t</g>\n</g>\n</a>\n<g id=\"lifeline\">\n\t<path fill-rule=\"evenodd\" fill=\"none\" stroke=\"#ED145B\" stroke-width=\"2.9594\" stroke-miterlimit=\"10\" d=\"M45.749,263.686\n\t\tc0,0,128.451-0.846,258.228-0.584c32.683,0.063,26.091-18.948,39.901-18.948c13.811,0,11.825,19.022,41.78,18.79\n\t\tc13.959,0.184,26.474,0.346,41.41,0.49c31.9,0.135,25.73-49.361,44.366-49.361c18.635,0,11.062,49.904,42.592,49.975\n\t\tc196.096,0.969,432.558,0.637,432.558,0.637\"/>\n\t<g id=\"Ellipse_1\">\n\t\t<circle fill=\"#ED145B\" cx=\"37.167\" cy=\"263.686\" r=\"8.583\"/>\n\t</g>\n\t<g id=\"growth_stages\">\n\t\t<path id=\"old_2_\" fill=\"#554263\" d=\"M505.136,189.292c0.342-1.685-0.666-2.909-1.909-3.377c0.775-1.133,1.232-2.505,1.232-3.989\n\t\t\tc0-3.866-3.088-7.001-6.901-7.001c-3.811,0-6.901,3.135-6.901,7.001c0,3.868,3.09,7.002,6.901,7.002\n\t\t\tc0.666,0,1.304-0.1,1.912-0.279c-0.704,3.019-1.819,5.889-3.026,8.728c-0.651-1.013-1.325-2.013-1.982-3.022\n\t\t\tc0.907-4.445-3.805-9.742-8.9-6.791c-5.716,3.309-10.22,8.66-12.827,14.762c-1.302,3.048-0.879,6.53,2.202,8.334\n\t\t\tc0.092,0.056,0.191,0.1,0.288,0.148c0.542,0.393,1.207,0.662,2,0.738c5.921,0.569,11.899,0.682,17.859,0.726\n\t\t\tc-1.819,5.581-3.941,11.072-6.094,16.515c-1.872,4.728,5.657,6.761,7.503,2.097c2.798-7.07,5.548-14.224,7.641-21.548\n\t\t\tc0.889-3.11-1.807-5.078-4.254-4.86c-0.107-0.021-0.214-0.04-0.329-0.051C501.581,199.43,504.058,194.624,505.136,189.292z\n\t\t\t M490.583,198.779c1.191,1.804,2.353,3.625,3.288,5.586c-2.821-0.025-5.646-0.074-8.465-0.184\n\t\t\tC486.802,202.046,488.506,200.202,490.583,198.779z\"/>\n\t\t<path id=\"older_2_\" fill=\"#554263\" d=\"M349.294,188.247c-9.975,1.869-16.944,11.187-16.343,21.435\n\t\t\tc0.011,0.189,0.033,0.368,0.058,0.547c-0.366,1.837,0.324,4.01,2.493,4.896c3.459,1.418,7.407,3.581,8.714,7.368\n\t\t\tc1.398,4.055-1.631,8.376-4.075,11.275c-3.226,3.827,2.234,9.407,5.487,5.552c4.403-5.226,7.531-11.101,6.274-18.123\n\t\t\tc-0.035-0.193-0.09-0.376-0.133-0.564c0.299-0.43,0.517-0.941,0.583-1.561c0.805-7.585,2.917-14.945,3.646-22.543\n\t\t\tc0.594-1.29,0.776-2.785,0.42-4.116C355.549,189.126,352.411,187.664,349.294,188.247z M347.011,213.094\n\t\t\tc-0.783-0.692-1.617-1.333-2.491-1.922c0.071-0.435,0.098-0.903,0.07-1.407c-0.035-0.583-0.008-1.168,0.027-1.749\n\t\t\tc0.015-0.205,0.032-0.405,0.052-0.607c0.01-0.054,0.02-0.11,0.034-0.186c0.139-0.786,0.352-1.556,0.588-2.317\n\t\t\tc0.101-0.274,0.155-0.425,0.165-0.468c0.174-0.371,0.365-0.733,0.562-1.092c0.645-1.173,0.286-0.605,1.246-1.594\n\t\t\tc0.498-0.515,1.205-0.938,2.038-1.283C348.666,204.696,347.75,208.881,347.011,213.094z M369.03,190.552\n\t\t\tc0,3.395-2.72,6.148-6.075,6.148c-3.358,0-6.078-2.753-6.078-6.148c0-3.396,2.72-6.147,6.078-6.147\n\t\t\tC366.31,184.404,369.03,187.156,369.03,190.552z\"/>\n\t\t<g id=\"married_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M310.222,217.412L310.222,217.412L310.222,217.412L310.222,217.412z M301.229,201.511\n\t\t\t\tc-0.536-1.28-1.549-2.312-2.811-2.88c0.005-0.052,0.016-0.104,0.016-0.159c0-1.329-1.077-2.406-2.408-2.406\n\t\t\t\tc-1.329,0-2.407,1.077-2.407,2.406c0,0.106,0.017,0.206,0.028,0.306c-1.197,0.632-2.128,1.697-2.595,2.983\n\t\t\t\tc-1.665,1.851-3.661,4.484-5.605,8.05c-1.893-2.446-5.057-3.787-8.072-4.567l-2.822,5.801l0.613-5.175h0.104v-0.859h-2.135v0.859\n\t\t\t\th0.109l0.724,5.179l-2.823-6.038c-0.262,0.073,0.065,0.012-0.184,0.108c-4.414,1.064-8.322,3.025-9.969,7.482\n\t\t\t\tc-1.736,4.7-0.996,10.46-0.437,15.206c0.346,2.944,5.006,2.976,4.656,0c-0.463-3.947-0.218-7.871-0.109-11.863\n\t\t\t\tc0.044-1.656,0.648-2.866,1.573-3.779l-0.053,20.432v20.342c0,1.674,1.225,3.027,2.945,3.027s3.114-1.354,3.114-3.027v-21.194\n\t\t\t\tc0,0,0.099-1.073,1.194-1.087c1.095-0.011,1.067,1.034,1.067,1.034v21.187c0,1.673,1.395,3.029,3.115,3.029\n\t\t\t\ts3.114-1.356,3.114-3.029l0.104-21.866c0-0.207,0.021-14.781,0.026-18.663c0.731,0.814,0.796,2.066,1.419,3.294\n\t\t\t\tc-0.184,0.459-0.365,0.927-0.543,1.409l-0.132,0.36h1.591c0.828,1.879,1.223,3.944,1.32,6.027\n\t\t\t\tc-0.113,1.261-0.165,2.539-0.173,3.822c-0.001,0.073,0.013,0.134,0.019,0.202c-0.339,2.969,4.312,2.932,4.657-0.009\n\t\t\t\tc0.209-1.793,0.112-3.566-0.161-5.33c0.165-1.232,0.457-2.431,0.973-3.621c0.468,0.783,1.847,3.742-0.337,8.867\n\t\t\t\tc-4.493,10.535-3.522,20.137-3.511,20.235c0.028,0.271,0.26,0.478,0.532,0.478h3.427v5.149c0,1.539,0.961,2.786,2.309,2.786\n\t\t\t\tc1.348,0,2.439-1.247,2.439-2.786v-5.149h1.773v5.097c0,1.537,1.09,2.783,2.442,2.783c1.348,0,2.44-1.246,2.44-2.783l0.041-5.097\n\t\t\t\th3.141c0.264,0,0.488-0.193,0.53-0.455c0.059-0.391,1.447-9.708-3.052-20.258c-1.764-4.142-1.22-6.848-0.689-8.16\n\t\t\t\tc0.862,2.312,1.751,5.227,1.767,8.05c0.018,2.76,4.298,2.76,4.28,0c-0.022-3.404-0.322-6.769-1.413-9.849h3.832l-0.113-0.352\n\t\t\t\tC309.937,216.551,306.708,207.022,301.229,201.511z M274.177,223.227c-0.524,0-0.948-0.425-0.948-0.95\n\t\t\t\tc0-0.522,0.424-0.949,0.948-0.949c0.523,0,0.949,0.426,0.949,0.949C275.127,222.802,274.701,223.227,274.177,223.227z\n\t\t\t\t M274.177,220.242c-0.524,0-0.948-0.425-0.948-0.949c0-0.524,0.424-0.948,0.948-0.948c0.523,0,0.949,0.424,0.949,0.948\n\t\t\t\tC275.127,219.816,274.701,220.242,274.177,220.242z M274.248,217.255c-0.525,0-0.949-0.426-0.949-0.95\n\t\t\t\tc0-0.523,0.424-0.948,0.949-0.948c0.523,0,0.949,0.425,0.949,0.948C275.197,216.829,274.771,217.255,274.248,217.255z\n\t\t\t\t M278.14,211.877l0.473-1.382l-1.455,1.964l1.455-3.928l0.51,3.928L278.14,211.877z M282.815,216.877\n\t\t\t\tc0.08-0.209,0.161-0.413,0.241-0.617c0.115,0.204,0.224,0.409,0.328,0.617H282.815z M291.259,203.573\n\t\t\t\tc0.743-0.232,2.067-0.771,3.199-1.902c2.975,2.376,5.793,2.217,6.648,2.102c-0.085,2.64-2.255,4.766-4.918,4.766\n\t\t\t\tc-2.718,0-4.928-2.209-4.928-4.926C291.257,203.6,291.259,203.586,291.259,203.573z M301.462,227.792\n\t\t\t\tc3.822,8.969,3.247,17.233,3.031,19.222h-17.042c-0.129-2.035-0.348-10.277,3.462-19.222c2.198-5.146,1.065-8.371,0.408-9.604\n\t\t\t\tc0.559-0.229,1.557-0.569,2.863-0.775h4.381c1.188,0.198,2.033,0.519,2.509,0.741\n\t\t\t\tC300.421,219.362,299.246,222.598,301.462,227.792z M293.126,211.974c-0.481,0-0.871-0.389-0.871-0.87\n\t\t\t\tc0-0.48,0.39-0.869,0.871-0.869c0.479,0,0.868,0.389,0.868,0.869C293.994,211.584,293.605,211.974,293.126,211.974z\n\t\t\t\t M294.864,213.939c0,0.48-0.39,0.87-0.87,0.87c-0.481,0-0.868-0.389-0.868-0.87c0-0.479,0.386-0.869,0.868-0.869\n\t\t\t\tC294.474,213.071,294.864,213.46,294.864,213.939z M295.357,215.733c0-0.48,0.389-0.869,0.87-0.869\n\t\t\t\tc0.06,0,0.118,0.004,0.176,0.018c0.459,0.023,0.826,0.4,0.826,0.865c0,0.159-0.045,0.309-0.121,0.437\n\t\t\t\tc-0.227-0.01-0.46-0.017-0.704-0.017c-0.309,0-0.605,0.011-0.896,0.028C295.42,216.061,295.357,215.907,295.357,215.733z\n\t\t\t\t M299.464,213.954c0,0.479-0.39,0.869-0.869,0.869c-0.481,0-0.871-0.39-0.871-0.869s0.39-0.869,0.871-0.869\n\t\t\t\tC299.074,213.084,299.464,213.474,299.464,213.954z M298.595,211.119c0-0.481,0.389-0.871,0.869-0.871\n\t\t\t\tc0.479,0,0.869,0.389,0.869,0.871c0,0.479-0.391,0.869-0.869,0.869C298.984,211.988,298.595,211.598,298.595,211.119z\n\t\t\t\t M306.199,216.877c-0.74-1.903-1.799-3.69-3.301-5.3c-0.726-0.775-4.865-2.277-6.526-2.277c-1.689,0-5.92,1.464-6.681,2.277\n\t\t\t\tc-0.901,0.967-1.637,2-2.248,3.082c-0.199-0.684-0.399-1.37-0.591-2.06c-0.239-0.855-0.604-1.617-1.059-2.302\n\t\t\t\tc1.689-3.15,3.43-5.569,4.951-7.368c-0.041,0.262-0.065,0.525-0.065,0.797c0,0,0.021-0.004,0.051-0.012\n\t\t\t\tc0.057,2.965,2.481,5.357,5.458,5.357c3.011,0,5.462-2.449,5.462-5.46c0-0.32-0.033-0.632-0.086-0.938\n\t\t\t\tc4.437,4.963,7.299,12.496,7.913,14.203H306.199z M273.85,203.855c2.925,0,5.295-2.37,5.295-5.294\n\t\t\t\tc0-2.922-2.37-5.292-5.295-5.292c-2.924,0-5.295,2.37-5.295,5.292C268.555,201.485,270.926,203.855,273.85,203.855z\"/>\n\t\t</g>\n\t\t<g id=\"graduated_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M221.743,201.814c0,2.791,2.259,5.052,5.044,5.052c2.784,0,5.043-2.261,5.043-5.052H221.743z\n\t\t\t\t M221.164,201.046l11.46-0.044l-0.004-0.786l1.119-0.625c0.158,0.18,0.285,0.387,0.354,0.616\n\t\t\t\tc0.104,0.354,0.048,0.716-0.174,1.108c-0.381,0.676-0.44,1.173-0.178,1.479c0.139,0.166,0.36,0.236,0.623,0.236\n\t\t\t\tc0.443-0.002,1.017-0.213,1.556-0.531l0.014,0.058l1.64-0.583l-0.144-0.551l-1.076,0.383l-0.037-0.064\n\t\t\t\tc-0.067,0.052-0.134,0.1-0.2,0.148l-0.324,0.116l0.022,0.083c-0.822,0.5-1.61,0.648-1.817,0.405\n\t\t\t\tc-0.119-0.135-0.032-0.488,0.223-0.945c0.283-0.501,0.353-0.999,0.214-1.48c-0.074-0.251-0.2-0.472-0.355-0.67l0.267-0.149\n\t\t\t\tl-7.745-4.66l-6.938,4.713l1.496,0.776L221.164,201.046z M223.456,207.828l3.44,8.147l4.163-8.064\n\t\t\t\tC228.65,207.549,225.764,207.625,223.456,207.828z M234.818,209.625c-0.141-0.166-0.292-0.302-0.445-0.425\n\t\t\t\tc-0.075-0.155-0.167-0.299-0.28-0.428c-0.196-0.098-0.409-0.188-0.63-0.27l-6.784,13.146l-5.711-13.522\n\t\t\t\tc-0.12,0.019-0.247,0.037-0.354,0.055c-3.123-3.489-5.323-7.671-6.626-12.327c-0.099-0.353-0.25-0.646-0.418-0.912l4.103,0.459\n\t\t\t\tl0.251-2.263l-14.615-1.637l-0.251,2.263l5.688,0.638c-0.842,0.694-1.33,1.786-0.946,3.161c2.08,7.433,6.1,13.681,11.895,18.534\n\t\t\t\tl-3.584,27.806h3.66l0.046,9.754c0,1.598,1.327,2.891,2.967,2.891c1.638,0,2.968-1.293,2.968-2.891v-9.754h2.152v9.81\n\t\t\t\tc0,1.595,1.328,2.89,2.966,2.89s2.802-1.295,2.802-2.89v-9.81h3.295l-1.544-14.587c1.759,1.776,5.604,1.07,5.556-2.148\n\t\t\t\tC240.875,220.62,239.116,214.639,234.818,209.625z\"/>\n\t\t</g>\n\t\t<g id=\"child_3_\">\n\t\t\t<path fill=\"#554263\" d=\"M37.149,217.647c3.196,0,5.787-2.569,5.787-5.739c0-3.169-2.591-5.74-5.787-5.74\n\t\t\t\tc-3.196,0-5.788,2.57-5.788,5.74C31.362,215.079,33.953,217.647,37.149,217.647z M50.382,226.969\n\t\t\t\tc-3.131-2.397-6.369-4.639-9.889-6.442c-0.997-0.805-2.254-1.296-3.624-1.306c-1.521-0.01-2.934,0.59-4,1.559\n\t\t\t\tc-2.859,1.619-5.546,3.505-8.156,5.503c-1.192,0.911-1.828,2.338-0.993,3.751c0.689,1.167,2.588,1.901,3.785,0.986\n\t\t\t\tc1.13-0.866,2.277-1.711,3.443-2.522v1.183h11.758v-1.476c1.67,1.102,3.292,2.283,4.884,3.5c1.197,0.917,3.096,0.183,3.785-0.985\n\t\t\t\tC52.21,229.308,51.573,227.881,50.382,226.969z M38.519,237.301c0.41-0.264,0.623-0.551,0.623-0.551l3.564-4.208v-2.52H30.96\n\t\t\t\tl0.04,2.062l3.196,4.476l0.075,0.075c0.47,0.349,0.937,0.618,1.388,0.802l0.068,0.019c0.395,0.074,0.73,0.109,1.057,0.111h0.034\n\t\t\t\tc0.52,0,1.06-0.077,1.605-0.225L38.519,237.301z M36.818,236.883v0.344l-0.03-0.344c-0.274,0-0.561-0.03-0.898-0.091\n\t\t\t\tc-0.374-0.156-0.764-0.383-1.161-0.671l-3.041-4.26l-0.021-1.15h10.35v1.582l-3.417,4.036c-0.004,0.003-0.142,0.188-0.412,0.37\n\t\t\t\tC37.719,236.821,37.259,236.883,36.818,236.883z M34,236.86l-0.055-0.058l-3.208-4.492c-2.235,2.106-3.761,4.597-3.833,7.723\n\t\t\t\tc-0.071,3.081,2.06,5.811,4.289,7.705c2.693,2.288,6.625-1.575,3.911-3.879C32.323,241.494,31.829,239.327,34,236.86z\n\t\t\t\t M39.423,236.948c-0.001,0.002-0.016,0.02-0.025,0.035c2.401,2.559,1.969,4.784-0.896,7.218\n\t\t\t\tc-2.714,2.304,1.218,6.167,3.911,3.878c2.432-2.064,4.008-4.507,4.289-7.703c0.258-2.937-1.694-5.684-3.721-7.623L39.423,236.948\n\t\t\t\tz\"/>\n\t\t</g>\n\t</g>\n</g>\n<g id=\"sub-header\">\n\t<text transform=\"matrix(1.0003 0 0 1 308.4204 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">quarter-life crisis</text>\n\t<text transform=\"matrix(1.0003 0 0 1 445.6016 161.8794)\" fill=\"#554263\" font-family=\"'Verdana, sans-serif'\" font-size=\"16.2095\" font-style=\"italic\">mid-life crisis</text>\n</g>\n<g id=\"header\">\n\t<g id=\"author\">\n\t\t<a xlink:href=\"http://fundersandfounders.com/author/anna-vital/\" target=\"_top\"><text transform=\"matrix(1 0 0 1 840.0454 92.1748)\" fill=\"#8E8099\" font-family=\"'HelveticaCYPlain'\" font-size=\"19\">by Anna Vital</text>\n\t\t</a>\n\t</g>\n\t\n\t\t<text transform=\"matrix(1.0026 0 0 1 159.4043 90.1201)\" fill=\"#554263\" style=\"font-family: Lucida, sans-serif; font-stretch: condensed; font-weight: bold; \" font-size=\"60\">TOO LATE TO START?</text>\n\t\n\t<text transform=\"matrix(1.0003 0 0 1 35.4619 322.2427)\" fill=\"#C2BFC7\" font-family=\"'Helvetica-Oblique'\" font-size=\"16.2095\">years of life</text>\n</g>\n</svg>\n</div>\n<script type=\"text/javascript\">\nvar FnF = FnF || {};\nFnF.founders = {\n \"name\": \"Founders\",\n \"children\": [\n  {\n   \"name\": \"15..19\",\n   \"range\" : 15,\n   \"children\": [\t\t\n\t\t{\"company\": \"Dell\", \"name\": \"Michael\", \"lastname\": \"Dell\", \"birth\": \"1965\", \"founded\": \"1984-11-04\", \"age\": 18, \"more\" : \"assembling computers \\n in his college apartment\", \"link\" : \"en.wikipedia.org/wiki/Michael_Dell\"},\n\t\t{\"company\": \"UPS\", \"name\": \"James\", \"lastname\" : \"Casey\", \"birth\": \"1888-03-29\", \"founded\": \"1907-08-28\", \"age\": 19, \"more\" : \"delivering packages \\n on $100 borrowed from a friend\", \"link\" : \"en.wikipedia.org/wiki/James_E._Casey\"},\n\t\t{\"company\": \"Facebook\", \"name\": \"Mark\", \"lastname\": \"Zuckerberg\", \"birth\": \"1984-05-14\", \"founded\": \"2004-02-04\", \"age\": 19, \"more\" : \"launching the website \\n at his dorm room in Harvard\", \"link\" : \"en.wikipedia.org/wiki/Mark_Zuckerberg\"}\t\t\n  ]},\n  {\n   \"name\": \"20..24\",\n   \"range\" : 20,\n   \"children\": [\t\t\n\t\t{\"company\": \"Microsoft\", \"name\": \"Bill\", \"lastname\" : \"Gates\", \"birth\": \"1955-10-28\", \"founded\": \"1975-04-04\", \"age\": 20, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Bill_Gates\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Jobs\", \"birth\": \"1955-02-24\", \"founded\": \"1976-04-01\", \"age\": 21, \"more\" : \"making computers in garage\", \"link\" : \"en.wikipedia.org/wiki/Steve_Jobs\"},\n\t\t{\"company\": \"Burberry\", \"name\": \"Thomas\", \"lastname\" : \"Burberry\", \"birth\": \"1835-08-27\", \"founded\": \"1856\", \"age\": 21, \"more\" : \"selling sports clothes \\n from a small London shop\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Burberry\"},\n\t\t{\"company\": \"Tesco\", \"name\": \"Jack\", \"lastname\" : \"Cohen\", \"birth\": \"1898-10-06\", \"founded\": \"1919\", \"age\": 21, \"more\" : \"buying one market stall\", \"link\" : \"en.wikipedia.org/wiki/Jack_Cohen_(businessman)\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"Arthur\", \"lastname\" : \"Davidson\", \"birth\": \"1881-02-11\", \"founded\": \"1903\", \"age\": 22, \"more\" : \"making a bike easy \\nfor him to go fishing\", \"link\" : \"en.wikipedia.org/wiki/Arthur_Davidson_(motorcycling)\"},\n\t\t{\"company\": \"Microsoft\", \"name\": \"Paul\", \"lastname\" : \"Allen\", \"birth\": \"1953-01-21\", \"founded\": \"1975-04-04\", \"age\": 22, \"more\" : \"selling a program \\nhe did not have\", \"link\" : \"en.wikipedia.org/wiki/Paul_Allen\"},\n\t\t{\"company\": \"Walt Disney\", \"name\": \"Walt\", \"lastname\" : \"Disney\", \"birth\": \"1901-12-05\", \"founded\": \"1923-10-16\", \"age\": 22, \"more\" : \"after his other studio went bust\", \"link\" : \"en.wikipedia.org/wiki/Walt_Disney\"},\n\t\t{\"company\": \"Heineken\", \"name\": \"Gerard\", \"lastname\" : \"Heineken\", \"birth\": \"1841-09-29\", \"founded\": \"1864\", \"age\": 23, \"more\" : \"the first brewery \\nto have a lab\", \"link\" : \"en.wikipedia.org/wiki/Gerard_Adriaan_Heineken\"},\n\t\t{\"company\": \"Harley-Davidson\", \"name\": \"William\", \"lastname\" : \"Harley\", \"birth\": \"1880-12-29\", \"founded\": \"1903\", \"age\": 23, \"more\" : \"making bikes \\n with his friend Arthur\", \"link\" : \"en.wikipedia.org/wiki/William_S._Harley\"}\n  ]},\n  {\n   \"name\": \"25..29\",\n   \"range\" : 25,\n   \"children\": [\t\t\n\t\t{\"company\": \"Best Buy\", \"name\": \"Richard\", \"lastname\" : \"Schulze\", \"birth\": \"1941\", \"founded\": \"1966\", \"age\": 25, \"more\" : \"mortgaging his home \\n to open an audio store\", \"link\" : \"en.wikipedia.org/wiki/Richard_M._Schulze\"},\n\t\t{\"company\": \"Google\", \"name\": \"Sergey\", \"lastname\" : \"Brin\", \"birth\": \"1973-08-21\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Sergey_Brin\"},\n\t\t{\"company\": \"Google\", \"name\": \"Larry\", \"lastname\" : \"Page\", \"birth\": \"1973-03-26\", \"founded\": \"1998-09-04\", \"age\": 25, \"more\" : \"cramming his dorm with cheap \\ncomputers to index the web\", \"link\" : \"en.wikipedia.org/wiki/Larry_Page\"},\n\t\t{\"company\": \"HP\", \"name\": \"William\", \"lastname\" : \"Hewlett\", \"birth\": \"1913-05-20\", \"founded\": \"1939-01-01\", \"age\": 25, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/William_Redington_Hewlett\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Akio\", \"lastname\" : \"Morita\", \"birth\": \"1921-01-26\", \"founded\": \"1946-05-07\", \"age\": 25, \"more\" : \"creating audio tape\", \"link\" : \"en.wikipedia.org/wiki/Akio_Morita\"},\n\t\t{\"company\": \"Apple\", \"name\": \"Steve\", \"lastname\" : \"Wozniak\", \"birth\": \"1950-08-11\", \"founded\": \"1976-04-01\", \"age\": 26, \"more\" : \"designed a computer \\nall by himself\", \"link\" : \"en.wikipedia.org/wiki/Steve_Wozniak\"},\n\t\t{\"company\": \"HP\", \"name\": \"David\", \"lastname\" : \"Packard\", \"birth\": \"1912-09-07\", \"founded\": \"1939-01-01\", \"age\": 26, \"more\" : \"making a sound oscillator \\nsold to Disney\", \"link\" : \"en.wikipedia.org/wiki/David_Packard\"},\n\t\t{\"company\": \"Nike\", \"name\": \"Phil\", \"lastname\" : \"Knight\", \"birth\": \"1938-02-24\", \"founded\": \"1964-01-25\", \"age\": 26, \"more\" : \"cold calling a running \\nshoe firm in Japan\", \"link\" : \"en.wikipedia.org/wiki/Phil_Knight\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Steve\", \"lastname\" : \"Case\", \"birth\": \"1958-08-21\", \"founded\": \"1985\", \"age\": 27, \"more\" : \"letting  people connect \\nthrough Internet portal\", \"link\" : \"en.wikipedia.org/wiki/Steve_Case\" },\t\t\n\t\t{\"company\": \"Whole Foods\", \"name\": \"John\", \"lastname\" : \"Mackey\", \"birth\": \"1953-08-15\", \"founded\": \"1980\", \"age\": 27, \"more\" : \"opening a health food store \\nwith his girlfriend\", \"link\" : \"en.wikipedia.org/wiki/John_Mackey(businessman)\"},\n\t\t{\"company\": \"FedEx\", \"name\": \"Fred\", \"lastname\" : \"Smith\", \"birth\": \"1944-08-11\", \"founded\": \"1971-06-18\", \"age\": 27, \"more\" : \"based on his college paper \\nabout overnight delivery\", \"link\" : \"en.wikipedia.org/wiki/Frederick_W._Smith\"},\n\t\t{\"company\": \"Walgreens\", \"name\": \"Charles\", \"lastname\" : \"Walgreen\", \"birth\": \"1873-10-09\", \"founded\": \"1901\", \"age\": 28, \"more\" : \"buying a pharmacy \\nfrom his boss\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rudolph_Walgreen\"},\n\t\t{\"company\": \"eBay\", \"name\": \"Pierre\", \"lastname\" : \"Omidyar\", \"birth\": \"1967-06-21\", \"founded\": \"1995-09-03\", \"age\": 28, \"more\" : \"writing code for \\nauction website\", \"link\" : \"en.wikipedia.org/wiki/Pierre_Omidyar\"},\n\t\t{\"company\": \"L'Oral\", \"name\": \"Eugne\", \"lastname\" : \"Schueller\", \"birth\": \"1881-03-20\", \"founded\": \"1909\", \"age\": 28, \"more\" : \"with a new hair dye formula\", \"link\" : \"en.wikipedia.org/wiki/Eugne_Schueller\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Sandra\", \"lastname\" : \"Lerner\", \"birth\": \"1955\", \"founded\": \"1984-12\", \"age\": 28, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Sandra_Lerner\"},\n\t\t{\"company\": \"Expedia\", \"name\": \"Richard\", \"lastname\" : \"Barton\", \"birth\": \"1967-06-02\", \"founded\": \"1996\", \"age\": 29, \"more\" : \"while working at Microsoft\", \"link\" : \"en.wikipedia.org/wiki/Rich_Barton\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Charles\", \"lastname\" : \"Rolls\", \"birth\": \"1877-08-27\", \"founded\": \"1906\", \"age\": 29, \"more\" : \"selling all cars \\nhis partner made\", \"link\" : \"en.wikipedia.org/wiki/Charles_Rolls\"},\n\t\t{\"company\": \"Visa\", \"name\": \"Dee\", \"lastname\" : \"Hock\", \"birth\": \"1929\", \"founded\": \"1958\", \"age\": 29, \"more\" : \"convincing banks to give up \\nownership of credit cards\", \"link\" : \"en.wikipedia.org/wiki/Dee_Hock\"}\n   ]},\n  {\n   \"name\": \"30..34\",\n   \"range\" : 30,\n   \"children\": [\t\t\n\t\t{\"company\": \"Amazon\", \"name\": \"Jeff\", \"lastname\" : \"Bezos\", \"birth\": \"1964-01-12\", \"founded\": \"1994\", \"age\": 30, \"more\" : \"pioneering e-commerce, \\nstarting selling books\", \"link\" : \"en.wikipedia.org/wiki/Jeff_Bezos\"},\n\t\t{\"company\": \"H&M\", \"name\": \"Erling\", \"lastname\" : \"Persson\", \"birth\": \"1917-01-21\", \"founded\": \"1947\", \"age\": 30, \"more\" : \"selling women's clothing\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Nintendo\", \"name\": \"Fusajiro\", \"lastname\" : \"Yamauchi\", \"birth\": \"1859-11-22\", \"founded\": \"1889-09-23\", \"age\": 30, \"more\" : \"from a small hanafuda \\ngame firm\", \"link\" : \"en.wikipedia.org/wiki/Hiroshi_Yamauchi\"},\n\t\t{\"company\": \"Cisco\", \"name\": \"Leonard\", \"lastname\" : \"Bosack\", \"birth\": \"1952\", \"founded\": \"1984-12\", \"age\": 31, \"more\" : \"selling routers through \\nword of mouth\", \"link\" : \"en.wikipedia.org/wiki/Erling_Persson\"},\n\t\t{\"company\": \"Intuit\", \"name\": \"Scott\", \"lastname\" : \"Cook\", \"birth\": \"1952\", \"founded\": 1983, \"age\": 31, \"more\" : \"after hearing wife's complain \\nabout paying bills\", \"link\" : \"en.wikipedia.org/wiki/Scott_Cook\"},\n\t\t{\"company\": \"Siemens\", \"name\": \"Werner\", \"lastname\" : \"von Siemens\", \"birth\": \"1816-12-13\", \"founded\": \"1847-10-12\", \"age\": 31, \"more\" : \"inventing needle telegraph\", \"link\" : \"en.wikipedia.org/wiki/Werner_von_Siemens\"},\n\t\t{\"company\": \"Xerox\", \"name\": \"Chester\", \"lastname\" : \"Carlson\", \"birth\": \"1906-02-08\", \"founded\": \"1938\", \"age\": 32, \"more\" : \"after 22 years of trying \\nto make a dry copy\", \"link\" : \"en.wikipedia.org/wiki/Chester_Carlson\"},\n\t\t{\"company\": \"Acer\", \"name\": \"Stan\", \"lastname\" : \"Shih\", \"birth\": \"1944-12-08\", \"founded\": \"1976\", \"age\": 32, \"more\" : \"selling clones of Apple II \\ncomputer\", \"link\" : \"en.wikipedia.org/wiki/Stan_Shih\"},\n\t\t{\"company\": \"Baidu\", \"name\": \"Robin\", \"lastname\" : \"Li\", \"birth\": \"1968-11-17\", \"founded\": \"2000-01-01\", \"age\": 32, \"more\" : \"developing search algorithms \\nbefore Google\", \"link\" : \"en.wikipedia.org/wiki/Robin_Li\"},\n\t\t{\"company\": \"Peugeot\", \"name\": \"Armand\", \"lastname\" : \"Peugeot\", \"birth\": \"1849-03-26\", \"founded\": \"1882\", \"age\": 32, \"more\" : \"producing coffee grinders \\nand bicycles\", \"link\" : \"en.wikipedia.org/wiki/Armand_Peugeot\"},\n\t\t{\"company\": \"Oracle\", \"name\": \"Larry\", \"lastname\" : \"Ellison\", \"birth\": \"1944-08-17\", \"founded\": \"1977\", \"age\": 33, \"more\" : \"making a database \\nfor the CIA\", \"link\" : \"en.wikipedia.org/wiki/Larry_Ellison\"},\n\t\t{\"company\": \"Procter & Gamble\", \"name\": \"James\", \"lastname\" : \"Gamble\", \"birth\": \"1803-04-03\", \"founded\": \"1837-10-31\", \"age\": 33, \"more\" : \"having invented the formula \\nof ivory soap\", \"link\" : \"en.wikipedia.org/wiki/James_Gamble_%28industrialist%29\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"William\", \"lastname\" : \"Fargo\", \"birth\": \"1818-05-20\", \"founded\": \"1852-03-18\", \"age\": 34, \"more\" : \"pioneering banking \\nin California\", \"link\" : \"en.wikipedia.org/wiki/William_Fargo\"}\n  ]},\n  {\n   \"name\": \"35..39\",\n   \"range\" : 35,\n   \"children\": [\t\n   \t\t{\"company\": \"Procter&Gamble\", \"name\": \"William\", \"lastname\" : \"Procter\", \"birth\": \"1801-12-07\", \"founded\": \"1837-10-31\", \"age\": 35, \"more\" : \"making candles with \\nhis brother-in-law\", \"link\" : \"http://en.wikipedia.org/wiki/William_Procter_%28candlemaker%29\"},\t\n\t\t{\"company\": \"Boeing\", \"name\": \"William\", \"lastname\" : \"Boeing\", \"birth\": \"1881-10-01\", \"founded\": \"1916-07-15\", \"age\": 35, \"more\" : \"after crashing his plane, \\nunable to repair it\", \"link\" : \"en.wikipedia.org/wiki/William_Boeing\"},\n\t\t{\"company\": \"Salesforce\", \"name\": \"Marc\", \"lastname\" : \"Benioff\", \"birth\": \"1964-09-25\", \"founded\": \"1999\", \"age\": 35, \"more\" : \"in his apartment proclaiming \\n'The End of Software'\", \"link\" : \"en.wikipedia.org/wiki/Marc_Benioff\"},\n\t\t{\"company\": \"Carlsberg\", \"name\": \"J. C.\", \"lastname\" : \"Jacobsen\", \"birth\": \"1811-09-02\", \"founded\": \"1847\", \"age\": 36, \"more\" : \"using science to make good \\nbeer consistently\", \"link\" : \"en.wikipedia.org/wiki/J._C._Jacobsen\"},\n\t\t{\"company\": \"Hitachi\", \"name\": \"Namihei\", \"lastname\" : \"Odaira\", \"birth\": \"1874\", \"founded\": \"1910\", \"age\": 36, \"more\" : \"creating electric motor\\n while working in a mine\", \"link\" : \"en.wikipedia.org/wiki/Namihei_Odaira\"},\n\t\t{\"company\": \"LinkedIn\", \"name\": \"Reid\", \"lastname\" : \"Hoffman\", \"birth\": \"1967-08-05\", \"founded\": \"2003-05\", \"age\": 36, \"more\" : \"creating first business-minded \\nsocial network in 2002\", \"link\" : \"en.wikipedia.org/wiki/Reid_Hoffman\"},\n\t\t{\"company\": \"Macy's\", \"name\": \"Rowland\", \"lastname\" : \"Macy\", \"birth\": \"1822-08-30\", \"founded\": \"1858\", \"age\": 36, \"more\" : \"as a dried goods store in NYC \\nafter 4 of his stores failed\", \"link\" : \"en.wikipedia.org/wiki/Rowland_Hussey_Macy\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Doris\", \"lastname\" : \"Fisher\", \"birth\": \"1932\", \"founded\": \"1969\", \"age\": 37, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Doris_F._Fisher\"},\n\t\t{\"company\": \"Hershey's\", \"name\": \"Milton\", \"lastname\" : \"Hershey\", \"birth\": \"1857-09-13\", \"founded\": \"1894\", \"age\": 37, \"more\" : \"making fresh-milk caramels \\nand hawking them by night\", \"link\" : \"en.wikipedia.org/wiki/Milton_S._Hershey\"},\n\t\t{\"company\": \"Hugo Boss\", \"name\": \"Hugo\", \"lastname\" : \"Boss\", \"birth\": \"1885-07-08\", \"founded\": \"1923\", \"age\": 38, \"more\" : \"with six sewing machines \\nleft from his bankruptcy\", \"link\" : \"en.wikipedia.org/wiki/Hugo_Boss_(fashion_designer)\"},\n\t\t{\"company\": \"Sony\", \"name\": \"Masaru\", \"lastname\" : \"Ibuka\", \"birth\": \"1908-04-11\", \"founded\": \"1946-05-07\", \"age\": 38, \"more\" : \"applying transistor technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Masaru_Ibuka\"},\n\t\t{\"company\": \"Public Storage\", \"name\": \"Wayne\", \"lastname\" : \"Hughes\", \"birth\": \"1934-09-28\", \"founded\": \"1972\", \"age\": 38, \"more\" : \"pioneering self-storage\", \"link\" : \"en.wikipedia.org/wiki/B._Wayne_Hughes\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Min\", \"lastname\" : \"Kao\", \"birth\": \"1949\", \"founded\": \"1989\", \"age\": 39, \"more\" : \"applying GPS technology \\nto non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Min_Kao\"},\n\t\t{\"company\": \"HTC\", \"name\": \"Cher\", \"lastname\" : \"Wang\", \"birth\": \"1958-09-14\", \"founded\": \"1997-05-15\", \"age\": 39, \"more\" : \"making tablets and \\nsmartphones\", \"link\" : \"en.wikipedia.org/wiki/Cher_Wang\"},\n\t\t{\"company\": \"Zara (Inditex)\", \"name\": \"Amancio\", \"lastname\" : \"Ortega\", \"birth\": \"1936-03-28\", \"founded\": \"1975\", \"age\": 39, \"more\" : \"organizing local women into \t\\na bathrobe sewing firm\", \"link\" : \"en.wikipedia.org/wiki/Amancio_Ortega_Gaona\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Gordon\", \"lastname\" : \"Moore\", \"birth\": \"1929-01-03\", \"founded\": \"1968-07-18\", \"age\": 39, \"more\" : \"creating a faster RAM \\nmemory chips\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Moore\"},\n\t\t{\"company\": \"Lenovo\", \"name\": \"Liu\", \"lastname\" : \"Chuanzhi\", \"birth\": \"1944-04-29\", \"founded\": \"1984\", \"age\": 39, \"more\" : \"importing TVs and \\nservicing computers\", \"link\" : \"en.wikipedia.org/wiki/Liu_Chuanzhi\"}\n  ]},\n  {\n   \"name\": \"40..44\",\n   \"range\" : 40,\n   \"children\": [\t\t\n\t\t{\"company\": \"Costco\", \"name\": \"Jeffrey\", \"lastname\" : \"Brotman\", \"birth\": \"1943\", \"founded\": \"1983-09-15\", \"age\": 40, \"more\" : \"converting a plane hangar \\ninto a warehouse for shopping\", \"link\" : \"en.wikipedia.org/wiki/Jeffrey_Brotman\"},\n\t\t{\"company\": \"Ford\", \"name\": \"Henry\", \"lastname\" : \"Ford\", \"birth\": \"1863-07-30\", \"founded\": \"1903-06-16\", \"age\": 40, \"more\" : \"wanting to build \\na car for the masses\", \"link\" : \"en.wikipedia.org/wiki/Henry_Ford\"},\n\t\t{\"company\": \"Volvo\", \"name\": \"Gustaf\", \"lastname\" : \"Larson\", \"birth\": \"1887-07-08\", \"founded\": \"1927\", \"age\": 40, \"more\" : \"making an oral contract with \\nco-founder to make first 10 cars\", \"link\" : \"en.wikipedia.org/wiki/Gustaf_Larson\"},\n\t\t{\"company\": \"Christian Dior\", \"name\": \"Christian\", \"lastname\" : \"Dior\", \"birth\": \"1905\", \"founded\": \"1946-12-16\", \"age\": 41, \"more\" : \"inventing a voluptuous look \\namid boxy post-war styles\", \"link\" : \"en.wikipedia.org/wiki/Christian_Dior\"},\n\t\t{\"company\": \"Gap\", \"name\": \"Donald\", \"lastname\" : \"Fisher\", \"birth\": \"1928-09-03\", \"founded\": \"1969\", \"age\": 41, \"more\" : \"selling Levi's jeans \\nand music records\", \"link\" : \"en.wikipedia.org/wiki/Donald_Fisher\"},\n\t\t{\"company\": \"Intel\", \"name\": \"Robert\", \"lastname\" : \"Noyce\", \"birth\": \"1927-12-12\", \"founded\": \"1968-07-18\", \"age\": 41, \"more\" : \"co-inventing \\nthe integrated circuit\", \"link\" : \"en.wikipedia.org/wiki/Robert_Noyce\"},\n\t\t{\"company\": \"Coca-Cola\", \"name\": \"Asa\", \"lastname\" : \"Candler\", \"birth\": \"1851-12-30\", \"founded\": \"1892\", \"age\": 41, \"more\" : \"buying the Coca-Cola recipe \\nfor $550 (about $14,000 today)\", \"link\" : \"en.wikipedia.org/wiki/Asa_Griggs_Candler\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"John\", \"lastname\" : \"Warnock\", \"birth\": \"1940-10-06\", \"founded\": \"1982-12\", \"age\": 42, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/John_Warnock\"},\n\t\t{\"company\": \"Lululemon\", \"name\": \"Chip\", \"lastname\" : \"Wilson\", \"birth\": \"1956-03-03\", \"founded\": \"1998\", \"age\": 42, \"more\" : \"creating cotton yoga pants \\nfor active women\", \"link\" : \"en.wikipedia.org/wiki/Chip_Wilson\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Jerry\", \"lastname\" : \"Baldwin\", \"birth\": \"1929\", \"founded\": \"1971-03-30\", \"age\": 42, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Jerry_Baldwin\"},\n\t\t{\"company\": \"Honda\", \"name\": \"Soichiro\", \"lastname\" : \"Honda\", \"birth\": \"1906-11-17\", \"founded\": \"1948-09-24\", \"age\": 42, \"more\" : \"producing motorized bikes\", \"link\" : \"en.wikipedia.org/wiki/Soichiro_Honda\"},\n\t\t{\"company\": \"Dish Network\", \"name\": \"Charlie\", \"lastname\" : \"Ergen\", \"birth\": \"1953-03-01\", \"founded\": 1996, \"age\": 43, \"more\" : \"selling satellite dishes \\ndoor to door in Colorado\", \"link\" : \"en.wikipedia.org/wiki/Charlie_Ergen\"},\n\t\t{\"company\": \"Adobe\", \"name\": \"Charles\", \"lastname\" : \"Geschke\", \"birth\": \"1939-09-11\", \"founded\": \"1982-12\", \"age\": 43, \"more\" : \"creating PostScript, \\npage description language\", \"link\" : \"en.wikipedia.org/wiki/Charles_Geschke\"},\n\t\t{\"company\": \"Dollar Tree\", \"name\": \"Macon\", \"lastname\" : \"Brock Jr\", \"birth\": \"1943\", \"founded\": \"1986\", \"age\": 43, \"more\" : \"as a toy store in a mall\", \"link\" : \"en.wikipedia.org/wiki/Dollar_Tree\"},\n\t\t{\"company\": \"Comcast\", \"name\": \"Ralph\", \"lastname\" : \"Roberts\", \"birth\": \"1920-03-13\", \"founded\": \"1963\", \"age\": 43, \"more\" : \"buying a small rural \\nantenna TV system\", \"link\" : \"en.wikipedia.org/wiki/Ralph_J._Roberts\"},\n\t\t{\"company\": \"Rolls-Royce\", \"name\": \"Henry\", \"lastname\" : \"Royce\", \"birth\": \"1863-03-27\", \"founded\": \"1906\", \"age\": 43, \"more\" : \"making a deal with Rolls to sell\\nhim all the cars he could make\", \"link\" : \"en.wikipedia.org/wiki/Henry_Royce\"},\n\t\t{\"company\": \"AOL\", \"name\": \"Jim\", \"lastname\" : \"Kimsey\", \"birth\": \"1939-09-15\", \"founded\": \"1983\", \"age\": 44, \"more\" : \"marketing a game \\n console for Atari\", \"link\" : \"en.wikipedia.org/wiki/Jim_Kimsey\"},\n\t\t{\"company\": \"Walmart\", \"name\": \"Sam\", \"lastname\" : \"Walton\", \"birth\": \"1918-03-29\", \"founded\": \"1962\", \"age\": 44, \"more\" : \"purchasing a Ben Franklin \\nvariety store\", \"link\" : \"en.wikipedia.org/wiki/Sam_Walton\"}\n  ]},\n  {\n   \"name\": \"45..49\",\n   \"range\" : 45,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"General Electric\", \"name\": \"Thomas\", \"lastname\" : \"Edison\", \"birth\": \"1847-02-11\", \"founded\": \"1892\", \"age\": 45, \"more\" : \"bringing his various inventions \\ninto one company\", \"link\" : \"en.wikipedia.org/wiki/Thomas_Edison\"},\n\t\t{\"company\": \"Costco\", \"name\": \"James\", \"lastname\" : \"Sinegal\", \"birth\": \"1936-01-01\", \"founded\": \"1983-09-15\", \"age\": 47, \"more\" : \"as one of the first warehouse \\nstores in the U.S.\", \"link\" : \"en.wikipedia.org/wiki/James_Sinegal\"},\n\t\t{\"company\": \"Wells Fargo\", \"name\": \"Henry\", \"lastname\" : \"Wells\", \"birth\": \"1805-12-12\", \"founded\": \"1852-03-18\", \"age\": 47, \"more\" : \"first to introduce banking \\nto the Wild West\", \"link\" : \"en.wikipedia.org/wiki/Henry_Wells\"},\n\t\t{\"company\": \"Goldman Sachs\", \"name\": \"Marcus\", \"lastname\" : \"Goldman\", \"birth\": \"1821-12-09\", \"founded\": \"1869\", \"age\": 48, \"more\" : \"as a one-man broker\\n of debt IOUs\", \"link\" : \"en.wikipedia.org/wiki/Marcus_Goldman\"},\n\t\t{\"company\": \"Home Depot\", \"name\": \"Bernard\", \"lastname\" : \"Marcus\", \"birth\": \"1929\", \"founded\": \"1978\", \"age\": 48, \"more\" : \"after being fired from \\nhome improvement store\", \"link\" : \"en.wikipedia.org/wiki/Bernard_Marcus\"},\n\t\t{\"company\": \"Adidas\", \"name\": \"Adolf\", \"lastname\" : \"Dassler\", \"birth\": \"1900-11-03\", \"founded\": \"1949-08-18\", \"age\": 48, \"more\" : \"vying with his brother to make\\nshoes for Olympic runners\", \"link\" : \"en.wikipedia.org/wiki/Adolf_Dassler\"},\n\t\t{\"company\": \"Ryanair\", \"name\": \"Tony\", \"lastname\" : \"Ryan\", \"birth\": \"1936-02-02\", \"founded\": \"1985\", \"age\": 49, \"more\" : \"with a single 15-seat plane \\nflying from London\", \"link\" : \"nytimes.com/2007/10/04/business/04ryan.html\"},\n\t\t{\"company\": \"Seagate\", \"name\": \"Alan\", \"lastname\" : \"Shugart\", \"birth\": \"1930-09-27\", \"founded\": 1979, \"age\": 49, \"more\" : \"introducing low-cost \\nfloppy disks\", \"link\" : \"en.wikipedia.org/wiki/Alan_Shugart\"}\n  ]},\n  {\n   \"name\": \"50..54\",\n   \"range\" : 50,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Morgan Stanley\", \"name\": \"Harold\", \"lastname\" : \"Stanley\", \"birth\": \"1885-10-02\", \"founded\": \"1935-09-05\", \"age\": 50, \"more\" : \"trading bonds for companies \\npioneering investment banking\", \"link\" : \"en.wikipedia.org/wiki/Harold_Stanley\"},\n\t\t{\"company\": \"Garmin\", \"name\": \"Gary\", \"lastname\" : \"Burrell\", \"birth\": \"1937\", \"founded\": \"1989\", \"age\": 51, \"more\" : \"first to use GPS technology \\nfor non-military uses\", \"link\" : \"en.wikipedia.org/wiki/Gary_Burrell\"},\n\t\t{\"company\": \"Hyundai Motor\", \"name\": \"Chung\", \"lastname\" : \"Ju-yung\", \"birth\": \"1915-11-25\", \"founded\": \"1967-12-29\", \"age\": 51, \"more\" : \"borrowing money to start \\nan auto service garage\", \"link\" : \"en.wikipedia.org/wiki/Chung_Ju-yung\"},\n\t\t{\"company\": \"Starbucks\", \"name\": \"Gordon\", \"lastname\" : \"Bowker\", \"birth\": \"1920\", \"founded\": \"1971-03-30T08:00:00.000Z\", \"age\": 51, \"more\" : \"selling freshly roasted \\ncoffee beans by the pound\", \"link\" : \"en.wikipedia.org/wiki/Gordon_Bowker\"},\n\t\t{\"company\": \"Campbell Soup\", \"name\": \"Joseph\", \"lastname\" : \"Campbell\", \"birth\": \"1817-05-15\", \"founded\": \"1869\", \"age\": 52, \"more\" : \"condensing soups by halving \\nthe amount of water\", \"link\" : \"en.wikipedia.org/wiki/Joseph_A._Campbell\"},\n\t\t{\"company\": \"Nestl\", \"name\": \"Henri\", \"lastname\" : \"Nestl\", \"birth\": \"1814-08-10\", \"founded\": \"1866\", \"age\": 52, \"more\" : \"inventing powered milk \\nand breast milk substitute\", \"link\" : \"en.wikipedia.org/wiki/Henri_Nestl%C3%A9\"},\n\t\t{\"company\": \"Nissan Motor\", \"name\": \"Yoshisuke\", \"lastname\" : \"Aikawa\", \"birth\": \"1880-11-06\", \"founded\": \"1933-12-26\", \"age\": 52, \"more\" : \"transforming his \\nbrother-in-law's business\", \"link\" : \"en.wikipedia.org/wiki/Yoshisuke_Aikawa\"},\n\t\t{\"company\": \"Este Lauder\", \"name\": \"Este\", \"lastname\" : \"Lauder\", \"birth\": \"1906-07-01\", \"founded\": \"1961\", \"age\": 54, \"more\" : \"selling creams made by\\nher uncle to her friends\", \"link\" : \"en.wikipedia.org/wiki/Est%C3%A9e_Lauder_(businesswoman)\"}\n  ]},\n  {\n   \"name\": \"55..59\",\n   \"range\" : 55,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Las Vegas Sands\", \"name\": \"Sheldon\", \"lastname\" : \"Adelson\", \"birth\": \"1933-08-04\", \"founded\": \"1988\", \"age\": 55, \"more\" : \"turning an old hotel into the only \\nprivate convention center\", \"link\" : \"en.wikipedia.org/wiki/Sheldon_Adelson\"},\n\t\t{\"company\": \"Porsche\", \"name\": \"Ferdinand\", \"lastname\" : \"Porsche\", \"birth\": \"1875-09-03\", \"founded\": \"1931\", \"age\": 56, \"more\" : \"creating racing car for which \\nhe had no customer\", \"link\" : \"en.wikipedia.org/wiki/Ferdinand_Porsche\"},\n\t\t{\"company\": \"Kawasaki\", \"name\": \"Kawasaki\", \"lastname\" : \"Shz\", \"birth\": \"1837\", \"founded\": \"1896-10-15\", \"age\": 59, \"more\" : \"as a ship building \\ncompany\", \"link\" : \"en.wikipedia.org/wiki/Kawasaki_Sh%C5%8Dz%C5%8D\"}\n  ]},\n  {\n   \"name\": \"60..64\",\n   \"range\" : 60,\n   \"children\": [\t\t\t\n\t\t{\"company\": \"Bank of America\", \"name\": \"Amadeo\", \"lastname\" : \"Giannini\", \"birth\": \"1870-05-06\", \"founded\": \"1930-11-03\", \"age\": 60, \"more\" : \"the first to offer banking \\nfor the middle-class \", \"link\" : \"en.wikipedia.org/wiki/Amadeo_Giannini\"},\n\t\t{\"company\": \"IBM\", \"name\": \"Charles\", \"lastname\" : \"Flint\", \"birth\": \"1850-01-24\", \"founded\": \"1911-06-16\", \"age\": 61, \"more\" : \"foreseeing that punch-card \\n will change the world\", \"link\" : \"en.wikipedia.org/wiki/Charles_Ranlett_Flint\"}\n  ]}\n ]\n}\nFnF.aspectRatio = 970 / 800;\nFnF.chart = d3.select(\"#latetostart-graph\").node();\nFnF.resizeTimer;\nFnF.doResize = function() {\n\tconsole.log('running FnF.doResize()');\n\tclearTimeout(FnF.resizeTimer);\n\tFnF.resizeTimer = setTimeout(function(){\n\t\tvar targetWidth = FnF.chart.parentNode.offsetWidth;\n\t\tconsole.log('resizing to w=' + targetWidth);\n\t\tFnF.chart.style.width = targetWidth + \"px\";\n\t\tFnF.chart.style.height = targetWidth / FnF.aspectRatio + \"px\";\t\n\t}, 100);\n}\nFnF.OFFSET = 120;\nFnF.LEAF_DROP = 50;\nFnF.INITIAL_Y_OFFSET = 300;\nFnF.WIDTH = 970;\nFnF.YEAR_STEP = 4.25;\nFnF.margin = {top: 0, right: 10, bottom: 0, left: 10};\nFnF.width = FnF.WIDTH - FnF.margin.right - FnF.margin.left;\nFnF.height = 800 - FnF.margin.top - FnF.margin.bottom;\n    \nFnF.i = 0;\nFnF.duration = 750;\n// var    root, prevSelected;\nFnF.tree = d3.layout.tree()\n\t.separation(function(a, b) { return a.parent === b.parent ? 1 : 2; })\n    .size([FnF.width, FnF.height]);\nFnF.diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.x, d.y]; });\n    \n    \nvar line = d3.svg.line()\n    .interpolate(\"linear\")\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n    \nFnF.svg = d3.select(\"#container svg\").append(\"svg\")\n    .attr(\"width\", FnF.width + FnF.margin.right + FnF.margin.left)\n    .attr(\"height\", FnF.height + FnF.margin.top + FnF.margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + FnF.margin.left + \",\" + FnF.margin.top + \")\");\nFnF.collapse = function (d) {\n\tif (d.children) {\n\t  d._children = d.children;\n\t  d._children.forEach(FnF.collapse);\n\t  d.children = null;\n\t}\n}\nFnF.root = FnF.founders;\nFnF.root.x0 = FnF.height / 2;\nFnF.root.y0 = 300; // for smooth first transition\nFnF.root.children.forEach(function(d) {\n\tif (!d.range || d.range != 35){\n\t\tFnF.collapse(d);\n\t}\n});\nFnF.svg.append(\"svg:line\")\n\t.attr(\"x1\", 25)\n\t.attr(\"y1\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"x2\", FnF.WIDTH - 30)\n\t.attr(\"y2\", FnF.INITIAL_Y_OFFSET)\n\t.attr(\"stroke-width\", 4.25)\n\t.attr(\"stroke-dasharray\", \"\" + FnF.YEAR_STEP + \", \" + FnF.YEAR_STEP*2)\n\t.style(\"stroke\", \"rgb(195,190,199)\");\n    \nFnF.doResize();\nFnF.clearInfo = function () {\n  FnF.svg.selectAll(\".year_born\").remove();\n}\nFnF.leafSelect = function(d) {\n  if (d.selected) {\n    d.selected = false;\n    d._selected= true;\n  } else {\n    if (FnF.prevSelected) {\n      FnF.prevSelected.selected = false;\n      FnF.prevSelected._selected = false;\n    }\n     d.selected = true;\n    FnF.prevSelected = d;\n  }\n  var theName = d.name;\n  var theLastName = d.lastname; \n  FnF.clearInfo();\n  FnF.svg.append(\"text\")\n  \t.attr(\"x\", \"15\")\n  \t.attr(\"y\", \"200\")\n  \t.classed(\"year_born\", true)\n  \t.text( d.birth.split(\"-\")[0] );\n}\nFnF.click = function(d) {\n  if (!(d.children || d._children)) {\n  \tFnF.leafSelect(d);\n  \tFnF.update(d);\n  \treturn;\n  }\n  \n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  if (d.parent) {\n    d.parent.children.forEach(function(element) {\n      if (d !== element) {\n        FnF.collapse(element);\n      }\n    });\n  }\n  FnF.update(d);\n  if (FnF.prevSelected) {\n  \tFnF.prevSelected.selected = false;\n  \tFnF.prevSelected._selected = false;\n  }\n  FnF.prevSelected = null;\n  FnF.clearInfo();\n}\n   \nFnF.update = function(source) {\n  // Compute the new tree layout.\n  var nodes = FnF.tree.nodes(FnF.root).reverse();\n  nodes.splice(nodes.length-1,1);\n  links = FnF.tree.links(nodes);\n  nodes.forEach(normalizeNode);\n  // Update the nodes\n  var node = FnF.svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++FnF.i); });\n      \n  var rootNodesCollapsed = node.filter(function(d) {\n        return (d.children || d._children);\n  });\n  \n  rootNodesCollapsed.select(\".info-text\")\n    .select(\"text\")\n  \t.attr(\"dy\",\"-2em\")\n  \t.classed(\"years\", true)\n  \t.text(function(d) {\n  \t\tif (d.children && !d._children)\t{\n  \t\t\treturn d.name;\n  \t\t} else if (d.range == 25 || d.range == 35) {\n      \t\t\treturn d.range;\n      \t}\n  \t});\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x0 + \",\" + source.y0 + \")\"; })\n      .on(\"click\", FnF.click);\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeEnter.append(\"g\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && !d.children && !d._children ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"text-anchor\", \"middle\")\n      .call(function(text){\n      \ttext.each(function(d){\n\t\t\t\t\tvar atext = d3.select(this);\n\t\t\t\t\tif (d.children && !d._children) {\n\t\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6).text(d.name);\n\t\t\t\t\t} else if (d.children || d._children) {\n\t\t\t\t\t\tatext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"-2em\").classed(\"years\", true).style(\"fill-opacity\", 1e-6)\n\t\t\t\t\t\t     .text( (d.range == 25 || d.range == 35) ? d.range : \"\");      \t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar startedAt = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"0.8em\").style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tstartedAt.append('tspan').classed(\"more-text\", true).text('at ');\n\t\t\t\t\tstartedAt.append('tspan').text(d.age);\n\t\t\t\t\tvar founder = atext.append('text').classed(\"founder\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"1.7em\").text(d.name);\n\t\t\t\t\tfounder.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"2.7em\").text(d.lastname);\n\t\t\t\t\tvar company = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"4.5em\").classed(\"company\", true).style(\"fill-opacity\", 1e-6);\n\t\t\t\t\tcompany.append('tspan').classed(\"more-text\", true).text('started ');\n\t\t\t\t\tcompany.append('tspan').text(d.company);\n\t\t\t\t\tif (d.more && d.link) {\n            var aStory = d.more.split(\"\\n\");\n            var shortStory = atext.append('text').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"7em\").classed(\"more-text short-story\", true).style(\"fill-opacity\", 1e-6);\n            shortStory.append('tspan').classed(\"more-text\", true).text(aStory[0]);\n            if (aStory[1]) {\n              shortStory.append('tspan').attr(\"x\", \"0\").attr(\"y\", \"9\").attr(\"dy\", \"8.5em\").classed(\"more-text\", true).text(aStory[1]);\n            }\n\t\t\t\t\t\tshortStory.append(\"a\").attr(\"xlink:href\", \"http://\"+ d.link).attr(\"target\", \"_blank\").append('tspan').text(\" [..]\");\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x > FnF.WIDTH - 60) {\n\t\t\t\t\t\tstartedAt.classed(\"align-right\", true);\n\t\t\t\t\t\tfounder.classed(\"align-right\", true);\n\t\t\t\t\t\tcompany.classed(\"align-right\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-right\", true);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (d.x < 50) {\n\t\t\t\t\t\tstartedAt.classed(\"align-left\", true);\n\t\t\t\t\t\tfounder.classed(\"align-left\", true);\n\t\t\t\t\t\tcompany.classed(\"align-left\", true);\n\t\t\t\t\t\tshortStory && shortStory.classed(\"align-left\", true);\n\t\t\t\t\t}\n\t\t\t   }\n      \t})\n      })\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) {\n      \treturn \"translate(\" + d.x + \",\" + d.y  + \")\" + (d.selected && !d.children && !d._children ? \"scale(1.6,1.6)\" : \"\"); \n      });\n      \n  nodeUpdate.select(\".info-text\")\n      .attr(\"class\", function(d) { \n      \treturn \"info-text\" + \n      \t        (d.selected && d.depth > 1 ? \" selected\" : \"\"); \n      })\n      .attr(\"transform\", function(d) { \n      \treturn \"translate(\" + \n      \t        (d.selected && !d.children && !d._children ? (d.x < 50 ? \"-5\" : d.x > FnF.WIDTH - 50 ? \"5\" : \"0\" ) : \"0\") +\n      \t        \",0)\"; \n      });\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", function (d) { return d._children || d.children ? 6.5 : 4.5 } )\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n  nodeUpdate.selectAll(\"text\")\n      .style(\"fill-opacity\", 1);\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.x + \",\" + source.y + \")\"; })\n      .remove();\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n  nodeExit.selectAll(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n  // Update the links\n  var link = FnF.svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return FnF.diagonal({source: o, target: o});\n      });\n      \n  // Transition links to their new position.\n  link.transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d){\n        if (d.target.selected) {\n//           var o = {x: d.source.x, y: d.source.y - FnF.LEAF_DROP};\n//           return FnF.diagonal({source: o, target: o});\n          d.target.y = d.target.y - FnF.LEAF_DROP;\n        }\n\t\treturn FnF.diagonal(d);\n      }).attrTween(\"d\", function (d, i, a) { \n       if (d.target.selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + (d.target.y + FnF.LEAF_DROP ));\n       } else if (d.target._selected) {\n         return d3.interpolate(a + \"L\" + d.target.x + \",\" + d.target.y,  FnF.diagonal(d) + \"L\" + d.target.x + \",\" + d.target.y);\n         d.target._selected = false;\n       } else {\n         return d3.interpolate(a, FnF.diagonal(d));\n       }  \n  \t  });\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(FnF.duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return FnF.diagonal({source: o, target: o});\n      }).remove();\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n   \n   \nFnF.update(FnF.root);\nd3.select(window).on(\"resize\", FnF.doResize);\nd3.select(window).on(\"load\", FnF.doResize);\n//d3.select(self.frameElement).style(\"height\", \"800px\");\n// Normalize for fixed-depth.\nfunction normalizeNode(d){\n  \tif (d.parent && d.parent.depth === 0) {\n  \t\td.y = FnF.INITIAL_Y_OFFSET;\n  \t\td.x = d.range * FnF.YEAR_STEP * 3 + 15;\n  \t} else {\n  \t    d.y = FnF.INITIAL_Y_OFFSET + d.depth * FnF.OFFSET;\n        // updating selected node position  \t    \n  \t    if ( d.selected && (d.depth === 2) ) {\n  \t    \td.y = d.y + FnF.LEAF_DROP;\n  \t    }\n  \t}\n}\n</script>", "description": "Too Late To Start", "created_at": "2016-09-23T23:53:07Z", "updated_at": "2016-09-23T23:54:19Z", "api": ["d3.select", "d3.layout.tree", "d3.svg.diagonal", "d3.svg.line", "d3.interpolate"], "readme": "Here is a visualization of the relationship between age and success. Tap on the circles below and investigate for yourself.\nSource: [fundersandfounders.com](http://fundersandfounders.com/too-late-to-start-life-crisis/)", "uid": "markvital_d45fb2d9324dc785136b72f21b5e68b4"}, {"code": "<script>\n\n\nvar margin = {top: 10, right: 10, bottom: 100, left: 40},\n    margin2 = {top: 430, right: 10, bottom: 20, left: 40},\n    margin3 = {top: 0, right: 10, bottom: 0, left: 40},\n    margin4 = {top: 30, right: 10, bottom: 10, left: 10},\n\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n    height3 = 35 - margin3.top - margin3.bottom;\n    height4 = 800 - margin4.top - margin4.bottom;\n\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse,\n    bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar x = d3.time.scale().range([0, width]),\n    x2 = d3.time.scale().range([0, width]),\n    y = d3.scale.linear().range([height, 0]),\n    y2 = d3.scale.linear().range([height2, 0]);\n\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n    xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(y).orient(\"left\").innerTickSize(-width);\n\nvar maxDate = 0, minDate =0;\n\nvar line = d3.svg.line()\n    .interpolate(\"step-after\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); }) \n    .defined(function(d) { return d.price; });  // Hiding line value defaults of 0 for missing data\n\nvar area_brush = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nfocus.append('text')\n      .attr('x', 10)\n      .attr('y', 25)\n      .text(\"Nasdaq Composite Index\")\n      .style(\"font-size\", 14);\n\n  \n  \nvar context = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\nvar lineFunction = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; })\n    .interpolate(\"linear\");\n\nvar data;  // stock data global variable\n\n\nvar brush = d3.svg.brush()\n  .x(x2)\n  .extent([0.9, 1])\n  .on(\"brush\", brushed);\n\nvar scan = d3.svg.brush()\n  .x(x)\n  .on(\"brush\", scanned)\n  .on(\"brushstart\", function () {d3.select(\"g.focus_box\").remove();});\n\n  \n  \nd3.csv(\"datapoints.csv\", function(error, csv_data) {\n  data = csv_data;\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n  });\n\n  x.domain(d3.extent(data.map(function(d) { return d.date; })));\n  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n  focus.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n  \n  focus.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n  \n  focus.append(\"g\")\n    .attr(\"class\", \"x scan\")\n    .call(scan)\n  .selectAll(\"rect\")\n    .attr(\"height\", height )\n      .on(\"mouseover\", function() { focus_dropline.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus_dropline.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  // prettify: to block the stroke of the scanner\n  focus.append(\"line\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",2)\n    .attr(\"x2\",width)\n\n\n  // prettify: to block the stroke of the scanner at bottom\n  focus.append(\"line\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",0)\n    .attr(\"x2\",width)\n    .attr(\"y1\",height)\n    .attr(\"y2\",height);\n  \n  \n  // for the drop line\n  var focus_dropline = focus.append(\"g\")\n      .attr(\"class\", \"focus_dropline\")\n      .style(\"display\", \"none\");\n\n  focus_dropline.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus_dropline.append(\"line\")\n      .classed(\"x\", true)\n\n  focus_dropline.append(\"line\")\n      .classed(\"y\", true)\n\n  focus_dropline.append(\"text\")\n      .attr(\"x\", 20)\n      .attr(\"y\", 20)\n      .attr(\"dy\", \".35em\");\n  \n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus_dropline.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n    focus_dropline.select(\"line.x\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", -x(d.date))\n        .attr(\"y1\", 0)\n        .attr(\"y2\", 0)\n    focus_dropline.select(\"line.y\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height - y(d.price))\n    focus_dropline.select(\"text\").text(d.price.toFixed(2));\n  }\n\n  \n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"brush-area\")\n      .attr(\"d\", area_brush);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .call(brush)\n    .selectAll(\"rect\")\n      .attr(\"y\", -6)\n      .attr(\"height\", height2 + 7);\n});\n\n\nfunction brushed() {\n  x.domain(brush.empty() ? x2.domain() : brush.extent()); \n\n  var dataFiltered = data.filter(function(d, i) {\n    if ( (d.date >= x.domain()[0]) && (d.date <= x.domain()[1]) ) {\n      return d.price;\n    }\n  });\n\n  // to re-scale y-axis\n  y.domain([0.9*d3.min(dataFiltered.map(function(d) { return d.price; })),\n   1.1*d3.max(dataFiltered.map(function(d) { return d.price; }))]);\n\n\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".x.axis\").transition().call(xAxis);\n  focus.select(\".y.axis\").call(yAxis);\n\n  d3.selectAll('circle.dot')\n  .attr(\"cx\",function(d) { return x( d.FileDate ); })\n  .attr(\"cy\", function(d) { \n\n    var i_price = bisectDate(data, d.FileDate, 1),\n    d0_price = data[i_price - 1],\n    d1_price = data[i_price],\n    d_price = d.FileDate - d0_price.date > d1_price.date - d.FileDate ? d1_price.price : d0_price.price;\n    return y( d_price); });\n};\n\n\n// here's the function that is called upon brushing the main chart\nfunction scanned() {\n   // get the brush that is being manipulated\n   var brush_event = d3.event.target;\n   // check if it is empty - if not, then do the analytics box\n   if(!brush_event.empty()) {\n       \n     // get the extent of the brush as a two-element array [min, max]\n       var extent = brush_event.extent();\n\n       minDate = extent[0];\n       maxDate = extent[1];\n\n       console.log(\"minDate\",minDate)\n       console.log(\"maxDate\",maxDate)\n\n       // day difference\n       var timeDiff = Math.abs(maxDate-minDate);\n       var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)); \n\n       console.log(\"TimeDiff\", Date(timeDiff))\n\n       var i_min = bisectDate(data, minDate, 1),\n          d0_min = data[i_min - 1],\n          d1_min = data[i_min],\n          d_min = minDate - d0_min.date > d1_min.date - minDate ? d1_min : d0_min;\n    \n       var i_max = bisectDate(data, maxDate, 1),\n          d0_max = data[i_max - 1],\n          d1_max = data[i_max],\n          d_max = maxDate - d0_max.date > d1_max.date - maxDate ? d1_max : d0_max;\n\n\n        period_return = (d_max.price - d_min.price) / d_min.price\n        annualized_return = (d_max.price - d_min.price) / d_min.price / (diffDays/365)\n\n\n       // get line data dynamically\n      var lineData = [{\"x\": x(minDate), \"y\":y(d_min.price) }, {\"x\": x(maxDate), \"y\": y(d_max.price)}];\n\n      console.log(lineData);\n      console.log(lineFunction(lineData));\n\n      //focus_box\n      var focus_box = focus.selectAll(\"g.focus_box\")\n                        .data([maxDate]);\n\n      focus_box\n          .enter()\n            .append(\"g\")\n            .attr(\"class\", \"focus_box\")\n\n      focus_box.selectAll(\"*\").remove();\n\n      focus_box\n            .append(\"g\")\n            .attr(\"class\", \"indicator\")\n            .append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", lineFunction(lineData))\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 8)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 2);\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 2)\n              .attr(\"fill\", \"black\");\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(minDate))\n              .attr(\"cy\", y(d_min.price))\n              .attr(\"r\", 3)\n              .attr(\"fill\", \"black\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 1);\n\n      focus_box\n          .append(\"rect\")\n          .attr(\"width\", 120)\n          .attr(\"height\", 65)\n          .attr('x',  Math.min(width - 125, x(maxDate)+14))\n          .attr('y', height - 80)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"steelblue\")\n          .attr(\"stroke-width\", \"1px\")\n          .attr(\"opacity\", 0.2);\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 70)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (period)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 55)\n          .attr(\"dy\", \".35em\")\n          .text(((period_return*100).toFixed(1)).toString().concat(\"%\"));\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 40)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (annualized)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 25)\n          .attr(\"dy\", \".35em\")\n          .text(((annualized_return*100).toFixed(1)).toString().concat(\"%\"));\n\n\n   } \n};\n  \n  \n\n</script>", "description": "Context+brush+Analytics", "created_at": "2016-09-23T21:58:08Z", "updated_at": "2016-09-24T08:02:14Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.svg.area", "d3.select", "d3.svg.brush", "d3.csv", "d3.extent", "d3.max", "d3.mouse", "d3.min", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662"}, {"code": "<script>\n\nvar margin = {top: 10, right: 10, bottom: 100, left: 40},\n    margin2 = {top: 430, right: 10, bottom: 20, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse\n\t\tbisectDate = d3.bisector(function(d) { return d.date; }).left;\n  \nvar x = d3.time.scale().range([0, width]),\n    x2 = d3.time.scale().range([0, width]),\n    y = d3.scale.linear().range([height, 0]),\n    y2 = d3.scale.linear().range([height2, 0]);\n\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\"),\n    xAxis2 = d3.svg.axis().scale(x2).orient(\"bottom\"),\n    yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar brush = d3.svg.brush()\n    .x(x2)\n    .on(\"brush\", brush);\n\nvar area = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\n // to remove\nvar area2 = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); });\n\nvar area = d3.svg.area()\n    .interpolate(\"step-after\")\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nvar line = d3.svg.line()\n    .interpolate(\"step-after\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); }) \n    .defined(function(d) { return d.price; });  // Hiding line value defaults of 0 for missing data\n\nvar area_brush = d3.svg.area()\n    .interpolate(\"monotone\")\n    .x(function(d) { return x2(d.date); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.price); })\n\nvar data; \n\nvar brush = d3.svg.brush()\n  .x(x2)\n  .extent([0.9, 1])\n  .on(\"brush\", brushed);\n\nvar scan = d3.svg.brush()\n  .x(x)\n  .on(\"brush\", scanned)\n  .on(\"brushstart\", function () {d3.select(\"g.focus_box\").remove();});\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  \n  \n  \nd3.csv(\"datapoints.csv\", function(error, csv_data) {\n\tdata = csv_data;\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.price = +d.price;\n  });\n\n  x.domain(d3.extent(data.map(function(d) { return d.date; })));\n  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n\n  // gradient color for the area for decoration\n  focus.append(\"linearGradient\")\n      .attr(\"id\", \"temperature-gradient\")\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", 0).attr(\"y1\", \"0%\")\n      .attr(\"x2\", 0).attr(\"y2\", \"100%\")\n    .selectAll(\"stop\")\n      .data([\n        {offset: \"0%\", color: \"#ADD8E6\"},\n        {offset: \"70%\", color: \"lightgrey\"},\n        {offset: \"100%\", color: \"white\"}\n      ])\n    .enter().append(\"stop\")\n      .attr(\"offset\", function(d) { return d.offset; })\n      .attr(\"stop-color\", function(d) { return d.color; });\n\n  \n  focus.append(\"path\")\n      .datum(data)\n      //.attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"d\", area);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n  \n  focus.append(\"g\")\n    .attr(\"class\", \"x scan\")\n    .call(scan)\n  .selectAll(\"rect\")\n    .attr(\"height\", height )\n      .on(\"mouseover\", function() { focus_dropline.style(\"display\", null); })\n      .on(\"mouseout\", function() { focus_dropline.style(\"display\", \"none\"); })\n      .on(\"mousemove\", mousemove);\n\n  // prettify: to block the stroke of the scanner\n  focus.append(\"line\")\n    .style(\"stroke\", \"white\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",2)\n    .attr(\"x2\",width)\n\n\n  // prettify: to block the stroke of the scanner at bottom\n  focus.append(\"line\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"2px\")\n    .attr(\"x1\",0)\n    .attr(\"x2\",width)\n    .attr(\"y1\",height)\n    .attr(\"y2\",height);\n  \n  \n  // for the drop line\n  var focus_dropline = focus.append(\"g\")\n      .attr(\"class\", \"focus_dropline\")\n      .style(\"display\", \"none\");\n\n  focus_dropline.append(\"circle\")\n      .attr(\"r\", 4.5);\n\n  focus_dropline.append(\"line\")\n      .classed(\"x\", true)\n\n  focus_dropline.append(\"line\")\n      .classed(\"y\", true)\n\n  focus_dropline.append(\"text\")\n      .attr(\"x\", 20)\n      .attr(\"y\", 20)\n      .attr(\"dy\", \".35em\");\n  \n  function mousemove() {\n    var x0 = x.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n    focus_dropline.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n    focus_dropline.select(\"line.x\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", -x(d.date))\n        .attr(\"y1\", 0)\n        .attr(\"y2\", 0)\n    focus_dropline.select(\"line.y\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height - y(d.price))\n    focus_dropline.select(\"text\").text(d.price.toFixed(2));\n  }\n\n  \n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"brush-area\")\n      .attr(\"d\", area_brush);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"x brush\")\n      .call(brush)\n    .selectAll(\"rect\")\n      .attr(\"y\", -6)\n      .attr(\"height\", height2 + 7);\n});\n\n\n\nfunction brushed() {\n  x.domain(brush.empty() ? x2.domain() : brush.extent()); \n\n  var dataFiltered = data.filter(function(d, i) {\n    if ( (d.date >= x.domain()[0]) && (d.date <= x.domain()[1]) ) {\n      return d.price;\n    }\n  });\n\n  // to re-scale y-axis\n  y.domain([0.9*d3.min(dataFiltered.map(function(d) { return d.price; })),\n   1.1*d3.max(dataFiltered.map(function(d) { return d.price; }))]);\n\n\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".x.axis\").transition().call(xAxis);\n  focus.select(\".y.axis\").call(yAxis);\n  // focus.select(\".dot\").attr(\"d\", circles);\n\n  d3.selectAll('circle.dot')\n  .attr(\"cx\",function(d) { return x( d.FileDate ); })\n  .attr(\"cy\", function(d) { \n\n    var i_price = bisectDate(data, d.FileDate, 1),\n    d0_price = data[i_price - 1],\n    d1_price = data[i_price],\n    d_price = d.FileDate - d0_price.date > d1_price.date - d.FileDate ? d1_price.price : d0_price.price;\n    return y( d_price); });\n};\n\n\n// here's the function that is called upon brushing the main chart\nfunction scanned() {\n   // get the brush that is being manipulated\n   var brush_event = d3.event.target;\n   // check if it is empty - if not, then do the analytics box\n   if(!brush_event.empty()) {\n       \n     // get the extent of the brush as a two-element array [min, max]\n       var extent = brush_event.extent();\n\n       minDate = extent[0];\n       maxDate = extent[1];\n\n       console.log(\"minDate\",minDate)\n       console.log(\"maxDate\",maxDate)\n\n       // day difference\n       var timeDiff = Math.abs(maxDate-minDate);\n       var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)); \n\n       console.log(\"TimeDiff\", Date(timeDiff))\n\n       var i_min = bisectDate(data, minDate, 1),\n          d0_min = data[i_min - 1],\n          d1_min = data[i_min],\n          d_min = minDate - d0_min.date > d1_min.date - minDate ? d1_min : d0_min;\n    \n       var i_max = bisectDate(data, maxDate, 1),\n          d0_max = data[i_max - 1],\n          d1_max = data[i_max],\n          d_max = maxDate - d0_max.date > d1_max.date - maxDate ? d1_max : d0_max;\n\n\n        period_return = (d_max.price - d_min.price) / d_min.price\n        annualized_return = (d_max.price - d_min.price) / d_min.price / (diffDays/365)\n\n\n       // get line data dynamically\n      var lineData = [{\"x\": x(minDate), \"y\":y(d_min.price) }, {\"x\": x(maxDate), \"y\": y(d_max.price)}];\n\n      console.log(lineData);\n      console.log(lineFunction(lineData));\n\n      //focus_box\n      var focus_box = focus.selectAll(\"g.focus_box\")\n                        .data([maxDate]);\n\n      focus_box\n          .enter()\n            .append(\"g\")\n            .attr(\"class\", \"focus_box\")\n\n      focus_box.selectAll(\"*\").remove();\n\n      focus_box\n            .append(\"g\")\n            .attr(\"class\", \"indicator\")\n            .append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", lineFunction(lineData))\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 8)\n              .attr(\"fill\", \"none\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 2);\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(maxDate))\n              .attr(\"cy\", y(d_max.price))\n              .attr(\"r\", 2)\n              .attr(\"fill\", \"black\");\n\n      focus_box\n            .append(\"circle\")\n              .attr(\"cx\", x(minDate))\n              .attr(\"cy\", y(d_min.price))\n              .attr(\"r\", 3)\n              .attr(\"fill\", \"black\")\n              .attr(\"stroke\", \"black\")\n              .attr(\"stroke-width\", 1);\n\n      focus_box\n          .append(\"rect\")\n          .attr(\"width\", 120)\n          .attr(\"height\", 65)\n          .attr('x',  Math.min(width - 125, x(maxDate)+14))\n          .attr('y', height - 80)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"steelblue\")\n          .attr(\"stroke-width\", \"1px\")\n          .attr(\"opacity\", 0.2);\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 70)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (period)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 55)\n          .attr(\"dy\", \".35em\")\n          .text(((period_return*100).toFixed(1)).toString().concat(\"%\"));\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 40)\n          .attr(\"dy\", \".3em\")\n          .text(\"Return (annualized)\");\n\n      focus_box.append(\"text\")\n          .attr('x', Math.min(width - 125, x(maxDate)+20))\n          .attr('y', height - 25)\n          .attr(\"dy\", \".35em\")\n          .text(((annualized_return*100).toFixed(1)).toString().concat(\"%\"));\n\n\n   } \n};\n\n\n  \n  \n\n</script>", "description": "Focus+Context+Scanning", "created_at": "2016-09-23T21:04:00Z", "updated_at": "2016-09-23T21:30:32Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.brush", "d3.svg.area", "d3.svg.line", "d3.select", "d3.csv", "d3.extent", "d3.max", "d3.mouse", "d3.min", "d3.selectAll"], "readme": "This examples demonstrates how to use D3's brush component to implement focus + context zooming. Click and drag in the small chart below to pan or zoom.\n\nforked from <a href='http://bl.ocks.org/vlandham/'>vlandham</a>'s block: <a href='http://bl.ocks.org/vlandham/4215939'>Focus+Context via Brushing</a>", "uid": "RicCheng_73aa51d457d0125e314260cbd6842153"}, {"code": "<script>\n\nd3.csv(\"police_killings.csv\", function(err, data) {\n  var allRaces = [\"Black\",\"Hispanic/Latino\",  \"White\", \"Unknown\", \"Asian/Pacific Islander\", \"Native American\"];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"]\n  console.log(\"original data\", data)\n  // we want to \"pivot\" our data into deaths by month by race\n  // this is a rather ugly way to do it in javascript. would probably be easier\n  // to group the data in another tool (excel, google sheets, etc) and load that\n  var groups = {}\n  var races = {};\n  var gkey = \"raceethnicity\" // what we group by\n  var xkey = \"month\" // the x axis\n  // first we group all the events by race\n  data.forEach(function(d) {\n    if(!groups[d[gkey]]) {\n      groups[d[gkey]] = [d];\n    } else {\n      groups[d[gkey]].push(d)\n    }\n  })\n  console.log(\"groups\",groups)\n  var processed = [];\n  // we are making a \"layer\" for each race\n  allRaces.forEach(function(race,i) {\n    var xdata = {};\n    groups[race].forEach(function(event) {\n      if(!xdata[event[xkey]]) {\n        xdata[event[xkey]] = 1\n      } else {\n        xdata[event[xkey]]++;\n      }\n    })\n    console.log(\"xdata\",xdata)\n    // our \"result\" is an orered array with a count for each month\n    // (for the race we are currently working on)\n     var result = {};\n    months.forEach(function(g, j) {\n      result[\"month\"]= month\n//         result[month]= xdata[g] || 0 })\n    })\n    processed.push(result)\n  })\n  console.log(\"layer data\", processed)\n\n  var n = allRaces.length, // number of layers\n      m = processed.length, // number of samples per layer\n      stack = d3.stack().keys(allRaces);\n\n  var layers = stack(processed); // calculate the stack layout\n  layers.forEach(function(d,i) {\n        d.forEach(function(dd,j){\n            dd.race = allRaces[i]\n        })\n    });\n  console.log(\"layers\",layers)\n  \n\n  var yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); })\n  var yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });\n\n  var margin = {top: 40, right: 10, bottom: 20, left: 10},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n  var x = d3.scaleBand()\n      .domain(months)\n      .rangeRound([0, width])\n      .padding(0.08);\n\n  var y = d3.scaleLinear()\n      .domain([0, yStackMax])\n      .range([height, 0]);\n\n  var color = d3.scaleOrdinal(d3.schemeCategory20c)\n      .domain([0, n-1])\n\n  var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n\tvar xAxis = svg.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .call(d3.axisBottom(x));\n\n  var layer = svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"g\")\n      .attr(\"class\", \"layer\")\n      .style(\"fill\", function(d, i) { return color(i); });\n\n  var rect = layer.selectAll(\"rect\")\n      .data(function(d) { return d; })\n    .enter().append(\"rect\")\n//       .attr(\"x\", function(d) { return x(d.key); })\n      .attr(\"y\", height)\n      .attr(\"width\", x.bandwidth())\n      .attr(\"height\", 0);\n\n  rect.transition()\n      .delay(function(d, i) { return i * 10; })\n      .attr(\"y\", function(d) {\n//           return y(d[1]);\n      })\n      .attr(\"height\", function(d) {\n//           return y(d[0]) - y(d[1]);\n      });\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  var legend = svg.selectAll(\".legend\")\n      .data(allRaces)\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", function(d,i) { return color(i) });\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\"input\").on(\"change\", change);\n\n  var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(timeout);\n    if (this.value === \"grouped\") transitionGrouped();\n    else transitionStacked();\n  }\n\n  function transitionGrouped() {\n    y.domain([0, yGroupMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n//         .attr(\"x\", function(d, i, j) { return x(d.x) + x.bandwidth() / n * j; })\n        .attr(\"width\", x.bandwidth() / n)\n      .transition()\n//         .attr(\"y\", function(d) { return y(d.y); })\n//         .attr(\"height\", function(d) { return height - y(d.y); });\n  }\n\n  function transitionStacked() {\n    y.domain([0, yStackMax]);\n\n    rect.transition()\n        .duration(500)\n        .delay(function(d, i) { return i * 10; })\n//         .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n//         .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n      .transition()\n//         .attr(\"x\", function(d) { return x(d.x); })\n        .attr(\"width\", x.bandwidth());\n  }\n});\n</script>", "description": "Stacked-to-Grouped Police Killings v4", "created_at": "2016-09-23T17:30:15Z", "updated_at": "2016-09-24T09:22:51Z", "api": ["d3.csv", "d3.stack", "d3.max", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.axisBottom", "d3.selectAll"], "readme": "D3 Version 4 implementation of the stacked to grouped bar chart.\n\nSwitch between stacked and grouped layouts using sequenced transitions! Animations preserve object constancy and allow the user to follow the data across views. Animation design by [Heer and Robertson](http://vis.berkeley.edu/papers/animated_transitions/). Colors and data generation inspired by [Byron and Wattenberg](http://www.leebyron.com/else/streamgraph/).\n\nPolice killings data for 2015 (up to June) downloaded from [FiveThirtyEight](https://github.com/fivethirtyeight/data/tree/master/police-killings)\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3943967'>Stacked-to-Grouped Bars</a>\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/2b1446f496c3968f6ecd'>Stacked-to-Grouped Police Killings</a>\n\nforked from <a href='http://bl.ocks.org/Nastasi7/'>Nastasi7</a>'s block: <a href='http://bl.ocks.org/Nastasi7/8e4b032ce21ee9291ee8'>Stacked-to-Grouped Police Killings</a>", "uid": "mashehu_de923d763a53d523596ba81c6d1f3233"}, {"code": "<script>\n\n// use d3-hierarchy test data for treemap\n//   https://github.com/d3/d3-hierarchy/blob/master/test/treemap/index-test.js\nvar simple = {\n  \"children\": [\n    {\n      \"value\": 6\n    },\n    {\n      \"value\": 6\n    },\n    {\n      \"value\": 4\n    },\n    {\n      \"value\": 3\n    },\n    {\n      \"value\": 2\n    },\n    {\n      \"value\": 2\n    },\n    {\n      \"value\": 1\n    }\n  ]\n};\n\nvar treemap = d3.treemap().size([400, 300]).round(true),\n    root = treemap(d3.hierarchy(simple).sum(function(d){return d.value}).sort(d3.descending)),\n    nodes = root.descendants();\n  \tnodes = nodes.map(function(d){d.children=null;d.data=null;return d;}).slice(1);\n\nvar networkCenter = d3.forceCenter().x(200).y(150);\n\nvar forceX = d3.forceX(function (d) {return d.x0})\n    .strength(0.1)\n\nvar forceY = d3.forceY(function (d) {return d.y0})\n    .strength(0.1)\n\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[d.x0, d.y1],[d.x1, d.y0]];\n  })\n  .strength(1)\n  .iterations(2)\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20b)\n\nvar force = d3.forceSimulation(nodes)\n  .velocityDecay(0.6)\n  .force(\"center\", networkCenter)\n  .force(\"x\", forceX)\n  .force(\"y\", forceY)\n  .force(\"collide\", collide)\n  .on(\"tick\", updateNetwork);\n\nvar nodeEnter = d3.select(\"svg.main\")\n  .append(\"g\")\n  .selectAll(\"g.node\")\n  .data(nodes)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n\nnodeEnter.append(\"rect\")\n  .attr(\"class\", \"base\")\n  .style(\"fill-opacity\", 0.75)\n  .style(\"stroke-width\", 1)\n  .style(\"stroke-opacity\", 0.5)\n  .style(\"stroke\", function (d, i) {return d3.color(color(i)).darker(2)})\n  .style(\"fill\", function (d, i) {return d3.color(color(i)).brighter(2)})\n  .style(\"width\", function (d) {return d.x1 - d.x0})\n  .style(\"height\", function (d) {return d.y1 - d.y0})\n  .style(\"x\", function (d) {return 0})\n  .style(\"y\", function (d) {return 0})\n\nfunction updateNetwork() {\n  debugger;\n  d3.select(\"svg.main\").selectAll(\"g.node\")\n    .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"})\n}\n</script>", "description": "d3-bboxCollide Treemap", "created_at": "2016-09-23T16:23:19Z", "updated_at": "2016-09-23T17:42:58Z", "api": ["d3.treemap", "d3.hierarchy", "d3.forceCenter", "d3.forceX", "d3.forceY", "d3.bboxCollide", "d3.scaleOrdinal", "d3.forceSimulation", "d3.select", "d3.color"], "readme": "forked from <a href='http://bl.ocks.org/emeeks/'>emeeks</a>'s block: <a href='http://bl.ocks.org/emeeks/7669aa65a172bf69688ace5f6041223d'>d3-bboxCollide</a>\n\nI forked this to see how it might work with boxes assigned a size and initial position by `d3-hierarchy` treemap.  I definitely don't think I have this figured out yet.\n\n<hr/>\n\n### originial readme from [emeeks](https://github.com/emeeks)\n\n[d3-bboxCollide](https://github.com/emeeks/d3-bboxCollide) provides bounding box collision detection for `d3.forceSimulation`. This is useful for label adjustment or rectangular nodes. Each node receives a bounding box array of a top right and bottom left corner of that node relative to its x position. In the case of this dataset, that size is based on the length of the word in the source dataset.\n\nA function for calculating this array based off the data is passed into the `d3.bboxCollide` function, which is later passed as a \"collide\" constraint in your force settings.\n\n```\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[-d.value * 10, -d.value * 5],[d.value * 10, d.value * 5]]\n  })\n```\n\nThe code above creates a rectangle scaled to the size of the randomized data. The data determines the y position creating a sort of rectilinear beeswarm plot.\n", "uid": "timelyportfolio_3cc50e732e46c2f275181c939d899234"}, {"code": "<script>\n\n\nvar randomPoints = d3.range(500).map(function () {\n  return {value: Math.random()}\n})\n\nvar networkCenter = d3.forceCenter().x(250).y(250);\n\nvar forceX = d3.forceX(function (d) {return 100})\n    .strength(0.1)\n\n var forceY = d3.forceY(function (d) {return d.value * 500})\n    .strength(1)\n\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[-d.value * 10, -d.value * 5],[d.value * 10, d.value * 5]]\n  })\n  .strength(1)\n  .iterations(2)\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20b)\n\n  var force = d3.forceSimulation(randomPoints)\n    .velocityDecay(0.6)\n    .force(\"center\", networkCenter)\n    .force(\"x\", forceX)\n    .force(\"y\", forceY)\n    .force(\"collide\", collide)\n    .on(\"tick\", updateNetwork);\n\n  var nodeEnter = d3.select(\"svg.main\")\n  .append(\"g\")\n  .selectAll(\"g.node\")\n  .data(randomPoints)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n\n  nodeEnter.append(\"rect\")\n    .attr(\"class\", \"base\")\n    .style(\"fill-opacity\", 0.75)\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-opacity\", 0.5)\n    .style(\"stroke\", function (d, i) {return d3.color(color(i)).darker(2)})\n    .style(\"fill\", function (d, i) {return d3.color(color(i)).brighter(2)})\n    .style(\"width\", function (d) {return d.value * 20})\n    .style(\"height\", function (d) {return d.value * 10})\n    .style(\"x\", function (d) {return -d.value * 10})\n    .style(\"y\", function (d) {return -d.value * 5})\n\n  function updateNetwork() {\n    d3.select(\"svg.main\").selectAll(\"g.node\")\n      .attr(\"transform\", function (d) {return \"translate(\" + d.x + \",\" + d.y + \")\"})\n  }\n</script>", "description": "d3-bboxCollide", "created_at": "2016-09-23T15:59:32Z", "updated_at": "2016-09-23T17:38:08Z", "api": ["d3.range", "d3.forceCenter", "d3.forceX", "d3.forceY", "d3.bboxCollide", "d3.scaleOrdinal", "d3.forceSimulation", "d3.select", "d3.color"], "readme": "[d3-bboxCollide](https://github.com/emeeks/d3-bboxCollide) provides bounding box collision detection for `d3.forceSimulation`. This is useful for label adjustment or rectangular nodes. Each node receives a bounding box array of a top right and bottom left corner of that node relative to its x position. In the case of this dataset, that size is based on the length of the word in the source dataset.\n\nA function for calculating this array based off the data is passed into the `d3.bboxCollide` function, which is later passed as a \"collide\" constraint in your force settings.\n\n```\nvar collide = d3.bboxCollide(function (d,i) {\n    return [[-d.value * 10, -d.value * 5],[d.value * 10, d.value * 5]]\n  })\n```\n\nThe code above creates a rectangle scaled to the size of the randomized data. The data determines the y position creating a sort of rectilinear beeswarm plot.", "uid": "emeeks_7669aa65a172bf69688ace5f6041223d"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 80},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n  \nvar x = d3.scaleLinear().range([0, width]);\nvar y = d3.scaleBand().range([height, 0]);\n\nvar g = svg.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nd3.json(\"data.json\", function(error, data) {\n  \tif (error) throw error;\n  \n  \tdata.sort(function(a, b) { return a.value - b.value; });\n  \n  \tx.domain([0, d3.max(data, function(d) { return d.value; })]);\n    y.domain(data.map(function(d) { return d.area; })).padding(0.1);\n\n    g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n       \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n      \t.call(d3.axisBottom(x).ticks(5).tickFormat(function(d) { return parseInt(d / 1000); }).tickSizeInner([-height]));\n\n    g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(d3.axisLeft(y));\n\n    g.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", 0)\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", function(d) { return y(d.area); })\n        .attr(\"width\", function(d) { return x(d.value); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html((d.area) + \"<br>\" + \"\" + (d.value));\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n});\n</script>", "description": "Horizontal Bar Chart with Tooltip D3 V4", "created_at": "2016-09-23T14:22:21Z", "updated_at": "2016-09-23T23:17:05Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart shows average house prices in various areas of Liverpool, UK\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes", "uid": "alandunning_7008d0332cc28a826b37b3cf6e7bd998"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleCool()\n    .domain([0, 15]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .paddingOuter(3)\n    .paddingTop(19)\n    .paddingInner(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  var cell = svg\n    .selectAll(\".node\")\n    .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; })\n      .attr(\"class\", \"node\")\n      .each(function(d) { d.node = this; })\n      .on(\"mouseover\", hovered(true))\n      .on(\"mouseout\", hovered(false));\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) { return \"rect-\" + d.id; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .attr(\"height\", function(d) { return d.y1 - d.y0; })\n      .style(\"fill\", function(d) { return color(d.depth); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#rect-\" + d.id + \"\"; });\n\n  var label = cell.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; });\n\n  label\n    .filter(function(d) { return d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(\"\\xa0\" + format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", function(d, i) { return i ? null : 4; })\n      .attr(\"y\", 13)\n      .text(function(d) { return d; });\n\n  label\n    .filter(function(d) { return !d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 4)\n      .attr(\"y\", function(d, i) { return 13 + i * 10; })\n      .text(function(d) { return d; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n});\n\nfunction hovered(hover) {\n  return function(d) {\n    d3.selectAll(d.ancestors().map(function(d) { return d.node; }))\n        .classed(\"node--hover\", hover)\n      .select(\"rect\")\n        .attr(\"width\", function(d) { return d.x1 - d.x0 - hover; })\n        .attr(\"height\", function(d) { return d.y1 - d.y0 - hover; });\n  };\n}\n\n</script>", "description": "Nested Treemap", "created_at": "2016-09-23T03:28:48Z", "updated_at": "2016-09-23T03:33:26Z", "api": ["d3.select", "d3.format", "d3.scaleCool", "d3.stratify", "d3.treemap", "d3.csv", "d3.selectAll"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/911ad09bdead40ec0061'>Nested Treemap</a>", "uid": "geraldarthur_bbae629dc63f0b170184eb8d20615275"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar parseTime = d3.timeParse(\"%Y\")\n    bisectDate = d3.bisector(function(d) { return d.year; }).left;\n\nvar x = d3.scaleTime().range([0, width]);\nvar y = d3.scaleLinear().range([height, 0]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.year); })\n    .y(function(d) { return y(d.value); });\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    data.forEach(function(d) {\n      d.year = parseTime(d.year);\n      d.value = +d.value;\n    });\n\n    x.domain(d3.extent(data, function(d) { return d.year; }));\n    y.domain([d3.min(data, function(d) { return d.value; }) / 1.005, d3.max(data, function(d) { return d.value; }) * 1.005]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(6).tickFormat(function(d) { return parseInt(d / 1000) + \"k\"; }))\n      .append(\"text\")\n        .attr(\"class\", \"axis-title\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"fill\", \"#5D6971\")\n        .text(\"Population)\");\n\n    g.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line);\n\n    var focus = g.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n    focus.append(\"line\")\n        .attr(\"class\", \"x-hover-line hover-line\")\n        .attr(\"y1\", 0)\n        .attr(\"y2\", height);\n\n    focus.append(\"line\")\n        .attr(\"class\", \"y-hover-line hover-line\")\n        .attr(\"x1\", width)\n        .attr(\"x2\", width);\n\n    focus.append(\"circle\")\n        .attr(\"r\", 7.5);\n\n    focus.append(\"text\")\n        .attr(\"x\", 15)\n      \t.attr(\"dy\", \".31em\");\n\n    svg.append(\"rect\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"mouseover\", function() { focus.style(\"display\", null); })\n        .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"mousemove\", mousemove);\n\n    function mousemove() {\n      var x0 = x.invert(d3.mouse(this)[0]),\n          i = bisectDate(data, x0, 1),\n          d0 = data[i - 1],\n          d1 = data[i],\n          d = x0 - d0.year > d1.year - x0 ? d1 : d0;\n      focus.attr(\"transform\", \"translate(\" + x(d.year) + \",\" + y(d.value) + \")\");\n      focus.select(\"text\").text(function() { return d.value; });\n      focus.select(\".x-hover-line\").attr(\"y2\", height - y(d.value));\n      focus.select(\".y-hover-line\").attr(\"x2\", width + width);\n    }\n});\n\n</script>", "description": "Line Chart with Circle Tooltip D3 V4", "created_at": "2016-09-22T21:41:43Z", "updated_at": "2016-09-23T21:41:11Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3883245'>Line Chart</a>\n\nit uses a json file storing year values and population values. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape", "uid": "alandunning_cfb7dcd7951826b9eacd54f0647f48d3"}, {"code": "<script>\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\nvar x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n    y = d3.scaleLinear().rangeRound([height, 0]);\n  \nvar colours = d3.scaleOrdinal()\n    .range([\"#6F257F\", \"#CA0D59\"]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"data.json\", function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.area; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n      \t.attr(\"class\", \"axis axis--y\")\n      \t.call(d3.axisLeft(y).ticks(5).tickFormat(function(d) { return parseInt(d / 1000) + \"K\"; }).tickSizeInner([-width]))\n      .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"fill\", \"#5D6971\")\n        .text(\"Average House Price - ()\");\n\n    g.selectAll(\".bar\")\n      \t.data(data)\n      .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.area); })\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.value); })\n        .attr(\"fill\", function(d) { return colours(d.area); })\n        .on(\"mousemove\", function(d){\n            tooltip\n              .style(\"left\", d3.event.pageX - 50 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html((d.area) + \"<br>\" + \"\" + (d.value));\n        })\n    \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n    });\n</script>", "description": "Bar Chart with Tooltip with Tooltip D3 V4", "created_at": "2016-09-22T20:17:39Z", "updated_at": "2016-09-23T23:42:07Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This chart is based on <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>. \n\nit uses a json file storing area names and average house prices. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.json](https://github.com/d3/d3/wiki/Requests) - load and parse data\n* [d3.tickFormat](https://github.com/mbostock/d3/wiki/Formatting) - format y axis tick text\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes", "uid": "alandunning_274bf248fd0f362d64674920e85c1eb7"}, {"code": "<script>\n\nvar width = 900,\n    height = 650,\n    radius = Math.min(width, height) / 2;\n\nvar x = d3.scale.linear()\n    .range([0, 2 * Math.PI]);\n\nvar y = d3.scale.linear()\n    .range([0, radius]);\n\nvar color = d3.scale.category20c();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 10) + \")\");\n\nvar partition = d3.layout.partition()\n    .value(function(d) { return d.size; });\n\nvar arc = d3.svg.arc()\n    .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x))); })\n    .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))); })\n    .innerRadius(function(d) { return Math.max(0, y(d.y)); })\n    .outerRadius(function(d) { return Math.max(0, y(d.y + d.dy)); });\n\n//----- new: reading from csv instead of JSON\n  \n  d3.text(\"flare.csv\", function(text) {\n  var csv = d3.csv.parseRows(text);\n  var json = buildHierarchy(csv);\n    \n    console.log(\"-----------\");\n    console.log(json);\n    var data = json.slice();\n//  createVisualization(json);\n  \n    console.log(\"-----------\");\n    console.log(data);\n  } ) ;\n//  \n\n  \nd3.json(\"flare.json\", function(error, root) {\n  var g = svg.selectAll(\"g\")\n      .data(partition.nodes(root))\n    .enter().append(\"g\");\n\n  var path = g.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); })\n    .on(\"click\", click);\n\n  var text = g.append(\"text\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + computeTextRotation(d) + \")\"; })\n    .attr(\"x\", function(d) { return y(d.y); })\n    .attr(\"dx\", \"6\") // margin\n    .attr(\"dy\", \".35em\") // vertical-align\n    .text(function(d) { return d.name; });\n\n  function click(d) {\n    // fade out all text elements\n    text.transition().attr(\"opacity\", 0);\n\n    path.transition()\n      .duration(750)\n      .attrTween(\"d\", arcTween(d))\n      .each(\"end\", function(e, i) {\n          // check if the animated element's data e lies within the visible angle span given in d\n          if (e.x >= d.x && e.x < (d.x + d.dx)) {\n            // get a selection of the associated text element\n            var arcText = d3.select(this.parentNode).select(\"text\");\n            // fade in the text element and recalculate positions\n            arcText.transition().duration(750)\n              .attr(\"opacity\", 1)\n              .attr(\"transform\", function() { return \"rotate(\" + computeTextRotation(e) + \")\" })\n              .attr(\"x\", function(d) { return y(d.y); });\n          }\n      });\n  }\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n// Interpolate the scales!\nfunction arcTween(d) {\n  var xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n      yd = d3.interpolate(y.domain(), [d.y, 1]),\n      yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);\n  return function(d, i) {\n    return i\n        ? function(t) { return arc(d); }\n        : function(t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); return arc(d); };\n  };\n}\n\nfunction computeTextRotation(d) {\n  return (x(d.x + d.dx / 2) - Math.PI / 2) / Math.PI * 180;\n}\n\n  function buildHierarchy(csv) {\n  var root = {\"name\": \"root\", \"children\": []};\n  for (var i = 0; i < csv.length; i++) {\n    var sequence = csv[i][0];\n    var size = +csv[i][1];\n    var status = csv[i][2];\n    if (isNaN(size)) { // e.g. if this is a header row\n      continue;\n    }\n    var parts = sequence.split(\"-\");\n    var currentNode = root;\n    for (var j = 0; j < parts.length; j++) {\n      var children = currentNode[\"children\"];\n      var nodeName = parts[j];\n      var childNode;\n      if (j + 1 < parts.length) {\n   // Not yet at the end of the sequence; move down the tree.\n \t\t\t\tvar foundChild = false;\n \t\t\t\tfor (var k = 0; k < children.length; k++) {\n \t  \t\t\tif (children[k][\"name\"] == nodeName) {\n \t    \t\tchildNode = children[k];\n \t    \t\tfoundChild = true;\n \t    \t\tbreak;\n \t  \t}\n \t}\n  // If we don't already have a child node for this branch, create it.\n \tif (!foundChild) {\n \t  childNode = {\"name\": nodeName, \"children\": []};\n \t  children.push(childNode);\n \t}\n \tcurrentNode = childNode;\n      } else {\n \t// Reached the end of the sequence; create a leaf node.\n \tchildNode = {\"name\": nodeName, \"size\": size, \"status\": status, \"child\": foundChild};\n \tchildren.push(childNode);\n      }\n    }\n  }\n  return root;\n};\n\n  \n</script>", "description": "Zoomable Sunburst", "created_at": "2016-09-22T13:20:08Z", "updated_at": "2016-09-22T15:49:37Z", "api": ["d3.scale.linear", "d3.scale.category20c", "d3.select", "d3.layout.partition", "d3.svg.arc", "d3.text", "d3.csv.parseRows", "d3.json", "d3.interpolate"], "readme": "Zoomable Sunburst with Labels\n", "uid": "fotisz_d75dd147aa99fce499902801919d41ba"}, {"code": "<script>\n\nvar width = 700,\n    height =700,\n    radius = Math.min(width, height) / 2;\n\nvar x = d3.scale.linear()\n    .range([0, 2 * Math.PI]);\n\nvar y = d3.scale.linear()\n    .range([0, radius]);\n\n//var color = d3.scale.category10()\n  \nvar color = d3.scale.ordinal()\n    .range([\"#bfd7b7\", \"#55c9c0\", \"#02619b\", \"#b9cddb\",\"#fd9775\",\"#fbd0c4\"]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height / 2 + 10) + \")\");\n\nvar partition = d3.layout.partition()\n    .value(function(d) { return d.size; });\n\nvar arc = d3.svg.arc()\n    .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x))); })\n    .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))); })\n    .innerRadius(function(d) { return Math.max(0, y(d.y)); })\n    .outerRadius(function(d) { return Math.max(0, y(d.y + d.dy)); });\n\nd3.json(\"tree.json\", function(error, root) {\n  var g = svg.selectAll(\"g\")\n      .data(partition.nodes(root))\n    .enter().append(\"g\");\n\n  var path = g.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name); })\n    .on(\"click\", click);\n\n  var text = g.append(\"text\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + computeTextRotation(d) + \")\"; })\n    .attr(\"x\", function(d) { return y(d.y); })\n    .attr(\"dx\", \"6\") // margin\n    .attr(\"dy\", \".35em\") // vertical-align\n    .text(function(d) { return d.name; });\n\n  function click(d) {\n    // fade out all text elements\n    text.transition().attr(\"opacity\", 0);\n\n    path.transition()\n      .duration(750)\n      .attrTween(\"d\", arcTween(d))\n      .each(\"end\", function(e, i) {\n          // check if the animated element's data e lies within the visible angle span given in d\n          if (e.x >= d.x && e.x < (d.x + d.dx)) {\n            // get a selection of the associated text element\n            var arcText = d3.select(this.parentNode).select(\"text\");\n            // fade in the text element and recalculate positions\n            arcText.transition().duration(750)\n              .attr(\"opacity\", 1)\n              .attr(\"transform\", function() { return \"rotate(\" + computeTextRotation(e) + \")\" })\n              .attr(\"x\", function(d) { return y(d.y); });\n          }\n      });\n  }\n});\n\nd3.select(self.frameElement).style(\"height\", height + \"px\");\n\n// Interpolate the scales!\nfunction arcTween(d) {\n  var xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n      yd = d3.interpolate(y.domain(), [d.y, 1]),\n      yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);\n  return function(d, i) {\n    return i\n        ? function(t) { return arc(d); }\n        : function(t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); return arc(d); };\n  };\n}\n\nfunction computeTextRotation(d) {\n  return (x(d.x + d.dx / 2) - Math.PI / 2) / Math.PI * 180;\n}\n\n</script>", "description": "Depression Wheel", "created_at": "2016-09-22T13:03:36Z", "updated_at": "2016-09-22T13:03:37Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.scale.ordinal", "d3.select", "d3.layout.partition", "d3.svg.arc", "d3.json", "d3.interpolate"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/metmajer/'>metmajer</a>'s block: <a href='http://bl.ocks.org/metmajer/5480307'>Zoomable Sunburst with Labels</a>\n\n<b><i>Bibliography (by units of analysis)</i></b>\n\n<b>Molecular</b>\n\n(1)\tAnacker, Christoph et al. \u201cThe Glucocorticoid Receptor: Pivot of Depression and of Antidepressant Treatment?\u201d Psychoneuroendocrinology 36.3 (2011): 415\u2013425. PMC. Web. 8 Oct. 2015.\n-\tShows that GR involvement is tied to neurobiological correlates that underlie depression, ranging from glucocorticoid resistance to HPA-axis hyperactivity. Because GR function can be modified through antidepressants, GRs could be involved in depression.  \n\n(2)\tLee, Heon-Jin, et al. \"Oxytocin: The great facilitator of life.\" Progress in Neurobiology 88.2 (2009): 127-51. Print.\n-\tProvides a review on the role of oxytocin in non-social and social behaviors and in disorders characterized by abnormal affect regulation. \n\n(3)\tSvenningsson, Per, et al. \"Alterations in 5-HT1B Receptor Function by p11 in Depression-Like States.\" Science 311.5757 (2006): 77-80. Print.\n-\tHighlights the role of serotonin receptors (5-HT1B) and their interaction with p11, which is increased in rodent brains by antidepressants. Shows that modulation of serotonin receptors by p11 gene can change molecular adaptations involved in the depressed brain. \n\n<b>Genetic</b>\n\n(4)\tFelten, Andrea, et al. \"Genetically determined dopamine availability predicts disposition for depression.\" Brain and Behavior 1.2 (2011): 109-18. Print.\n-\tFocuses on dopaminergic gene loci related to traits of positive and negative emotionality. Shows influence of two DA gene polymorphisms on Sadness. \n\n(5)\tBufalino, Chiara, et al. \"The role of immune genes in the association between depression and inflammation: A review of recent clinical studies.\" Brain, Behavior, and Immunity 31 (2013): 31-47. Print.\n-\tShows that gene variants related to cytokines, enzymes and the serotonin pathway may increase the risk for depression and that these can influence the mechanisms by which the immune system contributes to depression.\n\n(6)\tLewis, Cathryn M., et al. \"Genome-Wide Association Study of Major Recurrent Depression in the U.K. Population.\" The American Journal of Psychiatry 167.8 (2010): 949-57. Print.\n-\tDescribes a SNP in BICC1 that was found to be associated with female depression though a GWAS done in the U.K. Most importantly, it restates that individual genes tied to depression are likely to have a minor effect but by large genetic analysis we can identify them. \n\n(7)\tThompson, Renee J., et al. \"Oxytocin receptor gene polymorphism (rs2254298) interacts with familial risk for psychopathology to predict symptoms of depression and anxiety in adolescent girls.\" Psychoneuroendocrinology 36.1 (2011): 144-47. Print.\n-\tShows that being heterozygous for the OXTR rs2254298 gene plus having a mother\u2019s history of recurrent MDD increased the risk of offspring in having depression and anxiety symptoms. These findings highlight the potential importance of the OXTR gene polymorphism in the etiology of depression and anxiety disorders.\n\n(8)\tWoody, Mary L., John E. McGeary, and Brandon E. Gibb. \"Brooding rumination and heart rate variability in women at high and low risk for depression: Group differences and moderation by COMT genotype.\" Journal of Abnormal Psychology 123.1 (2014): 61-67. Print.\n-\tShows that several COMT gene polymorphisms have been linked to a heightened amygdala reactivity and deficit in PFC function, both depression-related abnormalities. \n\n<b>Circuit</b>\n\n(9)\tAvery, Jason A., et al. \"Major Depressive Disorder Is Associated With Abnormal Interoceptive Activity and Functional Connectivity in the Insula.\" Biological Psychiatry 76.3 (2014): 258-66. Print.\n-\tHighlights that MDD is associated with abnormal interoceptive representation within the insula, which is known as a structure that regulates \u201cgut feelings.\u201d\n\n(10)\tMayberg, Helen S., et al. \"Deep Brain Stimulation for Treatment-Resistant Depression.\" Neuron 45.5 (2005): 651-60. Print.\n-\tAssociates DBS of white matter adjacent to subgenual cingulate gyrus with sustained remission of depression. Relevant in treating depression because it shows the efficacy of deep brain stimulation in a certain brain region to treat depression. \n\n(11)\tScheuerecker, Johanna, et al. \"Orbitofrontal volume reductions during emotion recognition in patients with major depression.\" Journal of Psychiatry and Neuroscience 35 (2010): 311+. Print.\n-\tProvides evidence that the orbitofrontal cortex is a key area in major depression and that structural changes in it result in alteration within the emotional circuit. \n\n(12)\tSiegle, Greg J., et al. \"Increased Amygdala and Decreased Dorsolateral Prefrontal BOLD Responses in Unipolar Depression: Related and Independent Features.\" Biological Psychiatry 61.2 (2007): 198-209. Print.\n-\tShows depression to be associated with increased limbic activity in response to emotional information and decreased DLPFC activity in response to cognitive tasks. \n\n(13)\tTreadway, Michael T., et al. \"Early Adverse Events, HPA Activity and Rostral Anterior Cingulate Volume in MDD.\" PLoS ONE 4.3 (2009): e4887. Print.\n-\tFinds the grey matter volume of the rostral ACC to correlate with cortisol and early adverse events, which hints to a relationship between ACC morphology and pathophysiology of MDD.  \n\n<b>Physiology</b>\n\n(14)\tDowlati, Yekta, et al. \"A Meta-Analysis of Cytokines in Major Depression.\" Biological Psychiatry 67.5 (2010): 446-57. Print.\n-\tReports a meta-analysis of findings that highlight the role of proinflammatory cytokines in depressed subjects compared to controls. \n\n(15)\tVreeburg, S. A., et al. \"Major depressive disorder and hypothalamic-pituitary-adrenal axis activity: Results from a large cohort study.\" Archives of General Psychiatry 66.6 (2009): 617-26. Print.\n-\tShows associations between MDD and specific HPA axis indicators, which could be an indicative of an increased biological vulnerability for depression. \n\n<b>Behavior</b>\n\n(16)\tJoormann, Jutta, Marco Dkane, and Ian H. Gotlib. \"Adaptive and Maladaptive Components of Rumination? Diagnostic Specificity and Relation to Depressive Biases.\" Behavior Therapy 37.3 (2006): 269-80. Print.\n-\tSupports the idea that rumination is composed of an adaptive reflective factor and a maladaptive brooding factor and shows a correlation between attention to sad faces and depression. \n\n(17)\tMatos, Marcela, Jos\u00e9 Pinto-Gouveia, and V\u00e2nia Costa. \"Understanding the Importance of Attachment in Shame Traumatic Memory Relation to Depression: The Impact of Emotion Regulation Processes.\" Clinical Psychology & Psychotherapy 20.2 (2013): 149-65. Print.\n-\tHighlights the relationship between shame traumatic memory and depressive symptoms and highlights that shame can be an obstacle for patients that seek recovery. Highlights the importance of scientific studies to understand how to treat depression and accelerate recovery.  \n\n(18)\tTreadway, Michael T., and David H. Zald. \"Reconsidering anhedonia in depression: Lessons from translational neuroscience.\" Neuroscience & Biobehavioral Reviews 35.3 (2011): 537-55. Print.\n-\tMoves away from the idea that anhedonia is a steady-state mood-like phenomena and reframes anhedonia in terms of decision-making. Important to understand how depression can affect essential behaviors such as decision-making.\n\n\nforked from <a href='http://bl.ocks.org/mstackmann/'>mstackmann</a>'s block: <a href='http://bl.ocks.org/mstackmann/dc337293689fc46c55d2'>Depression Wheel</a>", "uid": "fotisz_584aef7c050604d35bdfec8ede7844e5"}, {"code": "<script>\n\n// Modify margins here  \nvar margin = {top: 20, right: 80, bottom: 20, left: 80},\n    width = 1200 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "REINGOLD-TILFORD TREE", "created_at": "2016-09-22T10:07:57Z", "updated_at": "2016-09-23T15:37:15Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.", "uid": "fotisz_0ae06752972bffb47639d576f8ec1c96"}, {"code": "<script>\n\n  var width = 960,\n      height = 500,\n      canvas = document.querySelector(\"canvas\"),\n      context = canvas.getContext(\"2d\"),\n      voronoi = d3.voronoi().extent([[-1, -1],[width + 1, height + 1]]);\n\n  context.fillStyle = \"#ff3d7f\";\n  context.strokeStyle = \"#3fb8af\";\n\n  function relax(points) {\n\n    var polygons = voronoi(points).polygons(),\n        centroids = polygons.map(d3.polygonCentroid),\n        converged = points.every(function(point, i){\n          return distance(point, centroids[i]) < 1;\n        });\n\n    fade();\n\n    draw(points, polygons);\n\n    if (converged) {\n      setTimeout(reset, 750);\n    } else {\n      setTimeout(function(){\n        relax(centroids);\n      }, 50);\n    }\n\n  }\n\n  function fade() {\n    var imageData = context.getImageData(0, 0, width, height);\n\n    for (var i = 3, l = imageData.data.length; i < l; i += 4) {\n      imageData.data[i] = Math.max(0, imageData.data[i] - 10);\n    }\n\n    context.putImageData(imageData, 0, 0);\n  }\n\n  function draw(points, polygons) {\n\n    context.beginPath();\n    polygons.forEach(function(polygon){\n      context.moveTo(polygon[0][0], polygon[0][1]);\n      polygon.slice(1).forEach(function(point){\n        context.lineTo(point[0], point[1]);\n      });\n      context.lineTo(polygon[0][0], polygon[0][1]);\n    });\n    context.stroke();\n\n    context.beginPath();\n    points.forEach(function(point){\n      context.moveTo(point[0], point[1]);\n      context.arc(point[0], point[1], 2, 0, 2 * Math.PI);\n    });\n    context.fill();\n\n  }\n\n  function distance(a, b) {\n    return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));\n  }\n\n  function reset() {\n    var points = d3.range(100).map(function(d){\n      return [Math.random() * width, Math.random() * height];\n    });\n\n    context.clearRect(0, 0, width, height);\n    draw(points, voronoi(points).polygons());\n\n    setTimeout(function(){\n      relax(points);\n    }, 750);\n\n  }\n\n  reset();\n\n</script>", "description": "Voronoi relaxation", "created_at": "2016-09-22T00:48:32Z", "updated_at": "2016-09-22T00:48:35Z", "api": ["d3.voronoi", "d3.range"], "readme": "Voronoi relaxation with [Lloyd's algorithm](https://en.wikipedia.org/wiki/Lloyd's_algorithm) in d3 4.0.\n\n\nforked from <a href='http://bl.ocks.org/veltman/'>veltman</a>'s block: <a href='http://bl.ocks.org/veltman/3d1fb70e6993d4eb2eff7112c9e7bcf4'>Voronoi relaxation</a>", "uid": "wcjohnson11_de5b2c2fb198591cfbba46c8d0d52c03"}, {"code": "<script>\n\n\tvar width = Math.max(960, innerWidth),\n    \theight = Math.max(500, innerHeight);\n\n\td3.select(\"#slider\")\n\t\t.on(\"input\", function() {\n\t\t\td3.select(\"#sliderVal\").html(\"Revolutions per minute: \" + this.value)\n\t\t\trotate(this.value)\n\t\t})\n\t\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t    .attr(\"width\", width)\n\t    .attr(\"height\", height)\n\t    .append(\"g\")\n\t    \t.attr(\"transform\", \"translate(\" + width/2 + \", \" + height/2 + \")rotate(0)\")\n\n\tvar colors = [[\"#F7DB51\"],[\"#E43D1D\"],[\"#217FBE\"],[\"#3F9F44\"],[\"#7C5289\"]]\n\tvar drawColor = colors[0];\n\n\tvar palette = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"class\", \"palette\");\n\n\tpalette.selectAll(\"rect\")\n\t\t.data(colors)\n\t  .enter().append(\"rect\")\n\t\t.attr(\"width\", 40)\n\t\t.attr(\"height\", 40)\n\t\t.style(\"fill\", function(d) {return d;})\n\t\t.attr(\"transform\", function(d, i) {return \"translate(5, \" + ((i)*50 + 5) + \")\"})\n\t\t.on(\"click\", function(d) {\n\t\t\td3.select(\".selected\").classed(\"selected\", false)\n\t\t\td3.select(this).classed(\"selected\", true)\n\t\t\tdrawColor = d;\n\t\t})\n\n\tpalette.select(\"rect\").classed(\"selected\", true)\n\n\tvar platter = svg.append(\"circle\")\n\t    .attr(\"r\", width)\n\t    .attr(\"cx\", 0)\n\t    .attr(\"cy\", 0)\n\t    .style(\"fill-opacity\", 0)\n\t\t.on(\"mousedown\", function() {\n\t\t\tvar drawStyle = d3.select('input:checked').attr(\"value\");\n\t\t\tif (drawStyle == \"line\") {\n\t\t\t\tvar newShape = svg.append(\"polyline\")\n\t\t\t\t\t.attr(\"class\", \"drawn\")\n\t\t\t\t\t.style(\"stroke\", drawColor)\n\t\t\t\t\t.attr(\"points\", d3.mouse(this) + \" \")\n\t\t    \t\n\t\t    \tsvg.call(d3.drag()\n\t\t        \t.on(\"drag\", function() {\n\t\t\t\t\t\tnewShape.attr(\"points\", newShape.attr(\"points\") + \" \" + d3.mouse(this) + \" \")\n\t\t        \t}));\n\t\t\t} else if (drawStyle == \"circle\") {\n\t    \t\tsvg.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", \"drawn\")\n\t\t\t\t\t.attr(\"r\", 2)\n\t\t\t\t\t.attr(\"cx\", d3.mouse(this)[0])\n\t\t\t\t\t.attr(\"cy\", d3.mouse(this)[1])\n\t\t\t\t\t.style(\"fill\", drawColor)\n\n\t\t    \tsvg.call(d3.drag()\n\t\t        \t.on(\"drag\", function() {\n\t\t\t    \t\tsvg.append(\"circle\")\n\t\t\t\t\t\t\t.attr(\"class\", \"drawn\")\n\t\t\t\t\t\t\t.attr(\"r\", 2)\n\t\t\t\t\t\t\t.attr(\"cx\", d3.mouse(this)[0])\n\t\t\t\t\t\t\t.attr(\"cy\", d3.mouse(this)[1])\n\t\t\t\t\t\t\t.style(\"fill\", drawColor)\n\t\t        \t}));\t\n\t\t\t}\n\t\t})\n\n\tvar centerDot = svg.append(\"circle\")\n\t\t.attr(\"r\", 5)\n\t\t.attr(\"cx\", 0)\n\t\t.attr(\"cy\", 0)\n\t\t.style(\"fill\", \"#ecf0f1\")\n\n\tvar centerTriangle = svg.append(\"polygon\")\n\t\t.attr(\"points\", [[-5,0],[0,10],[5,0]])\n\t\t.style(\"fill\", \"#ecf0f1\")\n\n\trotate(120);\n\n\tfunction rotate(rpm) {\n\t\tif (rpm == 0) {\n\t\t\tsvg.interrupt()\n\t\t} else {\n\t\t\tvar newAngle = svg._groups[0][0].transform.animVal[1].angle + 120;\n\n\t\t\tsvg.transition().duration(20000/rpm).ease(d3.easeLinear)\n\t\t\t\t.attr(\"transform\", \"translate(\" + width/2 + \", \" + height/2 + \")rotate(\" + newAngle + \")\")\n\t\t\t\t.on(\"end\", function() {rotate(rpm)})\n\t\t}\n\t}\n</script>", "description": "D3 Spin Art", "created_at": "2016-09-22T00:46:30Z", "updated_at": "2016-09-22T00:46:31Z", "api": ["d3.select", "d3.mouse", "d3.drag"], "readme": "This is a sort of interactive version of <a href=\"http://bl.ocks.org/alexmacy/1e6f2b3d5c6dd475a019ffc3cf1660f6\">Rotating Shape Transitions</a>. \n\nYou can adjust the rotational speed on the left, select form the color palette on the right, and chose between drawing a line or multiple small circles.\n\nInteresting things start to happen at certain speeds, both with how the lines get drawn and how they appear.\n\nforked from <a href='http://bl.ocks.org/alexmacy/'>alexmacy</a>'s block: <a href='http://bl.ocks.org/alexmacy/055217b55a7e152790895c006f6693d1'>D3 Spin Art</a>", "uid": "wcjohnson11_6e633206def68e656f801b07a0f88187"}, {"code": "<script>    \n    var gui = new DAT.GUI({\n    height : 5 * 32 - 1\n    });\n    var width = window.innerWidth;\n    var height = 400;\n    var svg = d3.select('svg')\n    \t.attr('width', width)\n    \t.attr('height', height);\n    var defs = svg.append('defs');\n    \n    var colors = ['#F5C6DD', '#B6DEED', '#9E84C2', '#D3BEDA', '#FFE4E1'];\n    var strokeColor = '#68bff1';\n    var fillColor = '#e1fafe';\n    var strokeColor = '#83CCF5';\n    var fillColor = '#F5C6DD';\n    var radius = 50;\n    var strokeWidth = 3;\n    var angles = _.times(6, function(i) {\n      return (2 * Math.PI / 6) * i;\n    });\n    // data for the diamonds for the snowflake\n    var transforms = [\n      [[0, -38], 1.25, .25], // translate, scale, opacity\n      [[0, -26], 1, .2],\n      [[0, -16], .85, .2],\n    ];\n    \n    /*************************************\n    ** gradient\n    *************************************/\n    //Set up a horizontal gradient\n    var gradient = defs.append(\"radialGradient\")\n    \t.attr('id', 'gradient')\n    \t.attr(\"cx\", (-radius / 3) + \"px\")\n      .attr(\"cy\",  (-radius / 3) + \"px\")\n      .attr(\"r\", (radius * 2) + \"px\")\n    \t.attr(\"gradientUnits\", \"userSpaceOnUse\");\n    \n    gradient.append(\"stop\")\n      .attr(\"offset\", \"0%\")\n      .attr(\"stop-color\", fillColor);\n//     gradient.append(\"stop\")\n//       .attr(\"offset\", \"50%\")\n//       .attr(\"stop-color\", colors[3]);\n    gradient.append(\"stop\")\n      .attr(\"offset\", \"100%\")\n      .attr(\"stop-color\", strokeColor);\n\n\n    // Text\n    svg.append('text')\n    \t.attr('x', width / 2)\n    \t.attr('y', height / 2 - 125)\n    \t.attr('text-anchor', 'middle')\n    \t.attr('dy', '.35em')\n    \t.attr('fill', strokeColor)\n    \t.style('fill', 'url(#gradient)')\n    \t.text('hey claire')\n    \n    svg.append('text')\n    \t.attr('x', width / 2)\n    \t.attr('y', height / 2 + 125)\n    \t.attr('text-anchor', 'middle')\n    \t.attr('dy', '.35em')\n    \t.attr('fill', strokeColor)\n    \t.style('fill', 'url(#gradient)')\n    \t.text('send me to viSFest :))')\n  </script>", "description": "fresh block", "created_at": "2016-09-22T00:31:53Z", "updated_at": "2016-09-22T02:33:23Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "wcjohnson11_07f007b3562a956428ff4ed48c1acdf2"}, {"code": "<script>\n\nvar treeData = [\n  {\n    \"name\": \"CEO's Decision\",\n    \"parent\": \"null\",\n    \"children\": [\n      {\n        \"name\": \"Product A\",\n        \"parent\": \"CEO's Decision\",\n        \"children\": [\n          {\n            \"name\": \"Time Delay (5%)\",\n            \"children\": [\n              {\n                \"name\": \"High Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (30%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$5M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (70%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"-$0.5M\",\n                      }]\n                  }\n                ]\n              },\n              {\n                \"name\": \"Low Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (50%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$3.5M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (50%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"$1.0M\",\n                      }]\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"name\": \"No Delay (95%)\",\n            \"children\": [\n              {\n                \"name\": \"High Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (40%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$8M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (60%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"$0\",\n                      }]\n                  }\n                ]\n              },\n              {\n                \"name\": \"Low Price\",\n                \"children\": [\n                  {\n                    \"name\": \"High Sales (50%)\",\n                    \"children\": [\n                      {\n                        \"name\": \"$4.5M\",\n                      }]\n                  },\n                  {\n                    \"name\": \"Low Sales (50%)\",\n\t\t\t\t\t\t\t\t\t\t\"children\": [\n                      {\n                        \"name\": \"$1.5M\",\n                      }]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n       \"name\": \"Product B\",\n       \"parent\": \"CEO's Decision\",\n       \"children\": [\n        {\n         \"name\": \"High Sales (38%)\",\n         \"parent\": \"Product B\",\n         \"children\": [\n          {\"name\": \"$8M\",\n           \"parent\": \"High Sales (38%)\"\n          }]\n        },\n        {\n         \"name\": \"Medium Sales (12%)\",\n         \"parent\": \"Product B\",\n         \"children\": [\n          {\"name\": \"$4M\",\n           \"parent\": \"Medium Sales (12%)\"\n          }]\n        },\n        {\n         \"name\": \"Low Sales (50%)\",\n         \"parent\": \"Product B\",\n         \"children\": [\n          {\"name\": \"$0\",\n          \"parent\": \"Low Sales (50%)\"\n          }]\n        }\n       ]\n      },\n      {\n       \"name\": \"Product C\",\n       \"parent\": \"CEO's Decision\",\n       \"children\": [\n        { \"name\": \"$1M\",\n        \t\"parent\": \"Product C\"\n        }\n       ]\n      }\n    ]\n  }\n];\n\n\n// ************** Generate the tree diagram\t *****************\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n\twidth = 960 - margin.right - margin.left,\n\theight = 500 - margin.top - margin.bottom;\n\t\nvar i = 0,\n\tduration = 750,\n\troot;\n\nvar tree = d3.layout.tree()\n\t.size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n\t.projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.right + margin.left)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nroot = treeData[0];\nroot.x0 = height / 2;\nroot.y0 = 0;\n  \nupdate(root);\n\nd3.select(self.frameElement).style(\"height\", \"500px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n\t  links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 150; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n\t  .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n\t  .attr(\"class\", \"node\")\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n\t  .on(\"click\", click);\n\n  nodeEnter.append(\"square\")\n\t  .attr(\"r\", 1e-6)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n\t  .attr(\"x\", function(d) { return d.children || d._children ? -13 : 13; })\n\t  .attr(\"dy\", \".35em\")\n\t  .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n\t  .text(function(d) { return d.name; })\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"square\")\n\t  .attr(\"r\", 10)\n\t  .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n\t  .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n\t  .remove();\n\n  nodeExit.select(\"square\")\n\t  .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n\t  .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n\t  .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n\t  .attr(\"class\", \"link\")\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x0, y: source.y0};\n\t\treturn diagonal({source: o, target: o});\n\t  });\n\n  // Transition links to their new position.\n  link.transition()\n\t  .duration(duration)\n\t  .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n\t  .duration(duration)\n\t  .attr(\"d\", function(d) {\n\t\tvar o = {x: source.x, y: source.y};\n\t\treturn diagonal({source: o, target: o});\n\t  })\n\t  .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n\td.x0 = d.x;\n\td.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n\td._children = d.children;\n\td.children = null;\n  } else {\n\td.children = d._children;\n\td._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "IEOR 241 PS4-1 Decision Tree", "created_at": "2016-09-21T06:21:16Z", "updated_at": "2016-09-21T18:59:22Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select"], "readme": "This is an interactive decision tree for IEOR 241 Problem Set 4, Item 1 (Fall 2016).\n\nClick on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/8375092'>Interactive d3.js tree diagram</a>", "uid": "aldrejota_5134ffe02cd512940bb3b9e300c28acb"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nvar json = {\n \"name\": \"flare\",\n \"children\": [\n  {\n   \"name\": \"analytics\",\n   \"children\": [\n    {\n     \"name\": \"cluster\",\n     \"children\": [\n      {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n      {\"name\": \"CommunityStructure\", \"size\": 3812},\n      {\"name\": \"HierarchicalCluster\", \"size\": 6714},\n      {\"name\": \"MergeEdge\", \"size\": 743}\n     ]\n    },\n    {\n     \"name\": \"graph\",\n     \"children\": [\n      {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n      {\"name\": \"LinkDistance\", \"size\": 5731},\n      {\"name\": \"MaxFlowMinCut\", \"size\": 7840},\n      {\"name\": \"ShortestPaths\", \"size\": 5914},\n      {\"name\": \"SpanningTree\", \"size\": 3416}\n     ]\n    },\n    {\n     \"name\": \"optimization\",\n     \"children\": [\n      {\"name\": \"AspectRatioBanker\", \"size\": 7074}\n     ]\n    }\n   ]\n  },\n  {\n   \"name\": \"animate\",\n   \"children\": [\n    {\"name\": \"Easing\", \"size\": 17010},\n    {\"name\": \"FunctionSequence\", \"size\": 5842},\n    {\n     \"name\": \"interpolate\",\n     \"children\": [\n      {\"name\": \"ArrayInterpolator\", \"size\": 1983},\n      {\"name\": \"ColorInterpolator\", \"size\": 2047},\n      {\"name\": \"DateInterpolator\", \"size\": 1375},\n      {\"name\": \"Interpolator\", \"size\": 8746},\n      {\"name\": \"MatrixInterpolator\", \"size\": 2202},\n      {\"name\": \"NumberInterpolator\", \"size\": 1382},\n      {\"name\": \"ObjectInterpolator\", \"size\": 1629},\n      {\"name\": \"PointInterpolator\", \"size\": 1675},\n      {\"name\": \"RectangleInterpolator\", \"size\": 2042}\n     ]\n    },\n    {\"name\": \"ISchedulable\", \"size\": 1041},\n    {\"name\": \"Parallel\", \"size\": 5176},\n    {\"name\": \"Pause\", \"size\": 449},\n    {\"name\": \"Scheduler\", \"size\": 5593},\n    {\"name\": \"Sequence\", \"size\": 5534},\n    {\"name\": \"Transition\", \"size\": 9201},\n    {\"name\": \"Transitioner\", \"size\": 19975},\n    {\"name\": \"TransitionEvent\", \"size\": 1116},\n    {\"name\": \"Tween\", \"size\": 6006}\n   ]\n  },\n  {\n   \"name\": \"data\",\n   \"children\": [\n    {\n     \"name\": \"converters\",\n     \"children\": [\n      {\"name\": \"Converters\", \"size\": 721},\n      {\"name\": \"DelimitedTextConverter\", \"size\": 4294},\n      {\"name\": \"GraphMLConverter\", \"size\": 9800},\n      {\"name\": \"IDataConverter\", \"size\": 1314},\n      {\"name\": \"JSONConverter\", \"size\": 2220}\n     ]\n    },\n    {\"name\": \"DataField\", \"size\": 1759},\n    {\"name\": \"DataSchema\", \"size\": 2165},\n    {\"name\": \"DataSet\", \"size\": 586},\n    {\"name\": \"DataSource\", \"size\": 3331},\n    {\"name\": \"DataTable\", \"size\": 772},\n    {\"name\": \"DataUtil\", \"size\": 3322}\n   ]\n  },\n  {\n   \"name\": \"display\",\n   \"children\": [\n    {\"name\": \"DirtySprite\", \"size\": 8833},\n    {\"name\": \"LineSprite\", \"size\": 1732},\n    {\"name\": \"RectSprite\", \"size\": 3623},\n    {\"name\": \"TextSprite\", \"size\": 10066}\n   ]\n  },\n  {\n   \"name\": \"flex\",\n   \"children\": [\n    {\"name\": \"FlareVis\", \"size\": 4116}\n   ]\n  },\n  {\n   \"name\": \"physics\",\n   \"children\": [\n    {\"name\": \"DragForce\", \"size\": 1082},\n    {\"name\": \"GravityForce\", \"size\": 1336},\n    {\"name\": \"IForce\", \"size\": 319},\n    {\"name\": \"NBodyForce\", \"size\": 10498},\n    {\"name\": \"Particle\", \"size\": 2822},\n    {\"name\": \"Simulation\", \"size\": 9983},\n    {\"name\": \"Spring\", \"size\": 2213},\n    {\"name\": \"SpringForce\", \"size\": 1681}\n   ]\n  },\n  {\n   \"name\": \"query\",\n   \"children\": [\n    {\"name\": \"AggregateExpression\", \"size\": 1616},\n    {\"name\": \"And\", \"size\": 1027},\n    {\"name\": \"Arithmetic\", \"size\": 3891},\n    {\"name\": \"Average\", \"size\": 891},\n    {\"name\": \"BinaryExpression\", \"size\": 2893},\n    {\"name\": \"Comparison\", \"size\": 5103},\n    {\"name\": \"CompositeExpression\", \"size\": 3677},\n    {\"name\": \"Count\", \"size\": 781},\n    {\"name\": \"DateUtil\", \"size\": 4141},\n    {\"name\": \"Distinct\", \"size\": 933},\n    {\"name\": \"Expression\", \"size\": 5130},\n    {\"name\": \"ExpressionIterator\", \"size\": 3617},\n    {\"name\": \"Fn\", \"size\": 3240},\n    {\"name\": \"If\", \"size\": 2732},\n    {\"name\": \"IsA\", \"size\": 2039},\n    {\"name\": \"Literal\", \"size\": 1214},\n    {\"name\": \"Match\", \"size\": 3748},\n    {\"name\": \"Maximum\", \"size\": 843},\n    {\n     \"name\": \"methods\",\n     \"children\": [\n      {\"name\": \"add\", \"size\": 593},\n      {\"name\": \"and\", \"size\": 330},\n      {\"name\": \"average\", \"size\": 287},\n      {\"name\": \"count\", \"size\": 277},\n      {\"name\": \"distinct\", \"size\": 292},\n      {\"name\": \"div\", \"size\": 595},\n      {\"name\": \"eq\", \"size\": 594},\n      {\"name\": \"fn\", \"size\": 460},\n      {\"name\": \"gt\", \"size\": 603},\n      {\"name\": \"gte\", \"size\": 625},\n      {\"name\": \"iff\", \"size\": 748},\n      {\"name\": \"isa\", \"size\": 461},\n      {\"name\": \"lt\", \"size\": 597},\n      {\"name\": \"lte\", \"size\": 619},\n      {\"name\": \"max\", \"size\": 283},\n      {\"name\": \"min\", \"size\": 283},\n      {\"name\": \"mod\", \"size\": 591},\n      {\"name\": \"mul\", \"size\": 603},\n      {\"name\": \"neq\", \"size\": 599},\n      {\"name\": \"not\", \"size\": 386},\n      {\"name\": \"or\", \"size\": 323},\n      {\"name\": \"orderby\", \"size\": 307},\n      {\"name\": \"range\", \"size\": 772},\n      {\"name\": \"select\", \"size\": 296},\n      {\"name\": \"stddev\", \"size\": 363},\n      {\"name\": \"sub\", \"size\": 600},\n      {\"name\": \"sum\", \"size\": 280},\n      {\"name\": \"update\", \"size\": 307},\n      {\"name\": \"variance\", \"size\": 335},\n      {\"name\": \"where\", \"size\": 299},\n      {\"name\": \"xor\", \"size\": 354},\n      {\"name\": \"_\", \"size\": 264}\n     ]\n    },\n    {\"name\": \"Minimum\", \"size\": 843},\n    {\"name\": \"Not\", \"size\": 1554},\n    {\"name\": \"Or\", \"size\": 970},\n    {\"name\": \"Query\", \"size\": 13896},\n    {\"name\": \"Range\", \"size\": 1594},\n    {\"name\": \"StringUtil\", \"size\": 4130},\n    {\"name\": \"Sum\", \"size\": 791},\n    {\"name\": \"Variable\", \"size\": 1124},\n    {\"name\": \"Variance\", \"size\": 1876},\n    {\"name\": \"Xor\", \"size\": 1101}\n   ]\n  },\n  {\n   \"name\": \"scale\",\n   \"children\": [\n    {\"name\": \"IScaleMap\", \"size\": 2105},\n    {\"name\": \"LinearScale\", \"size\": 1316},\n    {\"name\": \"LogScale\", \"size\": 3151},\n    {\"name\": \"OrdinalScale\", \"size\": 3770},\n    {\"name\": \"QuantileScale\", \"size\": 2435},\n    {\"name\": \"QuantitativeScale\", \"size\": 4839},\n    {\"name\": \"RootScale\", \"size\": 1756},\n    {\"name\": \"Scale\", \"size\": 4268},\n    {\"name\": \"ScaleType\", \"size\": 1821},\n    {\"name\": \"TimeScale\", \"size\": 5833}\n   ]\n  },\n  {\n   \"name\": \"util\",\n   \"children\": [\n    {\"name\": \"Arrays\", \"size\": 8258},\n    {\"name\": \"Colors\", \"size\": 10001},\n    {\"name\": \"Dates\", \"size\": 8217},\n    {\"name\": \"Displays\", \"size\": 12555},\n    {\"name\": \"Filter\", \"size\": 2324},\n    {\"name\": \"Geometry\", \"size\": 10993},\n    {\n     \"name\": \"heap\",\n     \"children\": [\n      {\"name\": \"FibonacciHeap\", \"size\": 9354},\n      {\"name\": \"HeapNode\", \"size\": 1233}\n     ]\n    },\n    {\"name\": \"IEvaluable\", \"size\": 335},\n    {\"name\": \"IPredicate\", \"size\": 383},\n    {\"name\": \"IValueProxy\", \"size\": 874},\n    {\n     \"name\": \"math\",\n     \"children\": [\n      {\"name\": \"DenseMatrix\", \"size\": 3165},\n      {\"name\": \"IMatrix\", \"size\": 2815},\n      {\"name\": \"SparseMatrix\", \"size\": 3366}\n     ]\n    },\n    {\"name\": \"Maths\", \"size\": 17705},\n    {\"name\": \"Orientation\", \"size\": 1486},\n    {\n     \"name\": \"palette\",\n     \"children\": [\n      {\"name\": \"ColorPalette\", \"size\": 6367},\n      {\"name\": \"Palette\", \"size\": 1229},\n      {\"name\": \"ShapePalette\", \"size\": 2059},\n      {\"name\": \"SizePalette\", \"size\": 2291}\n     ]\n    },\n    {\"name\": \"Property\", \"size\": 5559},\n    {\"name\": \"Shapes\", \"size\": 19118},\n    {\"name\": \"Sort\", \"size\": 6887},\n    {\"name\": \"Stats\", \"size\": 6557},\n    {\"name\": \"Strings\", \"size\": 22026}\n   ]\n  },\n  {\n   \"name\": \"vis\",\n   \"children\": [\n    {\n     \"name\": \"axis\",\n     \"children\": [\n      {\"name\": \"Axes\", \"size\": 1302},\n      {\"name\": \"Axis\", \"size\": 24593},\n      {\"name\": \"AxisGridLine\", \"size\": 652},\n      {\"name\": \"AxisLabel\", \"size\": 636},\n      {\"name\": \"CartesianAxes\", \"size\": 6703}\n     ]\n    },\n    {\n     \"name\": \"controls\",\n     \"children\": [\n      {\"name\": \"AnchorControl\", \"size\": 2138},\n      {\"name\": \"ClickControl\", \"size\": 3824},\n      {\"name\": \"Control\", \"size\": 1353},\n      {\"name\": \"ControlList\", \"size\": 4665},\n      {\"name\": \"DragControl\", \"size\": 2649},\n      {\"name\": \"ExpandControl\", \"size\": 2832},\n      {\"name\": \"HoverControl\", \"size\": 4896},\n      {\"name\": \"IControl\", \"size\": 763},\n      {\"name\": \"PanZoomControl\", \"size\": 5222},\n      {\"name\": \"SelectionControl\", \"size\": 7862},\n      {\"name\": \"TooltipControl\", \"size\": 8435}\n     ]\n    },\n    {\n     \"name\": \"data\",\n     \"children\": [\n      {\"name\": \"Data\", \"size\": 20544},\n      {\"name\": \"DataList\", \"size\": 19788},\n      {\"name\": \"DataSprite\", \"size\": 10349},\n      {\"name\": \"EdgeSprite\", \"size\": 3301},\n      {\"name\": \"NodeSprite\", \"size\": 19382},\n      {\n       \"name\": \"render\",\n       \"children\": [\n        {\"name\": \"ArrowType\", \"size\": 698},\n        {\"name\": \"EdgeRenderer\", \"size\": 5569},\n        {\"name\": \"IRenderer\", \"size\": 353},\n        {\"name\": \"ShapeRenderer\", \"size\": 2247}\n       ]\n      },\n      {\"name\": \"ScaleBinding\", \"size\": 11275},\n      {\"name\": \"Tree\", \"size\": 7147},\n      {\"name\": \"TreeBuilder\", \"size\": 9930}\n     ]\n    },\n    {\n     \"name\": \"events\",\n     \"children\": [\n      {\"name\": \"DataEvent\", \"size\": 2313},\n      {\"name\": \"SelectionEvent\", \"size\": 1880},\n      {\"name\": \"TooltipEvent\", \"size\": 1701},\n      {\"name\": \"VisualizationEvent\", \"size\": 1117}\n     ]\n    },\n    {\n     \"name\": \"legend\",\n     \"children\": [\n      {\"name\": \"Legend\", \"size\": 20859},\n      {\"name\": \"LegendItem\", \"size\": 4614},\n      {\"name\": \"LegendRange\", \"size\": 10530}\n     ]\n    },\n    {\n     \"name\": \"operator\",\n     \"children\": [\n      {\n       \"name\": \"distortion\",\n       \"children\": [\n        {\"name\": \"BifocalDistortion\", \"size\": 4461},\n        {\"name\": \"Distortion\", \"size\": 6314},\n        {\"name\": \"FisheyeDistortion\", \"size\": 3444}\n       ]\n      },\n      {\n       \"name\": \"encoder\",\n       \"children\": [\n        {\"name\": \"ColorEncoder\", \"size\": 3179},\n        {\"name\": \"Encoder\", \"size\": 4060},\n        {\"name\": \"PropertyEncoder\", \"size\": 4138},\n        {\"name\": \"ShapeEncoder\", \"size\": 1690},\n        {\"name\": \"SizeEncoder\", \"size\": 1830}\n       ]\n      },\n      {\n       \"name\": \"filter\",\n       \"children\": [\n        {\"name\": \"FisheyeTreeFilter\", \"size\": 5219},\n        {\"name\": \"GraphDistanceFilter\", \"size\": 3165},\n        {\"name\": \"VisibilityFilter\", \"size\": 3509}\n       ]\n      },\n      {\"name\": \"IOperator\", \"size\": 1286},\n      {\n       \"name\": \"label\",\n       \"children\": [\n        {\"name\": \"Labeler\", \"size\": 9956},\n        {\"name\": \"RadialLabeler\", \"size\": 3899},\n        {\"name\": \"StackedAreaLabeler\", \"size\": 3202}\n       ]\n      },\n      {\n       \"name\": \"layout\",\n       \"children\": [\n        {\"name\": \"AxisLayout\", \"size\": 6725},\n        {\"name\": \"BundledEdgeRouter\", \"size\": 3727},\n        {\"name\": \"CircleLayout\", \"size\": 9317},\n        {\"name\": \"CirclePackingLayout\", \"size\": 12003},\n        {\"name\": \"DendrogramLayout\", \"size\": 4853},\n        {\"name\": \"ForceDirectedLayout\", \"size\": 8411},\n        {\"name\": \"IcicleTreeLayout\", \"size\": 4864},\n        {\"name\": \"IndentedTreeLayout\", \"size\": 3174},\n        {\"name\": \"Layout\", \"size\": 7881},\n        {\"name\": \"NodeLinkTreeLayout\", \"size\": 12870},\n        {\"name\": \"PieLayout\", \"size\": 2728},\n        {\"name\": \"RadialTreeLayout\", \"size\": 12348},\n        {\"name\": \"RandomLayout\", \"size\": 870},\n        {\"name\": \"StackedAreaLayout\", \"size\": 9121},\n        {\"name\": \"TreeMapLayout\", \"size\": 9191}\n       ]\n      },\n      {\"name\": \"Operator\", \"size\": 2490},\n      {\"name\": \"OperatorList\", \"size\": 5248},\n      {\"name\": \"OperatorSequence\", \"size\": 4190},\n      {\"name\": \"OperatorSwitch\", \"size\": 2581},\n      {\"name\": \"SortOperator\", \"size\": 2023}\n     ]\n    },\n    {\"name\": \"Visualization\", \"size\": 16540}\n   ]\n  }\n ]\n}\n\nd3.json(json, function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Decision Tree", "created_at": "2016-09-21T06:06:52Z", "updated_at": "2016-09-21T06:17:29Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a Decision Tree from IEOR 241 Problem Set 4 (Fall 2016).\n\nClick on the nodes to expand or collapse.\n\n(c) John Aldre Jota\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "aldrejota_64de9fbf541f1e87580c2d07d4eae908"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"/mbostock/raw/4063550/flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-09-21T06:02:28Z", "updated_at": "2016-09-21T06:02:28Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "aldrejota_aced8f7034616f7c4800a62e1db14cd4"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"/mbostock/raw/4063550/flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Decision Tree", "created_at": "2016-09-21T05:38:06Z", "updated_at": "2016-09-21T06:06:06Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "This is an interactive decision tree for IEOR 241 Problem Set 4 (Fall 2016). \n\nClick on the nodes to expand or collapse.\n\n(c) John Aldre Jota</br>\nIndustrial Engineering and Operations Research</br>\nUniversity of California Berkeley\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "aldrejota_4022387132063d889f82956c6c18223c"}, {"code": "<script>\n\n  var data = {\"style\":\"abstract-expressionism\"}\n  var svg = d3.select(\"svg\"),\n      margin = {top: 20, right: 20, bottom: 30, left: 40},\n      width = +svg.attr(\"width\") - margin.left - margin.right,\n      height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\n  var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n      y = d3.scaleLinear().rangeRound([height, 0]);\n\n  var g = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n  \t\t.style(\"stroke\", \"white\");\n\t\n  var tooltip = g.append(\"text\")\n\t\t.attr(\"class\", \"tooltip\")\n\t\t.style(\"opacity\", 0);\n  \n      var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n  d3.tsv(\"data.tsv\", function(d) {\n     d.score = +d.score;\n    return d;\n  }, function(error, data) {\n    if (error) throw error;\n\n    x.domain(data.map(function(d) { return d.style; }));\n    y.domain([0, d3.max(data, function(d) { return d.score; })]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--x\")\n    \t\t.attr(\"transform\", \"rotate(-90)\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis axis--y\")\n        .call(d3.axisLeft(y).ticks(10, \"%\"))\n    \t\t.style(\"stroke\", \"white\")\n    \n      .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Score\")\n    \t\t.style(\"stroke\", \"white\");\n\n    g.selectAll(\".bar\")\n      .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return x(d.style); })\n        .attr(\"y\", function(d) { return y(d.score); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function(d) { return height - y(d.score); })\n      \t.on(\"mousemove\", function(d){\n                div.style(\"left\", d3.event.pageX+10+\"px\");\n                div.style(\"top\", d3.event.pageY-25+\"px\");\n                div.style(\"display\", \"inline-block\");\n                div.html((Math.round(d.score*100))+\"%\");\n            })\n      \t.on(\"mouseout\", function(d){\n                div.style(\"display\", \"none\");\n         });\n  });\n</script>", "description": "PaintClassifer Bar Chart", "created_at": "2016-09-21T04:44:46Z", "updated_at": "2016-09-30T17:49:38Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.tsv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a modified bar chart template I used for my [Painting Classifier](https://github.com/sjesupaul/paintingClassifier) passion project at Metis. For the application accompanying my artistic style classifier, I wanted to present a visualization that accurately conveyed the match score for each category in an easily-digestible format. The bar chart was one of the two formats I went with, the other being a radar chart.   \n\nFeatures include scaling y-axis, labels for x-axis, a tooltip with value and emphasis upon hover, and easily customizable background and bar colors.\n\n---\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n", "uid": "sjesupaul_e04542b022e737661701837a471e5dbf"}, {"code": "<script>\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    var x = d3.scaleLinear()\n      .range([0, width]);\n\n    var y = d3.scaleBand()\n        .range([height, 0]);\n    \n    var xAxis = d3.axisTop(x)\n    .ticks(10, \"%\");\n\n    var yAxis = d3.axisLeft(y);\n    \n    d3.csv(\"data.csv\", function(error, data) {\n      if (error) throw error;\n\n      data.forEach(function(d) {\n        return d.frequency = +d.frequency;\n      });\n\n      data.sort(function(a, b) {\n        return a.frequency - b.frequency;\n      });\n      \n      x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n      y.domain(data.map(function(d) { return d.letter; }))\n        .paddingInner(0.1);\n      \n      svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(-3, 0)\")\n      .call(yAxis);\n\n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,-3)\")\n          .call(xAxis);\n      \n      svg.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", 0)\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", function(d) { return y(d.letter); })\n        .attr(\"width\", function(d) { return x(d.frequency); });\n    });\n    \n\n\n    \n    \n  </script>", "description": "fresh block", "created_at": "2016-09-21T03:39:09Z", "updated_at": "2016-09-21T03:39:09Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/aac65b96e29c4c2f3ab7d477887f1876'>fresh block</a>", "uid": "KaitoKid_adc477bc68e8d95e6517bf2767f4fadb"}, {"code": "<script>\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\"    + margin.top + \")\");\n    \n    var x = d3.scaleLinear()\n      .range([0, width]);\n\n\t\tvar y = d3.scaleBand()\n    .range([height, 0]);\n    \n    var xAxis = d3.axisTop(x)\n    .ticks(10, \"%\");\n\n\t\tvar yAxis = d3.axisLeft(y);\n  \t\n    d3.csv(\"data.csv\", function(error, data) {\n  \t\tif (error) throw error;\n\t\t\n    console.log(data);\n  \tdata.forEach(function(d) {\n    return d.frequency = +d.frequency;\n  \t});\n\n  \tdata.sort(function(a, b) {\n    \treturn a.frequency - b.frequency;\n  \t});\n    x.domain([0, d3.max(data, function(d) { return \t\t \t\td.frequency; })]);\n\n\t\ty.domain(data.map(function(d) { return d.letter; \t})).paddingInner(0.1);\n\t\n      svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(-3, 0)\")\n    .call(yAxis);\n\n\t\tsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,-3)\")\n    .call(xAxis);\n      \n    svg.selectAll(\".bar\")\n    .data(data)\n  .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", '-5')\n    .attr(\"height\", y.bandwidth())\n    .attr(\"y\", function(d) { return y(d.letter); })\n    .attr(\"width\", function(d) { return x(d.frequency);})\n    .attr(\"title\", function(d){ return d.frequency});\n  \n    \n  });\n    \n    \n    \n \n  </script>", "description": "d3intro", "created_at": "2016-09-21T03:29:03Z", "updated_at": "2016-09-21T07:29:22Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/a7d8587507d0c1f3ccfec8e947c8e0bd'>d3intro</a>", "uid": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8"}, {"code": "<script>\n \n  \nvar svg = d3.select(\".graphsvg\"),\n    margin = {top: 20, right: 100, bottom: 110, left: 40},\n    margin2 = {top: 430, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    height2 = +svg.attr(\"height\") - margin2.top - margin2.bottom;\n\n// var parseDate = d3.timeParse(\"%b %Y\"),\n  var parseTime = d3.timeParse(\"%Y%m%d\"),\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    bisect = d3.bisector(function(d) { return parseTime(d.x); }).left;\n\nvar x = d3.scaleTime().range([0, width]),\n    x2 = d3.scaleTime().range([0, width]),\n    x3 = d3.scaleLinear().range([0,width]),\n    y = d3.scaleLinear().range([height, 0]),\n    y2 = d3.scaleLinear().range([height2, 0])\n\t\tz = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar xAxis = d3.axisBottom(x),\n    xAxis2 = d3.axisBottom(x2),\n    yAxis = d3.axisLeft(y);\n\n\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, Infinity])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n  \n// var line = d3.line()\n// // \t\t.curve(d3.curveMonotoneX)\n//     .x(function(d) {\n//       return x(d.date);\n//     })\n//     .y(function(d) {\n//       return y(d.price);\n//     });\n  \n  \nvar line = d3.line()\n.x(function(d) {\n  return x(parseTime(d.x));\n})\n.y(function(d) {\n  return y(d.y);\n});  \n\n// var area2 = d3.area()\n//     .curve(d3.curveMonotoneX)\n//     .x(function(d) { return x2(d.date); })\n//     .y0(height2)\n//     .y1(function(d) { return y2(d.price); });\n\n  var area2 = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x2(parseTime(d.x)); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.y); });\n\n  \nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n  \n  \n  var mapsvg = d3.select(\".mapsvg\"),\n    mapwidth = +mapsvg.attr(\"width\"),\n    mapheight = +mapsvg.attr(\"height\");\n    \n  var points = [\n    {\n      date: 20111001,\n      coords: [-122.490402, 37.786453],\n      county_number: 06087,\n      county_name: 'Santa Cruz',\n      sentiment: 0\n    },\n    {\n      date: 20111112,\n      coords: [-94.5786, 39.0997],\n      county_number: 20091,\n      county_name: 'Johnson',\n      sentiment: 0\n    },\n    {\n      date: 20111200,\n      coords: [-97.3308, 32.7555],\n      county_number: 48439,\n      county_name: 'Tarrant',\n      sentiment: 0\n    }\n  ];\n//    var dots = mapsvg.selectAll(\"circle\");\n\n  d3.json(\"temperature3.json\", function(error, data) {\n//     console.log(data);\n// d3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n    \n  \n    \n    \npts = [];\n    \nfor(var i=0; i<data.length; i++){\n  tmp = data[i].values.filter(function(x) {return x.hasOwnProperty('coords'); });\n  \n  for(var j=0; j<tmp.length; j++){\n    for(var k=0; k<tmp[j].coords.length; k++){\n      pts.push({\n        \tx: tmp[j].x,\n        \tcoords: tmp[j].coords[k]\n        }        \n      );\n    }\n  }\n  \n//   pts = pts.concat(data[i].values.filter(function(x) {return x.hasOwnProperty('coords'); }));\n}\n    \n// console.log(pts);\n    \n    \n    \nvar rateById = d3.map();\n  \nvar quantize = d3.scaleQuantize()\n    .domain([0, 0.15])\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geoAlbersUsa()\n    .scale(1100)\n    .translate([mapwidth / 2, mapheight / 2]);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\n//   x.domain(d3.extent(data, function(d) { return d.date; }));\n//   y.domain([0, d3.max(data, function(d) { return d.price; })]);\n    \nx.domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);    \n  x2.domain(x.domain());\n  y2.domain(y.domain());\n    \n    \n  x3.domain([0, data[0].values.length - 1]);\n    \n  z.domain(data, function(c) { return c.id; });\n\n    \n   \n   \n    \n    \n \n//////// choropleth stuff vvvv\n  \n  \n  \n  \n\n  \n  \nd3.queue()\n    .defer(d3.json, \"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n \nfunction ready(error, us) {\n  if (error) throw error;\n\n  \n   \n  \n  mapsvg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n//       .attr(\"class\", function(d) { return quantize(rateById.get(d.id)); })\n  \t\t.attr(\"class\", function(d) {return 'q3-9'} )\n      .attr(\"d\", path);\n\n  mapsvg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n  \n  \n  mapsvg.selectAll('circle')\n   .data(pts)\n   .enter()\n   .append(\"circle\")\n   .attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n\t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n\t\t.attr(\"r\", 4)\n    .style(\"opacity\", .7)      // set the element opacity\n    .style(\"stroke\", \"#9f5045\")    // set the line colour\n    .style(\"fill\", \"#F0C059\");\n  \n  \n    context.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, x.range());\n  \n  \n}  \n  \n  \n////// choropleth stuff ^^^     \n    \n    \n\n    \n var brush = d3.brushX()\n    .extent([[0, 0], [width, height2]])\n    .on(\"brush end\", brushed);    \n    \n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n    \n    \nvar city = focus.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n    .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });    \n    \n    \n\n  context.append(\"path\")\n      .data(data)\n      .attr(\"class\", \"area\")\n//       .attr(\"d\", area2)\n  \t\t.attr('d', function(d) { return area2(d.values); });\n\n  context.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n\n  \n  \n  var circ = svg.append(\"g\")\n      .attr(\"class\", \"circ\")\n      .style(\"display\", \"none\");\n\n   \n    \nfor(var i=0;i<data.length;i++){\n              circ.append(\"g\")\n                .attr(\"class\", \"circ\"+i)\n                .append(\"circle\")\n              \t.style(\"stroke\",  z(data[i].id))\n              \t.style(\"fill\", z(data[i].id))\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"r\", 2);\n              svg.select(\".circ\"+i)\n                .append(\"text\")\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\");\n          }    \n  \n  \n\nsvg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { circ.style(\"display\", null); })\n          .on(\"mouseout\", function() { circ.style(\"display\", \"none\"); })\n          .on(\"mousemove\",  mousemove);\n  \n \n   \n    \n    \n    \n  \n//   function mousemove() {\n// //   console.log(\"in mosemove\");\n//     var x0 = x.invert(d3.mouse(this)[0]),\n//         i = bisectDate(data, x0, 1),\n//         d0 = data[i - 1],\n//         d1 = data[i],\n//         d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n//     circ.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n//     circ.select(\"text\").text(d.price);\n//   } \n    \n    \n    function mousemove() {\n              var x0 = x.invert(d3.mouse(this)[0]);\n              var series = data.map(function(e) {\n                    var i = bisect(e.values, x0, 1),\n                        d0 = e.values[i - 1],\n                        d1 = e.values[i];\n                    return x0 - d0.x > d1.x - x0 ? d1 : d0;\n                  });\n//     console.log(series);\n              for(var i=0; i<series.length;i++){\n                var selectedFocus = svg.selectAll(\".circ\"+i);\n                selectedFocus.attr(\"transform\", \"translate(\" + x(parseTime(series[i].x)) + \",\" + y(series[i].y) + \")\");\n                selectedFocus.select(\"text\").text(series[i].y);\n              }\n            }\n  \n\n//     console.log(points);\n    \n function brushed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"zoom\") return; // ignore brush-by-zoom\n  var s = d3.event.selection || x2.range();\n//    console.log(s[0],s[1], Math.floor(x3.invert(s[1])));\n  x.domain(s.map(x2.invert, x2));\n//   focus.select(\".area\").attr(\"d\", area);\n//   focus.select(\".line\").attr(\"d\", line);\n  \t\tfocus.selectAll(\".line\").attr(\"d\", function(d) { return line(d.values); });\n//   city.select(\".line\").attr(\"d\", function(d) { return line(d.values); });\n   city.select(\"text\")\n   \t\t.data(data)\n      .datum(function(d) { return {id: d.id, value: d.values[Math.floor(x3.invert(s[1]))]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; });\n  focus.select(\".axis--x\").call(xAxis);\n  svg.select(\".zoom\").call(zoom.transform, d3.zoomIdentity\n      .scale(width / (s[1] - s[0]))\n      .translate(-s[0], 0));\n   \n//    console.log(x2.invert(s[0]),x2.invert(s[1]));\n   \n   // handle map points\n   \n   var points_filter = points.filter(function(x) {return ((parseTime(x.date) >= x2.invert(s[0])) && (parseTime(x.date) <= x2.invert(s[1]))  )});\n   \n   var pts_filter = pts.filter(function(x) {return ((parseTime(x.x) >= x2.invert(s[0])) && (parseTime(x.x) <= x2.invert(s[1]))  )});\n   \n   \n//    console.log(pts_filter);\n//    console.log(parseTime(points_filter[0].date),x2.invert(s[0]));\n//    console.log(points_filter, points_filter.length);\n   \n//    mapsvg.selectAll(\"circle\")\n// \t\t.data(points_filter).enter()\n// \t\t.append(\"circle\")\n// \t\t.attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n// \t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n// \t\t.attr(\"r\", 4)\n// // \t\t.attr(\"fill\", \"red\")\n//     .style(\"opacity\", .7)      // set the element opacity\n//     .style(\"stroke\", \"#9f5045\")    // set the line colour\n//     .style(\"fill\", \"#F0C059\");\n   \n   mapsvg.selectAll('circle').remove();\n   \n   mapsvg.selectAll('circle')\n   .data(pts_filter)\n   .enter()\n   .append(\"circle\")\n   .attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n\t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n\t\t.attr(\"r\", 4)\n// \t\t.attr(\"fill\", \"red\")\n    .style(\"opacity\", .7)      // set the element opacity\n    .style(\"stroke\", \"#9f5045\")    // set the line colour\n    .style(\"fill\", \"#F0C059\");\n   \n   \n   \n   \n} \n  \n\n    \n});\n \n  \n\n  \n  \n\n  \n  \n\n\n\nfunction zoomed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"brush\") return; // ignore zoom-by-brush\n  var t = d3.event.transform;\n  x.domain(t.rescaleX(x2).domain());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".axis--x\").call(xAxis);\n  context.select(\".brush\").call(brush.move, x.range().map(t.invertX, t));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Brush & Zoom with choropleth", "created_at": "2016-09-21T03:17:47Z", "updated_at": "2016-10-08T19:19:41Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.axisBottom", "d3.axisLeft", "d3.zoom", "d3.area", "d3.line", "d3.json", "d3.csv", "d3.map", "d3.scaleQuantize", "d3.range", "d3.geoAlbersUsa", "d3.geoPath", "d3.extent", "d3.max", "d3.min", "d3.queue", "d3.brushX", "d3.mouse"], "readme": "Combining [d3-brush](https://github.com/d3/d3-brush) and [d3-zoom](https://github.com/d3/d3-zoom) to implement Focus + Context. Another approach is to [zoom to the brushed region](/mbostock/f48fcdb929a620ed97877e4678ab15e6).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/34f08d5e11952a80609169b7917d4172'>Brush & Zoom</a>\n\nforked from <a href='http://bl.ocks.org/eric-bunch/'>eric-bunch</a>'s block: <a href='http://bl.ocks.org/eric-bunch/8551a58b746bb5673d5fdf7d723b765b'>Brush & Zoom</a>", "uid": "eric-bunch_9b313af64c04c1574681316282cd1ad1"}, {"code": "<script>\n    var margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n\n\tvar width = 960 - margin.left - margin.right;\n\tvar height = 500 - margin.top - margin.bottom;\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n  var x = d3.scaleLinear()\n     .range([0, width]);\n\n\tvar y = d3.scaleBand()\n    .range([height, 0]);\n    \n  var xAxis = d3.axisTop(x)\n    .ticks(10, \"%\");\n\n\tvar yAxis = d3.axisLeft(y);\n    \n  d3.csv(\"data.csv\", function(error, data) {\n  \tif (error) throw error;\n\n  \tdata.forEach(function(d) {\n    \treturn d.frequency = +d.frequency;\n  \t});\n\n  \tdata.sort(function(a, b) {\n    \treturn a.frequency - b.frequency;\n  \t});\n    \n    x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n\t\ty.domain(data.map(function(d) { return d.letter; }))\n  \t\t.paddingInner(0.1);\n\t});\n  </script>", "description": "fresh block", "created_at": "2016-09-21T03:10:33Z", "updated_at": "2016-09-21T03:16:38Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/4be82d079f07abf6af1b9a3400b2f601'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8efdd2ae38c3087ed1b1307cd629b2db'>fresh block</a>", "uid": "christopherni_42951cb434a66e3eff916e66961a8ec0"}, {"code": "<script>\n\nvar margin = {top: 20, right: 120, bottom: 20, left: 120},\n    width = 960 - margin.right - margin.left,\n    height = 800 - margin.top - margin.bottom;\n\nvar i = 0,\n    duration = 750,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([height, width]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"flare.json\", function(error, flare) {\n  if (error) throw error;\n\n  root = flare;\n  root.x0 = height / 2;\n  root.y0 = 0;\n\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n  root.children.forEach(collapse);\n  update(root);\n});\n\nd3.select(self.frameElement).style(\"height\", \"800px\");\n\nfunction update(source) {\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse(),\n      links = tree.links(nodes);\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n  // Update the nodes\n  var node = svg.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", click);\n\n  nodeEnter.append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeEnter.append(\"text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { return d.name; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", function(d) { return d._children ? \"lightsteelblue\" : \"#fff\"; });\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n  nodeExit.select(\"circle\")\n      .attr(\"r\", 1e-6);\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\n  var link = svg.selectAll(\"path.link\")\n      .data(links, function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      });\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n}\n\n// Toggle children on click.\nfunction click(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n  update(d);\n}\n\n</script>", "description": "Collapsible Tree", "created_at": "2016-09-20T21:42:30Z", "updated_at": "2016-09-20T21:55:41Z", "api": ["d3.layout.tree", "d3.svg.diagonal", "d3.select", "d3.json"], "readme": "An interactive version of a [Reingold\u2013Tilford tree](/4339184). Click on the nodes to expand or collapse.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4339083'>Collapsible Tree</a>", "uid": "john-guerra_32be58cf91f613d45c687095bad39432"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar rateById = d3.map();\n\nvar quantize = d3.scaleQuantize()\n    .domain([0, 0.15])\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geoAlbersUsa()\n    .scale(1280)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nd3.queue()\n    .defer(d3.json, \"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantize(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n  \n  // points\n  // san francisco\n  a = [-122.490402, 37.786453];\n  // kansas city\n\tb = [-94.5786, 39.0997];\n  points = [\n    {\n      date: 20111001.0,\n      coords: [-122.490402, 37.786453]\n    },\n    {\n      date: 20111002.0,\n      coords: [-94.5786, 39.0997]\n    }\n  ];\n  \n  points_filter = points.filter(function(x) {return x.date > 20111001.0});\n  \n  \n  // add circles to svg\n    svg.selectAll(\"circle\")\n\t\t.data(points_filter).enter()\n\t\t.append(\"circle\")\n\t\t.attr(\"cx\", function (d) { return projection(d.coords)[0]; })\n\t\t.attr(\"cy\", function (d) { return projection(d.coords)[1]; })\n\t\t.attr(\"r\", 4)\n// \t\t.attr(\"fill\", \"red\")\n    .style(\"opacity\", .7)      // set the element opacity\n    .style(\"stroke\", \"#9f5045\")    // set the line colour\n    .style(\"fill\", \"#F0C059\")\n  \n  \n  \n}\n\n</script>", "description": "Choropleth", "created_at": "2016-09-20T03:33:45Z", "updated_at": "2016-09-20T13:02:51Z", "api": ["d3.select", "d3.map", "d3.scaleQuantize", "d3.range", "d3.geoAlbersUsa", "d3.geoPath", "d3.queue"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4060606'>Choropleth</a>", "uid": "eric-bunch_56537c84511bf604b8044bcbf32cddbc"}, {"code": "<script>\n//var n = 40,\n    //random = d3.randomNormal(100, 150),\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n//     .domain([1, n - 2])\n    .range([0, width]);\n  \nvar y = d3.scaleLinear()\n    //.domain([20, 180])\n    .range([height, 0]);\n  \n var maxIndex = 10;\n  var minIndex = 0;\n  var fullData;\n  var subset;\n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time;\n    d.Heart_Rate = +d.Heart_Rate;\n  });\n  subset = data.slice(minIndex, maxIndex);\n   console.log(subset);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n  y.domain([0, d3.max(data, function(d) {return d.Heart_Rate; })]).nice();\n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\tconsole.log(line)\n//   var alarm_top = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\n//   var alarm_bottom = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line)\n    .transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n  //console.log(data.Time)\n  //console.log(data)\n  //console.log(\"you are now rocking with d3\", d3);\n  function tick() {\n    // Push a new data point onto the back.\n    \n//     subset.pop();\n//     subset.push(fullData.slice(maxIndex, maxIndex+1));\n\t\tsubset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    console.log(subset);\n\n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", line)\n        .attr(\"transform\", null);\n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick);\n    // Pop the old data point off the front.\n    subset.shift();\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n  d3.select(\"g.axis--x\")\n  \t.transition()\n  \t.call(d3.axisBottom(x));\n  }\n});\n  \n</script>", "description": "FAIL", "created_at": "2016-09-20T00:32:39Z", "updated_at": "2016-09-20T00:34:07Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.csv", "d3.extent", "d3.max", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.active"], "readme": "This example is the second of three in the [Path Transitions tutorial](http://bost.ocks.org/mike/path/); see the [previous example](/mbostock/1643051) for context.\n\nThe desired pairing of numbers for path interpolation is like this:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xR, y4\n       \u2193   \u2193    \u2193   \u2193    \u2193   \u2193    \u2193   \u2193\n    M xl, y0 L x0, y1 L x1, y2 L x2, y3 L x3, y4\n\nWhere `xl` is some negative value off the left side, and `xr` is some positive value off the right side. This way, the first point \u27e8x0,y0\u27e9 is interpolated to \u27e8xl,y0\u27e9; meaning, the x-coordinate is interpolated rather than the y-coordinate, and so the path appears to slide off to the left. Likewise, the incoming point \u27e8xr,y4\u27e9 is interpolated to \u27e8x3,y4\u27e9.\n\nWhile you could write a custom interpolator and use [*transition*.attrTween](https://github.com/d3/d3-transition#transition_attrTween) to achieve this, a much simpler solution is to **interpolate the transform attribute** rather than the path. This way, the shape of the path remains static while the it translates left during the transition.\n\nImmediately prior to the transition, the path is redrawn as follows:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xr, y4\n\nThen, a transform transition is applied:\n\n    translate(0,0)\n              \u2193\n    translate(xl,0)\n\nThis causes the path to slide left. A clip path is used so the path is not visible outside of the chart body.\n\nNote that for charts with spline interpolation, you\u2019ll need to crop the visible part of the line by an extra point, so that the change in tangent is not visible; see the [next example](/mbostock/1642989).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1642874'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/33875137e4a93dc2ade33a5b2fd1599d'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/ssaleh2/'>ssaleh2</a>'s block: <a href='http://bl.ocks.org/ssaleh2/dca507b7e0c5213db00d6d85ad85c854'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/sampathweb/'>sampathweb</a>'s block: <a href='http://bl.ocks.org/sampathweb/842d0945d9002ade5fd62457357318e3'>HR_alarm</a>", "uid": "ssaleh2_7a1d58467409a9eb011be8bd6aec7866"}, {"code": "<script>\n\nvar diameter = 890,\n    format = d3.format(\",d\"),\n    color = d3.scale.category20c();\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) console.log(error);\n  if (error) throw error;\n\n  var node = svg.selectAll(\".node\")\n      .data(bubble.nodes(classes(root))\n      .filter(function(d) { return !d.children; }))\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.className + \": \" + format(d.value); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; })\n      .style(\"fill\", function(d) { return color(d.packageName); });\n\n  node.append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.className.substring(0, d.r / 3); });\n});\n\n// Returns a flattened hierarchy containing all leaf nodes under the root.\nfunction classes(root) {\n  var classes = [];\n\n  function recurse(name, node) {\n    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });\n    else classes.push({packageName: name, className: node.name, value: node.size});\n  }\n\n  recurse(null, root);\n  return {children: classes};\n}\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "Bubble Chart", "created_at": "2016-09-20T00:30:18Z", "updated_at": "2016-09-20T14:33:06Z", "api": ["d3.format", "d3.scale.category20c", "d3.layout.pack", "d3.select", "d3.json"], "readme": "Bubble charts encode data in the area of circles. Although less perceptually-accurate than bar charts, they can pack hundreds of values into a small space. Implementation based on work by [Jeff Heer](http://jheer.org/). Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063269'>Bubble Chart</a>", "uid": "scresawn_3364c4347d4059ac28b439cb234e6951"}, {"code": "<script>\n\nvar months,\n    monthKeys,\n    monthParse = d3.timeParse(\"%Y-%m\");\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 30, bottom: 30, left: 40},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleTime()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar voronoi = d3.voronoi()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); })\n    .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.value); });\n\nd3.tsv(\"unemployment.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(months));\n  y.domain([0, d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"%\"))\n    .append(\"text\")\n      .attr(\"x\", 4)\n      .attr(\"y\", 0.5)\n      .attr(\"dy\", \"0.32em\")\n      .style(\"text-anchor\", \"start\")\n      .style(\"fill\", \"#000\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Unemployment Rate\");\n\n  g.append(\"g\")\n      .attr(\"class\", \"cities\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { d.line = this; return line(d.values); });\n\n  var focus = g.append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\");\n\n  focus.append(\"circle\")\n      .attr(\"r\", 3.5);\n\n  focus.append(\"text\")\n      .attr(\"y\", -10);\n\n  var voronoiGroup = g.append(\"g\")\n      .attr(\"class\", \"voronoi\");\n\n  voronoiGroup.selectAll(\"path\")\n    .data(voronoi.polygons(d3.merge(data.map(function(d) { return d.values; }))))\n    .enter().append(\"path\")\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout);\n\n  d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function() { voronoiGroup.classed(\"voronoi--show\", this.checked); });\n\n  function mouseover(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", true);\n    d.data.city.line.parentNode.appendChild(d.data.city.line);\n    focus.attr(\"transform\", \"translate(\" + x(d.data.date) + \",\" + y(d.data.value) + \")\");\n    focus.select(\"text\").text(d.data.city.name);\n  }\n\n  function mouseout(d) {\n    d3.select(d.data.city.line).classed(\"city--hover\", false);\n    focus.attr(\"transform\", \"translate(-100,-100)\");\n  }\n});\n\nfunction type(d, i, columns) {\n  if (!months) monthKeys = columns.slice(1), months = monthKeys.map(monthParse);\n  var c = {name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, \"\"), values: null};\n  c.values = monthKeys.map(function(k, i) { return {city: c, date: months[i], value: d[k] / 100}; });\n  return c;\n}\n\n</script>", "description": "Multi-Line Voronoi", "created_at": "2016-09-20T00:28:52Z", "updated_at": "2016-09-20T00:28:52Z", "api": ["d3.timeParse", "d3.select", "d3.scaleTime", "d3.scaleLinear", "d3.voronoi", "d3.line", "d3.tsv", "d3.extent", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.merge"], "readme": "This [multi-line chart](/mbostock/3884955) uses an invisible [Voronoi tessellation](/mbostock/4060366) to handle mouseover; the closest point to the mouse on any line is highlighted. Click the checkbox in the top-right to toggle the visibility of the Voronoi overlay.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/8033015'>Multi-Line Voronoi</a>", "uid": "allenwko_e4e7af8e140d693da724b66170c8012d"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%Y%m%d\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  var cities = data.columns.slice(1).map(function(id) {\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, temperature: d[id]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(d) { return d.temperature; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.temperature; }); })\n  ]);\n\n  z.domain(cities.map(function(c) { return c.id; }));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  var city = g.selectAll(\".city\")\n    .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-09-20T00:24:45Z", "updated_at": "2016-09-20T00:24:45Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.tsv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This line chart is constructed from a TSV file storing the daily average temperatures of New York, San Francisco and Austin over the last year. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.time.format](https://github.com/mbostock/d3/wiki/Time-Formatting) - parse dates\n* [d3.time.scale](https://github.com/mbostock/d3/wiki/Time-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.scale.category10](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-category10), a [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent), [d3.min](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_min) and [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n* [d3.svg.line](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line) - display line shape\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "allenwko_4ff3e1e268f0945e6ee4d88f6d74d520"}, {"code": "<script>\n\nvar margin = {top: 20, right: 200, bottom: 100, left: 50},\n    margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\nvar bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar xScale = d3.time.scale()\n    .range([0, width]),\n\n    xScale2 = d3.time.scale()\n    .range([0, width]); // Duplicate xScale for brushing ref later\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\n// 40 Custom DDV colors \nvar color = d3.scale.ordinal().range([\"#48A36D\",  \"#56AE7C\",  \"#64B98C\", \"#72C39B\", \"#80CEAA\", \"#80CCB3\", \"#7FC9BD\", \"#7FC7C6\", \"#7EC4CF\", \"#7FBBCF\", \"#7FB1CF\", \"#80A8CE\", \"#809ECE\", \"#8897CE\", \"#8F90CD\", \"#9788CD\", \"#9E81CC\", \"#AA81C5\", \"#B681BE\", \"#C280B7\", \"#CE80B0\", \"#D3779F\", \"#D76D8F\", \"#DC647E\", \"#E05A6D\", \"#E16167\", \"#E26962\", \"#E2705C\", \"#E37756\", \"#E38457\", \"#E39158\", \"#E29D58\", \"#E2AA59\", \"#E0B15B\", \"#DFB95C\", \"#DDC05E\", \"#DBC75F\", \"#E3CF6D\", \"#EAD67C\", \"#F2DE8A\"]);  \n\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\"),\n\n    xAxis2 = d3.svg.axis() // xAxis for brush slider\n    .scale(xScale2)\n    .orient(\"bottom\");    \n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\");  \n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return xScale(d.date); })\n    .y(function(d) { return yScale(d.rating); })\n    .defined(function(d) { return d.rating; });  // Hiding line value defaults of 0 for missing data\n\nvar maxY; // Defined later to update yAxis\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom) //height + margin.top + margin.bottom\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create invisible rect for mouse tracking\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)                                    \n    .attr(\"x\", 0) \n    .attr(\"y\", 0)\n    .attr(\"id\", \"mouse-tracker\")\n    .style(\"fill\", \"white\"); \n\n//for slider part-----------------------------------------------------------------------------------\n  \nvar context = svg.append(\"g\") // Brushing context box container\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 410 + \")\")\n    .attr(\"class\", \"context\");\n\n//append clip path for lines plotted, hiding those part out of bounds\nsvg.append(\"defs\")\n  .append(\"clipPath\") \n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height); \n\n//end slider part----------------------------------------------------------------------------------- \n\nd3.tsv(\"data.tsv\", function(error, data) { \n  color.domain(d3.keys(data[0]).filter(function(key) { // Set the domain of the color ordinal scale to be all the csv headers except \"date\", matching a color to an issue\n    return key !== \"date\"; \n  }));\n\n  data.forEach(function(d) { // Make every date in the csv data a javascript date object format\n    d.date = parseDate(d.date);\n  });\n\n  var categories = color.domain().map(function(name) { // Nest the data into an array of objects with new keys\n\n    return {\n      name: name, // \"name\": the csv headers except date\n      values: data.map(function(d) { // \"values\": which has an array of the dates and ratings\n        return {\n          date: d.date, \n          rating: +(d[name]),\n          };\n      }),\n      visible: (name === \"Unemployment\" ? true : false) // \"visible\": all false except for economy which is true.\n    };\n  });\n\n  xScale.domain(d3.extent(data, function(d) { return d.date; })); // extent = highest and lowest points, domain is data, range is bouding box\n\n  yScale.domain([0, 100\n    //d3.max(categories, function(c) { return d3.max(c.values, function(v) { return v.rating; }); })\n  ]);\n\n  xScale2.domain(xScale.domain()); // Setting a duplicate xdomain for brushing reference later\n \n //for slider part-----------------------------------------------------------------------------------\n\n var brush = d3.svg.brush()//for slider bar at the bottom\n    .x(xScale2) \n    .on(\"brush\", brushed);\n\n  context.append(\"g\") // Create brushing xAxis\n      .attr(\"class\", \"x axis1\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  var contextArea = d3.svg.area() // Set attributes for area chart in brushing context graph\n    .interpolate(\"monotone\")\n    .x(function(d) { return xScale2(d.date); }) // x is scaled to xScale2\n    .y0(height2) // Bottom line begins at height2 (area chart not inverted) \n    .y1(0); // Top line of area, 0 (area chart not inverted)\n\n  //plot the rect as the bar at the bottom\n  context.append(\"path\") // Path is created using svg.area details\n    .attr(\"class\", \"area\")\n    .attr(\"d\", contextArea(categories[0].values)) // pass first categories data .values to area path generator \n    .attr(\"fill\", \"#F1F1F2\");\n    \n  //append the brush for the selection of subsection  \n  context.append(\"g\")\n    .attr(\"class\", \"x brush\")\n    .call(brush)\n    .selectAll(\"rect\")\n    .attr(\"height\", height2) // Make brush rects same height \n      .attr(\"fill\", \"#E6E7E8\");  \n  //end slider part-----------------------------------------------------------------------------------\n\n  // draw line graph\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Issues Rating\");\n\n  var issue = svg.selectAll(\".issue\")\n      .data(categories) // Select nested data and append to new svg group elements\n    .enter().append(\"g\")\n      .attr(\"class\", \"issue\");   \n\n  issue.append(\"path\")\n      .attr(\"class\", \"line\")\n      .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n      .attr(\"id\", function(d) {\n        return \"line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"); // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n      })\n      .attr(\"d\", function(d) { \n        return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n      })\n      .attr(\"clip-path\", \"url(#clip)\")//use clip path to make irrelevant part invisible\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  // draw legend\n  var legendSpace = 450 / categories.length; // 450/number of issues (ex. 40)    \n\n  issue.append(\"rect\")\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)                                    \n      .attr(\"x\", width + (margin.right/3) - 15) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace) - 8; })  // spacing\n      .attr(\"fill\",function(d) {\n        return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n      })\n      .attr(\"class\", \"legend-box\")\n\n      .on(\"click\", function(d){ // On click make d.visible \n        d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n        maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n        yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        svg.select(\".y.axis\")\n          .transition()\n          .call(yAxis);   \n\n        issue.select(\"path\")\n          .transition()\n          .attr(\"d\", function(d){\n            return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n          })\n\n        issue.select(\"rect\")\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";\n        });\n      })\n\n      .on(\"mouseover\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) { return color(d.name); });\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 2.5);  \n      })\n\n      .on(\"mouseout\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 1.5);\n      })\n      \n  issue.append(\"text\")\n      .attr(\"x\", width + (margin.right/3)) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n      .text(function(d) { return d.name; }); \n\n  // Hover line \n  var hoverLineGroup = svg.append(\"g\") \n            .attr(\"class\", \"hover-line\");\n\n  var hoverLine = hoverLineGroup // Create line with basic attributes\n        .append(\"line\")\n            .attr(\"id\", \"hover-line\")\n            .attr(\"x1\", 10).attr(\"x2\", 10) \n            .attr(\"y1\", 0).attr(\"y2\", height + 10)\n            .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n            .style(\"opacity\", 1e-6); // Set opacity to zero \n\n  var hoverDate = hoverLineGroup\n        .append('text')\n            .attr(\"class\", \"hover-text\")\n            .attr(\"y\", height - (height-40)) // hover date text position\n            .attr(\"x\", width - 150) // hover date text position\n            .style(\"fill\", \"#E6E7E8\");\n\n  var columnNames = d3.keys(data[0]) //grab the key values from your first data row\n                                     //these are the same as your column names\n                  .slice(1); //remove the first column name (`date`);\n\n  var focus = issue.select(\"g\") // create group elements to house tooltip text\n      .data(columnNames) // bind each column name date to each g element\n    .enter().append(\"g\") //create one <g> for each columnName\n      .attr(\"class\", \"focus\"); \n\n  focus.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip\")\n        .attr(\"x\", width + 20) // position tooltips  \n        .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); }); // (return (11.25/2 =) 5.625) + i * (5.625) // position tooltips       \n\n  // Add mouseover events for hover line.\n  d3.select(\"#mouse-tracker\") // select chart plot background rect #mouse-tracker\n  .on(\"mousemove\", mousemove) // on mousemove activate mousemove function defined below\n  .on(\"mouseout\", function() {\n      hoverDate\n          .text(null) // on mouseout remove text for hover date\n\n      d3.select(\"#hover-line\")\n          .style(\"opacity\", 1e-6); // On mouse out making line invisible\n  });\n\n  function mousemove() { \n      var mouse_x = d3.mouse(this)[0]; // Finding mouse x position on rect\n      var graph_x = xScale.invert(mouse_x); // \n\n      //var mouse_y = d3.mouse(this)[1]; // Finding mouse y position on rect\n      //var graph_y = yScale.invert(mouse_y);\n      //console.log(graph_x);\n      \n      var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n      \n      hoverDate.text(format(graph_x)); // scale mouse position to xScale date and format it to show month and year\n      \n      d3.select(\"#hover-line\") // select hover-line and changing attributes to mouse position\n          .attr(\"x1\", mouse_x) \n          .attr(\"x2\", mouse_x)\n          .style(\"opacity\", 1); // Making line visible\n\n      // Legend tooltips // http://www.d3noob.org/2014/07/my-favourite-tooltip-method-for-line.html\n\n      var x0 = xScale.invert(d3.mouse(this)[0]), /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n      i = bisectDate(data, x0, 1), // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n      /*It takes our data array and the date corresponding to the position of or mouse cursor and returns the index number of the data array which has a date that is higher than the cursor position.*/\n      d0 = data[i - 1],\n      d1 = data[i],\n      /*d0 is the combination of date and rating that is in the data array at the index to the left of the cursor and d1 is the combination of date and close that is in the data array at the index to the right of the cursor. In other words we now have two variables that know the value and date above and below the date that corresponds to the position of the cursor.*/\n      d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n      /*The final line in this segment declares a new array d that is represents the date and close combination that is closest to the cursor. It is using the magic JavaScript short hand for an if statement that is essentially saying if the distance between the mouse cursor and the date and close combination on the left is greater than the distance between the mouse cursor and the date and close combination on the right then d is an array of the date and close on the right of the cursor (d1). Otherwise d is an array of the date and close on the left of the cursor (d0).*/\n\n      //d is now the data row for the date closest to the mouse position\n\n      focus.select(\"text\").text(function(columnName){\n         //because you didn't explictly set any data on the <text>\n         //elements, each one inherits the data from the focus <g>\n\n         return (d[columnName]);\n      });\n  }; \n\n  //for brusher of the slider bar at the bottom\n  function brushed() {\n\n    xScale.domain(brush.empty() ? xScale2.domain() : brush.extent()); // If brush is empty then reset the Xscale domain to default, if not then make it the brush extent \n\n    svg.select(\".x.axis\") // replot xAxis with transition when brush used\n          .transition()\n          .call(xAxis);\n\n    maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n    yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n    \n    svg.select(\".y.axis\") // Redraw yAxis\n      .transition()\n      .call(yAxis);   \n\n    issue.select(\"path\") // Redraw lines based on brush xAxis scale and domain\n      .transition()\n      .attr(\"d\", function(d){\n          return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n      });\n    \n  };      \n\n}); // End Data callback function\n  \n  function findMaxY(data){  // Define function \"findMaxY\"\n    var maxYValues = data.map(function(d) { \n      if (d.visible){\n        return d3.max(d.values, function(value) { // Return max rating value\n          return value.rating; })\n      }\n    });\n    return d3.max(maxYValues);\n  }\n\n</script>", "description": "d3.js Multi-series line chart interactive", "created_at": "2016-09-20T00:11:39Z", "updated_at": "2016-09-20T00:11:40Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.max", "d3.svg.brush", "d3.svg.area", "d3.mouse"], "readme": "Please note, data will be randomised until December 2014. It is based on Ipsos MORI's long term Issues Index survey 1974 - 2014.  \n\nforked from <a href='http://bl.ocks.org/DStruths/'>DStruths</a>'s block: <a href='http://bl.ocks.org/DStruths/9c042e3a6b66048b5bd4'>d3.js Multi-series line chart interactive</a>", "uid": "allenwko_ca7e19e3979787a607747861b9b7d48a"}, {"code": "<script>\n//var n = 40,\n//     random = d3.randomNormal(100, 150);\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n\t\t.range([0, width]);\n  \nvar y = d3.scaleLinear()\n    .range([height, 0]);\n    \nvar maxIndex = 10;\nvar minIndex = 0;\nvar fullData;\nvar subset;\n\nvar formatDate = d3.timeParse(\"%Y-%m-%d %H:%M:%S\");\n  \n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time - 2200;\n    d.Heart_Rate = +d.Heart_Rate;\n    d.Alarm_LOW = +d.Alarm_LOW;\n    d.Alarm_HIGH = +d.Alarm_HIGH;\n  });\n  subset = data.slice(minIndex, maxIndex);\n  subset_top = data.slice(minIndex, maxIndex);\n  subset_bottom = data.slice(minIndex, maxIndex);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time;})).nice();\n  y.domain([20, 180]);\n  \n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\t\n  var alarm_top = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_HIGH); })\n  \t\t;\n\n  var alarm_bottom = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_LOW); });\n  \n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  \n  \n  //HEART RATE\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line)\n    .transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n  \n  \n  \n//   BOTTOM ALARM\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset_bottom)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_bottom)\n    .style(\"stroke\", \"#DD5044\")\n    .transition()\n      .duration(500)\n//       .ease(d3.easeLinear)\n      .on(\"start\", tick_bottom);\n  \n  \n//   TOP ALARM\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset_top)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_top)\n    .style(\"stroke\", \"#000\")\n//     .style(\"fill\",\"none\")\n//     .style(\"stroke-opacity\", .75)\n//     .style(\"stroke-width\", 1)\n    .transition()\n      .duration(500)\n//       .ease(d3.easeLinear)\n      .on(\"start\", tick_top);\n  \n  \n  //MOVE HEART RATE\n  function tick() {\n    // Push a new data point onto the back.\n    \n    subset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", line)\n    \t\t.attr(\"transform\", null);\n    \n    d3.select(\"g.axis--x\")\n      .transition()\n      .call(d3.axisBottom(x));\n    \n  \n//     Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick);\n    \n   \n    // Pop the old data point off the front.\n    subset.shift();\n    x.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n\n  }\n   \n//   MOVE TOP ALARM\n  function tick_top() {\n    // Push a new data point onto the back.\n    subset_top.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_top)\n    \t\t.attr(\"transform\", null);\n   \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_top);\n    \n    // Pop the old data point off the front.\n    subset_top.shift();\n\n  }\n  \n  // MOVE BOTTOM ALARM\n  function tick_bottom() {\n    // Push a new data point onto the back.\n    subset_bottom.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_bottom)\n    \t\t.attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_top)\n//         .attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_bottom)\n//         .attr(\"transform\", null);\n    \n    \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_bottom);\n    \n    // Pop the old data point off the front.\n    subset_bottom.shift();\n\n  }\n  \n});\n  \n</script>", "description": "HR_alarm_orig", "created_at": "2016-09-19T23:21:44Z", "updated_at": "2016-09-20T06:13:37Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.timeParse", "d3.csv", "d3.extent", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.active"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ssaleh2/'>ssaleh2</a>'s block: <a href='http://bl.ocks.org/ssaleh2/e1305c6421fe03112422fbef76a10106'>HR_alarm_orig</a>", "uid": "ssaleh2_3db31932ef72d3c4ae5bc3c982daa8e1"}, {"code": "<script>\n \nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\")-80,\n    height = +svg.attr(\"height\") - 260;\n\n  svg\n   .append('text')\n  .text('@recifs    visionscarto.net')\n  .attr('transform', 'translate(350,210)')\n .attr('fill','black')\n .attr('font-size','50')\n .attr('font-family','sans-serif')\n  \n  svg = svg.append('g')\n  .attr('transform', 'translate(40,260)')\n  \nvar warp = 2;\n  \nd3.interval(algo, warp * 9000);\n\nalgo();\n  \n  \nfunction algo() {\n  \nvar color = d3.scaleOrdinal().range(d3.schemeCategory20);\n\n  var n = 3000;\n  \nvar data = d3.range(n)\n    .map(function(d,i) { return [Math.random() * width, Math.random() * height, color(i), Math.random()]; });\n\n  \nvar polygon = svg.append(\"g\")\n    .attr(\"class\", \"polygons\");\n\nvar voronoi = d3.voronoi() \n    .size([width, height]);\n\nvar sites = data.sort(function(a,b) {\n  return d3.descending(a[3], b[3]);\n})\n.slice(0,n/10); \n\nsites.forEach(function(d) {\n    d[4] = true;\n})\n\nvar dots = svg\n.append('g')\n.selectAll('circle')\n.data(data)\n.enter()\n.append('circle')\n.attr('r', function(d) {return 20 * d[3] * d[3];})\n.attr('transform', function(d) { return 'translate('+ [ d[0], d[1] ] +')'; })\n.attr('fill', 'white')\n.attr('stroke', '#444')\n.attr('stroke-width', 1)\n.attr('opacity', 1) \n;\n\n  \nvar diagram = voronoi(sites);\n\ndiagram.find = function (x, y, radius){ \n  // optimization: start from most recent result  \n  var i, next = diagram.find.found || Math.floor(Math.random() * diagram.cells.length);\n  var cell = diagram.cells[next] || diagram.cells[next=0];\n  var dx = x - cell.site[0], \n      dy = y - cell.site[1],\n      dist = dx*dx + dy*dy;\n  \n \n  do { \n    cell = diagram.cells[i=next]; \n    next = null;\n    cell.halfedges.forEach(function(e) {\n      var edge = diagram.edges[e];\n      var ea = edge.left;\n      if (ea === cell.site || !ea) {\n        ea = edge.right;\n      }\n      if (ea){\n\t\t\t\tvar dx = x - ea[0],\n            dy = y - ea[1],\n            ndist = dx*dx + dy*dy;\n        if (ndist < dist){\n          dist = ndist;\n          next = ea.index;\n          return;\n        }\n      }\n    });\n\n  } while (next !== null);\n\n  diagram.find.found = i;\n  if (!radius || dist < radius * radius) return cell.site;\n};\n\npolygon.selectAll(\"path\") \n  .data(diagram.polygons())\n  .enter().append(\"path\")\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; })\n      .attr(\"fill\", function(d,i) { return sites[i][2] })\n      .attr(\"fill-opacity\", 0.001) \n.attr('stroke', 'white')\n.transition()\n.delay(warp * 2000)\n.duration(warp * 2000)\n.attr(\"stroke\", '#777')\n.attr(\"fill-opacity\", 0.2)\n\ndots.transition()\n.duration(warp * 2000)\n.attr('fill', function(d) { return d[4] ? d[2] : 'white'; })\n.attr('stroke-width', function(d) { return d[4] ? 4 : 0.5; })\n;\n\ndots\n.transition()\n.delay(warp * 1000)\n.attr('opacity', function(d) { return d[4] ? 1 : 0.4; }); \n\ndots\n.transition()\n.delay(warp * 4000)\n.duration(warp * 2000)\n.attr('fill', function(d) {\n  var found = diagram.find(d[0],d[1]);\n  return sites[found.index][2];\n})\n.attr('opacity', 1); \n\n  \npolygon\n.attr('opacity', 1)\n.transition().delay(warp * 6000)\n.duration(warp * 2000)\n.attr('opacity', 0.1)\n.remove();\n\n  svg.selectAll('g')\n  .attr('opacity', 1)\n  .transition()\n  .delay(warp * 8000 + 900)\n  .duration(100)\n  .attr('opacity', 0)\n    .remove();\n\n}\n  \n\n\n</script>", "description": "Voronoi binning (animated for Badgetron) [UNLISTED]", "created_at": "2016-09-19T19:40:02Z", "updated_at": "2016-09-19T22:02:36Z", "api": ["d3.select", "d3.interval", "d3.scaleOrdinal", "d3.range", "d3.voronoi", "d3.descending"], "readme": "Group data points around the largest points.\n\nThe recipe is as follows:\n\n1) sort data points according to their sizes (here size = `d[3]`)\n\n2) use top 10% points as Voronoi sites\n\n3) bin all data points according to their Voronoi cell, using <a href='http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc'>voronoi.find()</a>. The binning is rendered by using the Voronoi sites's color.\n\n\nSee also the <a href=\"//bl.ocks.org/Fil/7c3c41f1524dcf2caea54290cceddf0a\">static version</a> \u2014 much less code to parse!\n\nOriginal work by Philippe Rivi\u00e8re for d3-voronoi ([issue 17](https://github.com/d3/d3-voronoi/issues/17)).\n\n\nforked from <a href='http://bl.ocks.org/Fil/'>Fil</a>'s block: <a href='http://bl.ocks.org/Fil/959437d834f4a01eb4d1023cdd107554'>Voronoi binning (animated)</a>", "uid": "Fil_007e6492155fc18906fb184cc486913b"}, {"code": "<script>\n//var n = 40,\n    //random = d3.randomNormal(100, 150),\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n//     .domain([1, n - 2])\n    .range([0, width]);\n  \nvar y = d3.scaleLinear()\n    //.domain([20, 180])\n    .range([height, 0]);\n  \n var maxIndex = 10;\n  var minIndex = 0;\n  var fullData;\n  var subset;\n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time;\n    d.Heart_Rate = +d.Heart_Rate;\n  });\n  subset = data.slice(minIndex, maxIndex);\n   console.log(subset);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n  y.domain([0, d3.max(data, function(d) {return d.Heart_Rate; })]).nice();\n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\tconsole.log(line)\n//   var alarm_top = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\n//   var alarm_bottom = d3.line()\n//       .x(function(d, i) { return x(i+10); })\n//       .y(function(d, i) { return y(d+10); });\n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line)\n    .transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n  //console.log(data.Time)\n  //console.log(data)\n  //console.log(\"you are now rocking with d3\", d3);\n  function tick() {\n    // Push a new data point onto the back.\n    \n//     subset.pop();\n//     subset.push(fullData.slice(maxIndex, maxIndex+1));\n\t\tsubset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    console.log(subset);\n\n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", line)\n        .attr(\"transform\", null);\n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick);\n    // Pop the old data point off the front.\n    subset.shift();\n\tx.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n  d3.select(\"g.axis--x\")\n  \t.transition()\n  \t.call(d3.axisBottom(x));\n  }\n});\n  \n</script>", "description": "HR_alarm", "created_at": "2016-09-19T17:45:14Z", "updated_at": "2016-09-19T18:27:07Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.csv", "d3.extent", "d3.max", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.active"], "readme": "This example is the second of three in the [Path Transitions tutorial](http://bost.ocks.org/mike/path/); see the [previous example](/mbostock/1643051) for context.\n\nThe desired pairing of numbers for path interpolation is like this:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xR, y4\n       \u2193   \u2193    \u2193   \u2193    \u2193   \u2193    \u2193   \u2193\n    M xl, y0 L x0, y1 L x1, y2 L x2, y3 L x3, y4\n\nWhere `xl` is some negative value off the left side, and `xr` is some positive value off the right side. This way, the first point \u27e8x0,y0\u27e9 is interpolated to \u27e8xl,y0\u27e9; meaning, the x-coordinate is interpolated rather than the y-coordinate, and so the path appears to slide off to the left. Likewise, the incoming point \u27e8xr,y4\u27e9 is interpolated to \u27e8x3,y4\u27e9.\n\nWhile you could write a custom interpolator and use [*transition*.attrTween](https://github.com/d3/d3-transition#transition_attrTween) to achieve this, a much simpler solution is to **interpolate the transform attribute** rather than the path. This way, the shape of the path remains static while the it translates left during the transition.\n\nImmediately prior to the transition, the path is redrawn as follows:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xr, y4\n\nThen, a transform transition is applied:\n\n    translate(0,0)\n              \u2193\n    translate(xl,0)\n\nThis causes the path to slide left. A clip path is used so the path is not visible outside of the chart body.\n\nNote that for charts with spline interpolation, you\u2019ll need to crop the visible part of the line by an extra point, so that the change in tangent is not visible; see the [next example](/mbostock/1642989).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1642874'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/33875137e4a93dc2ade33a5b2fd1599d'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/ssaleh2/'>ssaleh2</a>'s block: <a href='http://bl.ocks.org/ssaleh2/dca507b7e0c5213db00d6d85ad85c854'>HR_alarm</a>", "uid": "sampathweb_842d0945d9002ade5fd62457357318e3"}, {"code": "<script>\n//var n = 40,\n//     random = d3.randomNormal(100, 150);\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n\t\t.range([0, width]);\n  \nvar y = d3.scaleLinear()\n    .range([height, 0]);\n    \nvar maxIndex = 10;\nvar minIndex = 0;\nvar fullData;\nvar subset;\n\nvar formatDate = d3.timeParse(\"%Y-%m-%d %H:%M:%S\");\n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time - 2200;\n    d.Heart_Rate = +d.Heart_Rate;\n    d.Alarm_LOW = +d.Alarm_LOW;\n    d.Alarm_HIGH = +d.Alarm_HIGH;\n  });\n  subset = data.slice(minIndex, maxIndex);\n  subset_top = data.slice(minIndex, maxIndex);\n  subset_bottom = data.slice(minIndex, maxIndex);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time;})).nice();\n  y.domain([20, 180]);\n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\t\n  var alarm_top = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_HIGH); })\n  \t\t;\n\n  var alarm_bottom = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_LOW); });\n  \n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  \n  var group = g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n\n  \n//   HR = group.append(\"path\")\n//     .datum(subset)\n//       .attr(\"class\", \"line\")\n//   \t\t.attr(\"d\", line);\n  \n//   alarm_top = group.append(\"path\")\n//       .datum(subset_bottom)\n//       .attr(\"class\", \"line\")\n//   \t\t.attr(\"d\", alarm_top)\n//     .style(\"stroke\", \"#DD5044\");\n  \n//   alarm_bottom = group.append(\"path\")\n//       .datum(subset_bottom)\n//       .attr(\"class\", \"line\")\n//   \t\t.attr(\"d\", alarm_bottom)\n//     .style(\"stroke\", \"#000\");\n  \n//   group\n//     \t.transition()\n//       .duration(500)\n//       .ease(d3.easeLinear)\n//       .on(\"start\", tick);\n\n  //HEART RATE\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line)\n    .transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n  \n  \n//   BOTTOM ALARM\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset_bottom)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_bottom)\n    .style(\"stroke\", \"#DD5044\")\n    .transition()\n      .duration(2000)\n//       .ease(d3.easeLinear)\n      .on(\"start\", tick_bottom);\n  \n  \n//   TOP ALARM\n  g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n    .append(\"path\")\n      .datum(subset_top)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_top)\n    .style(\"stroke\", \"#000\")\n//     .style(\"fill\",\"none\")\n//     .style(\"stroke-opacity\", .75)\n//     .style(\"stroke-width\", 1)\n    .transition()\n      .duration(2000)\n//       .ease(d3.easeLinear)\n      .on(\"start\", tick_top);\n  \n  //MOVE HEART RATE\n  function tick() {\n    // Push a new data point onto the back.\n    \n    subset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n \n    // Redraw the line.\n    d3.selectAll(this)\n        .attr(\"d\", line)\n    \t\t.attr(\"transform\", null);\n    \n    d3.selectAll(\"g.axis--x\")\n      .transition()\n      .call(d3.axisBottom(x));\n    \n  \n    Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick);\n    \n    // Pop the old data point off the front.\n    subset.shift();\n    x.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n\n  }\n   \n//   MOVE TOP ALARM\n  function tick_top() {\n    // Push a new data point onto the back.\n    subset_top.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_top)\n    \t\t.attr(\"transform\", null);\n   \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_top);\n    \n    // Pop the old data point off the front.\n    subset_top.shift();\n\n  }\n  \n  // MOVE BOTTOM ALARM\n  function tick_bottom() {\n    // Push a new data point onto the back.\n    subset_bottom.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_bottom)\n    \t\t.attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_top)\n//         .attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_bottom)\n//         .attr(\"transform\", null);\n    \n    \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_bottom);\n    \n    // Pop the old data point off the front.\n    subset_bottom.shift();\n\n  }\n  \n});\n  \n</script>", "description": "fresh block", "created_at": "2016-09-18T21:48:47Z", "updated_at": "2016-09-19T23:01:47Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.timeParse", "d3.csv", "d3.extent", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.selectAll", "d3.active"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "ssaleh2_e1305c6421fe03112422fbef76a10106"}, {"code": "<script>\n\n\tvar width = Math.max(960, innerWidth),\n    \theight = Math.max(500, innerHeight);\n\n\td3.select(\"#slider\")\n\t\t.on(\"input\", function() {\n\t\t\td3.select(\"#sliderVal\").html(\"Revolutions per minute: \" + this.value)\n\t\t\trotate(this.value)\n\t\t})\n\t\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t    .attr(\"width\", width)\n\t    .attr(\"height\", height)\n\t    .append(\"g\")\n\t    \t.attr(\"transform\", \"translate(\" + width/2 + \", \" + height/2 + \")rotate(0)\")\n\n\tvar colors = [[\"#F7DB51\"],[\"#E43D1D\"],[\"#217FBE\"],[\"#3F9F44\"],[\"#7C5289\"]]\n\tvar drawColor = colors[0];\n\n\tvar palette = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"class\", \"palette\");\n\n\tpalette.selectAll(\"rect\")\n\t\t.data(colors)\n\t  .enter().append(\"rect\")\n\t\t.attr(\"width\", 40)\n\t\t.attr(\"height\", 40)\n\t\t.style(\"fill\", function(d) {return d;})\n\t\t.attr(\"transform\", function(d, i) {return \"translate(5, \" + ((i)*50 + 5) + \")\"})\n\t\t.on(\"click\", function(d) {\n\t\t\td3.select(\".selected\").classed(\"selected\", false)\n\t\t\td3.select(this).classed(\"selected\", true)\n\t\t\tdrawColor = d;\n\t\t})\n\n\tpalette.select(\"rect\").classed(\"selected\", true)\n\n\tvar platter = svg.append(\"circle\")\n\t    .attr(\"r\", width)\n\t    .attr(\"cx\", 0)\n\t    .attr(\"cy\", 0)\n\t    .style(\"fill-opacity\", 0)\n\t\t.on(\"mousedown\", function() {\n\t\t\tvar drawStyle = d3.select('input:checked').attr(\"value\");\n\t\t\tif (drawStyle == \"line\") {\n\t\t\t\tvar newShape = svg.append(\"polyline\")\n\t\t\t\t\t.attr(\"class\", \"drawn\")\n\t\t\t\t\t.style(\"stroke\", drawColor)\n\t\t\t\t\t.attr(\"points\", d3.mouse(this) + \" \")\n\t\t    \t\n\t\t    \tsvg.call(d3.drag()\n\t\t        \t.on(\"drag\", function() {\n\t\t\t\t\t\tnewShape.attr(\"points\", newShape.attr(\"points\") + \" \" + d3.mouse(this) + \" \")\n\t\t        \t}));\n\t\t\t} else if (drawStyle == \"circle\") {\n\t    \t\tsvg.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", \"drawn\")\n\t\t\t\t\t.attr(\"r\", 2)\n\t\t\t\t\t.attr(\"cx\", d3.mouse(this)[0])\n\t\t\t\t\t.attr(\"cy\", d3.mouse(this)[1])\n\t\t\t\t\t.style(\"fill\", drawColor)\n\n\t\t    \tsvg.call(d3.drag()\n\t\t        \t.on(\"drag\", function() {\n\t\t\t    \t\tsvg.append(\"circle\")\n\t\t\t\t\t\t\t.attr(\"class\", \"drawn\")\n\t\t\t\t\t\t\t.attr(\"r\", 2)\n\t\t\t\t\t\t\t.attr(\"cx\", d3.mouse(this)[0])\n\t\t\t\t\t\t\t.attr(\"cy\", d3.mouse(this)[1])\n\t\t\t\t\t\t\t.style(\"fill\", drawColor)\n\t\t        \t}));\t\n\t\t\t}\n\t\t})\n\n\tvar centerDot = svg.append(\"circle\")\n\t\t.attr(\"r\", 5)\n\t\t.attr(\"cx\", 0)\n\t\t.attr(\"cy\", 0)\n\t\t.style(\"fill\", \"#ecf0f1\")\n\n\tvar centerTriangle = svg.append(\"polygon\")\n\t\t.attr(\"points\", [[-5,0],[0,10],[5,0]])\n\t\t.style(\"fill\", \"#ecf0f1\")\n\n\trotate(120);\n\n\tfunction rotate(rpm) {\n\t\tif (rpm == 0) {\n\t\t\tsvg.interrupt()\n\t\t} else {\n\t\t\tvar newAngle = svg._groups[0][0].transform.animVal[1].angle + 120;\n\n\t\t\tsvg.transition().duration(20000/rpm).ease(d3.easeLinear)\n\t\t\t\t.attr(\"transform\", \"translate(\" + width/2 + \", \" + height/2 + \")rotate(\" + newAngle + \")\")\n\t\t\t\t.on(\"end\", function() {rotate(rpm)})\n\t\t}\n\t}\n</script>", "description": "D3 Spin Art", "created_at": "2016-09-18T21:43:27Z", "updated_at": "2016-09-18T21:43:45Z", "api": ["d3.select", "d3.mouse", "d3.drag"], "readme": "This is a sort of interactive version of <a href=\"http://bl.ocks.org/alexmacy/1e6f2b3d5c6dd475a019ffc3cf1660f6\">Rotating Shape Transitions</a>. \n\nYou can adjust the rotational speed on the left, select form the color palette on the right, and chose between drawing a line or multiple small circles.\n\nInteresting things start to happen at certain speeds, both with how the lines get drawn and how they appear.", "uid": "alexmacy_055217b55a7e152790895c006f6693d1"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 20, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%m-%d-%Y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width - 50]);\n\nvar y = d3.scale.sqrt()\n    .range([height, 0]);\n\nvar r = d3.scale.sqrt()\n    .range([5, 30]);\n\nvar color = d3.scale.quantile()\n    .range([\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(6, 0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .tickSize(30, 0)\n    .orient(\"left\");\n\nvar diag = d3.svg.diagonal()\n    .source(function(d) { return {x: x(d.start),y: y(0)}; })\n    .target(function(d) { return {x: x(d.end),y: y(d.duration)}; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.start = parseDate(d.start);\n    d.end = parseDate(d.end);\n    d.duration = (d.end - d.start)/(1000*24*60*60*31*12);\n    d.batDeath = +d.batDeath;\n  });\n\n  data.sort(function(a,b) { return b.batDeath - a.batDeath; });\n  \n  x.domain([d3.min(data, function(d) { return d.start; }),d3.max(data, function(d) { return d.end; })]);\n  y.domain([0,d3.max(data, function(d) { return d.duration; })]);\n  r.domain(d3.extent(data, function(d) { return d.batDeath; }));\n  color.domain(d3.extent(data, function(d) { return d.batDeath; }));\n\n  var war = svg.selectAll(\".war\")\n    .data(data)\n  .enter().append(\"g\")\n    .attr(\"class\",\"war\");\n\n  war.append(\"path\")\n      .attr(\"class\",\"curves\")\n      .attr(\"d\", diag)\n      .attr(\"fill\",\"none\")\n      .attr(\"stroke-width\",1)\n      .attr(\"stroke\",function(d) { return color(d.batDeath); });\n  \n  war.append(\"circle\")\n      .attr(\"class\",\"circle\")\n      .attr(\"r\", function(d) { return r(d.batDeath); })\n      .attr(\"cx\",function(d) { return x(d.end)})\n      .attr(\"cy\",function(d) { return y(d.duration)})\n      .attr(\"fill\",function(d) { return color(d.batDeath)})\n      .attr(\"stroke\",\"white\")\n      .attr(\"stroke-width\",1.5);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \",0)\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 10)\n      .attr(\"transform\", \"rotate(-90)\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-weight\",\"bold\")\n      .text(\"Duration (years)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n});\n\n</script>", "description": "Wars II", "created_at": "2016-09-18T20:36:27Z", "updated_at": "2016-09-18T20:36:27Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.sqrt", "d3.scale.quantile", "d3.svg.axis", "d3.svg.diagonal", "d3.select", "d3.csv", "d3.min", "d3.max", "d3.extent"], "readme": "Wars dataset from [COW](http://www.correlatesofwar.org/). Each path represents a war and associated circles represent the number of victims. Inspired from Valentina D'Efilippo's [work](http://poppyfield.org/) \n\nforked from <a href='http://bl.ocks.org/bricedev/'>bricedev</a>'s block: <a href='http://bl.ocks.org/bricedev/6aee19737bf0ad910b04'>Wars II</a>\n\nforked from <a href='http://bl.ocks.org/Yonet/'>Yonet</a>'s block: <a href='http://bl.ocks.org/Yonet/63bc13eec44dd1ca63e4fb5227341a52'>Wars II</a>", "uid": "Yonet_bda57674c399deca81981f1b03c5e7cf"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 20, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar parseDate = d3.time.format(\"%m-%d-%Y\").parse;\n\nvar x = d3.time.scale()\n    .range([0, width - 50]);\n\nvar y = d3.scale.sqrt()\n    .range([height, 0]);\n\nvar r = d3.scale.sqrt()\n    .range([5, 30]);\n\nvar color = d3.scale.quantile()\n    .range([\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .tickSize(6, 0)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .tickSize(30, 0)\n    .orient(\"left\");\n\nvar diag = d3.svg.diagonal()\n    .source(function(d) { return {x: x(d.start),y: y(0)}; })\n    .target(function(d) { return {x: x(d.end),y: y(d.duration)}; });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.start = parseDate(d.start);\n    d.end = parseDate(d.end);\n    d.duration = (d.end - d.start)/(1000*24*60*60*31*12);\n    d.batDeath = +d.batDeath;\n  });\n\n  data.sort(function(a,b) { return b.batDeath - a.batDeath; });\n  \n  x.domain([d3.min(data, function(d) { return d.start; }),d3.max(data, function(d) { return d.end; })]);\n  y.domain([0,d3.max(data, function(d) { return d.duration; })]);\n  r.domain(d3.extent(data, function(d) { return d.batDeath; }));\n  color.domain(d3.extent(data, function(d) { return d.batDeath; }));\n\n  var war = svg.selectAll(\".war\")\n    .data(data)\n  .enter().append(\"g\")\n    .attr(\"class\",\"war\");\n\n  war.append(\"path\")\n      .attr(\"class\",\"curves\")\n      .attr(\"d\", diag)\n      .attr(\"fill\",\"none\")\n      .attr(\"stroke-width\",1)\n      .attr(\"stroke\",function(d) { return color(d.batDeath); });\n  \n  war.append(\"circle\")\n      .attr(\"class\",\"circle\")\n      .attr(\"r\", function(d) { return r(d.batDeath); })\n      .attr(\"cx\",function(d) { return x(d.end)})\n      .attr(\"cy\",function(d) { return y(d.duration)})\n      .attr(\"fill\",function(d) { return color(d.batDeath)})\n      .attr(\"stroke\",\"white\")\n      .attr(\"stroke-width\",1.5);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + width + \",0)\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 10)\n      .attr(\"transform\", \"rotate(-90)\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-weight\",\"bold\")\n      .text(\"Duration (years)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n});\n\n</script>", "description": "Wars II", "created_at": "2016-09-18T20:35:51Z", "updated_at": "2016-09-18T20:35:51Z", "api": ["d3.time.format", "d3.time.scale", "d3.scale.sqrt", "d3.scale.quantile", "d3.svg.axis", "d3.svg.diagonal", "d3.select", "d3.csv", "d3.min", "d3.max", "d3.extent"], "readme": "Wars dataset from [COW](http://www.correlatesofwar.org/). Each path represents a war and associated circles represent the number of victims. Inspired from Valentina D'Efilippo's [work](http://poppyfield.org/) \n\nforked from <a href='http://bl.ocks.org/bricedev/'>bricedev</a>'s block: <a href='http://bl.ocks.org/bricedev/6aee19737bf0ad910b04'>Wars II</a>", "uid": "Yonet_63bc13eec44dd1ca63e4fb5227341a52"}, {"code": "<script>\n     function randomData(samples) {\n         var data = [],\n             random = d3.randomNormal();\n\n         for (i = 0; i < samples; i++) {\n             data.push({\n                 x: random(),\n                 y: random()\n             });\n         }\n         return data;\n     }\n\n     var ds = randomData(300);\n \n     var margin = { top: 20, right: 20, bottom: 30, left: 50 };\n     width = 800 - margin.left - margin.right,\n     height = 400 - margin.top - margin.bottom;\n     \n     var x = d3.scaleLinear()\n         .range([0, width]);\n\n     var y = d3.scaleLinear()\n         .range([height, 0]);\n\n     var xAxis = d3.axisBottom(x).ticks(12),\n         yAxis = d3.axisLeft(y).ticks(12 * height / width);\n\n     var svg = d3.select(\"#g1\").append(\"svg\")\n              .attr(\"id\", \"g1_svg\")\n              .attr(\"data-margin-right\", margin.right)\n              .attr(\"data-margin-left\", margin.left)\n              .attr(\"data-margin-top\", margin.top)\n              .attr(\"data-margin-bottom\", margin.bottom)\n              .attr(\"width\", width + margin.left + margin.right)\n              .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n              .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n     x.domain(d3.extent(ds, function (d) { return d.x; })).nice();\n     y.domain(d3.extent(ds, function (d) { return d.y; })).nice();\n\n     svg.append(\"g\")\n     .attr(\"class\", \"x axis \")\n     .attr('id', \"axis--x\")\n     .attr(\"transform\", \"translate(0,\" + height + \")\")\n     .call(xAxis);\n\n     svg.append(\"g\")\n         .attr(\"class\", \"y axis\")\n         .attr('id', \"axis--y\")\n         .call(yAxis);\n\n     var dot = svg.selectAll(\".dot\")\n         .data(ds)\n       .enter().append(\"circle\")\n         .attr(\"class\", \"dot\")\n         .attr(\"r\", 5)\n         .attr(\"cx\", function (d) { return x(d.x); })\n         .attr(\"cy\", function (d) { return y(d.y); })\n         .attr(\"opacity\", 0.7)\n         .style(\"fill\", \"#4292c6\");\n\n     svg.append(\"g\")\n      .call(d3.brush().extent([[0, 0], [width, height]]).on(\"brush\", brushed).on(\"end\", brushended));\n\n\n     function brushed() {\n         var s = d3.event.selection,\n             x0 = s[0][0],\n             y0 = s[0][1],\n             dx = s[1][0] - x0,\n             dy = s[1][1] - y0;\n         // console.log(s);\n\n         svg.selectAll('circle')\n            .style(\"fill\", function (d) {\n                if (x(d.x) >= x0 && x(d.x) <= x0 + dx && y(d.y) >= y0 && y(d.y) <= y0 + dy)\n                     { return \"#ec7014\"; }\n                else { return \"#4292c6\"; }\n            });\n     }\n\n     function brushended() {\n         if (!d3.event.selection) {\n             svg.selectAll('circle')\n               .transition()\n               .duration(150)\n               .ease(d3.easeLinear)\n               .style(\"fill\", \"#4292c6\");\n         }\n     }\n   \n</script>", "description": "Scatter plot brushing", "created_at": "2016-09-18T18:56:58Z", "updated_at": "2016-09-18T19:52:53Z", "api": ["d3.randomNormal", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.extent", "d3.brush"], "readme": "Scatter plot brushing.", "uid": "EfratVil_0e542f5fc426065dd1d4b6daaa345a9f"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 100, bottom: 110, left: 40},\n    margin2 = {top: 430, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    height2 = +svg.attr(\"height\") - margin2.top - margin2.bottom;\n\n// var parseDate = d3.timeParse(\"%b %Y\"),\n  var parseTime = d3.timeParse(\"%Y%m%d\"),\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    bisect = d3.bisector(function(d) { return parseTime(d.x); }).left;\n\nvar x = d3.scaleTime().range([0, width]),\n    x2 = d3.scaleTime().range([0, width]),\n    x3 = d3.scaleLinear().range([0,width]),\n    y = d3.scaleLinear().range([height, 0]),\n    y2 = d3.scaleLinear().range([height2, 0])\n\t\tz = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar xAxis = d3.axisBottom(x),\n    xAxis2 = d3.axisBottom(x2),\n    yAxis = d3.axisLeft(y);\n\n\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, Infinity])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n  \n// var line = d3.line()\n// // \t\t.curve(d3.curveMonotoneX)\n//     .x(function(d) {\n//       return x(d.date);\n//     })\n//     .y(function(d) {\n//       return y(d.price);\n//     });\n  \n  \nvar line = d3.line()\n.x(function(d) {\n  return x(parseTime(d.x));\n})\n.y(function(d) {\n  return y(d.y);\n});  \n\n// var area2 = d3.area()\n//     .curve(d3.curveMonotoneX)\n//     .x(function(d) { return x2(d.date); })\n//     .y0(height2)\n//     .y1(function(d) { return y2(d.price); });\n\n  var area2 = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x2(parseTime(d.x)); })\n    .y0(height2)\n    .y1(function(d) { return y2(d.y); });\n\n  \nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n  d3.json(\"temperature3.json\", function(error, data) {\n//     console.log(data);\n// d3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n\n//   x.domain(d3.extent(data, function(d) { return d.date; }));\n//   y.domain([0, d3.max(data, function(d) { return d.price; })]);\n    \nx.domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);    \n  x2.domain(x.domain());\n  y2.domain(y.domain());\n    \n    \n  x3.domain([0, data[0].values.length - 1]);\n    \n  z.domain(data, function(c) { return c.id; });\n\n    \n    var brush = d3.brushX()\n    .extent([[0, 0], [width, height2]])\n    .on(\"brush end\", brushed);\n    \n    \n//   focus.append(\"path\")\n//       .datum(data)\n//       .attr(\"class\", \"area\")\n//       .attr(\"d\", area);\n  \n//   focus.append(\"path\")\n//   \t\t  .datum(data)\n//   \t\t\t.attr(\"class\", \"line\")\n//   \t\t\t.attr(\"d\", line)\n//   \t\t\t.style(\"stroke\", \"black\");\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n    \n    \nvar city = focus.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n    .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });    \n    \n    \n\n  context.append(\"path\")\n      .data(data)\n      .attr(\"class\", \"area\")\n//       .attr(\"d\", area2)\n  \t\t.attr('d', function(d) { return area2(d.values); });\n\n  context.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, x.range());\n\n//   svg.append(\"rect\")\n//       .attr(\"class\", \"zoom\")\n//       .attr(\"width\", width)\n//       .attr(\"height\", height)\n//       .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//       .call(zoom);\n  \n  \n  var circ = svg.append(\"g\")\n      .attr(\"class\", \"circ\")\n      .style(\"display\", \"none\");\n\n//   circ.append(\"circle\")\n//   \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//       .attr(\"r\", 2.5)\n//   \t\t.style(\"fill\", \"black\");\n\n//   circ.append(\"text\")\n//   \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//       .attr(\"x\", 9)\n//       .attr(\"dy\", \".35em\");\n    \n    \n    \nfor(var i=0;i<data.length;i++){\n              circ.append(\"g\")\n                .attr(\"class\", \"circ\"+i)\n                .append(\"circle\")\n              \t.style(\"stroke\",  z(data[i].id))\n              \t.style(\"fill\", z(data[i].id))\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"r\", 2);\n              svg.select(\".circ\"+i)\n                .append(\"text\")\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\");\n          }    \n  \n  \n\nsvg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { circ.style(\"display\", null); })\n          .on(\"mouseout\", function() { circ.style(\"display\", \"none\"); })\n          .on(\"mousemove\",  mousemove);\n  \n \n  \n//   function mousemove() {\n// //   console.log(\"in mosemove\");\n//     var x0 = x.invert(d3.mouse(this)[0]),\n//         i = bisectDate(data, x0, 1),\n//         d0 = data[i - 1],\n//         d1 = data[i],\n//         d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n//     circ.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\");\n//     circ.select(\"text\").text(d.price);\n//   } \n    \n    \n    function mousemove() {\n              var x0 = x.invert(d3.mouse(this)[0]);\n              var series = data.map(function(e) {\n                    var i = bisect(e.values, x0, 1),\n                        d0 = e.values[i - 1],\n                        d1 = e.values[i];\n                    return x0 - d0.x > d1.x - x0 ? d1 : d0;\n                  });\n//     console.log(series);\n              for(var i=0; i<series.length;i++){\n                var selectedFocus = svg.selectAll(\".circ\"+i);\n                selectedFocus.attr(\"transform\", \"translate(\" + x(parseTime(series[i].x)) + \",\" + y(series[i].y) + \")\");\n                selectedFocus.select(\"text\").text(series[i].y);\n              }\n            }\n  \n function brushed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"zoom\") return; // ignore brush-by-zoom\n  var s = d3.event.selection || x2.range();\n//    console.log(s[0],s[1], Math.floor(x3.invert(s[1])));\n  x.domain(s.map(x2.invert, x2));\n//   focus.select(\".area\").attr(\"d\", area);\n//   focus.select(\".line\").attr(\"d\", line);\n  \t\tfocus.selectAll(\".line\").attr(\"d\", function(d) { return line(d.values); });\n//   city.select(\".line\").attr(\"d\", function(d) { return line(d.values); });\n   city.select(\"text\")\n   \t\t.data(data)\n      .datum(function(d) { return {id: d.id, value: d.values[Math.floor(x3.invert(s[1]))]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; });\n  focus.select(\".axis--x\").call(xAxis);\n  svg.select(\".zoom\").call(zoom.transform, d3.zoomIdentity\n      .scale(width / (s[1] - s[0]))\n      .translate(-s[0], 0));\n} \n  \n\n    \n});\n \n  \n\n  \n  \n\n  \n  \n\n\n\nfunction zoomed() {\n  if (d3.event.sourceEvent && d3.event.sourceEvent.type === \"brush\") return; // ignore zoom-by-brush\n  var t = d3.event.transform;\n  x.domain(t.rescaleX(x2).domain());\n  focus.select(\".area\").attr(\"d\", area);\n  focus.select(\".line\").attr(\"d\", line);\n  focus.select(\".axis--x\").call(xAxis);\n  context.select(\".brush\").call(brush.move, x.range().map(t.invertX, t));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Brush & Zoom", "created_at": "2016-09-18T16:19:02Z", "updated_at": "2016-09-20T04:22:14Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.axisBottom", "d3.axisLeft", "d3.zoom", "d3.area", "d3.line", "d3.json", "d3.csv", "d3.extent", "d3.max", "d3.min", "d3.brushX", "d3.mouse"], "readme": "Combining [d3-brush](https://github.com/d3/d3-brush) and [d3-zoom](https://github.com/d3/d3-zoom) to implement Focus + Context. Another approach is to [zoom to the brushed region](/mbostock/f48fcdb929a620ed97877e4678ab15e6).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/34f08d5e11952a80609169b7917d4172'>Brush & Zoom</a>", "uid": "eric-bunch_8551a58b746bb5673d5fdf7d723b765b"}, {"code": "<script>\n \nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal().range(d3.schemeCategory20);\n\nvar n = 4000;\n  \nvar data = d3.range(n)\n    .map(function(d,i) { return [Math.random() * width, Math.random() * height, color(i), Math.random()]; });\n\nvar voronoi = d3.voronoi() \n    .size([width, height]);\n\nvar sites = data.sort(function(a,b) {\n  return d3.descending(a[3], b[3]);\n})\n.slice(0,n/10); \n\nvar diagram = voronoi(sites);\ndiagram.find = find;\n\n\nd3.select('svg')\n.append('g')\n.selectAll('circle')\n.data(data)\n.enter()\n.append('circle')\n.attr('r', function(d) {return 10 * d[3] * d[3];})\n.attr('transform', function(d) { return 'translate('+ [ d[0], d[1] ] +')'; })\n.attr('fill', function(d) {\n  var found = diagram.find(d[0],d[1]);\n  return sites[found.index][2];\n});\n\n\nfunction find (x, y, radius){ \n  // optimization: start from most recent result  \n  var i, next = diagram.find.found || Math.floor(Math.random() * diagram.cells.length);\n  var cell = diagram.cells[next] || diagram.cells[next=0];\n  var dx = x - cell.site[0], \n      dy = y - cell.site[1],\n      dist = dx*dx + dy*dy;\n  \n \n  do { \n    cell = diagram.cells[i=next]; \n    next = null;\n    cell.halfedges.forEach(function(e) {\n      var edge = diagram.edges[e];\n      var ea = edge.left;\n      if (ea === cell.site || !ea) {\n        ea = edge.right;\n      }\n      if (ea){\n\t\t\t\tvar dx = x - ea[0],\n            dy = y - ea[1],\n            ndist = dx*dx + dy*dy;\n        if (ndist < dist){\n          dist = ndist;\n          next = ea.index;\n          return;\n        }\n      }\n    });\n\n  } while (next !== null);\n\n  diagram.find.found = i;\n  if (!radius || dist < radius * radius) return cell.site;\n}\n\n</script>", "description": "Voronoi binning", "created_at": "2016-09-18T14:12:58Z", "updated_at": "2016-09-21T15:34:03Z", "api": ["d3.select", "d3.scaleOrdinal", "d3.range", "d3.voronoi", "d3.descending"], "readme": "Use <a href='http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc'>Voronoi.find()</a> to group data by the Voronoi cells of the top 10% data points.\n\n\nSee also the <a href='//bl.ocks.org/Fil/959437d834f4a01eb4d1023cdd107554'>animated version</a>.\n\nOriginal work by Philippe Rivi\u00e8re for d3-voronoi ([issue 17](https://github.com/d3/d3-voronoi/issues/17)).\n\n", "uid": "Fil_7c3c41f1524dcf2caea54290cceddf0a"}, {"code": "<script>\n \nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\n  \nd3.interval(algo, 9000);\n\nalgo();\n  \n  \nfunction algo() {\n  \nvar color = d3.scaleOrdinal().range(d3.schemeCategory20);\n\n  var n = 4000;\n  \nvar data = d3.range(n)\n    .map(function(d,i) { return [Math.random() * width, Math.random() * height, color(i), Math.random()]; });\n\n  \nvar polygon = svg.append(\"g\")\n    .attr(\"class\", \"polygons\");\n\nvar voronoi = d3.voronoi() \n    .size([width, height]);\n\nvar sites = data.sort(function(a,b) {\n  return d3.descending(a[3], b[3]);\n})\n.slice(0,n/10); \n\nsites.forEach(function(d) {\n    d[4] = true;\n})\n\nvar dots = d3.select('svg')\n.append('g')\n.selectAll('circle')\n.data(data)\n.enter()\n.append('circle')\n.attr('r', function(d) {return 10 * d[3] * d[3];})\n.attr('transform', function(d) { return 'translate('+ [ d[0], d[1] ] +')'; })\n.attr('fill', 'white')\n.attr('stroke', '#444')\n.attr('stroke-width', 1)\n.attr('opacity', 1) \n;\n\n  \nvar diagram = voronoi(sites);\n\ndiagram.find = function (x, y, radius){ \n  // optimization: start from most recent result  \n  var i, next = diagram.find.found || Math.floor(Math.random() * diagram.cells.length);\n  var cell = diagram.cells[next] || diagram.cells[next=0];\n  var dx = x - cell.site[0], \n      dy = y - cell.site[1],\n      dist = dx*dx + dy*dy;\n  \n \n  do { \n    cell = diagram.cells[i=next]; \n    next = null;\n    cell.halfedges.forEach(function(e) {\n      var edge = diagram.edges[e];\n      var ea = edge.left;\n      if (ea === cell.site || !ea) {\n        ea = edge.right;\n      }\n      if (ea){\n\t\t\t\tvar dx = x - ea[0],\n            dy = y - ea[1],\n            ndist = dx*dx + dy*dy;\n        if (ndist < dist){\n          dist = ndist;\n          next = ea.index;\n          return;\n        }\n      }\n    });\n\n  } while (next !== null);\n\n  diagram.find.found = i;\n  if (!radius || dist < radius * radius) return cell.site;\n};\n\npolygon.selectAll(\"path\") \n  .data(diagram.polygons())\n  .enter().append(\"path\")\n      .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; })\n      .attr(\"fill\", function(d,i) { return sites[i][2] })\n      .attr(\"fill-opacity\", 0.001) \n.attr('stroke', 'white')\n.transition()\n.delay(2000)\n.duration(2000)\n.attr(\"stroke\", '#777')\n.attr(\"fill-opacity\", 0.2)\n\ndots.transition()\n.duration(2000)\n.attr('fill', function(d) { return d[4] ? d[2] : 'white'; })\n.attr('stroke-width', function(d) { return d[4] ? 4 : 0.5; })\n;\n\ndots\n.transition()\n.delay(1000)\n.attr('opacity', function(d) { return d[4] ? 1 : 0.4; }); \n\ndots\n.transition()\n.delay(4000)\n.duration(2000)\n.attr('fill', function(d) {\n  var found = diagram.find(d[0],d[1]);\n  return sites[found.index][2];\n})\n.attr('opacity', 1); \n\n  \npolygon\n.attr('opacity', 1)\n.transition().delay(6000)\n.duration(2000)\n.attr('opacity', 0.1)\n.remove();\n\n  svg.selectAll('g')\n  .attr('opacity', 1)\n  .transition()\n  .delay(8000)\n  .duration(500)\n  .attr('opacity', 0)\n    .remove();\n\n}\n  \n\n\n</script>", "description": "Voronoi binning (animated)", "created_at": "2016-09-18T12:58:01Z", "updated_at": "2016-09-20T03:15:38Z", "api": ["d3.select", "d3.interval", "d3.scaleOrdinal", "d3.range", "d3.voronoi", "d3.descending"], "readme": "Group data points around the largest points.\n\nThe recipe is as follows:\n\n1) sort data points according to their sizes (here size = `d[3]`)\n\n2) use top 10% points as Voronoi sites\n\n3) bin all data points according to their Voronoi cell, using <a href='http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc'>voronoi.find()</a>. The binning is rendered by using the Voronoi sites's color.\n\n\nSee also the <a href=\"//bl.ocks.org/Fil/7c3c41f1524dcf2caea54290cceddf0a\">static version</a> \u2014 much less code to parse!\n\nOriginal work by Philippe Rivi\u00e8re for d3-voronoi ([issue 17](https://github.com/d3/d3-voronoi/issues/17)).\n", "uid": "Fil_959437d834f4a01eb4d1023cdd107554"}, {"code": "<script>\n$(function () {\n  // helpful: https://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n  // palettes: https://designschool.canva.com/blog/website-color-schemes/\n\n  // Global Variables\n  var gWidth = $('#gameboard').width(),   // Width of the svg palette\n    gHeight = $('#gameboard').height(),   // Height of the svg palette\n    radius = (Math.min(gWidth, gHeight) / 2) - 10,\n    quote = [\"John 3:16-17\", \"For[g1063] God[g2316] so[g3779] loved[g25] the world[g2889], that[g5620] he gave[g1325] his[g846] only begotten[g3439] Son[g5207], that[g2443] whosoever[g3956] believeth[g4100] in[g1519] him[g846] should[g622] not[g3361] perish[g622], but[g235] have[g2192] everlasting[g166] life[g2222]. For[g1063] God[g2316] sent[g649] not[g3756] his[g846] Son[g5207] into[g1519] the world[g2889] to[g2443] condemn[g2919] the world[g2889]; but[g235] that[g2443] the world[g2889] through[g1223] him[g846] might be saved[g4982].\"],\n    mode = $('.mode:checked').val(), // Linear or grouped, based on radio buttons\n    svg = d3.select(\"svg\").append(\"g\").attr(\"transform\", \"translate(\" + gWidth / 2 + \",\" + (gHeight / 2) + \")\"),\n    color_palettes = [['#4abdac', '#fc4a1a', '#f7b733'], ['#f03b20', '#feb24c', '#ffeda0'], ['#007849', '#0375b4', '#ffce00'], ['#373737', '#dcd0c0', '#c0b283'], ['#e37222', '#07889b', '#eeaa7b'], ['#062f4f', '#813772', '#b82601'], ['#565656', '#76323f', '#c09f80']];\n\n  // D3 Global Variables\n  var root = textToHierarchy(quote[0], quote[1]), \n    node = root, // Save root for tweening\n    x = d3.scaleLinear().range([0, 2 * Math.PI]),\n    y = d3.scaleSqrt().range([0, radius]),\n    color = d3.scaleLinear().domain([0, 0.5, 1]).range(color_palettes[~~(Math.random() * 6)]), \n    partition = d3.partition();\n\n  // Calculate the d path for each slice.\n  var arc = d3.arc()\n    .startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x0))); })\n    .endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, x(d.x1))); })\n    .innerRadius(function(d) { return Math.max(0, y(d.y0)); })\n    .outerRadius(function(d) { return Math.max(0, y(d.y1)); });\n\n  // Build the sunburst.\n  var first_build = true;\n  function update() {\n    // Determine how to size the slices.\n    if (mode == \"linear\") { \n      root.sum(function (d) { return d.size; });\n    } else {\n      root.sum(function (d) { return d.grpSize; });\n    }\n\n    if (first_build) {\n      // Add a <path d=\"[shape]\" style=\"fill: [color];\"><title>[popup text]</title></path>\n      //   to each <g> element; add click handler; save slice widths for tweening\n      svg.selectAll(\"path\").data(partition(root).descendants()).enter().append(\"path\")\n        .style(\"fill\", function (d) { return d.parent ? color(d.x0) : \"white\"; })  // Return white for root.\n        .on(\"click\", click);\n\n      svg.selectAll(\"path\").append(\"title\").text(function (d) { return d.data.word; })\n\n      first_build = false;\n    } else {\n      svg.selectAll(\"path\").data(partition(root).descendants());\n    }\n\n    svg.selectAll(\"path\").transition().duration(1000).attrTween(\"d\", arcTweenData);\n  }\n\n  update(); // GO!\n\n    \n  // Respond to radio click.\n  $('.mode').on(\"change\", function change() {\n    mode = $('.mode:checked').val();\n    update();\n  });\n  \n\n  // Respond to slice click.\n  function click(d) {\n    node = d;\n    svg.selectAll(\"path\").transition().duration(1000).attrTween(\"d\", arcTweenZoom(d));\n  }\n\n\n  // When switching data: interpolate the arcs in data space.\n  function arcTweenData(a, i) {\n    // (a.x0s ? a.x0s : 0) -- grab the prev saved x0 or set to 0 (for 1st time through)\n    // avoids the stash() and allows the sunburst to grow into being\n    var oi = d3.interpolate({ x0: (a.x0s ? a.x0s : 0), x1: (a.x1s ? a.x1s : 0) }, a);  \n    function tween(t) {\n      var b = oi(t);\n      a.x0s = b.x0;  \n      a.x1s = b.x1;  \n      return arc(b);\n    }\n    if (i == 0) { \n      // If we are on the first arc, adjust the x domain to match the root node\n      // at the current zoom level. (We only need to do this once.)\n      var xd = d3.interpolate(x.domain(), [node.x0, node.x1]);\n      return function (t) {\n        x.domain(xd(t));\n        return tween(t);\n      };\n    } else {\n      return tween;\n    }\n  }\n\n\n  // When zooming: interpolate the scales.\n  function arcTweenZoom(d) {\n    var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n        yd = d3.interpolate(y.domain(), [d.y0, 1]), // [d.y0, 1]\n        yr = d3.interpolate(y.range(), [d.y0 ? 40 : 0, radius]);\n    return function (d, i) {\n      return i\n          ? function (t) { return arc(d); }\n          : function (t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); return arc(d); };\n    };\n  }\n\n\n  // Take text from Strong's and format as hierarchy with root.\n  function textToHierarchy(rootNode, quote) {\n    var vsWords = quote.replace(/[^A-Za-z0-9 /[]/g, \"\").replace(/[/[]/g, \"|\").split(\" \");\n    var sbWords = [{ \"name\": rootNode, \"parent\": \"\" }];\n\n    for (i = 0; i < vsWords.length ; i++) {\n\n      //sbWords.filter(function (value) { return value == vsWords[i]; }).length;\n      word = vsWords[i].split(\"|\");\n\n      if (word.length == 1) {\n\n        sbWords.push({ \"name\": i, \"word\": word[0], \"parent\": rootNode, \"size\": 1, \"grpSize\": 0 });\n      } else {\n\n        // If this combo of English:Greek word exists, then add a \n        filtered = sbWords.filter(function (value) { return value.word == word[1] && value.eWord == word[0]; });\n\n        var newGrpSize = 1;\n        if (filtered.length > 0) {\n          filtered[0].grpSize += 1;\n          newGrpSize = 0;\n        }\n\n        sbWords.push({ \"name\": word[1], \"parent\": i, \"word\": word[1], \"size\": 1, \"grpSize\": newGrpSize, \"eWord\": word[0] });\n        sbWords.push({ \"name\": i, \"word\": word[0], \"parent\": rootNode, \"size\": 0, \"grpSize\": 0 });\n      }\n    }\n\n    var root = d3.stratify().id(function (d) { return d.name; })\n      .parentId(function (d) { return d.parent; })(sbWords);\n    return root;\n  }\n});\n</script>", "description": "Zoomable Dynamically Updating Sunburst (D3 version 4)", "created_at": "2016-09-18T10:59:34Z", "updated_at": "2016-09-18T12:12:38Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleSqrt", "d3.partition", "d3.arc", "d3.interpolate", "d3.stratify"], "readme": "I updated Kerry Rodden\u2019s [Zoomable sunburst with updating data](https://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad) to D3 version 4. His work was based on Mike Bostock's [Zoomable Sunburst](http://bl.ocks.org/mbostock/4348373) and [Sunburst Partition](http://bl.ocks.org/mbostock/4063423) examples. He'd overcome some challenging tween issues (nicely done!). I added an opening tween in arcTweenData() that animates the sunburst creation, growing it from 0, and streamlines the tweening process (no longer need to stash() previous x0 and x1 values).\n\nThe hierarchical dataset is built the fly.  It starts as a string quote in English, with the original language words in brackets. I dynamically analyze and transform it using regex, jQuery, and [d3-hierarchy](https://github.com/d3/d3-hierarchy/blob/master/README.md). The user can toggle between modes: \"Linear\" (words in order they appear in English) and \"Grouped\" (only show directly-translated words, and group them by first appearance). I don't change the dataset on the fly, instead change the source of the slice sizing from d.size to d.grpSize. Each node object has the form: {name: \"g1063\", size: 1, grpSize: 2, parent: 0, word: \"g1063\", eWord: \"For\"}.\n\nThe continuous coloration scheme leverages d3.scaleLinear() thanks to Jerome Cukier's excellent post [d3: scales, and color](http://www.jeromecukier.net/blog/2011/08/11/d3-scales-and-color/). The palettes are from Mary Stribley's [Website Color Schemes](https://designschool.canva.com/blog/website-color-schemes/).\n\nClick on any arc to zoom in, and click on the center circle to zoom out. Use the Linear/Grouped radio buttons to update the data.\n\nFound this on github? See it working at [http://bl.ocks.org/denjn5](http://bl.ocks.org/denjn5/1a3f8e44cdcb3054121dfd991f59fbc2).", "uid": "denjn5_1a3f8e44cdcb3054121dfd991f59fbc2"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleLinear()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar xAxis = d3.axisBottom()\n    .scale(x);\n\nvar yAxis = d3.axisLeft()\n    .scale(y);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.sepalLength = +d.sepalLength;\n    d.sepalWidth = +d.sepalWidth;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.sepalWidth; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.sepalLength; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Width (cm)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Length (cm)\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.sepalWidth); })\n      .attr(\"cy\", function(d) { return y(d.sepalLength); })\n      .style(\"fill\", function(d) { return color(d.species); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  //\n  // annotations\n  var annotation = window.annotation = d3.annotate()\n        // .show((d) => d.species !== \"versicolor\") // .show(true)\n  \t\t\t.show((d, ndx) => ndx % 12 === 0)\n        .text((d) => `${d.species[0]}: ${d.sepalWidth.toFixed(1)} x ${d.sepalLength.toFixed(1)}`)\n  \t\t\t.attr('x', (d) => d.box.x + d.box.width)\n  \t\t\t.attr('dy', 4)\n  \t\t\t.attr('dx', 4)\n\t\t\t\t.attr('text-anchor', 'start')\n        .container(svg.append('g'));\n\n  svg.selectAll('.dot').call(annotation);\n});\n\n</script>", "description": "Scatterplot with d3-annotate", "created_at": "2016-09-18T07:23:45Z", "updated_at": "2016-09-20T08:44:48Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleOrdinal", "d3.axisBottom", "d3.axisLeft", "d3.tsv", "d3.extent", "d3.annotate"], "readme": "This block is built directly on top of [Scatterplot by @mbostock](https://bl.ocks.org/mbostock/3887118), modified to use v4 and `d3-annotate`.\n\n### Controls for [`d3.annotate`](https://github.com/cmpolis/d3-annotate): \n\n- Click a point to add label\n- Labels are draggable (`d3.drag`)\n- Cmd + Click a label to remove it\n- Shift + Click a label to edit text\n- (in the console) `JSON.stringify(annotation.serialize())` to save annotations\n\n_Note: d3.annotate is very much a work in progress_\n\nby [@ChrisPolis](https://twitter.com/ChrisPolis)", "uid": "cmpolis_f9805a98b8a455aaccb56e5ee59964f8"}, {"code": "<script>\n\n\tvar width = Math.max(960, innerWidth),\n    \theight = Math.max(500, innerHeight);\n\t\n\td3.select(\"#slider\")\n\t\t.on(\"input\", function() {\n\t\t\td3.select(\"#sliderVal\").html(\"Revolutions per minute: \" + this.value)\n\t\t\trotate(this.value)\n\t\t})\n\n\td3.select(\"#sliderVal\").html(\"Revolutions per minute: \" + 0)\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t    .attr(\"width\", width)\n\t    .attr(\"height\", height)\n\t    .append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + width/2 + \", \" + height/2 + \")rotate(0)scale(1.5)\");\n    \n\tvar startingShape = shapes[0]\n    \n    var shape = svg.append(\"polygon\")\n\t\t.style(\"stroke\", \"#d35400\")\t\t\n\t\t.attr(\"points\", startingShape)\n\n\tvar wires = svg.append(\"g\").selectAll(\"line\")\n\t\t.data(startingShape)\n\t  .enter().append(\"line\")\n\t\t.style(\"stroke\", \"#2980b9\")\n\t\t.attr(\"x1\", function(d) {return d[0]})\n\t\t.attr(\"y1\", function(d) {return d[1]})\n\t\t.attr(\"x2\", function(d) {return d[0]})\n\t\t.attr(\"y2\", function(d) {return d[1]})\n\n\tvar dots1 = svg.append(\"g\").selectAll(\"circle\")\n\t\t.data(startingShape)\n\t  .enter().append(\"circle\")\n\t\t.style(\"fill\", \"#2980b9\")\n\t\t.attr(\"r\", 1)\n\t\t.attr(\"cx\", function(d) {return d[0]})\n\t\t.attr(\"cy\", function(d) {return d[1]})\n\n\tvar dots2 = svg.append(\"g\").selectAll(\"circle\")\n\t\t.data(startingShape)\n\t  .enter().append(\"circle\")\n\t\t.style(\"fill\", \"#d35400\")\n\t\t.attr(\"r\", 1)\n\t\t.attr(\"cx\", function(d) {return d[0]})\n\t\t.attr(\"cy\", function(d) {return d[1]})\n\n\tloop(startingShape, 1)\n\n\tfunction loop(passedShape, n) {\t\n\t\tvar newShape = shapeTweenSides(passedShape, shapes[n], true);\n\n\t\twires.each(function(d, i) {\n\t\t\td3.select(this).transition().duration(2000).ease(d3.easeSinInOut)\n\t\t\t\t.attr(\"x2\", newShape[i][0])\n\t\t\t\t.attr(\"y2\", newShape[i][1])\n\t\t\t\t.transition().duration(2500).ease(d3.easeSinInOut)\n\t\t\t\t\t.attr(\"x1\", newShape[i][0])\n\t\t\t\t\t.attr(\"y1\", newShape[i][1])\n\t\t})\n\n\t\tdots1.each(function(d, i) {\n\t\t\td3.select(this)\t\n\t\t\t\t.transition().duration(2000).ease(d3.easeSinInOut)\n\t\t\t\t\t.attr(\"cx\", newShape[i][0])\n\t\t\t\t\t.attr(\"cy\", newShape[i][1])\n\t\t})\n\n\t\tdots2.each(function(d, i) {\t\t\t\n\t\t\td3.select(this)\t\n\t\t\t\t.transition().delay(2000).duration(2500).ease(d3.easeSinInOut)\n\t\t\t\t\t.attr(\"cx\", newShape[i][0])\n\t\t\t\t\t.attr(\"cy\", newShape[i][1])\n\t\t})\n\n\t    shape.interrupt().transition().delay(2000).duration(2500).ease(d3.easeSinInOut)\n\t    \t.attr(\"points\", newShape)\n\t    \t.on(\"end\", function() {\n\t    \t\t(n < shapes.length - 1) ? loop(newShape, ++n) : loop(newShape, 0);\n\t    \t});\n\t}\n\n\tfunction rotate(rpm) {\n\t\tif (rpm == 0) {\n\t\t\tsvg.interrupt()\n\t\t} else {\n\t\t\tvar newAngle = svg._groups[0][0].transform.animVal[1].angle + 120;\n\n\t\t\tsvg.transition().duration(20000/rpm).ease(d3.easeLinear)\n\t\t\t\t.attr(\"transform\", \"translate(\" + width/2 + \", \" + height/2 + \")rotate(\" + newAngle + \")scale(1.5)\")\n\t\t\t\t.on(\"end\", function() {rotate(rpm)})\n\t\t}\n\t}\n\n</script>", "description": "Rotating Shape Transitions", "created_at": "2016-09-18T06:34:42Z", "updated_at": "2016-09-21T19:56:26Z", "api": ["d3.select", "d3.polygonArea", "d3.max", "d3.scaleLinear", "d3.line"], "readme": "Partially an update to one of <a href=\"http://bl.ocks.org/alexmacy/06cf037853999219cd82bc79edc4aee6\">my previous blocks</a>, the original intention here was to more clearly convey what is happening during the transitions between shapes by drawing lines from the vertices of the old shape to those of the new shapes. \n\nIt uses a kinda-sorta add-on I made called <a href=\"https://github.com/alexmacy/d3-shape-tween\">d3-shape-tween</a>, which helps smoother transitions between complex shapes, especially when transitioning between shapes of varying complexity.\n\nI also had some fun experimenting with rotating the shape as if it's on a turntable...\n", "uid": "alexmacy_1e6f2b3d5c6dd475a019ffc3cf1660f6"}, {"code": "<script>\n\nvar margin = {top: 20, right: 100, bottom: 30, left: 100},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar dataset = [\n  {x: 0, y: 5},\n  {x: 1, y: 8},\n  {x: 2, y: 13},\n  {x: 3, y: 12},\n  {x: 4, y: 16},\n  {x: 5, y: 21},\n  {x: 6, y: 18},\n  {x: 7, y: 23},\n  {x: 8, y: 24},\n  {x: 9, y: 28},\n  {x: 10, y: 35},\n  {x: 11, y: 30},\n  {x: 12, y: 32},\n  {x: 13, y: 36},\n  {x: 14, y: 40},\n  {x: 15, y: 38},\n];\n\nvar xScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function(d){ return d.x; })])\n    .range([0, width]);\n\nvar yScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function(d){ return d.y; })])\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .innerTickSize(-height)\n    .outerTickSize(0)\n    .tickPadding(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .innerTickSize(-width)\n    .outerTickSize(0)\n    .tickPadding(10);\n\nvar line = d3.svg.line()\n    .x(function(d) { return xScale(d.x); })\n    .y(function(d) { return yScale(d.y); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n\n  svg.append(\"path\")\n      .data([dataset])\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n</script>", "description": "Line Chart with Grid [D3]", "created_at": "2016-09-18T01:12:58Z", "updated_at": "2016-09-18T01:13:18Z", "api": ["d3.scale.linear", "d3.max", "d3.svg.axis", "d3.svg.line", "d3.select"], "readme": "\n\nforked from <a href='http://bl.ocks.org/hunzy/'>hunzy</a>'s block: <a href='http://bl.ocks.org/hunzy/11110940'>Line Chart with Grid [D3]</a>", "uid": "RicCheng_043e4ddf2013fec658ff9905fadf5985"}, {"code": "<script>\n//var n = 40,\n//     random = d3.randomNormal(100, 150);\n    //data = d3.range(n).map(random);\n  \nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nvar x = d3.scaleLinear()\n\t\t.range([0, width]);\n  \nvar y = d3.scaleLinear()\n    .range([height, 0]);\n    \nvar maxIndex = 10;\nvar minIndex = 0;\nvar fullData;\nvar subset;\n\nvar formatDate = d3.timeParse(\"%Y-%m-%d %H:%M:%S\");\n  \nd3.csv(\"data.csv\", function(error, data) {\n  if (error) throw error;\n  fullData = data;\n  data.forEach(function(d) {\n\t\td.index = +d.index;\n    d.Time = +d.Time - 2200;\n    d.Heart_Rate = +d.Heart_Rate;\n    d.Alarm_LOW = +d.Alarm_LOW;\n    d.Alarm_HIGH = +d.Alarm_HIGH;\n  });\n  subset = data.slice(minIndex, maxIndex);\n  subset_top = data.slice(minIndex, maxIndex);\n  subset_bottom = data.slice(minIndex, maxIndex);\n\n\tx.domain(d3.extent(subset, function(d) { return d.Time;})).nice();\n  y.domain([20, 180]);\n  \n  var line = d3.line()\n      .curve(d3.curveBasis)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Heart_Rate); });\n\t\n  var alarm_top = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_HIGH); })\n  \t\t;\n\n  var alarm_bottom = d3.line()\n  \t\t.curve(d3.curveStep)\n      .x(function(d, i) { return x(d.Time); })\n      .y(function(d, i) { return y(d.Alarm_LOW); });\n  \n\tg.append(\"defs\").append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n    .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n \n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n  \n  var group = g.append(\"g\")\n      .attr(\"clip-path\", \"url(#clip)\")\n\n  \n  HR = group.append(\"path\")\n    .datum(subset)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", line);\n  \n  alarm_top = group.append(\"path\")\n      .datum(subset_bottom)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_top)\n    .style(\"stroke\", \"#DD5044\");\n  \n  alarm_bottom = group.append(\"path\")\n      .datum(subset_bottom)\n      .attr(\"class\", \"line\")\n  \t\t.attr(\"d\", alarm_bottom)\n    .style(\"stroke\", \"#000\");\n  \n  group\n    \t.transition()\n      .duration(500)\n      .ease(d3.easeLinear)\n      .on(\"start\", tick);\n\n//   //HEART RATE\n//   g.append(\"g\")\n//       .attr(\"clip-path\", \"url(#clip)\")\n//     .append(\"path\")\n//       .datum(subset)\n//       .attr(\"class\", \"line\")\n//   \t\t.attr(\"d\", line)\n//     .transition()\n//       .duration(500)\n//       .ease(d3.easeLinear)\n//       .on(\"start\", tick);\n  \n  \n// //   BOTTOM ALARM\n//   g.append(\"g\")\n//       .attr(\"clip-path\", \"url(#clip)\")\n//     .append(\"path\")\n//       .datum(subset_bottom)\n//       .attr(\"class\", \"line\")\n//   \t\t.attr(\"d\", alarm_bottom)\n//     .style(\"stroke\", \"#DD5044\")\n//     .transition()\n//       .duration(2000)\n// //       .ease(d3.easeLinear)\n//       .on(\"start\", tick_bottom);\n  \n  \n// //   TOP ALARM\n//   g.append(\"g\")\n//       .attr(\"clip-path\", \"url(#clip)\")\n//     .append(\"path\")\n//       .datum(subset_top)\n//       .attr(\"class\", \"line\")\n//   \t\t.attr(\"d\", alarm_top)\n//     .style(\"stroke\", \"#000\")\n// //     .style(\"fill\",\"none\")\n// //     .style(\"stroke-opacity\", .75)\n// //     .style(\"stroke-width\", 1)\n//     .transition()\n//       .duration(2000)\n// //       .ease(d3.easeLinear)\n//       .on(\"start\", tick_top);\n  \n  //MOVE HEART RATE\n  function tick() {\n    // Push a new data point onto the back.\n    console.log(\"BEFORE\")\n//     console.log(this)\n    \n    subset.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    console.log(\"AFTER\")\n//     console.log( d3.selectAll(this).attr(\"d\", line).attr(\"transform\", null))  \n    // Redraw the line.\n    d3.selectAll(this)[0]\n        .attr(\"d\", line)\n    \t\t.attr(\"transform\", null);\n    \n    d3.selectAll(\"g.axis--x\")\n      .transition()\n      .call(d3.axisBottom(x));\n    \n  \n    // Slide it to the left.\n//     d3.active(this)\n//         .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n//       .transition()\n//         .on(\"start\", tick);\n    \n    // Pop the old data point off the front.\n    subset.shift();\n    x.domain(d3.extent(subset, function(d) { return d.Time; })).nice();\n\n\n  }\n   \n//   MOVE TOP ALARM\n  function tick_top() {\n    // Push a new data point onto the back.\n    subset_top.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_top)\n    \t\t.attr(\"transform\", null);\n   \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_top);\n    \n    // Pop the old data point off the front.\n    subset_top.shift();\n\n  }\n  \n  // MOVE BOTTOM ALARM\n  function tick_bottom() {\n    // Push a new data point onto the back.\n    subset_bottom.push(fullData.slice(maxIndex, maxIndex+1)[0])\n    maxIndex += 1;\n    \n    // Redraw the line.\n    d3.select(this)\n        .attr(\"d\", alarm_bottom)\n    \t\t.attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_top)\n//         .attr(\"transform\", null);\n//     d3.select(this)\n//         .attr(\"d\", alarm_bottom)\n//         .attr(\"transform\", null);\n    \n    \n    // Slide it to the left.\n    d3.active(this)\n        .attr(\"transform\", function(d) {return \"translate(\" + x(d.Time) + \",0)\"})\n      .transition()\n        .on(\"start\", tick_bottom);\n    \n    // Pop the old data point off the front.\n    subset_bottom.shift();\n\n  }\n  \n});\n  \n</script>", "description": "HR_alarm", "created_at": "2016-09-17T23:19:58Z", "updated_at": "2016-09-20T06:13:13Z", "api": ["d3.randomNormal", "d3.range", "d3.select", "d3.scaleLinear", "d3.timeParse", "d3.csv", "d3.extent", "d3.line", "d3.axisBottom", "d3.axisLeft", "d3.selectAll", "d3.active"], "readme": "This example is the second of three in the [Path Transitions tutorial](http://bost.ocks.org/mike/path/); see the [previous example](/mbostock/1643051) for context.\n\nThe desired pairing of numbers for path interpolation is like this:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xR, y4\n       \u2193   \u2193    \u2193   \u2193    \u2193   \u2193    \u2193   \u2193\n    M xl, y0 L x0, y1 L x1, y2 L x2, y3 L x3, y4\n\nWhere `xl` is some negative value off the left side, and `xr` is some positive value off the right side. This way, the first point \u27e8x0,y0\u27e9 is interpolated to \u27e8xl,y0\u27e9; meaning, the x-coordinate is interpolated rather than the y-coordinate, and so the path appears to slide off to the left. Likewise, the incoming point \u27e8xr,y4\u27e9 is interpolated to \u27e8x3,y4\u27e9.\n\nWhile you could write a custom interpolator and use [*transition*.attrTween](https://github.com/d3/d3-transition#transition_attrTween) to achieve this, a much simpler solution is to **interpolate the transform attribute** rather than the path. This way, the shape of the path remains static while the it translates left during the transition.\n\nImmediately prior to the transition, the path is redrawn as follows:\n\n    M x0, y0 L x1, y1 L x2, y2 L x3, y3 L xr, y4\n\nThen, a transform transition is applied:\n\n    translate(0,0)\n              \u2193\n    translate(xl,0)\n\nThis causes the path to slide left. A clip path is used so the path is not visible outside of the chart body.\n\nNote that for charts with spline interpolation, you\u2019ll need to crop the visible part of the line by an extra point, so that the change in tangent is not visible; see the [next example](/mbostock/1642989).\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1642874'>HR_alarm</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/33875137e4a93dc2ade33a5b2fd1599d'>HR_alarm</a>", "uid": "ssaleh2_dca507b7e0c5213db00d6d85ad85c854"}, {"code": "<script>\n    const WIDTH = 960;\n    const HEIGHT = 500;\n    const NWALKERS = 100;\n    const NEAR = 5;\n    const LIFETIME = 100;\n   \n    const clampColor = function(input) {\n      return Math.round(Math.max(0, Math.min(255, input)))\n    }\n    \n    const wrap = function(n) {\n      if (n < 0) { return false } // return n + WIDTH * HEIGHT }\n      if (n > WIDTH * HEIGHT) { return false } // return n - WIDTH * HEIGHT }\n      return n\n    }\n    \n    const adjacencyTransform = [\n      function(n) { return wrap(n - WIDTH) },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - 1) : false },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + 1) : false },\n      function(n) { return wrap(n + WIDTH) },\n      \n      function(n) { return wrap(n - WIDTH) },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - 1) : false },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + 1) : false },\n      function(n) { return wrap(n + WIDTH) },\n      \n      function(n) { return wrap(n + WIDTH) }, // bias downwards\n    ], NADJ = 9;\n    \n    // Set up\n    var substrate, treeCells, nTreeCells, treeTop, treeLeft, treeRight,\n        walkers, walkerAge, pxToPaint;\n    \n    var canvas = d3.select(\"body\").append(\"canvas\")\n      .attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT);\n    \n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT)\n    \t.style(\"position\", \"absolute\")\n    \t.style(\"top\", 0)\n    \t.style(\"left\", 0)\n    \n    var ctx = canvas.node().getContext(\"2d\");\n    \n    var imgData = ctx.getImageData(0, 0, WIDTH, HEIGHT);\n    var data = imgData.data;\n    \n    function randomWalker() {\n      var pos, x, y, i, xx, yy;\n      do {\n        xx = treeLeft + Math.floor(Math.random() * (treeRight - treeLeft));\n        yy = treeTop - NEAR;\n        i = yy * WIDTH + xx;\n      } while (xx >= WIDTH || yy >= HEIGHT || substrate[i] > 0);\n      return i;\n    }\n    \n    function addTreeCell(pos, v) {\n      substrate[pos] = v;\n      treeCells[nTreeCells] = pos;\n      nTreeCells += 1;\n      \n      var x = pos % WIDTH, y = Math.floor(pos / WIDTH);\n      if (y < treeTop) { treeTop = y; }\n      if (x < treeLeft) { treeLeft = x; }\n      if (x > treeRight)  { treeRight = x; }\n    }\n    \n    var resetSimulation = function() {\n      substrate = d3.range(WIDTH * HEIGHT).map(function() { return 0; });\n      treeCells = d3.range(WIDTH * HEIGHT).map(function() { return null; });\n      nTreeCells = 0;\n      \n      // initialise the substrate with a line at the bottom,\n      // 1/4 -> 3/4 of the way across. \n      for (var i = WIDTH/4; i < 3*WIDTH/4; i++) {\n        var j = (HEIGHT-1)*WIDTH + i;\n        addTreeCell(j, 1);\n      }\n      treeTop = HEIGHT-1;\n      treeLeft = WIDTH/4;\n      treeRight = 3*WIDTH/4;\n      \n      // initialise each walker to a random position (above the\n      // substrate)\n      walkers = d3.range(NWALKERS).map(function() {\n        return randomWalker();\n      });\n      walkerAge = d3.range(NWALKERS).map(function() { return 0; });\n   \n      substrate.forEach(function(v, i) {\n        var b = i * 4, c = v ? 255 : 0;\n        data[b] = c;\n        data[b + 1] = c;\n        data[b + 2] = c;\n        data[b+3] = 255;\n      })\n      \n      ctx.putImageData(imgData, 0, 0)\n      \n      window.requestAnimationFrame(tick)\n    }\n    \n    var tick = function() {\n      // Should Continue\n      pxToPaint = []\n      \n      // Simulate\n      walkers = walkers.map(function(p, i) {\n        var newp = adjacencyTransform[Math.floor(Math.random()*NADJ)](p);\n        \n        if (newp === false) {\n          // gone off the screen: re-init to random pos\n          walkerAge[i] = 0;\n          return randomWalker();\n        }\n        if (substrate[newp] > 0) {\n          // hit the existing tree: attach and re-init\n          addTreeCell(p, substrate[newp]+1);\n          pxToPaint.push(p);\n          walkerAge[i] = 0;\n          return randomWalker();\n        }\n        walkerAge[i] += 1;\n        if (walkerAge[i] > LIFETIME) {\n          walkerAge[i] = 0;\n          return randomWalker();\n        }\n        pxToPaint.push(p);\n        return newp;\n      }); \n      \n      // Paint\n    \tpxToPaint.forEach(function(coordinate) {\n        var r = coordinate * 4;\n        var g = r + 1;\n        var b = g + 1;\n        var a = b + 1;\n\n        var subs = substrate[coordinate];\n        // TODO get r,g,b from some other colour. \n            \t\t\t\t\n        data[r] = subs ? 255 : 50;\n        data[g] = subs ? 255 : 50;\n        data[b] = subs ? 255 : 50;\n        data[a] = 255\n      })\n\n      ctx.putImageData(imgData, 0, 0)\n      \n     // if (liveCells.length > 0) {\n      \twindow.requestAnimationFrame(tick)  \n      //} else {\n      //  console.log('done')\n      //  setTimeout(resetSimulation, 5000)\n      //}\n      \n    }\n    \n    resetSimulation()\n    \n    \n  </script>", "description": "Diffusion Limited Aggregation", "created_at": "2016-09-17T19:27:42Z", "updated_at": "2016-09-27T16:33:00Z", "api": ["d3.select", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nEventually this is going to be a DLA demo. \n\nforked from <a href='http://bl.ocks.org/tonyhschu/'>tonyhschu</a>'s block: <a href='http://bl.ocks.org/tonyhschu/067d977d6d4ae7224dcebdf3775d9e7e'>Antibiotic Resistance Simulation</a>", "uid": "lookoutjames_c7b8d5053c25ad1b3744509dd957caee"}, {"code": "<script>\n      \n      var svg = d3.select(\"svg\"),\n          width = svg.attr(\"width\"),\n          height = svg.attr(\"height\"),\n          nMax = 95,\n          mouseX = 800, mouseY = 83,\n          scaleFactor = (100 - 4.4688) / 100;\n      \n      function redraw (){\n        var scale = 20,\n            angle = -mouseY / height * Math.PI / 8,\n            n = Math.floor(nMax * mouseX / 960),\n            up = Math.PI,\n            data = fractal(497, 472, up, scale, angle, 0, n, false);\n        \n        render(data);\n      }\n      \n      function fractal(x, y, direction, scale, angle, i, n, flip){\n        \n        var circle = {\n          x: x,\n          y: y,\n          radius: scale / 2\n        };\n\n        direction += angle;\n        x += Math.sin(direction) * scale;\n        y += Math.cos(direction) * scale;\n        \n        if(flip){\n          angle = -angle;\n        }\n        \n        if(i < n){\n          return [circle]\n            .concat(\n              fractal(x, y, direction, scale * scaleFactor, angle, i+1, n, flip)\n            )\n            .concat(\n              (i % 11 === 0)\n              ? fractal(x, y, direction, scale * scaleFactor, angle, i+1, n, !flip)\n              : []\n            );\n        } else {\n          return [circle];\n        }\n\n      }\n      \n      function render(data){\n        var circles = svg.selectAll(\"circle\").data(data);\n        circles\n          .enter()\n            .append(\"circle\")\n          .merge(circles)\n            .attr(\"cx\", function (d){ return d.x; })\n            .attr(\"cy\", function (d){ return d.y; })\n            .attr(\"r\", function (d){ return d.radius; })\n        circles.exit().remove()\n        \n        \n      }\n      \n      redraw();\n      document.addEventListener(\"mousemove\",function(e){\n        mouseX = e.x;\n        mouseY = e.y;\n        redraw();\n      });\n    </script>", "description": "Tree Fractal with SVG", "created_at": "2016-09-17T15:54:19Z", "updated_at": "2016-09-17T16:04:52Z", "api": ["d3.select"], "readme": "forked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/306a51423662f3a787dd99b4bbc62723'>Tree Fractal with SVG (broken)</a>. just added exit() method", "uid": "LuisSevillano_d57b5c1cb3a4dcd72e52a29ceea340eb"}, {"code": "<script>\n      \n      var svg = d3.select(\"svg\"),\n          width = svg.attr(\"width\"),\n          height = svg.attr(\"height\"),\n          nMax = 95,\n          mouseX = 800, mouseY = 83,\n          scaleFactor = (100 - 4.4688) / 100;\n      \n      function redraw (){\n        var scale = 20,\n            angle = -mouseY / height * Math.PI / 8,\n            n = Math.floor(nMax * mouseX / 960),\n            up = Math.PI,\n            data = fractal(497, 472, up, scale, angle, 0, n, false);\n        \n        render(data);\n      }\n      \n      function fractal(x, y, direction, scale, angle, i, n, flip){\n        \n        var circle = {\n          x: x,\n          y: y,\n          radius: scale / 2\n        };\n\n        direction += angle;\n        x += Math.sin(direction) * scale;\n        y += Math.cos(direction) * scale;\n        \n        if(flip){\n          angle = -angle;\n        }\n        \n        if(i < n){\n          return [circle]\n            .concat(\n              fractal(x, y, direction, scale * scaleFactor, angle, i+1, n, flip)\n            )\n            .concat(\n              (i % 11 === 0)\n              ? fractal(x, y, direction, scale * scaleFactor, angle, i+1, n, !flip)\n              : []\n            );\n        } else {\n          return [circle];\n        }\n\n      }\n      \n      function render(data){\n        var circles = svg.selectAll(\"circle\").data(data);\n        circles\n          .enter()\n            .append(\"circle\")\n          .merge(circles)\n            .attr(\"cx\", function (d){ return d.x; })\n            .attr(\"cy\", function (d){ return d.y; })\n            .attr(\"r\", function (d){ return d.radius; })\n        \n        \n      }\n      \n      redraw();\n      document.addEventListener(\"mousemove\",function(e){\n        mouseX = e.x;\n        mouseY = e.y;\n        redraw();\n      });\n    </script>", "description": "Tree Fractal with SVG (broken)", "created_at": "2016-09-17T13:22:41Z", "updated_at": "2016-10-09T14:32:57Z", "api": ["d3.select"], "readme": "A tree fractal using SVG and D3 in a broken, incomplete state. This is what happens when you don't use the `exit()` part of the enter/update/exit pattern.\n\nSee also the [fully working version](http://bl.ocks.org/curran/36163af1a01d41d0cd18bf6397bae774).\n\n<a href=\"http://fineartamerica.com/products/tree-fractal-with-circles-curran-kelleher-canvas-print.html\"> <img src=\"/curran/raw/36163af1a01d41d0cd18bf6397bae774/print.png\"></a> You can <strong><a href=\"http://fineartamerica.com/products/tree-fractal-with-circles-curran-kelleher-canvas-print.html\">buy prints of this graphic</a></strong> (with 786,411  circles!).\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "curran_306a51423662f3a787dd99b4bbc62723"}, {"code": "<script>\n    // http://slavevoyages.org/tast/assessment/estimates.faces\n    d3.tsv(\"slavery.tsv\", function(err, data) {\n      var countries = Object.keys(data[0]).slice(1,7);\n      countries = [\n        \"2015\",\n        \"2014\",\n        \"2013\",\n        \"2012\",\n\t\t\t\t\"2011\",\n\t\t\t\t\"2010\",\n      ]\n      var countryData = {}\n      countries.forEach(function(country) {\n        countryData[country] = data.map(function(d) {\n          return parseInt(d[country].replace(/,/g, ''));\n        })\n      })\n      console.log(countries)\n      console.log(data[0]);\n      var width = 960;\n      var height = 500;\n      \n      var lineHeight = 211;\n      var lineOffset = 21;\n      \n      var chartHeight = 350;\n      \n      var color = d3.scale.ordinal()\n      .domain(d3.range(countries.length))\n      .range([\n        \"#7C938D\",\n        \"#544C36\",\n        \"#BB976E\",\n        \"#A4B284\",\n        \"#5E6560\",\n        \"#7A8868\",\n        \"#9AB7B5\"\n      ])\n\n      \n      var svg = d3.select(\"svg\")\n      .attr({width: width, height: height });\n      \n      var xscale = d3.scale.linear()\n      //.domain(d3.extent(data, function(d) { return +d.year }))\n      .domain([0, data.length])\n      .range([140, width - 20])\n      \n      var yscale = d3.scale.linear()\n      .domain([0, d3.max(countries, function(country) {\n        return d3.max(countryData[country])\n      })])\n      .range([lineHeight, 0])\n      \n      var area = d3.svg.area()\n        .x(function(d,i) { return xscale(i); })\n        .y0(function(d) { return lineHeight; })\n        .y1(function(d) { return yscale(d); })\n        .interpolate(\"basis\")\n\n      var xaxis = svg.selectAll(\"g.year\")\n      .data(data)\n      .enter()\n      .append(\"g\").classed(\"year\", true)\n      .attr({\n        transform: function(d,i) {\n          return \"translate(\" + [xscale(i), chartHeight] + \")\"\n        }\n      })\n      .style({\n        \"display\": function(d,i) { return i % 20 == 0 ? \"\": \"none\" },\n        \"font-size\": \"10px\"\n      })\n      xaxis\n      .append(\"line\").attr({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: -chartHeight,\n        stroke: \"#f7f7f7\",\n\n      })\n      xaxis\n      .append(\"text\")\n        .text(function(d) { return d.year })\n        .attr(\"transform\", \"rotate(0)translate(-10,12)\")\n      \n      var legend = svg.selectAll(\"g.country\")\n      .data(countries)\n      .enter()\n      .append(\"g\").classed(\"country\", true)\n        .attr(\"transform\", function(d,i) {\n          return \"translate(\" + [20, 205 + i * lineOffset] + \")\";\n        })\n        .style({\n          fill: function(d,i) { return color(i) },\n          \"font-family\": \"Helvetica\"\n        })\n        .append(\"text\")\n      \t.text(function(d) { return d })\n      \n\n      var groups = svg.selectAll(\"g.countries\")\n        .data(countries)\n        .enter().append(\"g\").classed(\"countries\", true)\n        .attr({\n          transform: function(d,i) { return \"translate(\" + [0, i * lineOffset] + \")\" },\n          fill: function(d,i) { return color(i) },\n        })\n      \n      var areas = groups.selectAll(\"path.country\")\n      \t.data(function(d) { return [countryData[d]] })\n      areas\n        .enter()\n        .append(\"path\").classed(\"country\", true)\n        .attr(\"d\", function(d) {\n          return area(d)\n        })\n      \n      \n      \n    })\n  </script>", "description": "Mission Power", "created_at": "2016-09-17T11:39:59Z", "updated_at": "2016-09-17T11:41:16Z", "api": ["d3.tsv", "d3.scale.ordinal", "d3.range", "d3.select", "d3.scale.linear", "d3.extent", "d3.max", "d3.svg.area"], "readme": "## Slave Voyages - Embarking\n\nThis is an attempt at visualizing the relative scale of the slave trade by country. The data comes from [slavevoyages.org](http://slavevoyages.org/tast/assessment/estimates.faces).\n\nThe visualization is inpsired by the [Mountains-out-of-molehills](http://www.informationisbeautiful.net/visualizations/mountains-out-of-molehills/) visualization. The focus is to communicate the relative scale over time, giving us a sense of activity over time of this attrocious part of our history.\n\n\n\n\n\n\n\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/enjalot/'>enjalot</a>'s block: <a href='http://bl.ocks.org/enjalot/754c7d061c2d0b71be37'>slave voyages - embarking</a>", "uid": "SioKCronin_3920aabb6f5a7528d7b00d7fcb872369"}, {"code": "<script>\n\n  var data = [],\n      svg,\n      defs,\n      gBrush,\n      brush,\n      main_xScale,\n      mini_xScale,\n      main_yScale,\n      mini_yScale,\n      main_yZoom,\n      main_xAxis,\n      main_yAxis,\n      mini_width,\n      textScale;\n\n  init();\n\n  function init() {\n\n    //Create the random data\n    for (var i = 0; i < 40; i++) {\n      var my_object = {};\n      my_object.key = i;\n      my_object.country = makeWord();\n      my_object.value = Math.floor(Math.random() * 600);\n      data.push(my_object);\n    }//for i \n    data.sort(function(a,b) { return b.value - a.value; });\n\n    /////////////////////////////////////////////////////////////\n    ///////////////// Set-up SVG and wrappers ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Added only for the mouse wheel\n    var zoomer = d3.behavior.zoom()\n        .on(\"zoom\", null);\n\n    var main_margin = {top: 10, right: 10, bottom: 30, left: 100},\n        main_width = 500 - main_margin.left - main_margin.right,\n        main_height = 400 - main_margin.top - main_margin.bottom;\n\n    var mini_margin = {top: 10, right: 10, bottom: 30, left: 10},\n        mini_height = 400 - mini_margin.top - mini_margin.bottom;\n    mini_width = 100 - mini_margin.left - mini_margin.right;\n\n    svg = d3.select(\"#chart\").append(\"svg\")\n        .attr(\"class\", \"svgWrapper\")\n        .attr(\"width\", main_width + main_margin.left + main_margin.right + mini_width + mini_margin.left + mini_margin.right)\n        .attr(\"height\", main_height + main_margin.top + main_margin.bottom)\n        .call(zoomer)\n        .on(\"wheel.zoom\", scroll)\n        //.on(\"mousewheel.zoom\", scroll)\n        //.on(\"DOMMouseScroll.zoom\", scroll)\n        //.on(\"MozMousePixelScroll.zoom\", scroll)\n        //Is this needed?\n        .on(\"mousedown.zoom\", null)\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    var mainGroup = svg.append(\"g\")\n            .attr(\"class\",\"mainGroupWrapper\")\n            .attr(\"transform\",\"translate(\" + main_margin.left + \",\" + main_margin.top + \")\")\n            .append(\"g\") //another one for the clip path - due to not wanting to clip the labels\n            .attr(\"clip-path\", \"url(#clip)\")\n            .style(\"clip-path\", \"url(#clip)\")\n            .attr(\"class\",\"mainGroup\")\n\n    var miniGroup = svg.append(\"g\")\n            .attr(\"class\",\"miniGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    var brushGroup = svg.append(\"g\")\n            .attr(\"class\",\"brushGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    /////////////////////////////////////////////////////////////\n    ////////////////////// Initiate scales //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    main_xScale = d3.scale.linear().range([0, main_width]);\n    mini_xScale = d3.scale.linear().range([0, mini_width]);\n\n    main_yScale = d3.scale.ordinal().rangeBands([0, main_height], 0.4, 0);\n    mini_yScale = d3.scale.ordinal().rangeBands([0, mini_height], 0.4, 0);\n\n    //Based on the idea from: http://stackoverflow.com/questions/21485339/d3-brushing-on-grouped-bar-chart\n    main_yZoom = d3.scale.linear()\n        .range([0, main_height])\n        .domain([0, main_height]);\n\n    //Create x axis object\n    main_xAxis = d3.svg.axis()\n      .scale(main_xScale)\n      .orient(\"bottom\")\n      .ticks(4)\n      //.tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the x axis\n    d3.select(\".mainGroupWrapper\").append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(\" + 0 + \",\" + (main_height + 5) + \")\");\n\n    //Create y axis object\n    main_yAxis = d3.svg.axis()\n      .scale(main_yScale)\n      .orient(\"left\")\n      .tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the y axis\n    mainGroup.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(-5,0)\");\n \n    /////////////////////////////////////////////////////////////\n    /////////////////////// Update scales ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the scales\n    main_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    mini_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    mini_yScale.domain(data.map(function(d) { return d.country; }));\n    \n    //Create the visual part of the y axis\n    d3.select(\".mainGroup\").select(\".y.axis\").call(main_yAxis);\n    d3.select(\".mainGroupWrapper\").select(\".x.axis\").call(main_xAxis);\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////// Label axis scales /////////////////////\n    /////////////////////////////////////////////////////////////\n\n    textScale = d3.scale.linear()\n      .domain([15,50])\n      .range([12,6])\n      .clamp(true);\n    \n    /////////////////////////////////////////////////////////////\n    ///////////////////////// Create brush //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //What should the first extent of the brush become - a bit arbitrary this\n    var brushExtent = Math.max( 1, Math.min( 20, Math.round(data.length*0.2) ) );\n\n    brush = d3.svg.brush()\n        .y(mini_yScale)\n        .extent([mini_yScale(data[0].country), mini_yScale(data[brushExtent].country)])\n        .on(\"brush\", brushmove)\n        //.on(\"brushend\", brushend);\n\n    //Set up the visual part of the brush\n    gBrush = d3.select(\".brushGroup\").append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush);\n    \n    gBrush.selectAll(\".resize\")\n      .append(\"line\")\n      .attr(\"x2\", mini_width);\n\n    gBrush.selectAll(\".resize\")\n      .append(\"path\")\n      .attr(\"d\", d3.svg.symbol().type(\"triangle-up\").size(20))\n      .attr(\"transform\", function(d,i) { \n        return i ? \"translate(\" + (mini_width/2) + \",\" + 4 + \") rotate(180)\" : \"translate(\" + (mini_width/2) + \",\" + -4 + \") rotate(0)\"; \n      });\n\n    gBrush.selectAll(\"rect\")\n      .attr(\"width\", mini_width);\n\n    //On a click recenter the brush window\n    gBrush.select(\".background\")\n      .on(\"mousedown.brush\", brushcenter)\n      .on(\"touchstart.brush\", brushcenter);\n\n    ///////////////////////////////////////////////////////////////////////////\n    /////////////////// Create a rainbow gradient - for fun ///////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    defs = svg.append(\"defs\")\n\n    //Create two separate gradients for the main and mini bar - just because it looks fun\n    createGradient(\"gradient-rainbow-main\", \"60%\");\n    createGradient(\"gradient-rainbow-mini\", \"13%\");\n\n    //Add the clip path for the main bar chart\n    defs.append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n      .append(\"rect\")\n\t    .attr(\"x\", -main_margin.left)\n      .attr(\"width\", main_width + main_margin.left)\n      .attr(\"height\", main_height);\n\n    /////////////////////////////////////////////////////////////\n    /////////////// Set-up the mini bar chart ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //The mini brushable bar\n    //DATA JOIN\n    var mini_bar = d3.select(\".miniGroup\").selectAll(\".bar\")\n      .data(data, function(d) { return d.key; });\n\n    //UDPATE\n    mini_bar\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand());\n\n    //ENTER\n    mini_bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand())\n      .style(\"fill\", \"url(#gradient-rainbow-mini)\");\n\n    //EXIT\n    mini_bar.exit()\n      .remove();\n\n    //Start the brush\n    gBrush.call(brush.event);\n\n  }//init\n\n  //Function runs on a brush move - to update the big bar chart\n  function update() {\n\n    /////////////////////////////////////////////////////////////\n    ////////// Update the bars of the main bar chart ////////////\n    /////////////////////////////////////////////////////////////\n\n    //DATA JOIN\n    var bar = d3.select(\".mainGroup\").selectAll(\".bar\")\n        .data(data, function(d) { return d.key; });\n\n    //UPDATE\n    bar\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return main_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand());\n\n    //ENTER\n    bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"fill\", \"url(#gradient-rainbow-main)\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return main_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand());\n\n    //EXIT\n    bar.exit()\n      .remove();\n\n  }//update\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Brush functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //First function that runs on a brush move\n  function brushmove() {\n\n    var extent = brush.extent();\n\n    //Reset the part that is visible on the big chart\n    var originalRange = main_yZoom.range();\n    main_yZoom.domain( extent );\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////// Update the axis ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the domain of the x & y scale of the big bar chart\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    main_yScale.rangeBands( [ main_yZoom(originalRange[0]), main_yZoom(originalRange[1]) ], 0.4, 0);\n\n    //Update the y axis of the big chart\n    d3.select(\".mainGroup\")\n      .select(\".y.axis\")\n      .call(main_yAxis);\n\n    /////////////////////////////////////////////////////////////\n    /////////////// Update the mini bar fills ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the colors within the mini bar chart\n    var selected = mini_yScale.domain()\n      .filter(function(d) { return (extent[0] - mini_yScale.rangeBand() + 1e-2 <= mini_yScale(d)) && (mini_yScale(d) <= extent[1] - 1e-2); }); \n    //Update the colors of the mini chart - Make everything outside the brush grey\n    d3.select(\".miniGroup\").selectAll(\".bar\")\n      .style(\"fill\", function(d, i) { return selected.indexOf(d.country) > -1 ? \"url(#gradient-rainbow-mini)\" : \"#e0e0e0\"; });\n\n    //Update the label size\n    d3.selectAll(\".y.axis text\")\n      .style(\"font-size\", textScale(selected.length));\n    \n    //Update the big bar chart\n    update();\n    \n  }//brushmove\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Click functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Based on http://bl.ocks.org/mbostock/6498000\n  //What to do when the user clicks on another location along the brushable bar chart\n  function brushcenter() {\n    var target = d3.event.target,\n        extent = brush.extent(),\n        size = extent[1] - extent[0],\n        range = mini_yScale.range(),\n        y0 = d3.min(range) + size / 2,\n        y1 = d3.max(range) + mini_yScale.rangeBand() - size / 2,\n        center = Math.max( y0, Math.min( y1, d3.mouse(target)[1] ) );\n\n    d3.event.stopPropagation();\n\n    gBrush\n        .call(brush.extent([center - size / 2, center + size / 2]))\n        .call(brush.event);\n\n  }//brushcenter\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Scroll functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  function scroll() {\n\n    //Mouse scroll on the mini chart\n    var extent = brush.extent(),\n      size = extent[1] - extent[0],\n      range = mini_yScale.range(),\n      y0 = d3.min(range),\n      y1 = d3.max(range) + mini_yScale.rangeBand(),\n      dy = d3.event.deltaY,\n      topSection;\n\n    if ( extent[0] - dy < y0 ) { topSection = y0; } \n    else if ( extent[1] - dy > y1 ) { topSection = y1 - size; } \n    else { topSection = extent[0] - dy; }\n\n    //Make sure the page doesn't scroll as well\n    d3.event.stopPropagation();\n    d3.event.preventDefault();\n\n    gBrush\n        .call(brush.extent([ topSection, topSection + size ]))\n        .call(brush.event);\n\n  }//scroll\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Helper functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Create a gradient \n  function createGradient(idName, endPerc) {\n\n    var coloursRainbow = [\"#EFB605\", \"#E9A501\", \"#E48405\", \"#E34914\", \"#DE0D2B\", \"#CF003E\", \"#B90050\", \"#A30F65\", \"#8E297E\", \"#724097\", \"#4F54A8\", \"#296DA4\", \"#0C8B8C\", \"#0DA471\", \"#39B15E\", \"#7EB852\"];\n\n    defs.append(\"linearGradient\")\n      .attr(\"id\", idName)\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", \"0%\").attr(\"y1\", \"0%\")\n      .attr(\"x2\", endPerc).attr(\"y2\", \"0%\")\n      .selectAll(\"stop\") \n      .data(coloursRainbow)                  \n      .enter().append(\"stop\") \n      .attr(\"offset\", function(d,i) { return i/(coloursRainbow.length-1); })   \n      .attr(\"stop-color\", function(d) { return d; });\n  }//createGradient\n\n  //Function to generate random strings of 5 letters - for the demo only\n  function makeWord() {\n      var possible_UC = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      var text = possible_UC.charAt(Math.floor(Math.random() * possible_UC.length));\n      \n      var possible_LC = \"abcdefghijklmnopqrstuvwxyz\";\n\n      for( var i=0; i < 5; i++ )\n          text += possible_LC.charAt(Math.floor(Math.random() * possible_LC.length));\n\n      return text;\n  }//makeWord\n\n  </script>", "description": "Brushable Horizontal Bar Chart - IV", "created_at": "2016-09-17T08:14:13Z", "updated_at": "2016-09-17T08:16:20Z", "api": ["d3.behavior.zoom", "d3.select", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.max", "d3.svg.brush", "d3.svg.symbol", "d3.selectAll", "d3.min", "d3.mouse", "d3.event.stopPropagation", "d3.event.preventDefault"], "readme": "Although there visually seems no difference between this brushable horizontal bar chart and versions [I](http://bl.ocks.org/nbremer/d8dff2fa37345d54f9e58eb74db460d0), [II](http://bl.ocks.org/nbremer/aadec1b834a6602575a217fea67f6f44), and [III](http://bl.ocks.org/nbremer/305ff3e402c269d33bbe6828f9848cae), this one is actually build on a different principle. And it is much, much better than the previous 3 versions in terms of UX, so just ignore those others :) (and as a bonus, there is way less code needed)\n\nIn this version, when you scroll your mouse, the bars in the big chart slide across the screen without any transitions.\n\nAs a note, there is no x scale adjustment in this version. Check out [version V](http://bl.ocks.org/nbremer/4c015860931fb6a13afc7bac51f40b43) for x scale adjustment\n\nThe idea for this came from [a tweet by Robert Monfera](https://twitter.com/monfera/status/758020571066200065) and an answer on [stackOverflow by AmeliaBR](http://stackoverflow.com/questions/21485339/d3-brushing-on-grouped-bar-chart) helped me figure out the first part.\n\nYou have the option to adjust how many bars you're seeing by adjusting the size of the little box on the right mini chart. You can also move the box and see the bars that you've selected appear in a bigger form on the left. Moving can be done either by grabbing and moving the box or scrolling.\n\nFor a bit more background, you can read my mini-blog about it [Brushable & interactive bar chart in d3.js](http://www.visualcinnamon.com/2016/07/brush-bar-chart-d3.html)\n\n\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/326fb6de768e85261bfd47aa1f497863'>Brushable Horizontal Bar Chart - IV</a>", "uid": "RicCheng_b052a92ccd0d07379b57b1d6f838c62a"}, {"code": "<script>\n    \n    function num(max) {\n      return Math.abs(Math.floor(Math.random() * max) + (max - 200));\n    }\n\t\n    var data = [];\n  \n    d3.timeDay.range(new Date(2015, 0, 1), new Date(2016, 0, 1), 1).forEach(function(date) {\n      data.push({\n        date: date,\n        similarityRed: num(100), \n        similarityOrange: num(200), \n        similarityYellow: num(300), \n        similarityBlue: num(400), \n        similarityGreen: num(700)\n      });\n    });\n\n\n    var svg = d3.select('#linechart').append('svg').attr('height', '300px').attr('width', '500px');\n\n    var xExtent = d3.extent(data, function(d, i) { return d.date; });\n\n    var yValues = [];\n\n    data.forEach(function(d) {\n      for (key in d) {\n        if (key !== 'date') {\n          yValues.push(d[key]);\n        }\n      }\t\n    });\n\n    var yMin = d3.min(yValues, function(d, i) { return d; });\n    var yMax = d3.max(yValues, function(d, i) { return d; });\n\n    var xOrigScale = d3.scaleTime()\n      .domain([ new Date(xExtent[0]), new Date(xExtent[1]) ])\n      .range([40,495]);\n\n    var xScale = xOrigScale.copy();\n\n    var yScale = d3.scaleLinear()\n      .domain([yMin, yMax])\n      .range([220,2]);\n\n\n    var xAxis = d3.axisBottom(xScale).ticks(6);\n    var yAxis = d3.axisLeft(yScale);\n\n    var xAxisG = svg.append('g')\n      .attr('id', 'xAxisG')\n      .attr('transform', 'translate(0,220)')\n      .call(xAxis);\n\n    var yAxisG = svg.append('g')\n      .attr('id', 'yAxisG')\n      .attr('transform', 'translate(40,0)')\n      .call(yAxis);\n\n\n    var color = d3.scaleOrdinal()\n        .range(['#FF4848', '#FF9C42', '#FFF06A', '#24E0FB', '#36F200']);\n\n    var linesG = svg.append('g');\n\n    var legend = svg.append('g')\n      .attr('id', 'legend')\n      .attr('transform', 'translate(60, 250)')\n      .style('opacity', '0');\n\n\n    var dateText = legend.append('text')\n      .attr('id', 'date-text')\n      .attr('class', 'legend-text')\n      .attr('x', 0)\n      .attr('y', 20);\n\n    var lines = {};\n    var paths = {};\n    var index = Object.keys(data[0]).length - 1;\n\n    for (key in data[0]) {\n\n      if (key !== 'date') {\n\n        var line = d3.line()\n          .x(function(d) {\n            return xScale(new Date(d.date));\n          })\n          .y(function(d) {\n            return yScale(d[key]);\n          })\n          .curve(d3.curveCatmullRom.alpha(0.5));\n\n        lines[key] = line;\n\n        path = linesG.append('path')\n          .attr('d', line(data))\n          .attr('id', key)\n          .attr('fill', 'none')\n          .attr('stroke', function(d) { return color(key); })\n          .attr('stroke-width', 2);\n\n        var totalLength = path.node().getTotalLength();\n\n        path\n          .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n          .attr('stroke-dashoffset', totalLength)\n          .transition()\n          .duration(2000)\n            .ease(d3.easeCubicInOut)\n          .attr('stroke-dashoffset', 0);\n\n        paths[key] = path;\n\n\n        legend.append('rect')\n          .attr('class', 'legend-text')\n          .attr('fill', color(key))\n          .attr('x', function() {\n            return 60 * index + 70;\n          })\n          .attr('height', 20)\n          .attr('width', 20)\n          .attr('y', 5);\n\n        legend.append('text')\n          .attr('id', 'text' + key)\n          .attr('class', 'legend-text')\n          .attr('fill', 'black')\n          .attr('x', function() {\n            return 60 * index + 93;\n          })\n          .attr('y', 20);\n\n        index--;\n      }\n    }\n\n    var clipPath = svg.append('clipPath')\n        .attr('id', 'clip')\n        .append('rect')\n        .attr('x', 40)\n        .attr('y', 0)\n        .attr('height', 240)\n        .attr('width', 500);\n\n    var focus = svg.append('g')\n      .attr('class', 'focus')\n      .style('display', 'none');\n\n    focus.append('line')\n      .attr('id', 'dotted-line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 0)\n      .attr('y2', 220)\n      .attr('stroke', 'black')\n      .attr('stroke-dasharray', '1, 2');\n\n\n    svg.append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", 500)\n      .attr(\"height\", 240)\n      .on(\"mouseout\", function() { \n        focus.style('display', 'none');\n        legend\n          .transition()\n          .duration(100)\n          .style('opacity', '0');\n      })\n      .on(\"mousemove\", mousemove)\n      .style('cursor', 'move')\n      .attr('clip-path', 'url(#clip)');\n\n\n    var zoom = d3.zoom()\n        .scaleExtent([1, 10])\n        .on('zoom', zoomed);\n\n    svg.call(zoom);\n\n    function zoomed() {\n      console.log('zoomed');\n\n      xScale = d3.event.transform.rescaleX(xOrigScale);\n\n      xAxisG.call(xAxis.scale(d3.event.transform.rescaleX(xOrigScale)));\n\n      for (key in data[0]) {\n          if (key !== 'date') {\n\n            line = lines[key];\n            path = paths[key];\n\n            totalLength = path.node().getTotalLength();\n\n            path\n              .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n              .attr('stroke-dashoffset', totalLength)\n              .attr('stroke-dashoffset', 0);\n\n            path.attr('d', line(data));\n            path.attr('clip-path', 'url(#clip)');\n\n          }\n        }\n\n    }\n\n\n    var bisectDate = d3.bisector(function(d) { return new Date(d.date); }).left;\n\n    function mousemove() {\n      var x = d3.mouse(this)[0];\n\n      var x0 = xScale.invert(d3.mouse(this)[0]),\n        i = bisectDate(data, x0, 1),\n        d0 = data[i - 1],\n        d1 = data[i],\n        d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n\n      focus.style('display', 'block');\n      dateText.style('display', 'block');\n      legend\n        .transition()\n        .duration(90)\n        .style('opacity', '1');\n\n      focus.attr(\"transform\", \"translate(\" + xScale( new Date(d.date)) + \",0)\");\n\n      var date = new Date(d.date);\n      date = date.toUTCString().split(' ');\n      date = date[0] + ' ' + date[1] + ' ' + date[2] + ' ' + date[3];\n\n      dateText.text(date);\n\n      for (key in data[0]) {\n          if (key !== 'date') {\n            svg.select('#text' + key)\n              .text(Number(d[key]).toLocaleString());\n\n        }\n      }\n    }\n\n  </script>", "description": "animated zoomed multi line chart", "created_at": "2016-09-17T05:15:31Z", "updated_at": "2016-09-17T09:18:37Z", "api": ["d3.timeDay.range", "d3.select", "d3.extent", "d3.min", "d3.max", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.scaleOrdinal", "d3.line", "d3.curveCatmullRom.alpha", "d3.zoom", "d3.event.transform.rescaleX", "d3.bisector", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n### Animated Multi Line Chart\n#### Features\n* Animated\n* Zoomable\n* Pannable\n* Dynamic Legend", "uid": "atomiccc_e559012fa66e51a025eac647aaf1c0fe"}, {"code": "<script>\n            var dataset = [\n                { label: 'Working', count: 8 },\n                { label: 'Sleeping', count: 8 },\n                { label: 'Eating', count: 2 },\n                { label: 'Exercise', count: .25 },\n                { label: 'Internet', count: .25 },\n                { label: 'Chores etc', count: 1.5 },\n                { label: 'Thinking about d3', count: 2.25 }\n                \n            ];\n\n            var donutWidth = 75;\n            var width = 360;\n            var height = 360;\n            var radius = Math.min(width, height) / 2;\n            var legendRectSize = 18;\n            var legendSpacing = 4;\n\n            var color = d3.scaleOrdinal(d3.schemeCategory20);\n\n            var svg = d3.select('#chart')\n                .append('svg')\n                .attr('width', width)\n                .attr('height', height)\n                .append('g')\n                .attr('transform', 'translate(' + (width / 2) +  ',' + (height / 2) + ')');\n\n            var arc = d3.arc()\n                .innerRadius(radius - donutWidth)\n                .outerRadius(radius);\n\n            var pie = d3.pie()\n                .value(function(d) { return d.count; })\n                .sort(null);\n\n            var tooltip = d3.select('#chart')          \n              .append('div')                             \n              .attr('class', 'tooltip');                \n\n            tooltip.append('div')                       \n              .attr('class', 'label');                   \n\n            tooltip.append('div')                      \n              .attr('class', 'count');                 \n\n            tooltip.append('div')                     \n              .attr('class', 'percent');    \n\n            var path = svg.selectAll('path')\n                .data(pie(dataset))\n                .enter()\n                .append('path')\n                .attr('d', arc)\n                .attr('fill', function(d, i) {\n                    return color(d.data.label);\n                });\n            path.on('mouseover', function(d) {\n              var total = d3.sum(dataset.map(function(d) {\n                return d.count;\n              }));\n              var percent = Math.round(1000 * d.data.count / total) / 10;\n              tooltip.select('.label').html(d.data.label);\n              tooltip.select('.count').html(d.data.count);\n              tooltip.select('.percent').html(percent + '%');\n              tooltip.style('display', 'block');\n            });\n\n            path.on('mouseout', function() {\n              tooltip.style('display', 'none');\n            });\n\n            var legend = svg.selectAll('.legend')\n              .data(color.domain())\n              .enter()\n              .append('g')\n              .attr('class', 'legend')\n              .attr('transform', function(d, i) {\n                var height = legendRectSize + legendSpacing;\n                var offset =  height * color.domain().length / 2;\n                var horz = -2 * legendRectSize;\n                var vert = i * height - offset;\n                return 'translate(' + horz + ',' + vert + ')';\n              });\n\n            legend.append('rect')\n                .attr('width', legendRectSize)\n                .attr('height', legendRectSize)\n                .style('fill', color)\n                .style('stroke', color);\n\n            legend.append('text')\n                .attr('x', legendRectSize + legendSpacing)\n                .attr('y', legendRectSize - legendSpacing)\n                .text(function(d) { return d; });\n        </script>", "description": "fresh block", "created_at": "2016-09-17T00:46:06Z", "updated_at": "2016-09-17T00:46:06Z", "api": ["d3.scaleOrdinal", "d3.select", "d3.arc", "d3.pie", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "logancarter_455b7240181eb3bdbf3f6b4987afd2d6"}, {"code": "<script>\n\n// Setting up your vars for defining the boundaries of this chart + margins\nvar margin = {top: 20, right: 40, bottom: 80, left: 80},\n  width = 800 - margin.left - margin.right,\n  height = 380 - margin.top - margin.bottom;\n\n// X axis scale is defined by the length of the array divided by the width of the chart\n// second parametere (.2) defines distance between\nvar x0 = d3.scale.ordinal()\n  .rangeRoundBands([0, width], .2);\n\nvar x1 = d3.scale.ordinal();\n\n// Y axis scale is defined by a linear scale, max being the height of the chart.\nvar y = d3.scale.linear()\n  .range([height, 0]);\n\nvar color = d3.scale.ordinal()\n  .range([\"#e74c3c\", \"#2ecc71\", \"#f1c40f\", \"#3498db\"]); //<-- Red, Green, Yellow, Blue\n\nvar xAxis = d3.svg.axis()\n  .scale(x0)\n  .tickSize(10,0)\n  .orient(\"bottom\");\n\n// additional features, like its alignment and tickFormat\nvar yAxisLeft = d3.svg.axis()\n  .scale(y)\n  .orient(\"left\")\n  .tickSize(7,0)\n  .tickFormat(d3.format(\".2s\"));\n\n// Another Y Axis for Mr. Simmon\nvar yAxisRight = d3.svg.axis()\n  .scale(y)\n  .orient(\"right\")\n  .tickSize(7,0)\n  .tickFormat(d3.format(\".2s\"));\n\n//  This is defining a var (svg) that will draw our div at this current box\nvar svg = d3.select(\"div\").append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .attr(\"class\", \"chart\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar sortedXvalues = {};\n\n// We load our data\nd3.csv(\"pokemans.csv\", function(error, data) {\n  if (error) throw error;\n  data.sort(function(a,b) {\n    return d3.ascending(a.Type, b.Type); //<-- By default we sort by Type\n  });\n\n// Types out Red, Blue, Green, and Average data from each Object\n  var Stats_names = d3.keys(data[0])\n    .filter(function(key) { return key != \"Pokemon\" && key != \"Type\" && key != \"Generation\" });\n\n  console.log(Stats_names);\n// Adds to our CSV the RGB value where name is equal to name and the value is the color's value\n  data.forEach(function(d) {\n    d.Stats = Stats_names.map(function(name) { return {name: name, value: +d[name]}; });\n  });\n\n  x0.domain(data.map(function(d) { return d.Pokemon; }));\n  x1.domain(Stats_names).rangeRoundBands([0, x0.rangeBand()]);\n  y.domain([0, d3.max(data, function(d) { return d3.max(d.Stats, function(d) { return d.value; }); })]);\n\n  var TypeCount = d3.nest()\n    .key(function(d) { return d.Type; })\n    .rollup(function(v) { return v.length; })\n    .entries(data);\n\n  var pokemon = svg.selectAll(\".pokemon\")\n    .data(data);\n\n  pokemon.enter()\n    .append(\"g\")\n    .attr(\"class\", \"pokemon\")\n    .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Pokemon) + \",0)\"; });\n\n  var columnBars = pokemon.selectAll(\"rect\")\n    .data(function(d) { return d.Stats; });\n\n  var sortSelection = svg.selectAll(\".type\")\n    .data(data);\n\n//Type name either Generation or Type type\n\n  sortSelection.enter().append(\"text\")\n    .attr(\"class\", \"type\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", function(d) { return \"translate(\" + (x0(d.Pokemon) + margin.right) + \",\" + (height + margin.bottom/1.9) + \")\"; })\n    .text(function(d) {\n        if (!!sortedXvalues[d.Type]) {\n          sortedXvalues[d.Type]++\n        }\n        else {\n          sortedXvalues[d.Type] = 1;\n          return d.Type;\n        }\n    });\n\n//Draws a rectangle\n  columnBars.enter().append(\"rect\")\n    .attr(\"width\", x1.rangeBand())\n    .attr(\"x\", function(d) { return x1(d.name); })\n    .attr(\"y\", function(d) { return y(d.value); })\n    .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"fill\", function(d) { return color(d.name); })\n    .on(\"mouseover\", function(d) {\n      d3.select(\"#tooltip\")\n        .style(\"left\", width - 50 + \"px\")\n        .style(\"top\", \"50px\")\n        .select(\"#value\")\n        .text(d.name + ' = ' + d.value);\n      //Show the tooltip\n      d3.select(\"#tooltip\").classed(\"hidden\", false);\n    })\n    .on(\"mouseout\", function() {\n    //Hide the tooltip\n      d3.select(\"#tooltip\").classed(\"hidden\", true);\n    });\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis)\n    .append(\"text\")\n    .attr(\"y\", 60)\n    .attr(\"x\", (width/2) -40)\n    .style(\"font-size\", 12)\n    .style(\"text-transform\", \"uppercase\")\n    .style(\"opacity\", .8)\n    .text(\"Pokemans\");\n\n// Labels your y axis and formats it\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxisLeft)\n    .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \"-5em\")\n    .attr(\"x\", 30-height/2)\n    .style(\"text-anchor\", \"end\")\n    .style(\"font-size\", 12)\n    .style(\"text-transform\", \"uppercase\")\n    .style(\"opacity\", .8)\n    .text(\"Points\");\n\n  svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + width + \" ,0)\")\n    .call(yAxisRight);\n\n  d3.selectAll(\"#sort-by-controls input[name=mode]\")\n    .on(\"change\", function() {\n      var Mode = this.value;\n      d3.csv(\"pokemans.csv\", function(error, data) {\n        if (error) throw error;\n        data.sort(function(a,b) {\n          console.log('sort', a, b);\n          return d3.ascending(a[Mode], b[Mode]);\n        });\n        data.forEach(function(d) {\n          d.Stats = Stats_names.map(function(name) { return {name: name, value: +d[name]}; });\n        });\n        x0.domain(data.map(function(d) { return d.Pokemon; }));\n        pokemon.transition().duration(1000).attr(\"class\", \"pokemon\")\n          .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Pokemon) + \",0)\"; });\n        svg.selectAll(\".x\").filter(\".axis\")\n          .transition().duration(1000)\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis);\n\n        sortSelection.transition().duration(1000)\n          .attr(\"class\", \"type\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"transform\", function(d) { return \"translate(\" + (x0(d.Pokemon) + margin.right) + \",\" + (height + margin.bottom/1.9) + \")\"; })\n          .text(function(d) {\n              if (!!sortedXvalues[d[Mode]]) {\n                sortedXvalues[d[Mode]]++\n              }\n              else {\n                sortedXvalues[d[Mode]] = 1;\n                return d[Mode];\n              }\n          });\n\n        columnBars.transition().duration(1000)\n          .attr(\"width\", x1.rangeBand())\n          .attr(\"x\", function(d) { return x1(d.name); })\n          .attr(\"y\", function(d) { return y(d.value); })\n          .attr(\"height\", function(d) { return height - y(d.value); })\n          .style(\"fill\", function(d) { return color(d.name); });\n        });\n    });\n});\n</script>", "description": "Sortable Grouped Bar Chart (w/ Pokemans)", "created_at": "2016-09-16T20:47:50Z", "updated_at": "2016-09-16T20:53:31Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.ascending", "d3.keys", "d3.max", "d3.nest", "d3.selectAll"], "readme": "First block!\n\nNeeded a sortable grouped bar chart for work. Took the @mbostock grouped bar chart and updated it to my needs.\n\nSorting is not robust at this time! Unfortunately, but I wanted to send something to apply to visfest this year.", "uid": "sadbumblebee_89d9cc90e17eca55e880405404690d91"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom,\n    heightBubble = height * 0.6,\n    heightBarchart = height * 0.4;\nvar svgParent = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\nvar svgBubble = svgParent.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nvar svgBarchart = svgParent.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + (margin.top + heightBubble) + \")\");\nvar fontSize = 92;\n\n//\n\nsvgBubble.append(\"text\")\n  .attr(\"id\", \"votes-clinton\")\n  .attr(\"x\", 0)\n  .attr(\"y\", heightBubble/2)\n  .style(\"fill\", \"blue\")\n  .style(\"font-size\", fontSize +\"px\")\n  .style(\"font-weight\", \"bold\")\n  .style(\"font-family\", \"sans-serif\")\n  .text(\"Clinton\");\nsvgBubble.append(\"text\")\n  .attr(\"id\", \"votes-trump\")\n  .attr(\"x\", width)\n  .attr(\"y\", heightBubble/2)\n  .style(\"fill\", \"red\")\n  .style(\"font-size\", fontSize +\"px\")\n  .style(\"font-weight\", \"bold\")\n  .style(\"font-family\", \"sans-serif\")\n  .style(\"text-anchor\", \"end\")\n  .text(\"Trump\");\nvar nodes = [\n  {\n    candidate: 'clinton',\n    radius: 40,\n    img1: 'clinton-1.jpg',\n    img2: 'clinton-2.jpg',\n    color: \"blue\"\n  },\n  {\n    candidate: 'trump',\n    radius: 40,\n    img1: 'trump-1.jpg',\n    img2: 'trump-2.jpg',\n    color: \"red\"\n  }];\nvar defs = svgBubble.append(\"svg:defs\");\nvar images = [];\nnodes.forEach(function(d){\n  images.push( {candidate: d.candidate, img: d.img1, type: 'not-yelling'} );\n  images.push( {candidate: d.candidate, img: d.img2, type: 'yelling'} );\n});\ndefs.selectAll(\"pattern\")\n    .data(images)\n  .enter().append(\"pattern\")\n    .attr(\"id\", function(d){ return \"img-\"+ d.candidate +\"-\"+ d.type; })\n    .attr(\"width\", 1)\n    .attr(\"height\", 1)\n    .attr(\"viewBox\", \"0 0 100 100\")\n    .attr(\"preserveAspectRatio\", \"none\")\n    .append(\"image\")\n      .attr(\"width\", 100)\n      .attr(\"height\", 100)\n      .attr(\"xlink:href\", function(d){ return d.img; })\n      .attr(\"preserveAspectRatio\", \"none\");\nvar force = d3.layout.force()\n    .gravity(5)\n    .charge(10)\n    .linkDistance(-2000)\n    .nodes(nodes)\n    .size([width, heightBubble])\n    .start();\nvar bubbles = svgBubble.selectAll(\"circle\")\n    .data(nodes)\n  .enter().append(\"circle\")\n    .attr(\"id\", function(d){ return d.candidate; })\n    .attr(\"class\", \"bubble\")\n    .attr(\"r\", function(d) { return d.radius; })\n    .style(\"stroke\", function(d){ return d.color; })\n    .style(\"fill\", function(d){ return \"url(#img-\"+ d.candidate +\"-not-yelling)\"; });\nforce.on(\"tick\", function(e) {\n  var q = d3.geom.quadtree(nodes),\n      i = 0,\n      n = nodes.length;\n  while (++i < n) q.visit(collide(nodes[i]));\n  svgBubble.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; });\n});\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\n//\n\nd3.tsv('elections.tsv', function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d){\n    d['Electoral College Votes'] = +d['Electoral College Votes'];\n    d.Clinton = +(d.Clinton.replace('%',''));\n    d.Trump = +(d.Trump.replace('%',''));\n    d.Unsure = +(d.Unsure.replace('%',''));\n    d['Margin of Error'] = +(d['Margin of Error'].replace('%',''));\n  });\n\n  var x = d3.scale.ordinal()\n      .rangeRoundBands([0, width], .1);\n\n  var y = d3.scale.linear()\n      .range([heightBarchart, 0]);\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\")\n      .tickValues(function(){ return y.domain(); });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d['Electoral College Votes']; })]);\n\n  svgBarchart.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + heightBarchart + \")\")\n      .call(xAxis);\n\n  svgBarchart.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Electoral College Votes\");\n  d3.selectAll('.y.axis path').remove();\n\n  svgBarchart.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.State); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d['Electoral College Votes']); })\n      .attr(\"height\", function(d) { return heightBarchart - y(d['Electoral College Votes']); })\n      .on('mouseover', function(d){\n        nodes[0].radius = d.Clinton;\n        nodes[0].radius +=  (nodes[0].radius * nodes[0].radius)/30;\n        nodes[1].radius = d.Trump;\n        nodes[1].radius +=  (nodes[1].radius * nodes[1].radius)/30;\n        //\n        var bubbleInFront, bubbleInBack;\n        if (d.Clinton >= d.Trump) {\n          bubbleInFront = \"trump\";\n          bubbleInBack = \"clinton\";\n        } else {\n          bubbleInFront = \"clinton\";\n          bubbleInBack = \"trump\";\n        }\n        d3.select( \".bubble#\"+bubbleInFront ).moveToFront();\n        d3.select( \".bubble#\"+bubbleInFront ).style(\"fill\", function(d){ return \"url(#img-\"+ d.candidate +\"-not-yelling)\"; });\n        d3.select( \".bubble#\"+bubbleInBack ).style(\"fill\", function(d){ return \"url(#img-\"+ d.candidate +\"-yelling)\"; });\n        //\n        bubbles\n          .transition()\n            .duration(100)\n            // .attr(\"r\", function(d) { return d.radius + (d.radius * d.radius)/30; })\n            .attr(\"r\", function(d) { return d.radius; })\n            .attr(\"cx\", function(d) {\n              return d.x + ((Math.random() - .5) * 50);\n            })\n            .attr(\"cy\", function(d) {\n              return d.y + ((Math.random() - .5) * 50);\n            });\n        //\n        d3.select(\"#votes-clinton\").text(d.Clinton +\"%\");\n        d3.select(\"#votes-trump\").text(d.Trump +\"%\");\n        d3.select(\"#votes-\"+bubbleInFront).style(\"font-size\", fontSize/2 +\"px\");\n        d3.select(\"#votes-\"+bubbleInBack).style(\"font-size\", fontSize +\"px\");\n      });\n\n});\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function(){\n    this.parentNode.appendChild(this);\n  });\n};\n\n</script>", "description": "Upcoming shouting match at d3.unconf", "created_at": "2016-09-16T06:24:58Z", "updated_at": "2016-09-16T06:40:28Z", "api": ["d3.select", "d3.layout.force", "d3.geom.quadtree", "d3.tsv", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.max", "d3.selectAll"], "readme": "My submission for a d3.unconf 2016 ticket...\nData from somewhere?\nSomething about Trump and Hillary shouting at each other.\nShoulda/coulda/woulda put noises of them doing that.\nOh well.", "uid": "jcnesci_abdda0bcf5206b3be3e6853e677eb0a8"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 40, left: 40},\n  width = 500 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n  console.log(width);\n  \nvar y_male = d3.scale.ordinal().rangeRoundBands([height, 0], 0.01, 0);\nvar y_female = d3.scale.ordinal().rangeRoundBands([height, 0], 0.01, 0);\n\nvar x_male = d3.scale.linear().range([0, width]);\nvar x_female = d3.scale.linear().range([0, width]);\n\nvar xAxisMale = d3.svg.axis()\n  .scale(x_male)\n  .orient(\"bottom\")\n\nvar yAxisMale = d3.svg.axis()\n  .scale(y_male)\n  .orient(\"left\")\n  .ticks(10);\n\nvar xAxisFemale = d3.svg.axis()\n  .scale(x_female)\n  .orient(\"bottom\")\n\t.ticks(10);\n\nvar yAxisFemale = d3.svg.axis()\n  .scale(y_female)\n  .orient(\"right\")\n  .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width*2 + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"census_male.csv\", function(error, data) {\n  data.forEach(function(d) {\n    d.age = parseInt(d.AGE);\n    d.count = parseInt(d.POPESTIMATE2015);\n  });\n  \n  x_male.domain([0, d3.max(data, function(d) { return d.count; })]);\n  y_male.domain(data.map(function(d) { return d.age; }));\n  \t\n  console.log(width);\n  console.log(height);\n  console.log(\"translate(\" + width + \",\" + height + \")\");\n  svg.append(\"g\")\n    .attr(\"class\", \"xAxisMale\")\n    .attr(\"transform\", \"translate(\" + width+10 + \",\" + height + \")\")\n    .call(xAxisMale)\n    .selectAll(\"text\")\n    .style(\"text-anchor\", \"end\")\n    .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n    .attr(\"class\", \"yAxisMale\")\n    .call(yAxisMale)\n  \t.attr(\"transform\", \"translate(\" + width + \",0)\")\n\n  svg.selectAll(\"bar\")\n    .data(data)\n    .enter().append(\"rect\")\n    .style(\"fill\", \"steelblue\")\n    .attr(\"y\", function(d) { return y_male(d.age); })\n    .attr(\"height\", y_male.rangeBand())\n    .attr(\"x\", width+10)\n    .attr(\"width\", function(d) { return x_male(d.count); });\n});\n  \nd3.csv(\"census_female.csv\", function(error, data) {\n  data.forEach(function(d) {\n    d.age = parseInt(d.AGE);\n    d.count = parseInt(d.POPESTIMATE2015);\n  });\n  \n  x_female.domain([0, d3.max(data, function(d) { return d.count; })]);\n  y_female.domain(data.map(function(d) { return d.age; }));\n  \n  console.log(\"translate(0,\" + height + \")\");\n  \n  svg.append(\"g\")\n    .attr(\"class\", \"xAxisFemale\")\n    .attr(\"transform\", \"translate(-20,\" + height + \")\")\n    .call(xAxisFemale)\n    .selectAll(\"text\")\n    .style(\"text-anchor\", \"end\")\n    .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.selectAll(\"bar\")\n    .data(data)\n    .enter().append(\"rect\")\n    .style(\"fill\", \"pink\")\n    .attr(\"y\", function(d) { return y_female(d.age); })\n    .attr(\"height\", y_female.rangeBand())\n    .attr(\"x\", function(d) { return -20+width-x_female(d.count); })\n    .attr(\"width\", function(d) { return x_female(d.count); });\n}); \n</script>", "description": "US Male and Female age distribution estimate for 2015", "created_at": "2016-09-16T06:18:27Z", "updated_at": "2016-09-17T03:56:24Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "tim-hyon_bc8dda1c54d6232824f5c92327348225"}, {"code": "<script>\n\nfunction num(max) {\n\treturn Math.abs(Math.floor(Math.random() * max) + (max - 200));\n}\n\nvar data = [\n\t{ date: '2015-09-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2015-10-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2015-11-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2015-12-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-01-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-02-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-03-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-04-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-05-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-06-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-07-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-08-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-09-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-10-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-11-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-12-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-01-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-02-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-03-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-04-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-05-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-06-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-07-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-08-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-09-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n];\n\n\nvar svg = d3.select('#linechart').append('svg').attr('height', '500px').attr('width', '500px');\n\n\nvar xExtent = d3.extent(data, function(d, i) { return d.date; });\n\nvar yValues = [];\n\ndata.forEach(function(d) {\n\tfor (key in d) {\n\t\tif (key !== 'date') {\n\t\t\tyValues.push(d[key]);\n\t\t}\n\t}\t\n});\n\nvar yMin = d3.min(yValues, function(d, i) { return d; });\nvar yMax = d3.max(yValues, function(d, i) { return d; });\n\nvar xScale = d3.scaleTime()\n\t.domain([ new Date(xExtent[0]), new Date(xExtent[1]) ])\n\t.range([40,495]);\n\nvar yScale = d3.scaleLinear()\n\t.domain([yMin, yMax])\n\t.range([460,240]);\n\n\nvar xAxis = d3.axisBottom(xScale).ticks(5);\nvar yAxis = d3.axisLeft(yScale);\n\nvar gX = svg.append('g')\n\t.attr('id', 'xAxisG')\n\t.attr('transform', 'translate(0,460)')\n\t.call(xAxis);\n\nvar gY = svg.append('g')\n\t.attr('id', 'yAxisG')\n\t.attr('transform', 'translate(40,0)')\n\t.call(yAxis);\n\nvar color = d3.scaleOrdinal()\n    .range(['#FF4848', '#FF9C42', '#FFF06A', '#24E0FB', '#36F200']);\n\n// var path, line;\nvar lines = {};\n\nfor (key in data[0]) {\n\n\tif (key !== 'date') {\n\n\t\tvar line = d3.line()\n\t\t\t.x(function(d) {\n\t\t\t\treturn xScale(new Date(d.date));\n\t\t\t})\n\t\t\t.y(function(d) {\n\t\t\t\treturn yScale(d[key]);\n\t\t\t})\n\t\t\t.curve(d3.curveCatmullRom.alpha(0.5));\n\n\t\tlines[key] = line;\n\n\t\tpath = svg.append('g').append('path')\n\t\t\t.attr('d', line(data))\n\t\t\t.attr('id', key)\n\t\t\t.attr('fill', 'none')\n\t\t\t.attr('stroke', function(d) { return color(key); }) //'#36F200')\n\t\t\t.attr('stroke-width', 2);\n\n\t\tvar totalLength = path.node().getTotalLength();\n\n\t\tpath\n\t\t\t.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n\t\t\t.attr(\"stroke-dashoffset\", totalLength)\n\t\t\t.transition()\n\t\t\t.duration(2000)\n\t\t    .ease(d3.easeCubicInOut)\n\t\t\t.attr(\"stroke-dashoffset\", 0);\n\n\n\t}\n\n}\n\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, 40])\n    .on(\"zoom\", zoomed);\n\nsvg.call(zoom);\n\nfunction zoomed() {\n  console.log('zoomed');\n  // debugger;\n  // svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n  // svg.attr(\"transform\", d3.event.transform);\n  gX.call(xAxis.scale(d3.event.transform.rescaleX(xScale)));\n  // gY.call(yAxis.scale(d3.event.transform.rescaleY(yScale)));\n  // debugger;\n  for (key in data[0]) {\n  \tif (key !== 'date') {\n  \t\tsvg.select('#' + key).attr('transform', d3.event.transform);\n  \t\t// svg.select('#' + key).attr('d', lines[key](data));\n\n  \t}\n  }\n}\n  </script>", "description": "animated lines with broken zoom", "created_at": "2016-09-16T02:29:35Z", "updated_at": "2016-09-16T02:29:35Z", "api": ["d3.select", "d3.extent", "d3.min", "d3.max", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.scaleOrdinal", "d3.line", "d3.curveCatmullRom.alpha", "d3.zoom", "d3.event.transform.rescaleX", "d3.event.transform.rescaleY"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/atomiccc/'>atomiccc</a>'s block: <a href='http://bl.ocks.org/atomiccc/c34999ea59ed1ea8a24956395874764b'>animated lines with broken zoom</a>", "uid": "seemantk_b9fa57629c87f0e3e78338fc6f62fa02"}, {"code": "<script>\n\nfunction num(max) {\n\treturn Math.abs(Math.floor(Math.random() * max) + (max - 200));\n}\n\nvar data = [\n\t{ date: '2015-09-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2015-10-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2015-11-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2015-12-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-01-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-02-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-03-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-04-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-05-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-06-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-07-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-08-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-09-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-10-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-11-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2016-12-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-01-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-02-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-03-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-04-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-05-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-06-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-07-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-08-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n\t{ date: '2017-09-01', similarityRed: num(100), similarityOrange: num(200), similarityYellow: num(300), similarityBlue: num(400), similarityGreen: num(700) },\n];\n\n\nvar svg = d3.select('#linechart').append('svg').attr('height', '500px').attr('width', '500px');\n\n\nvar xExtent = d3.extent(data, function(d, i) { return d.date; });\n\nvar yValues = [];\n\ndata.forEach(function(d) {\n\tfor (key in d) {\n\t\tif (key !== 'date') {\n\t\t\tyValues.push(d[key]);\n\t\t}\n\t}\t\n});\n\nvar yMin = d3.min(yValues, function(d, i) { return d; });\nvar yMax = d3.max(yValues, function(d, i) { return d; });\n\nvar xScale = d3.scaleTime()\n\t.domain([ new Date(xExtent[0]), new Date(xExtent[1]) ])\n\t.range([40,495]);\n\nvar yScale = d3.scaleLinear()\n\t.domain([yMin, yMax])\n\t.range([460,240]);\n\n\nvar xAxis = d3.axisBottom(xScale).ticks(5);\nvar yAxis = d3.axisLeft(yScale);\n\nvar gX = svg.append('g')\n\t.attr('id', 'xAxisG')\n\t.attr('transform', 'translate(0,460)')\n\t.call(xAxis);\n\nvar gY = svg.append('g')\n\t.attr('id', 'yAxisG')\n\t.attr('transform', 'translate(40,0)')\n\t.call(yAxis);\n\nvar color = d3.scaleOrdinal()\n    .range(['#FF4848', '#FF9C42', '#FFF06A', '#24E0FB', '#36F200']);\n\n// var path, line;\nvar lines = {};\n\nfor (key in data[0]) {\n\n\tif (key !== 'date') {\n\n\t\tvar line = d3.line()\n\t\t\t.x(function(d) {\n\t\t\t\treturn xScale(new Date(d.date));\n\t\t\t})\n\t\t\t.y(function(d) {\n\t\t\t\treturn yScale(d[key]);\n\t\t\t})\n\t\t\t.curve(d3.curveCatmullRom.alpha(0.5));\n\n\t\tlines[key] = line;\n\n\t\tpath = svg.append('g').append('path')\n\t\t\t.attr('d', line(data))\n\t\t\t.attr('id', key)\n\t\t\t.attr('fill', 'none')\n\t\t\t.attr('stroke', function(d) { return color(key); }) //'#36F200')\n\t\t\t.attr('stroke-width', 2);\n\n\t\tvar totalLength = path.node().getTotalLength();\n\n\t\tpath\n\t\t\t.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n\t\t\t.attr(\"stroke-dashoffset\", totalLength)\n\t\t\t.transition()\n\t\t\t.duration(2000)\n\t\t    .ease(d3.easeCubicInOut)\n\t\t\t.attr(\"stroke-dashoffset\", 0);\n\n\n\t}\n\n}\n\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, 40])\n    .on(\"zoom\", zoomed);\n\nsvg.call(zoom);\n\nfunction zoomed() {\n  console.log('zoomed');\n  // debugger;\n  // svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n  // svg.attr(\"transform\", d3.event.transform);\n  gX.call(xAxis.scale(d3.event.transform.rescaleX(xScale)));\n  // gY.call(yAxis.scale(d3.event.transform.rescaleY(yScale)));\n  // debugger;\n  for (key in data[0]) {\n  \tif (key !== 'date') {\n  \t\tsvg.select('#' + key).attr('transform', d3.event.transform);\n  \t\t// svg.select('#' + key).attr('d', lines[key](data));\n\n  \t}\n  }\n}\n  </script>", "description": "animated lines with broken zoom", "created_at": "2016-09-15T22:13:29Z", "updated_at": "2016-09-15T22:13:30Z", "api": ["d3.select", "d3.extent", "d3.min", "d3.max", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.scaleOrdinal", "d3.line", "d3.curveCatmullRom.alpha", "d3.zoom", "d3.event.transform.rescaleX", "d3.event.transform.rescaleY"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "atomiccc_c34999ea59ed1ea8a24956395874764b"}, {"code": "<script>\n\nvar diameter = 900,\n    format = d3.format(\",d\"),\n    color = d3.scaleOrdinal(d3.schemeCategory20c);\n\nvar bubble = d3.pack()\n    .size([diameter, diameter])\n    .padding(0);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nfunction ready(error,\n  unique_subs,\n  city_data,\n  city_meta,\n  project_backers\n  // uSmap,\n  // ipInfo\n  )\n{\n  if (error) throw error;\n\n  function updateCity(city_id) {\n    var mapSubs = d3.map(unique_subs, function (d) { return d.sub_id;});\n    var mapSubsCounts = d3.map();\n    var mapCities = d3.map(city_meta, function (d) { return d.city_id;});\n\n    data = project_backers.filter(function (d) {\n      return d.city_id == city_id; \n    });\n\n\n    project_backers.forEach(function (d) {\n      d.backers_count = +d.backers_count;    \n      d.city = mapCities.get(d.city_id);\n      d.sub = mapSubs.get(d.sub_id);\n      if (!mapSubsCounts.has(d.sub_id)) {\n        mapSubsCounts.set(d.sub_id, 0);\n      }\n      mapSubsCounts.set(d.sub_id, mapSubsCounts.get(d.sub_id)+1);\n    });\n\n\n    var root = d3.hierarchy({children:data})\n        .sum(function(d) { return d.backers_count; })\n        .sort(function(a, b) { \n          //Sort by categories that have more projects first\n          return d3.descending(mapSubsCounts.get(a.data.sub_id), mapSubsCounts.get(b.data.sub_id)) ||\n                 // d3.ascending(a.data.sub_id, b.data.sub_id) || \n                 b.data.backers_count - a.data.backers_count ; \n        });\n\n    bubble(root);\n    d3.selectAll(\".node\").remove();\n\n    var node = svg.selectAll(\".node\")\n        .data(root.children)\n      .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n    node.append(\"title\")\n        .text(function(d) { return \"Project id: \" + d.data.project_id +\n           \" Category:\" + d.data.sub.subcategory + \n           \" Backers: \" + format(d.data.backers_count); });\n\n    node.append(\"circle\")\n        .attr(\"r\", function(d) { return d.r; })\n        .style(\"fill\", function(d) { \n          return color(d.data.sub_id); \n        });\n\n    //Text looks kind of ugly...\n    // node.append(\"text\")\n    //     .attr(\"dy\", \".3em\")\n    //     .style(\"text-anchor\", \"middle\")\n    //     .text(function(d) { return d.data.project_id.substring(0, d.r / 3); });    \n  }\n\n\n\n  d3.select(\"#selectCity\")\n    .on(\"change\", function () { \n      updateCity(d3.select(this).property(\"value\")); \n    })\n    .selectAll(\"option\")\n    .data(city_meta)\n    .enter()\n    .append(\"option\")\n    .text(function (d) { return d.city_state; })\n    .attr(\"value\", function (d) { return d.city_id; });\n\n\n  updateCity(\"1\") //New York\n}\n\nd3.queue()\n  .defer(d3.csv, \"unique_subs.csv\") // 67KB\n  .defer(d3.csv, \"city_data_2.csv\") // 67KB\n  .defer(d3.csv, \"city_map_5.csv\") // 23KB\n  .defer(d3.csv, \"project_raw_4.csv\") // 2.4MB\n  // .defer(d3.json, \"map.json\") //600kb\n  // .defer(d3.json, 'http://ipinfo.io')\n  // .defer()\n  .await(ready);\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "Kickstarter projects in New York", "created_at": "2016-09-15T20:59:21Z", "updated_at": "2016-09-16T16:08:11Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.pack", "d3.select", "d3.map", "d3.hierarchy", "d3.descending", "d3.ascending", "d3.selectAll", "d3.queue"], "readme": "Bubble chart showing 100.000 Kickstarter projects. Based on the data and idea of [Polygraph](http://polygraph.cool/kickstarter/) but trying to reorganize the colors. Color represents the project category, size the number of backers.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063269'>Bubble Chart</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/0d81ccfd24578d5d563c55e785b3b40a'>Bubble Chart d3 v4</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/38b1c32154905828f019f35a026b7526'>Kickstarter projects in New York</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/75f04c33b7870c3566a546e8f1afd687'>Kickstarter projects in New York</a>", "uid": "jorgeehernandez_39a74654bac03f7f6eeb94cc7a42cf6b"}, {"code": "<script>\n\nvar diameter = 900,\n    format = d3.format(\",d\"),\n    color = d3.scaleOrdinal(d3.schemeCategory20c);\n\nvar bubble = d3.pack()\n    .size([diameter, diameter])\n    .padding(0);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nfunction ready(error,\n  unique_subs,\n  city_data,\n  city_meta,\n  project_backers\n  // uSmap,\n  // ipInfo\n  )\n{\n  if (error) throw error;\n\n  function updateCity(city_id) {\n    var mapSubs = d3.map(unique_subs, function (d) { return d.sub_id;});\n    var mapSubsCounts = d3.map();\n    var mapCities = d3.map(city_meta, function (d) { return d.city_id;});\n\n    data = project_backers.filter(function (d) {\n      return d.city_id == city_id; \n    });\n\n\n    project_backers.forEach(function (d) {\n      d.backers_count = +d.backers_count;    \n      d.city = mapCities.get(d.city_id);\n      d.sub = mapSubs.get(d.sub_id);\n      if (!mapSubsCounts.has(d.sub_id)) {\n        mapSubsCounts.set(d.sub_id, 0);\n      }\n      mapSubsCounts.set(d.sub_id, mapSubsCounts.get(d.sub_id)+1);\n    });\n\n\n    var root = d3.hierarchy({children:data})\n        .sum(function(d) { return d.backers_count; })\n        .sort(function(a, b) { \n          //Sort by categories that have more projects first\n          return d3.descending(mapSubsCounts.get(a.data.sub_id), mapSubsCounts.get(b.data.sub_id)) ||\n                 // d3.ascending(a.data.sub_id, b.data.sub_id) || \n                 b.data.backers_count - a.data.backers_count ; \n        });\n\n    bubble(root);\n    d3.selectAll(\".node\").remove();\n\n    var node = svg.selectAll(\".node\")\n        .data(root.children)\n      .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n    node.append(\"title\")\n        .text(function(d) { return \"Project id: \" + d.data.project_id +\n           \" Category:\" + d.data.sub.subcategory + \n           \" Backers: \" + format(d.data.backers_count); });\n\n    node.append(\"circle\")\n        .attr(\"r\", function(d) { return d.r; })\n        .style(\"fill\", function(d) { \n          return color(d.data.sub_id); \n        });\n\n    //Text looks kind of ugly...\n    // node.append(\"text\")\n    //     .attr(\"dy\", \".3em\")\n    //     .style(\"text-anchor\", \"middle\")\n    //     .text(function(d) { return d.data.project_id.substring(0, d.r / 3); });    \n  }\n\n\n\n  d3.select(\"#selectCity\")\n    .on(\"change\", function () { \n      updateCity(d3.select(this).property(\"value\")); \n    })\n    .selectAll(\"option\")\n    .data(city_meta)\n    .enter()\n    .append(\"option\")\n    .text(function (d) { return d.city_state; })\n    .attr(\"value\", function (d) { return d.city_id; });\n\n\n  updateCity(\"1\") //New York\n}\n\nd3.queue()\n  .defer(d3.csv, \"unique_subs.csv\") // 67KB\n  .defer(d3.csv, \"city_map_5.csv\") // 23KB\n  .await(ready);\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "fresh block", "created_at": "2016-09-15T20:44:59Z", "updated_at": "2016-09-15T20:53:36Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.pack", "d3.select", "d3.map", "d3.hierarchy", "d3.descending", "d3.ascending", "d3.selectAll", "d3.queue"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jorgeehernandez_079836284d434e3365bf5ef4be017bf4"}, {"code": "<script>\n\nvar diameter = 900,\n    format = d3.format(\",d\"),\n    color = d3.scaleOrdinal(d3.schemeCategory20c);\n\nvar bubble = d3.pack()\n    .size([diameter, diameter])\n    .padding(0);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nfunction ready(error,\n  unique_subs,\n  city_data,\n  city_meta,\n  project_backers\n  // uSmap,\n  // ipInfo\n  )\n{\n  if (error) throw error;\n\n  function updateCity(city_id) {\n    var mapSubs = d3.map(unique_subs, function (d) { return d.sub_id;});\n    var mapSubsCounts = d3.map();\n    var mapCities = d3.map(city_meta, function (d) { return d.city_id;});\n\n    data = project_backers.filter(function (d) {\n      return d.city_id == city_id; \n    });\n\n\n    project_backers.forEach(function (d) {\n      d.backers_count = +d.backers_count;    \n      d.city = mapCities.get(d.city_id);\n      d.sub = mapSubs.get(d.sub_id);\n      if (!mapSubsCounts.has(d.sub_id)) {\n        mapSubsCounts.set(d.sub_id, 0);\n      }\n      mapSubsCounts.set(d.sub_id, mapSubsCounts.get(d.sub_id)+1);\n    });\n\n\n    var root = d3.hierarchy({children:data})\n        .sum(function(d) { return d.backers_count; })\n        .sort(function(a, b) { \n          //Sort by categories that have more projects first\n          return d3.descending(mapSubsCounts.get(a.data.sub_id), mapSubsCounts.get(b.data.sub_id)) ||\n                 // d3.ascending(a.data.sub_id, b.data.sub_id) || \n                 b.data.backers_count - a.data.backers_count ; \n        });\n\n    bubble(root);\n    d3.selectAll(\".node\").remove();\n\n    var node = svg.selectAll(\".node\")\n        .data(root.children)\n      .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n    node.append(\"title\")\n        .text(function(d) { return \"Project id: \" + d.data.project_id +\n           \" Category:\" + d.data.sub.subcategory + \n           \" Backers: \" + format(d.data.backers_count); });\n\n    node.append(\"circle\")\n        .attr(\"r\", function(d) { return d.r; })\n        .style(\"fill\", function(d) { \n          return color(d.data.sub_id); \n        });\n\n    //Text looks kind of ugly...\n    // node.append(\"text\")\n    //     .attr(\"dy\", \".3em\")\n    //     .style(\"text-anchor\", \"middle\")\n    //     .text(function(d) { return d.data.project_id.substring(0, d.r / 3); });    \n  }\n\n\n\n  d3.select(\"#selectCity\")\n    .on(\"change\", function () { \n      updateCity(d3.select(this).property(\"value\")); \n    })\n    .selectAll(\"option\")\n    .data(city_meta)\n    .enter()\n    .append(\"option\")\n    .text(function (d) { return d.city_state; })\n    .attr(\"value\", function (d) { return d.city_id; });\n\n\n  updateCity(\"1\") //New York\n}\n\nd3.queue()\n  .defer(d3.csv, \"unique_subs.csv\") // 67KB\n  .defer(d3.csv, \"city_data_2.csv\") // 67KB\n  .defer(d3.csv, \"city_map_5.csv\") // 23KB\n  .defer(d3.csv, \"project_raw_4.csv\") // 2.4MB\n  // .defer(d3.json, \"map.json\") //600kb\n  // .defer(d3.json, 'http://ipinfo.io')\n  // .defer()\n  .await(ready);\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "Kickstarter projects by City", "created_at": "2016-09-15T20:25:23Z", "updated_at": "2016-09-15T22:49:40Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.pack", "d3.select", "d3.map", "d3.hierarchy", "d3.descending", "d3.ascending", "d3.selectAll", "d3.queue"], "readme": "Bubble chart showing 100.000 Kickstarter projects. Based on the data and idea of [Polygraph](http://polygraph.cool/kickstarter/) but trying to reorganize the colors. Color represents the project category, size the number of backers.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063269'>Bubble Chart</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/0d81ccfd24578d5d563c55e785b3b40a'>Bubble Chart d3 v4</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/38b1c32154905828f019f35a026b7526'>Kickstarter projects in New York</a>", "uid": "john-guerra_75f04c33b7870c3566a546e8f1afd687"}, {"code": "<script>\n    var svg = d3.select('.d3-viz'),\nmargin = {top: 20, right: 80, bottom: 30, left: 50},\nwidth = svg.attr(\"width\") - margin.left - margin.right,\nheight = svg.attr(\"height\") - margin.top - margin.bottom,\ng = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar bisect = d3.bisector(function(d) { return d.x; }).left;\n\nvar x = d3.scaleLinear().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\n\nvar line = d3.line()\n.x(function(d) {\n  return x(d.x);\n})\n.y(function(d) {\n  return y(d.y);\n});\n\nd3.json('temperature2.json', function(error, data){\n  if (error) throw error;\n\n\n  x.domain(d3.extent(data['0'].values, function(c){return c.x}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);\n  \n  z.domain(data, function(c) { return c.id; });\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  var city = g.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.x) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n  \n  \n  var focus = svg.append(\"g\")\n          .attr(\"class\", \"focus\")\n          .style(\"display\", \"none\");\n\n      focus.append(\"circle\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .attr(\"r\", 3.5);\n\n      focus.append(\"text\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\");\n\n      svg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { focus.style(\"display\", null); })\n          .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n          .on(\"mousemove\", mousemove);\n\n      function mousemove() {\n        var coordinates = d3.mouse(this),\n        \t\tx0 = x.invert(coordinates[0]),\n            y0 = y.invert(coordinates[1]),\n            i = bisect(data[0].values, x0),\n            d0 = data[0].values[i - 1],\n            d1 = data[0].values[i],\n            d = x0 - d0.x > d1.x - x0 ? d1 : d0;\n//             console.log(x0,y0,i);\n//         \t\tconsole.log(coordinates);\n        focus.attr(\"transform\", \"translate(\" + x(d.x) + \",\" + y(data[0].values[i].y) + \")\");\n        focus.select(\"text\").text(data[0].values[i].y);\n      }\n\n\n});\n\n\n  </script>", "description": "multi-line plot", "created_at": "2016-09-15T18:47:42Z", "updated_at": "2016-09-15T18:47:43Z", "api": ["d3.select", "d3.bisector", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/eric-bunch/'>eric-bunch</a>'s block: <a href='http://bl.ocks.org/eric-bunch/0bdef4942ac085a93fa6bd31452cd55c'>multi-line plot</a>", "uid": "eric-bunch_9d8ef276379194afc8ff57a3b91d9814"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\n// 200 bolinhas (range) de mesmo tamanho (radius)\nvar nodes = d3.range(200).map(function() { return {radius: 8}; }),\n    root = nodes[0],  // o centro  o primeiro n\n    color = d3.scale.category10();  // escala com 10 cores (category10)\n    // https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md\n\nroot.radius = 0;\nroot.fixed = true;\n\nvar force = d3.layout.force()\n    .gravity(0.05)\n    .charge(function(d, i) { return 0; })// i ? 0 : -2000; })\n    .nodes(nodes)\n    .size([width, height]);\n\nforce.start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar node = svg.selectAll(\"circle\")\n    .data(nodes.slice(1))\n    .enter().append(\"circle\")\n    .attr(\"r\", function(d) { return d.radius; })\n\t\t// alterna trs cores\n\t\t// trocando a cor a cada resto de diviso por 3 (i%3)\n    .style(\"fill\", function(d, i) { return color(i % 3); })\n\t\t.on(\"tick\", tick)\n\t  .call(force.drag);\n\n\n  \nforce.on(\"tick\", function(e) {\n  var q = d3.geom.quadtree(nodes),\n      i = 0,\n      n = nodes.length;\n\n  while (++i < n) q.visit(collide(nodes[i]));\n\n  svg.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; });\n});\n\n// captura o movimento do mouse e \n//   atribui  posio do root \n//   a posio do cursor\n\nsvg.on(\"click\", function() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n  force.resume();\n});\n\nfunction collide(node) {\n  var r = node.radius + 16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n  \nfunction tick() {\n  link.attr(\"x1\", function(d) { return d.source.x; })\n      .attr(\"y1\", function(d) { return d.source.y; })\n      .attr(\"x2\", function(d) { return d.target.x; })\n      .attr(\"y2\", function(d) { return d.target.y; });\n\n  node.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n</script>", "description": "Draggable dots", "created_at": "2016-09-15T18:39:27Z", "updated_at": "2016-09-16T16:54:10Z", "api": ["d3.range", "d3.scale.category10", "d3.layout.force", "d3.select", "d3.geom.quadtree", "d3.mouse"], "readme": "Drag dots to see them get atracted back to the center.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3231298'>Collision Detection</a>", "uid": "ocarneiro_e6a7363396747725af58433c56f673d7"}, {"code": "<script>\n\nvar diameter = 960,\n    format = d3.format(\",d\"),\n    colorStandard = d3.scaleOrdinal(d3.schemeCategory20c);\n\nvar categoriesAll = ['Music', 'Film & Video', 'Publishing', 'Art', 'Games', 'Design',\"Theater\",\"Food\",\"Comics\",\"Technology\",\"Fashion\",\"Photography\",\"Dance\",\"Crafts\",\"Journalism\"];    \nvar categoryClasses = d3.scaleOrdinal().domain(categoriesAll).range([\"music\", 'film','publishing','art','games','design',\"theater\",\"food\",\"comics\",\"technology\",\"fashion\",\"photography\",\"dance\",\"crafts\",\"journalism\",\"other\"]);\nvar categoriesToMap = ['Music', 'Film & Video', 'Publishing', 'Art', 'Games', 'Design'];\nvar categoryColorsRange = [\"#F44336\", \"#ff7f00\", \"#cab2d6\", \"#268bd0\", \"#673AB7\", \"#bbb\", \"#fdbf6f\", \"#b2df8a\", \"#a6cee3\", \"#4CAF50\", \"#333\", \"#333\", \"#333\", \"#333\", \"#333\"];\nvar colorPolygraph = d3.scaleOrdinal().domain(categoryClasses.range()).range(categoryColorsRange);\n\n\n\nvar bubble = d3.pack()\n    .size([diameter, diameter])\n    .padding(0);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nfunction aggreativeHierarchy(data, hierarchy) {\n  var dNodes = {};\n  var root = createNode(\"/\", \"root\");\n  \n\n  function createNode(id, name, children) { \n    var node = { \n        id: id ,\n        name: name || id.split(\"/\").slice(-1)[0] || '',\n        children: children || []\n      };\n    dNodes[id] = node;\n    return node;\n  }\n\n  function getParentId(id) {\n    var path = id.split(\"/\");\n    return  path.slice(0, path.length-1).join(\"/\") || \"/\";\n  }\n\n  function getOrCreateParent(id) {\n    if (id in dNodes)\n      return dNodes[id];\n    else {\n      //The parent doesn't exist yet\n      var node = createNode(id);\n      var parentId = getParentId(id);        \n      node.parent = getOrCreateParent(parentId);\n      node.parent.children.push(node)\n      return node;\n    }\n  }\n\n  data.forEach(function (d, i) {\n    var id = hierarchy(d, i , data);\n    dNodes[id] = d;    \n    var parentId = getParentId(id);\n    d.parent = getOrCreateParent(parentId);\n    d.parent.children.push(d);\n    \n  });\n  return root;\n}\n\n\nfunction ready(error,\n  unique_subs,\n  // city_data,\n  city_meta,\n  project_backers\n  // uSmap,\n  // ipInfo\n  )\n{\n  if (error) throw error;\n\n  function update() {\n\n    groupCategories = d3.select(\"#checkGroupByCategories\").property(\"checked\");\n    usePolygraphColors = d3.select(\"#checkPolygraphColors\").property(\"checked\");\n\n    var color = usePolygraphColors ? colorPolygraph : colorStandard;\n\n    var mapSubs = d3.map(unique_subs, function (d) { return d.sub_id;});\n    var mapSubsCounts = d3.map();\n    var mapCities = d3.map(city_meta, function (d) { return d.city_id;});\n    var mapCityCounts = d3.map();\n\n    //Preprocess data\n    project_backers.forEach(function (d) {\n      d.backers_count = +d.backers_count;    \n      d.city = mapCities.get(d.city_id);\n      d.sub = mapSubs.get(d.sub_id);\n      d.subcategoryOther = categoryClasses(d.sub.subcategory);\n      //Count subCategory totals\n      if (!mapSubsCounts.has(d.subcategoryOther)) {\n        mapSubsCounts.set(d.subcategoryOther, 0);\n      }\n      mapSubsCounts.set(d.subcategoryOther, mapSubsCounts.get(d.subcategoryOther)+1);\n      //Count city totals\n      if (!mapCityCounts.has(d.city_id)) {\n        mapCityCounts.set(d.city_id, 0);\n      }\n      mapCityCounts.set(d.city_id, mapCityCounts.get(d.city_id)+1);\n    });\n\n    //Create a dynamic hierarchy from data;\n    data = aggreativeHierarchy(project_backers, function (d) { \n      if (groupCategories){\n        return \"/\" + d.city_id +\n          \"/\" + d.sub_id + \n          \"/\" + d.project_id;               \n      } else {\n        return \"/\" + d.city_id +\n          \"/\" + d.project_id; \n      }\n    });\n\n    var root = d3.hierarchy(data)\n        .sum(function(d) { return d.backers_count; })\n        .sort(function(a, b) { \n          var citySort = (a.depth === 1 && b.depth === 1) ? \n              d3.descending(mapCityCounts.get(a.data.name), mapCityCounts.get(b.data.name)) : \n              0 ;\n          //Sort by cities, then by categories that have more projects first, then by count\n          return citySort ||\n                 d3.descending(mapSubsCounts.get(a.data.subcategoryOther), mapSubsCounts.get(b.data.subcategoryOther)) ||\n                 b.data.backers_count - a.data.backers_count ; \n        });\n\n    bubble(root);\n    d3.selectAll(\".node\").remove();\n\n    var node = svg.selectAll(\".node\")\n        .data(root.descendants()\n          .sort(function (a, b) { return d3.descending(a.depth, b.depth); }) // To show the labels first\n        )\n      .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n    node.append(\"title\")\n        .filter(function (d) { return d.children === undefined; })\n        .text(function(d) { \n          return \"Project id: \" + d.data.project_id +\n           \" Category:\" + d.data.sub.subcategory + \n           \" Backers: \" + format(d.data.backers_count); });\n\n    node.append(\"circle\")\n        .attr(\"r\", function(d) { return d.r; })\n        .style(\"pointer-events\", function (d) { return d.children ? \"none\" : \"auto\"; }) // Don't want parents to respond to events\n        .style(\"fill\", function(d) { \n          return d.children ? \"none\" : color(d.data.subcategoryOther); \n        })\n        .style(\"stroke\", function(d) { \n          return d.children ? \"#ccc\" : \"none\"; \n        });\n        ;\n\n    // Only add label to the first level\n    node\n      .filter(function (d) { return d.children && d.depth ===1;})\n      .append(\"text\")\n        .attr(\"dy\", \".3em\")\n        .style(\"text-anchor\", \"middle\")\n        .style(\"font-size\", function(d) { return d.r > 50 ? d.r/4 + \"px\" : \"10px\"})\n        .text(function(d) { \n          return mapCities.get(d.data.name).city_state.substring(0, d.r / 3); \n        });    \n  }\n\n  function redraw() {\n    d3.selectAll(\".node\").remove();\n    update();\n  }\n\n  d3.select(\"#checkPolygraphColors\").on(\"change\", redraw);\n  d3.select(\"#checkGroupByCategories\").on(\"change\", redraw);\n\n  redraw();\n}\n\nd3.queue()\n  .defer(d3.csv, \"unique_subs.csv\") // 67KB\n  // .defer(d3.csv, \"city_data_2.csv\") // 67KB\n  .defer(d3.csv, \"city_map_5.csv\") // 23KB\n  .defer(d3.csv, \"project_raw_4.csv\") // 2.4MB\n  // .defer(d3.json, \"map.json\") //600kb\n  // .defer(d3.json, 'http://ipinfo.io')\n  // .defer()\n  .await(ready);\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "All Kickstarter projects grouped by cities", "created_at": "2016-09-15T15:58:00Z", "updated_at": "2016-09-15T23:15:57Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.pack", "d3.select", "d3.map", "d3.hierarchy", "d3.descending", "d3.selectAll", "d3.queue"], "readme": "Bubble chart showing 100.000 Kickstarter projects. Based on the data and idea of [Polygraph](http://polygraph.cool/kickstarter/) but trying to reorganize the colors. Color represents the project category, size the number of backers.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063269'>Bubble Chart</a>\n\nforked from <a href='http://bl.ocks.org/john-guerra/'>john-guerra</a>'s block: <a href='http://bl.ocks.org/john-guerra/0d81ccfd24578d5d563c55e785b3b40a'>Bubble Chart d3 v4</a>", "uid": "john-guerra_38b1c32154905828f019f35a026b7526"}, {"code": "<script>\n\nvar diameter = 960,\n    format = d3.format(\",d\"),\n    color = d3.scaleOrdinal(d3.schemaCategory20c);\n\nvar bubble = d3.pack()\n//     .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n\nd3.json(\"flare.json\", function(error, root) {\n  if (error) throw error;\n\n  var node = svg.selectAll(\".node\")\n      .data(bubble(classes(root))\n      .filter(function(d) { return !d.children; }))\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.className + \": \" + format(d.value); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; })\n      .style(\"fill\", function(d) { return color(d.packageName); });\n\n  node.append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.className.substring(0, d.r / 3); });\n});\n\n// Returns a flattened hierarchy containing all leaf nodes under the root.\nfunction classes(root) {\n  var classes = [];\n\n  function recurse(name, node) {\n    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });\n    else classes.push({packageName: name, className: node.name, value: node.size});\n  }\n\n  recurse(null, root);\n  return {children: classes};\n}\n\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n</script>", "description": "Bubble Chart d3 v4", "created_at": "2016-09-15T15:07:16Z", "updated_at": "2016-09-15T15:56:44Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.pack", "d3.select", "d3.json"], "readme": "Bubble charts encode data in the area of circles. Although less perceptually-accurate than bar charts, they can pack hundreds of values into a small space. Implementation based on work by [Jeff Heer](http://jheer.org/). Data shows the [Flare](http://flare.prefuse.org/) class hierarchy, also courtesy Jeff Heer.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4063269'>Bubble Chart</a>", "uid": "john-guerra_0d81ccfd24578d5d563c55e785b3b40a"}, {"code": "<script>\n  var svg = d3.select('svg');\n  var points = [[465.500,366.708], [401.833,303.042], [410.332,287.251], [415.153,269.188], [415.153,250], [415.153,188.095], [364.970,137.912], [303.065,137.912], [269,137.912], [269,50], [303.065,50], [413.522,50], [503.065,139.543], [503.065,250], [503.065,293.558], [489.141,333.863], [465.500,366.708], [465.500,366.708], [429.192,417.153], [369.964,450], [303.065,450], [269,450], [269,362.087], [303.065,362.087], [345.781,362.087], [382.916,338.193], [401.833,303.042], [465.500,366.708], [688.732,349.524], [694.983,314.612], [685.780,278.070], [662.421,250], [692.686,213.630], [699.187,163.040], [679.103,120.200], [659.019,77.360], [615.973,49.999], [568.659,50], [428,50], [428,50], [462.611,71.680], [491.004,101.971], [510.401,137.912], [568.654,137.912], [580.825,137.912], [592.071,144.405], [598.156,154.945], [604.242,165.485], [604.242,178.470], [598.156,189.010], [592.071,199.551], [580.825,206.043], [568.654,206.043], [545.252,206.043], [688.732,349.524], [545.252,206.043], [689.029,349.821], [687.173,360.040], [683.992,370.117], [679.453,379.799], [659.369,422.639], [616.323,450.000], [569.009,450], [548.791,450], [491.233,392.441], [498.479,382.870], [505.009,372.726], [510.751,362.087], [569.004,362.087], [581.175,362.087], [592.421,355.594], [598.506,345.054], [604.592,334.514], [604.592,321.529], [598.506,310.989], [592.421,300.448], [581.175,293.956], [569.004,293.956], [534.938,293.956], [540.445,264.910], [540.445,235.089], [534.938,206.043], [545.252,206.043], [548.791,450], [428,450], [452.437,434.692], [473.774,415.092], [491.034,392.242], [548.791,450]];\n  var colors = ['hsl(341, 100%, 50%)', 'hsl(359, 100%, 50%)', 'hsl(18, 100%, 50%)', 'hsl(35, 100%, 50%)', 'hsl(52, 100%, 50%)', 'hsl(83, 100%, 50%)', 'hsl(127, 100%, 50%)', 'hsl(160, 100%, 50%)', 'hsl(190, 100%, 50%)', 'hsl(212, 100%, 50%)', 'hsl(227, 100%, 50%)', 'hsl(242, 100%, 50%)', 'hsl(259, 100%, 50%)', 'hsl(273, 100%, 50%)', 'hsl(296, 100%, 50%)'];\n  var cLen = colors.length;\n  var clx = 0;\n  var circles = [];\n\n  points.forEach(function(point) {\n    clx = clx < cLen ? clx : 0;\n    var circle = {};\n    circle.reqX = point[0];\n    circle.reqY = point[1];\n    circle.fill = colors[clx];\n    circles.push(circle);\n    clx += 1;\n  });\n\n  var sim = d3.forceSimulation()\n        .force('charge', d3.forceManyBody().distanceMax(50))\n        .force('center', d3.forceCenter( 480, 250 ))\n        .alphaDecay(0.06);\n\n  var circs = svg.selectAll('circle')\n        .data(circles)\n        .enter()\n        .append('circle')\n          .attr('r', 5)\n          .attr('fill', function(d) { return d.fill })\n          .attr('transform', 'translate(480,250)')\n          .attr('opacity', 1);\n\n  sim\n    .nodes(circles)\n    .on('tick', function() {\n      circs\n        .attr('transform', function(d) {\n              return 'translate(' + d.x + ',' + d.y + ')';\n        });\n    })\n    .on('end', function() {\n      circs.each(function(p, i) {\n        d3.select(this)\n          .transition()\n          .duration(500)\n            .attr('transform', function(d) {\n              return 'translate(' + d.reqX + ',' + d.reqY + ')';\n            })\n          .on('end', function () {\n              if (i + 1 == cLen) {\n                blowUpCircs();\n                appendPaths();\n              }\n          });\n      });\n    });\n\n  function blowUpCircs() {\n    circs\n      .transition()\n      .delay(200)\n      .duration(1000)\n      .attr('r', 30)\n      .attr('opacity', 0);\n  }\n\n  function appendPaths() {\n    var paths = [{ id: 'dee-top', style: 'fill:url(#lg-dt)', points: [['M465.500', 366.708], ['L401.833', 303.042], ['C410.332', 287.251], [415.153, 269.188], [415.153, 250], ['C415.153', 188.095], [364.970, 137.912], [303.065, 137.912], ['L269', 137.912], ['L269', 50], ['L303.065', 50], ['C413.522', 50], [503.065, 139.543], [503.065, 250], ['C503.065', 293.558], [489.141, 333.863], [465.500, 366.708]] }, { id: 'dee-bottom', style: 'fill:url(#lg-b)', points: [['M465.500', 366.708], ['C429.192', 417.153], [369.964, 450], [303.065, 450], ['L269', 450], ['L269', 362.087], ['L303.065', 362.087], ['C345.781', 362.087], [382.916, 338.193], [401.833, 303.042], ['L465.500', 366.708]] }, { id: 'three-top', style: 'fill:url(#lg-3t)', points: [['M688.732', 349.524], ['C694.983', 314.612], [685.780, 278.070], [662.421, 250], ['C692.686', 213.630], [699.187, 163.040], [679.103, 120.200], ['C659.019', 77.360], [615.973, 49.999], [568.659, 50], ['L428', 50], ['L428', 50], ['C462.611', 71.680], [491.004, 101.971], [510.401, 137.912], ['L568.654', 137.912], ['C580.825', 137.912], [592.071, 144.405], [598.156, 154.945], ['C604.242', 165.485], [604.242, 178.470], [598.156, 189.010], ['C592.071', 199.551], [580.825, 206.043], [568.654, 206.043], ['L545.252', 206.043], ['L688.732', 349.524]] }, { id: 'three-mid', style: 'fill:url(#lg-3m)', points: [['M545.252', 206.043], ['L689.029', 349.821], ['C687.173', 360.040], [683.992, 370.117], [679.453, 379.799], ['C659.369', 422.639], [616.323, 450.000], [569.009, 450], ['L548.791', 450], ['L491.233', 392.441], ['C498.479', 382.870], [505.009, 372.726], [510.751, 362.087], ['L569.004', 362.087], ['C581.175', 362.087], [592.421, 355.594], [598.506, 345.054], ['C604.592', 334.514], [604.592, 321.529], [598.506, 310.989], ['C592.421', 300.448], [581.175, 293.956], [569.004, 293.956], ['L534.938', 293.956], ['C540.445', 264.910], [540.445, 235.089], [534.938, 206.043], ['L545.252', 206.043]] }, { id: 'three-bottom', style: 'fill:url(#lg-b)', points: [['M688.732', 349.524], ['M548.791', 450], ['L428', 450], ['C452.437', 434.692], [473.774, 415.092], [491.034, 392.242], ['L548.791', 450]] }];\n\n    paths.forEach(function(path) {\n      var d = '';\n      var logoEl;\n      path.points.forEach(function(point){\n        d += point[0] + ',' + point[1] + ' ';\n      });\n      d += ' Z';\n      logoEl = svg.append('path')\n        .attr('id', path.id)\n        .attr('style', path.style)\n        .attr('opacity', 0)\n        .attr('d', d);\n\n      logoEl\n        .transition()\n        .delay(600)\n        .duration(600)\n          .attr('opacity', 1)\n\n    });\n  }\n</script>", "description": "D3 Logo for VisFest", "created_at": "2016-09-15T04:08:56Z", "updated_at": "2016-09-15T04:18:55Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceManyBody", "d3.forceCenter"], "readme": "Created for d3 VisFest unconf 2016\n\nuses forceSimulation and transitions. ", "uid": "kenpenn_b557ce50c952677e29354bc3c81f4c93"}, {"code": "<script>\n    var svg = d3.select('.d3-viz'),\nmargin = {top: 20, right: 80, bottom: 30, left: 50},\nwidth = svg.attr(\"width\") - margin.left - margin.right,\nheight = svg.attr(\"height\") - margin.top - margin.bottom,\ng = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar parseTime = d3.timeParse(\"%Y%m%d\"),\n    bisect = d3.bisector(function(d) { return parseTime(d.x); }).left;\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\n\nvar line = d3.line()\n.x(function(d) {\n  return x(parseTime(d.x));\n})\n.y(function(d) {\n  return y(d.y);\n});\n\nd3.json('temperature3.json', function(error, data){\n  if (error) throw error;\n\n\n  \n  \n  \n  x.domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}));\n  y.domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);\n  \n  z.domain(data, function(c) { return c.id; });\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, F\");\n\n  var city = g.selectAll(\".city\")\n    .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(parseTime(d.value.x)) + \",\" + y(d.value.y) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n  \n  \n  var focus = svg.append(\"g\")\n          .attr(\"class\", \"focus\")\n          .style(\"display\", \"none\");\n\n//       focus.append(\"circle\")\n//           .attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n//           .attr(\"x\", 4)\n//           .attr(\"y\", -1)\n//           .attr(\"r\", 2);\n\n//       focus.append(\"text\")\n//       \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//           .attr(\"x\", 9)\n//           .attr(\"dy\", \".35em\");\n\n  for(var i=0;i<data.length;i++){\n              focus.append(\"g\")\n                .attr(\"class\", \"focus\"+i)\n                .append(\"circle\")\n              \t.style(\"stroke\",  z(data[i].id))\n              \t.style(\"fill\", z(data[i].id))\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"r\", 2);\n              svg.select(\".focus\"+i)\n                .append(\"text\")\n              \t.attr(\"transform\", \"translate(\" + margin.left  + \",\" + margin.top + \")\")\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\");\n          }\n  \n      svg.append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n      \t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .on(\"mouseover\", function() { focus.style(\"display\", null); })\n          .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\n          .on(\"mousemove\",  mousemove);\n\n//       function mousemove(c, j) {\n//         console.log(c,j);\n//         var coordinates = d3.mouse(this),\n//         \t\tx0 = x.invert(coordinates[0]),\n//             y0 = y.invert(coordinates[1]),\n//             i = bisect(c.values, x0),\n//             d0 = c.values[i - 1],\n//             d1 = c.values[i],\n//             d = x0 - d0.x > d1.x - x0 ? d1 : d0;\n// //             console.log(x0,y0,i);\n// //         \t\tconsole.log(coordinates) ;\n//         console.log(d0,d1);\n//         focus.attr(\"transform\", \"translate(\" + x(c.values[i].x) + \",\" + y(c.values[i].y) + \")\");\n//         focus.select(\"text\").text(c.values[i].y);\n//       }\n  \n  function mousemove() {\n              var x0 = x.invert(d3.mouse(this)[0]);\n              var series = data.map(function(e) {\n                    var i = bisect(e.values, x0, 1),\n                        d0 = e.values[i - 1],\n                        d1 = e.values[i];\n                    return x0 - d0.x > d1.x - x0 ? d1 : d0;\n                  });\n//     console.log(series);\n              for(var i=0; i<series.length;i++){\n                var selectedFocus = svg.selectAll(\".focus\"+i);\n                selectedFocus.attr(\"transform\", \"translate(\" + x(parseTime(series[i].x)) + \",\" + y(series[i].y) + \")\");\n                selectedFocus.select(\"text\").text(series[i].y);\n              }\n            }\n\n\n  \n  \n// building the nav chart\nvar navWidth = width,\n      navHeight = 100 - margin.top - margin.bottom;\n\nvar navChart = d3.select('.d3-viz-nav').classed('chart', true)\n  .classed('navigator', true)\n  .attr('width', navWidth + margin.left + margin.right)\n  .attr('height', navHeight + margin.top + margin.bottom)\n  .append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n  \n  \nvar navXScale = d3.scaleTime()\n\t\t\t\t.range([0, navWidth])\n        .domain(d3.extent(data['0'].values, function(c){return parseTime(c.x)}))\n        ,\n    navYScale = d3.scaleLinear()\n\t\t\t\t.range([navHeight, 0])\n        .domain([\n    d3.min(data, function(c) { return d3.min(c.values, function(d) { return d.y; }); }),\n    d3.max(data, function(c) { return d3.max(c.values, function(d) { return d.y; }); })\n  ]);  \n  \n\n\nnavChart.append('g')\n    .attr('class', 'axis axis--x')\n    .attr('transform', 'translate(0,' + navHeight + ')')\n    .call(d3.axisBottom(x));  \n  \n \t\n  \n  var navData = d3.area()\n    .x(function (d) { return navXScale(parseTime(d.x)); })\n    .y0(navHeight)\n    .y1(function (d) { return navYScale(d.y); });\n\nvar navLine = d3.line()\n    .x(function (d) { return navXScale(parseTime(d.x)); })\n    .y(function (d) { return navYScale(d.y); });\n\nnavChart.append('path')\n\t\t.data(data)\n    .attr('class', 'data')\n    .attr('d', function(d) { return navData(d.values); });\n\nnavChart.append('path')\n\t\t.data(data)\n    .attr('class', 'line')\n    .attr('d', function(d) { return navLine(d.values); });\n  \n \n  \n  var viewport = d3.brushX()\n//     .brushX(navXScale)\n    .on(\"brush\", function () {\n        x.domain(d3.select(this).empty() ? navXScale.domain() : viewport.extent());\n        redrawChart();\n    });\n  \n  var xAxis = d3.axisBottom(x)\n//     .scale(x)\n//     .tickSize(-height);\n  \n   navChart.append(\"g\")\n    .attr(\"class\", \"viewport\")\n    .call(viewport)\n    .selectAll(\"rect\")\n  \t.attr('transform', 'translate(0,' + -navHeight + ')')\n    .attr(\"height\", 2*navHeight);\n  \n  \n  function redrawChart() {\n\n//     city.select(\"path\")\n//       .attr(\"class\", \"line\")\n//       .attr(\"d\", function(d) { return line(d.values); })\n//       .style(\"stroke\", function(d) { return z(d.id); })\n    \n//     city.selectAll('path.line')\n// //     \t\t.attr(\"class\", \"line\")\n//     \t\t.data(data)\n// //     \t\t.attr(\"class\", \"line\")\n//       .attr(\"d\", function(d) { return line(d.values); })\n//       .style(\"stroke\", function(d) { return z(d.id); })\n    \n//     city.call(line);\n    \n//     svg.select('.axis--x').call(xAxis);\n    \n    var n = data[0].values.length - 1,\n        i = Math.floor(Math.random() * n / 2),\n        j = i + Math.floor(Math.random() * n / 2) + 1;\n    x.domain([parseTime(data[0].values[i].x),\n    parseTime(data[0].values[j].x) ]);\n    var t = svg.transition().duration(750);\n    t.select(\".axis--x\").call(xAxis);\n//     t.select(\".area\").attr(\"d\", area);\n    t.select(\".line\")\n      .attr('d', line);\n    \n//     var t2 = city.transition().duration(750);\n    \n//     t2.select('.city .line')\n// //     .attr('d', line)\n//     \t.call(line)\n//     ;\n     \n    \n}\n  \n  \n  \n\n  \n});\n    \n    \n    \n\n    \n    \n    \n    // pulled from this jsfiddle http://jsfiddle.net/takuan/gakdeL1u/7/\n\n\n  </script>", "description": "multi-line plot multi-mouseover", "created_at": "2016-09-15T01:04:17Z", "updated_at": "2016-09-19T05:06:32Z", "api": ["d3.select", "d3.timeParse", "d3.bisector", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.json", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.mouse", "d3.area", "d3.brushX"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "eric-bunch_0bdef4942ac085a93fa6bd31452cd55c"}, {"code": "<script>\n      (function(d3) {\n        'use strict';\n\n        var dataset = [\n          { label: 'pikachu', count: 10 }, \n          { label: 'charmander', count: 20 },\n          { label: 'bulbasaur', count: 30 },\n          { label: 'squirtle', count: 40 }\n        ];\n\n        var width = 500;\n        var height = 500;\n        var radius = Math.min(width, height) / 2;\n\n        var color = d3.scale.ordinal().range(['#ffff00', '#ff0000', '#00ff00', '#0099ff']);\n\n        var svg = d3.select('#chart')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height)\n          .append('g')\n          .attr('transform', 'translate(' + (width / 2) + \n            ',' + (height / 2) + ')');\n\n        var arc = d3.svg.arc()\n          .outerRadius(radius);\n\n        var pie = d3.layout.pie()\n          .value(function(d) { return d.count; })\n          .sort(null);\n\n        var arc = d3.svg.arc()\n          .outerRadius(radius - 10)\n          .innerRadius(0);\n\n        var path = svg.selectAll('path')\n          .data(pie(dataset))\n          .enter()\n          .append('path')\n          .attr('d', arc)\n          .attr('fill', function(d, i) { \n            return color(d.data.label);\n          });\n\n\n      })(window.d3);\n    </script>", "description": "Basic pie chart in d3", "created_at": "2016-09-14T19:29:45Z", "updated_at": "2016-09-14T19:30:44Z", "api": ["d3.scale.ordinal", "d3.select", "d3.svg.arc", "d3.layout.pie"], "readme": "", "uid": "kjudd_d88a57b003a75e494e8d8acae761543e"}, {"code": "<script>\n    \nvar data = [\n\t{ date: '2015-09-01', submissions: 210 },\n\t{ date: '2015-10-01', submissions: 24 },\n\t{ date: '2015-11-02', submissions: 241 },\n\t{ date: '2015-12-03', submissions: 244 },\n\t{ date: '2016-01-04', submissions: 122 },\n\t{ date: '2016-02-05', submissions: 240 },\n\t{ date: '2016-03-06', submissions: 500 },\n\t{ date: '2016-04-07', submissions: 123 },\n\t{ date: '2016-05-08', submissions: 411 },\n\t{ date: '2016-06-09', submissions: 700 },\n\t{ date: '2016-07-10', submissions: 52 },\n\t{ date: '2016-08-11', submissions: 100 },\n\t{ date: '2016-09-12', submissions: 103 },\n\t{ date: '2016-10-13', submissions: 241 },\n\t{ date: '2016-11-14', submissions: 412 },\n\t{ date: '2016-12-15', submissions: 23 },\n\t{ date: '2017-01-16', submissions: 700 },\n\t{ date: '2017-02-17', submissions: 500 }\n];\n\n\nvar svg = d3.select('#linechart').append('svg').attr('height', '500px').attr('width', '500px');\n\nvar xExtent = d3.extent(data, function(d, i) { return d.date; });\nvar yExtent = d3.extent(data, function(d, i) { return d.submissions; });\n\nvar xScale = d3.scaleTime()\n\t.domain([ new Date(xExtent[0]), new Date(xExtent[1]) ])\n\t.range([40,495]);\n\nvar yScale = d3.scaleLinear()\n\t.domain(yExtent)\n\t.range([460,240]);\n\n\nvar xAxis = d3.axisBottom(xScale);\nvar yAxis = d3.axisLeft(yScale);\n\nsvg.append('g')\n\t.attr('id', 'xAxisG')\n\t.attr('transform', 'translate(0,460)')\n\t.call(xAxis);\n\nsvg.append('g')\n\t.attr('id', 'yAxisG')\n\t.attr('transform', 'translate(40,0)')\n\t.call(yAxis);\n\nvar submissionsLine = d3.line()\n\t.x(function(d) {\n\t\treturn xScale(new Date(d.date));\n\t})\n\t.y(function(d) {\n\t\treturn yScale(d.submissions);\n\t})\n\t.curve(d3.curveCatmullRom.alpha(0.5));\n\n\nvar path = svg.append('g').append('path')\n\t.attr('d', submissionsLine(data))\n\t.attr('fill', 'none')\n\t.attr('stroke', '#36F200')\n\t.attr('stroke-width', 3);\n\nvar totalLength = path.node().getTotalLength();\n\npath\n\t.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n\t.attr(\"stroke-dashoffset\", totalLength)\n\t.transition()\n\t.duration(2000)\n    .ease(d3.easeCubicInOut)\n\t.attr(\"stroke-dashoffset\", 0);\n\nsvg.append('g')\n\t.selectAll('circle')\n\t.data(data)\n\t.enter()\n\t.append('circle')\n\t.attr('fill', '#24E0FB')\n\t.attr('r', 0)\n\t.attr('cx', function(d, i) {\n\t\treturn xScale(new Date(d.date));\n\t})\n\t.attr('cy', function(d, i) {\n\t\treturn yScale(d.submissions);\n\t})\n\t.on('mouseover', function(d, i) {\n\t\td3.select(this)\n\t\t\t.transition()\n\t\t\t.duration(300)\n\t\t\t.attr('r', 50);\n\t})\n\t.on('mouseleave', function(d, i) {\n\t\td3.select(this)\n\t\t\t.transition()\n\t\t\t.duration(300)\n\t\t\t.attr('r', 3);\n\t})\n\t.transition()\n\t.duration(500)\n\t.delay(1800)\n\t.attr('r', 5)\n\t.transition()\n\t.duration(500)\n\t.attr('r', 3);\n\n\n\n\n  </script>", "description": "Animated Linechart", "created_at": "2016-09-14T18:11:42Z", "updated_at": "2016-09-14T18:11:42Z", "api": ["d3.select", "d3.extent", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.line", "d3.curveCatmullRom.alpha"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "atomiccc_7f0d06e5a4eb71afa1fb29205c74ad8a"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\"),\n    radius = 32;\n\nvar circles = d3.range(20).map(function() {\n  return {\n    x: Math.round(Math.random() * (width - radius * 2) + radius),\n    y: Math.round(Math.random() * (height - radius * 2) + radius)\n  };\n});\n\nvar defs = svg.append('defs');\nvar filter = defs.append('filter').attr('id','gooeyCodeFilter');\n      filter.append('feGaussianBlur')\n        .attr('in','SourceGraphic')\n        .attr('stdDeviation','12')\n        //to fix safari: http://stackoverflow.com/questions/24295043/svg-gaussian-blur-in-safari-unexpectedly-lightens-image\n        .attr('color-interpolation-filters','sRGB')\n        .attr('result','blur');\n      filter.append('feColorMatrix')\n        .attr('in','blur')\n        .attr('mode','matrix')\n        .attr('values','1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9')\n        .attr('result','gooey');\n\nvar color = d3.scaleOrdinal()\n    .range([\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]);\n\nvar node = svg.append('g')\n    .attr('class', 'nodes')\n    .style('filter', 'url(#gooeyCodeFilter)')\n    .selectAll(\"circle\")\n  .data(circles)\n  .enter().append(\"circle\")\n    .attr(\"cx\", function(d) { return d.x; })\n    .attr(\"cy\", function(d) { return d.y; })\n    .attr(\"r\", radius)\n    .style(\"fill\", function(d, i) { return color(i); })\n    .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended))\n    .transition()\n      .duration(2500)\n      .delay(function(d) { return d.x * 20; })\n      .on(\"start\", reposition);\n        ;\n\nfunction dragstarted(d) {\n  d3.select(this).transition();\n  d3.select(this).raise().classed(\"active\", true);\n}\n\nfunction dragged(d) {\n  d3.select(this).attr(\"cx\", d.x = d3.event.x).attr(\"cy\", d.y = d3.event.y);\n}\n\nfunction dragended(d) {\n  d3.select(this).classed(\"active\", false);\n}\n\nfunction reposition() {\n  var circle = d3.select(this);\n  (function repeat() {\n    circle = circle.transition()\n        .duration(2000)\n        .attr(\"cx\", function(d) { return Math.round(Math.random() * (width - radius * 2) + radius); })\n        .attr(\"cy\", function(d) { return Math.round(Math.random() * (height - radius * 2) + radius); })\n      .transition()\n        .on(\"end\", repeat);\n  })();\n}\n\n</script>", "description": "svg-drag", "created_at": "2016-09-14T17:45:42Z", "updated_at": "2016-09-14T19:15:41Z", "api": ["d3.select", "d3.range", "d3.scaleOrdinal", "d3.drag"], "readme": "", "uid": "mcgovey_d2ac4c336d0b358e09710c7f2de9c402"}, {"code": "<script>\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////// Set up sizes and canvas ///////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  var width = 1000,\n      widthOriginal = width,\n      height = Math.min(500, window.innerHeight),\n      heightOriginal = height;\n\n  var monthFisheye = d3.select(\"#monthFisheye\");\n  var canvas = monthFisheye.append(\"canvas\");\n\n  var pixelRatio = 1,\n      generalMouseOut = true;\n\n  if (window.devicePixelRatio >= 2\n      && screen.availWidth >= 1280 // iPad cant even handle it\n      && canvas.node().getContext(\"2d\").webkitBackingStorePixelRatio !== 2) { // Safari cant even\n    pixelRatio = 2;\n  }//if\n\n  //Adjust the sizes based on the pixelRatio\n  height = height * pixelRatio;\n  width = width * pixelRatio;\n\n  canvas\n      .attr(\"height\", height)\n      .style(\"height\", heightOriginal + \"px\");\n\n  var context = canvas.node().getContext(\"2d\");\n  context.scale(pixelRatio, pixelRatio);\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////// Load month images //////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  var months = [\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\"];\n  var topics = [\"Movies\",\"Olympics\",\"Travel\",\"Elections\",\"Tracking\",\"Year in Review\",\"Childhood nostalgia\",\"Fairytales\",\"Science\",\"OpenVis\",\"Personal\",\"Conversations\"];\n\n  var numRows = months.length,\n      normalHeight = height / numRows,\n      imageHeight = 400,\n      imageWidth = 960;\n\n  //Load the images for the months\n  var imageNadiehArray = new Array(),\n      imageShirleyArray = new Array();\n  for (var i = 0; i < numRows; i++) {\n        imageNadiehArray[i] = new Image;\n        //imageNadiehArray[i].src = months[i%2] + \"-nadieh.jpg\";\n        imageNadiehArray[i].src = \"https://raw.githubusercontent.com/nbremer/datasketches/gh-pages/img/\" + months[i%2].toLowerCase() + \"-nadieh.jpg\";\n        \n\n        imageShirleyArray[i] = new Image;\n        imageShirleyArray[i].src = \"https://raw.githubusercontent.com/nbremer/datasketches/gh-pages/img/\" + months[i%2].toLowerCase() + \"-shirley.jpg\";\n  }//for i\n\n  //Check if all of the images are loaded and if yes, start to build the Fisheye\n  var imageCount = numRows * 2;\n  var imagesLoaded = 0;\n  for(var i = 0; i < numRows; i++){\n      imageNadiehArray[i].onload = function(){\n          imagesLoaded++;\n          if(imagesLoaded === imageCount){ resize(); }//if\n      }//onload\n\n      imageShirleyArray[i].onload = function(){\n          imagesLoaded++;\n          if(imagesLoaded === imageCount){ resize(); }//if\n      }//onload\n  }//for i\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////// Resizing on width change ///////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  d3.select(window)\n      .on(\"resize\", resize);\n\n  // Recompute bounding boxes due to reflow\n  function resize() {\n    widthOriginal = parseInt(monthFisheye.style(\"width\"));\n    width = widthOriginal * pixelRatio;\n\n    canvas\n        .attr(\"width\", width)\n        .style(\"width\", widthOriginal + \"px\");\n\n    enableFisheye(canvas);\n  }//resize\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////// Canvas drawing /////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  function enableFisheye() {\n    var touchtime;\n\n    var desiredDistortion = 0,\n        desiredFocus,\n        idle = true;\n\n    var y = fisheye()\n        .distortion(0)\n        .extent([0, height]);\n\n    canvas\n        .on(\"mousedown\", mousedown)\n        .on(\"mouseover\", mouseover)\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseout\", mouseout)\n        .on(\"touchstart\", touchstart)\n        .on(\"touchmove\", mousemove)\n        .on(\"touchend\", mouseout);\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////// Font scales ////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n\n    var maxYdiff = imageHeight*(3/8)*pixelRatio;\n\n    var fontSizeScaleMonth = d3.scale.linear()\n        .range([4*pixelRatio,16*pixelRatio])\n        .domain([1*pixelRatio,maxYdiff]);\n\n    var fontSizeScaleTopic = d3.scale.linear()\n        .range([10*pixelRatio,34*pixelRatio])\n        .domain([1*pixelRatio,maxYdiff]);\n\n    var fontOpacityScale = d3.scale.linear()\n        .range([0*pixelRatio,1*pixelRatio])\n        .domain([20*pixelRatio,maxYdiff])\n        .clamp(true);\n\n    var fontOffsetScale = d3.scale.linear()\n        .range([10*pixelRatio,28*pixelRatio])\n        .domain([1*pixelRatio,maxYdiff]);\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////// Draw the actual canvas images and text //////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n\n    render();\n\n    function render() {\n\n      context.clearRect(0, 0, width, height);\n\n      for (var i = 0, n = numRows; i < n; ++i) {\n\n        context.globalAlpha = 1;\n\n        var y0 = y(i * normalHeight),\n            y1 = y((i + 1) * normalHeight),\n            dy = y1 - y0;\n\n        //Draw the left side image of Nadieh's work\n        //https://developer.mozilla.org/nl/docs/Web/API/Canvas_API/Tutorial/Using_images\n        var imageNwidth = imageNadiehArray[i].naturalWidth;\n        var Ndy = imageNwidth * dy / (width * 3/8);\n        var imageNadiehYOffset = Math.round((imageHeight - Ndy)/2);\n        context.drawImage(imageNadiehArray[i], 0, imageNadiehYOffset, imageNwidth, Ndy, 0, y0, width * 3/8, dy);\n\n        //Draw the right side image of Shirley's work\n        var imageSwidth = imageShirleyArray[i].naturalWidth;\n        var Sdy = imageSwidth * dy / (width * 3/8);\n        var imageShirleyYOffset = Math.round((imageHeight - Sdy)/2);\n        context.drawImage(imageShirleyArray[i], 0, imageShirleyYOffset, imageSwidth, Sdy, width * 5/8, y0, width * 3/8, dy);\n\n        //The month text in the middle\n        context.font = \"normal 300 \" + fontSizeScaleMonth(dy) + \"px Sacramento\";\n        context.fillStyle = \"#a6a6a6\";\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.globalAlpha = generalMouseOut ? 1 : fontOpacityScale(dy);\n        context.fillText(months[i], width/2, y0 + dy/2 - fontOffsetScale(dy));\n        //The topics in the middle\n        context.font = \"normal 300 \" + fontSizeScaleTopic(dy) + \"px Quicksand\";\n        context.fillStyle = \"black\";\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.globalAlpha = generalMouseOut ? 1 : fontOpacityScale(dy);\n        context.fillText(topics[i], width/2, y0 + dy/2);\n\n        // context.strokeStyle = \"rgba(255,255,255,0.8)\";\n        // context.beginPath();\n        // context.moveTo(0, y0);\n        // context.lineTo(width, y0);\n        // context.stroke();\n      }\n    }//render\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////// Mouse events ////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n\n    function move() {\n      if (idle) d3.timer(function() {\n        var currentDistortion = y.distortion(),\n            currentFocus = currentDistortion ? y.focus() : desiredFocus;\n        idle = Math.abs(desiredDistortion - currentDistortion) < .01 && Math.abs(desiredFocus - currentFocus) < .5;\n        y.distortion(idle ? desiredDistortion : currentDistortion + (desiredDistortion - currentDistortion) * .14);\n        y.focus(idle ? desiredFocus : currentFocus + (desiredFocus - currentFocus) * .14);\n        render();\n        return idle;\n      });\n    }\n\n    //An extra distortion factor that depends on the width of the screen\n    var distortionScale = d3.scale.pow(4)\n      .range([0,9])\n      .domain([350,1000])\n      .clamp(true);\n\n    function mouseover() {\n      generalMouseOut = false;\n\n      var bestHeight = imageHeight * (width*3/8) / imageWidth;\n      desiredDistortion = Math.min(imageHeight, bestHeight) / Math.min(normalHeight,bestHeight) + distortionScale(width*3/8);\n\n      desiredFocus = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      move();\n    }//mouseover\n\n    function mouseout() {\n      generalMouseOut = true;\n\n      desiredDistortion = 0;\n      desiredFocus = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      move();\n    }//mouseout\n\n    function mousemove() {\n      desiredFocus = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      move();\n    }//mousemove\n\n    function mousedown() {\n      //Find the height if the mouse\n      var mouseHeight = Math.max(0, Math.min(height - 1e-6, d3.mouse(this)[1] * pixelRatio));\n      var mouseWidth = Math.max(0, Math.min(width - 1e-6, d3.mouse(this)[0] * pixelRatio)) / width;\n      //Find over which month the mouse is hovering\n      for (var i = 0; i < numRows; ++i) {\n        var y0 = y(i * normalHeight),\n            y1 = y((i + 1) * normalHeight);\n        if(mouseHeight >= y0 && mouseHeight < y1) {\n          if(mouseWidth >= 0 && mouseWidth < 3/8) {\n            window.location = \"http://www.datasketch.es/\" + months[i].toLowerCase() + \"/code/nadieh\";\n          } else if (mouseWidth >= 3/8 && mouseWidth < 5/8) {\n            window.location = \"http://www.datasketch.es/\" + months[i].toLowerCase();\n          } else if(mouseWidth >= 5/8 && mouseWidth < 1) {\n            window.location = \"http://www.datasketch.es/\" + months[i].toLowerCase() + \"/code/shirley\";\n          } \n        }//if \n      }//for i\n    }//mousedown\n\n    function touchstart() {\n      d3.event.preventDefault();\n      mouseover();\n      if (d3.event.touches.length === 1) {\n        var now = Date.now();\n        if (now - touchtime < 500) mousedown(), link.click();\n        touchtime = now;\n      }//if\n    }//touchstart\n\n  }//enableFisheye\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////// Fisheye function /////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  function fisheye() {\n    var min = 0,\n        max = 1,\n        distortion = 3,\n        focus = 0;\n\n    function G(x) {\n      return (distortion + 1) * x / (distortion * x + 1);\n    }\n\n    function fisheye(x) {\n      var Dmax_x = (x < focus ? min : max) - focus,\n          Dnorm_x = x - focus;\n      return G(Dnorm_x / Dmax_x) * Dmax_x + focus;\n    }\n\n    fisheye.extent = function(_) {\n      if (!arguments.length) return [min, max];\n      min = +_[0], max = +_[1];\n      return fisheye;\n    };\n\n    fisheye.distortion = function(_) {\n      if (!arguments.length) return distortion;\n      distortion = +_;\n      return fisheye;\n    };\n\n    fisheye.focus = function(_) {\n      if (!arguments.length) return focus;\n      focus = +_;\n      return fisheye;\n    };\n\n    return fisheye;\n  }//fisheye\n\n  </script>", "description": "Smooth Fisheye - Images", "created_at": "2016-09-14T11:40:21Z", "updated_at": "2016-09-14T12:39:20Z", "api": ["d3.select", "d3.scale.linear", "d3.timer", "d3.scale.pow", "d3.mouse", "d3.event.preventDefault"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/nbremer/'>nbremer</a>'s block: <a href='http://bl.ocks.org/nbremer/e73086c0c3ebd2693a95962b561cbf05'>Smooth Fisheye</a>", "uid": "nbremer_4258eb64322c55156097c21f384715a7"}, {"code": "<script>\n\n    var margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 40\n      };\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var x = d3.scaleLinear()\n          .range([0, width]);\n\n    var y = d3.scaleBand()\n        .range([height, 0]);\n\n    var xAxis = d3.axisTop(x)\n        .ticks(10, \"%\")\n        .tickSize(-height + margin.top + margin.bottom);\n\n    var yAxis = d3.axisLeft(y);\n\n    d3.tsv(\"data.tsv\", type, function(error, data) {\n      if (error) throw error;\n\n      data.sort(function(a, b) {\n        return a.frequency - b.frequency;\n      });\n\n      x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n      y.domain(data.map(function(d) { return d.letter; }))\n        .paddingInner(0.1);\n\n      svg.selectAll(\".bar\")\n          .data(data)\n        .enter().append(\"rect\")\n          .attr(\"class\", \"bar\")\n          .attr(\"x\", 0)\n          .attr(\"height\", y.bandwidth())\n          .attr(\"y\", function(d) { return y(d.letter); })\n          .attr(\"width\", function(d) { return x(d.frequency); });\n\n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,-3)\")\n          .call(xAxis);\n\n      svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .attr(\"transform\", \"translate(-3, 0)\")\n          .call(yAxis);\n\n      svg.append(\"a\")\n        .attr(\"xlink:href\", \"https://www.slalom.com/services\")\n        .append(\"image\")\n        .attr(\"xlink:href\", \"slalom-blue-logo-sm.png\")\n        .attr(\"x\", width - 150)\n        .attr(\"y\", height - 53)\n        .attr(\"width\", \"150\")\n        .attr(\"height\", \"53\");\n\n      svg.append(\"a\")\n        .attr(\"xlink:href\", \"https://www.seemantk.com/\")\n        .append(\"image\")\n        .attr(\"xlink:href\", \"connect-sm.png\")\n        .attr(\"x\", width - 145)\n        .attr(\"y\", height - 70)\n        .attr(\"width\", \"20\")\n        .attr(\"height\", \"20\");\n\n      svg.append(\"a\")\n        .attr(\"xlink:href\", \"https://www.seemantk.com/\")\n        .append(\"text\")\n        .attr(\"x\", width - 120)\n        .attr(\"y\", height - 55)\n        // .attr(\"y\", height)\n        .attr(\"width\", \"150\")\n        .attr(\"height\", \"15\")\n        .style(\"fill\", \"#968C83\")\n        .text(\"Seemant Kulleen\");\n\n    });\n\n    function type(d) {\n      d.frequency = +d.frequency;\n      return d;\n    }\n\n  </script>", "description": "Horizontal Bars with Slalom Styles", "created_at": "2016-09-13T22:06:06Z", "updated_at": "2016-09-13T22:13:09Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.tsv", "d3.max"], "readme": "", "uid": "rcrocker13_173c06a6c4ec262005a9872ff9dbdfeb"}, {"code": "<script>\n\nvar width = 960,\n    height = 500;\n\nvar chart = d3.horizon()\n    .width(width)\n    .height(height)\n    .bands(1)\n    .mode(\"mirror\")\n    .interpolate(\"basis\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"unemployment.json\", function(error, data) {\n  if (error) throw error;\n\n  // Offset so that positive is above-average and negative is below-average.\n  var mean = data.rate.reduce(function(p, v) { return p + v; }, 0) / data.rate.length;\n\n  // Transpose column values to rows.\n  data = data.rate.map(function(rate, i) {\n    return [Date.UTC(data.year[i], data.month[i] - 1), rate - mean];\n  });\n\n  // Render the chart.\n  svg.data([data]).call(chart);\n\n  // Enable mode buttons.\n  d3.selectAll(\"#horizon-controls input[name=mode]\").on(\"change\", function() {\n    svg.call(chart.duration(0).mode(this.value));\n  });\n\n  // Enable bands buttons.\n  d3.selectAll(\"#horizon-bands button\").data([-1, 1]).on(\"click\", function(d) {\n    var n = Math.max(1, chart.bands() + d);\n    d3.select(\"#horizon-bands-value\").text(n);\n    svg.call(chart.duration(1000).bands(n).height(height / n));\n  });\n});\n\n</script>", "description": "Horizon Chart", "created_at": "2016-09-13T20:52:24Z", "updated_at": "2016-09-15T18:21:21Z", "api": ["d3.scale.linear", "d3.select", "d3.range", "d3.timer.flush", "d3.svg.area", "d3.horizon", "d3.json", "d3.selectAll"], "readme": "Horizon charts combine position and color to reduce vertical space. Start with a standard area chart, then **mirror** negative values (in blue) or **offset** them vertically. Click the **+ button** above to increase the number of bands, turning the area into a horizon.\n\nImplemented with the [d3.horizon](https://github.com/d3/d3-plugins/tree/master/horizon) plugin.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1483226'>Horizon Chart</a>", "uid": "john-guerra_7770baa3383ab777f8ac211deeb66fbc"}, {"code": "<script>\n\nvar margin = {top: 20, right: 200, bottom: 100, left: 50},\n    margin2 = { top: 430, right: 10, bottom: 20, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    height2 = 500 - margin2.top - margin2.bottom;\n\nvar parseDate = d3.time.format(\"%Y%m%d\").parse;\nvar bisectDate = d3.bisector(function(d) { return d.date; }).left;\n\nvar xScale = d3.time.scale()\n    .range([0, width]),\n\n    xScale2 = d3.time.scale()\n    .range([0, width]); // Duplicate xScale for brushing ref later\n\nvar yScale = d3.scale.linear()\n    .range([height, 0]);\n\n// 40 Custom DDV colors \nvar color = d3.scale.ordinal().range([\"#48A36D\",  \"#56AE7C\",  \"#64B98C\", \"#72C39B\", \"#80CEAA\", \"#80CCB3\", \"#7FC9BD\", \"#7FC7C6\", \"#7EC4CF\", \"#7FBBCF\", \"#7FB1CF\", \"#80A8CE\", \"#809ECE\", \"#8897CE\", \"#8F90CD\", \"#9788CD\", \"#9E81CC\", \"#AA81C5\", \"#B681BE\", \"#C280B7\", \"#CE80B0\", \"#D3779F\", \"#D76D8F\", \"#DC647E\", \"#E05A6D\", \"#E16167\", \"#E26962\", \"#E2705C\", \"#E37756\", \"#E38457\", \"#E39158\", \"#E29D58\", \"#E2AA59\", \"#E0B15B\", \"#DFB95C\", \"#DDC05E\", \"#DBC75F\", \"#E3CF6D\", \"#EAD67C\", \"#F2DE8A\"]);  \n\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\"),\n\n    xAxis2 = d3.svg.axis() // xAxis for brush slider\n    .scale(xScale2)\n    .orient(\"bottom\");    \n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\");  \n\nvar line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return xScale(d.date); })\n    .y(function(d) { return yScale(d.rating); })\n    .defined(function(d) { return d.rating; });  // Hiding line value defaults of 0 for missing data\n\nvar maxY; // Defined later to update yAxis\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom) //height + margin.top + margin.bottom\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create invisible rect for mouse tracking\nsvg.append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)                                    \n    .attr(\"x\", 0) \n    .attr(\"y\", 0)\n    .attr(\"id\", \"mouse-tracker\")\n    .style(\"fill\", \"white\"); \n\n//for slider part-----------------------------------------------------------------------------------\n  \nvar context = svg.append(\"g\") // Brushing context box container\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + 410 + \")\")\n    .attr(\"class\", \"context\");\n\n//append clip path for lines plotted, hiding those part out of bounds\nsvg.append(\"defs\")\n  .append(\"clipPath\") \n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height); \n\n//end slider part----------------------------------------------------------------------------------- \n\nd3.tsv(\"data.tsv\", function(error, data) { \n  color.domain(d3.keys(data[0]).filter(function(key) { // Set the domain of the color ordinal scale to be all the csv headers except \"date\", matching a color to an issue\n    return key !== \"date\"; \n  }));\n\n  data.forEach(function(d) { // Make every date in the csv data a javascript date object format\n    d.date = parseDate(d.date);\n  });\n\n  var categories = color.domain().map(function(name) { // Nest the data into an array of objects with new keys\n\n    return {\n      name: name, // \"name\": the csv headers except date\n      values: data.map(function(d) { // \"values\": which has an array of the dates and ratings\n        return {\n          date: d.date, \n          rating: +(d[name]),\n          };\n      }),\n      visible: (name === \"Unemployment\" ? true : false) // \"visible\": all false except for economy which is true.\n    };\n  });\n\n  xScale.domain(d3.extent(data, function(d) { return d.date; })); // extent = highest and lowest points, domain is data, range is bouding box\n\n  yScale.domain([0, 100\n    //d3.max(categories, function(c) { return d3.max(c.values, function(v) { return v.rating; }); })\n  ]);\n\n  xScale2.domain(xScale.domain()); // Setting a duplicate xdomain for brushing reference later\n \n //for slider part-----------------------------------------------------------------------------------\n\n var brush = d3.svg.brush()//for slider bar at the bottom\n    .x(xScale2) \n    .on(\"brush\", brushed);\n\n  context.append(\"g\") // Create brushing xAxis\n      .attr(\"class\", \"x axis1\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  var contextArea = d3.svg.area() // Set attributes for area chart in brushing context graph\n    .interpolate(\"monotone\")\n    .x(function(d) { return xScale2(d.date); }) // x is scaled to xScale2\n    .y0(height2) // Bottom line begins at height2 (area chart not inverted) \n    .y1(0); // Top line of area, 0 (area chart not inverted)\n\n  //plot the rect as the bar at the bottom\n  context.append(\"path\") // Path is created using svg.area details\n    .attr(\"class\", \"area\")\n    .attr(\"d\", contextArea(categories[0].values)) // pass first categories data .values to area path generator \n    .attr(\"fill\", \"#F1F1F2\");\n    \n  //append the brush for the selection of subsection  \n  context.append(\"g\")\n    .attr(\"class\", \"x brush\")\n    .call(brush)\n    .selectAll(\"rect\")\n    .attr(\"height\", height2) // Make brush rects same height \n      .attr(\"fill\", \"#E6E7E8\");  \n  //end slider part-----------------------------------------------------------------------------------\n\n  // draw line graph\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Issues Rating\");\n\n  var issue = svg.selectAll(\".issue\")\n      .data(categories) // Select nested data and append to new svg group elements\n    .enter().append(\"g\")\n      .attr(\"class\", \"issue\");   \n\n  issue.append(\"path\")\n      .attr(\"class\", \"line\")\n      .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n      .attr(\"id\", function(d) {\n        return \"line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"); // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n      })\n      .attr(\"d\", function(d) { \n        return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n      })\n      .attr(\"clip-path\", \"url(#clip)\")//use clip path to make irrelevant part invisible\n      .style(\"stroke\", function(d) { return color(d.name); });\n\n  // draw legend\n  var legendSpace = 450 / categories.length; // 450/number of issues (ex. 40)    \n\n  issue.append(\"rect\")\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)                                    \n      .attr(\"x\", width + (margin.right/3) - 15) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace) - 8; })  // spacing\n      .attr(\"fill\",function(d) {\n        return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n      })\n      .attr(\"class\", \"legend-box\")\n\n      .on(\"click\", function(d){ // On click make d.visible \n        d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n        maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n        yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        svg.select(\".y.axis\")\n          .transition()\n          .call(yAxis);   \n\n        issue.select(\"path\")\n          .transition()\n          .attr(\"d\", function(d){\n            return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n          })\n\n        issue.select(\"rect\")\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";\n        });\n      })\n\n      .on(\"mouseover\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) { return color(d.name); });\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 2.5);  \n      })\n\n      .on(\"mouseout\", function(d){\n\n        d3.select(this)\n          .transition()\n          .attr(\"fill\", function(d) {\n          return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n        d3.select(\"#line-\" + d.name.replace(\" \", \"\").replace(\"/\", \"\"))\n          .transition()\n          .style(\"stroke-width\", 1.5);\n      })\n      \n  issue.append(\"text\")\n      .attr(\"x\", width + (margin.right/3)) \n      .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n      .text(function(d) { return d.name; }); \n\n  // Hover line \n  var hoverLineGroup = svg.append(\"g\") \n            .attr(\"class\", \"hover-line\");\n\n  var hoverLine = hoverLineGroup // Create line with basic attributes\n        .append(\"line\")\n            .attr(\"id\", \"hover-line\")\n            .attr(\"x1\", 10).attr(\"x2\", 10) \n            .attr(\"y1\", 0).attr(\"y2\", height + 10)\n            .style(\"pointer-events\", \"none\") // Stop line interferring with cursor\n            .style(\"opacity\", 1e-6); // Set opacity to zero \n\n  var hoverDate = hoverLineGroup\n        .append('text')\n            .attr(\"class\", \"hover-text\")\n            .attr(\"y\", height - (height-40)) // hover date text position\n            .attr(\"x\", width - 150) // hover date text position\n            .style(\"fill\", \"#E6E7E8\");\n\n  var columnNames = d3.keys(data[0]) //grab the key values from your first data row\n                                     //these are the same as your column names\n                  .slice(1); //remove the first column name (`date`);\n\n  var focus = issue.select(\"g\") // create group elements to house tooltip text\n      .data(columnNames) // bind each column name date to each g element\n    .enter().append(\"g\") //create one <g> for each columnName\n      .attr(\"class\", \"focus\"); \n\n  focus.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip\")\n        .attr(\"x\", width + 20) // position tooltips  \n        .attr(\"y\", function (d, i) { return (legendSpace)+i*(legendSpace); }); // (return (11.25/2 =) 5.625) + i * (5.625) // position tooltips       \n\n  // Add mouseover events for hover line.\n  d3.select(\"#mouse-tracker\") // select chart plot background rect #mouse-tracker\n  .on(\"mousemove\", mousemove) // on mousemove activate mousemove function defined below\n  .on(\"mouseout\", function() {\n      hoverDate\n          .text(null) // on mouseout remove text for hover date\n\n      d3.select(\"#hover-line\")\n          .style(\"opacity\", 1e-6); // On mouse out making line invisible\n  });\n\n  function mousemove() { \n      var mouse_x = d3.mouse(this)[0]; // Finding mouse x position on rect\n      var graph_x = xScale.invert(mouse_x); // \n\n      //var mouse_y = d3.mouse(this)[1]; // Finding mouse y position on rect\n      //var graph_y = yScale.invert(mouse_y);\n      //console.log(graph_x);\n      \n      var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n      \n      hoverDate.text(format(graph_x)); // scale mouse position to xScale date and format it to show month and year\n      \n      d3.select(\"#hover-line\") // select hover-line and changing attributes to mouse position\n          .attr(\"x1\", mouse_x) \n          .attr(\"x2\", mouse_x)\n          .style(\"opacity\", 1); // Making line visible\n\n      // Legend tooltips // http://www.d3noob.org/2014/07/my-favourite-tooltip-method-for-line.html\n\n      var x0 = xScale.invert(d3.mouse(this)[0]), /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n      i = bisectDate(data, x0, 1), // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n      /*It takes our data array and the date corresponding to the position of or mouse cursor and returns the index number of the data array which has a date that is higher than the cursor position.*/\n      d0 = data[i - 1],\n      d1 = data[i],\n      /*d0 is the combination of date and rating that is in the data array at the index to the left of the cursor and d1 is the combination of date and close that is in the data array at the index to the right of the cursor. In other words we now have two variables that know the value and date above and below the date that corresponds to the position of the cursor.*/\n      d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n      /*The final line in this segment declares a new array d that is represents the date and close combination that is closest to the cursor. It is using the magic JavaScript short hand for an if statement that is essentially saying if the distance between the mouse cursor and the date and close combination on the left is greater than the distance between the mouse cursor and the date and close combination on the right then d is an array of the date and close on the right of the cursor (d1). Otherwise d is an array of the date and close on the left of the cursor (d0).*/\n\n      //d is now the data row for the date closest to the mouse position\n\n      focus.select(\"text\").text(function(columnName){\n         //because you didn't explictly set any data on the <text>\n         //elements, each one inherits the data from the focus <g>\n\n         return (d[columnName]);\n      });\n  }; \n\n  //for brusher of the slider bar at the bottom\n  function brushed() {\n\n    xScale.domain(brush.empty() ? xScale2.domain() : brush.extent()); // If brush is empty then reset the Xscale domain to default, if not then make it the brush extent \n\n    svg.select(\".x.axis\") // replot xAxis with transition when brush used\n          .transition()\n          .call(xAxis);\n\n    maxY = findMaxY(categories); // Find max Y rating value categories data with \"visible\"; true\n    yScale.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n    \n    svg.select(\".y.axis\") // Redraw yAxis\n      .transition()\n      .call(yAxis);   \n\n    issue.select(\"path\") // Redraw lines based on brush xAxis scale and domain\n      .transition()\n      .attr(\"d\", function(d){\n          return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n      });\n    \n  };      \n\n}); // End Data callback function\n  \n  function findMaxY(data){  // Define function \"findMaxY\"\n    var maxYValues = data.map(function(d) { \n      if (d.visible){\n        return d3.max(d.values, function(value) { // Return max rating value\n          return value.rating; })\n      }\n    });\n    return d3.max(maxYValues);\n  }\n\n</script>", "description": "d3.js Multi-series line chart interactive", "created_at": "2016-09-13T19:20:31Z", "updated_at": "2016-09-13T19:20:31Z", "api": ["d3.time.format", "d3.bisector", "d3.time.scale", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.tsv", "d3.keys", "d3.extent", "d3.max", "d3.svg.brush", "d3.svg.area", "d3.mouse"], "readme": "Please note, data will be randomised until December 2014. It is based on Ipsos MORI's long term Issues Index survey 1974 - 2014.  \n\nforked from <a href='http://bl.ocks.org/DStruths/'>DStruths</a>'s block: <a href='http://bl.ocks.org/DStruths/9c042e3a6b66048b5bd4'>d3.js Multi-series line chart interactive</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/e63475b2068ee7ed69345bec9647ba74'>d3.js Multi-series line chart interactive</a>", "uid": "RicCheng_64a4ffccbf7233b290b350cbce87d0dc"}, {"code": "<script>\n\n    \n var margin = {top: 100, right: 100, bottom: 50, left: 100},\n    w = 900 - margin.left - margin.right,\n    h = 500 - margin.top - margin.bottom,\n    z = 20,\n    x = w / z,\n    y = h / z,\n    radius = 10,\n    pos = 100,\n    posX = 0,\n    posY = 0;\nvar xScale, yScale;\nvar legend =\"\";\nvar estudiantes;\nvar i=0;\n                           \nd3.json('alumnos.json', function (error, estudiantesData) {\n    if (error) {\n      console.error(error);\n      return;\n    }\n    estudiantes = estudiantesData.map(function (d) {\n      return {\n        grade: d.grade,\n        code: d.code,\n      }\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"height\", h + margin.top + margin.bottom)\n    .attr(\"width\", w + margin.left + margin.right)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nxScale =  d3.scale.ordinal().rangeRoundBands([0, w]);\nxScale.domain(estudiantes.map(function(d) { return d.code; }));\n\nyScale = d3.scale.linear()\n    .domain([0, d3.max(estudiantes, function(d){ return d.grade; })])\n    .range([h, 0]);\n    \nvar rectClip = svg.append('clipPath')\n    .attr('id', 'rect-clip')\n    .append('rect')\n      .attr('width', 0)\n      .attr('height', h);\n      \n//--------------- ANIMACIONES ---------------//\nrectClip.transition()\n    .duration(250*estudiantes.length)\n    .attr('width', w);\n\nestudiantes.forEach(function (nota, i) {\n    setTimeout(function () {\n      puntos(nota, svg, h, xScale, yScale);\n    }, 1000 + 500*i);\n  });\n \n//------------------------------------------//\n \nvar legendWidth  = 210, legendHeight = 95;\n \n \nlegend = svg.append('g')\n    .attr('class', 'legend')\n    .attr('transform', 'translate(' + (w/2 - legendHeight) + ','+ (-legendHeight) +')');\n\nlegend.append('rect')\n    .attr('class', 'legend-bg')\n    .attr('width',  legendWidth)\n    .attr('height', legendHeight);\n\nlegend.append('text')\n    .attr('x', 5)\n    .attr('y', 25)\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", \"10px\")\n    .attr(\"font-weight\", \"bold\")\n    .text('Presione el nodo para mayor informacin');\n\n  // clipping to make sure nothing appears behind legend\n  svg.append('clipPath')\n    .attr('id', 'axes-clip')\n    .append('polygon')\n      .attr('points', (-margin.left)                 + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + (h + margin.bottom) + ' ' +\n                      (-margin.left)                 + ',' + (h + margin.bottom));\n\n//---- PINTA LA LINEA CONTINUAS ----//\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .innerTickSize(-h)\n    .outerTickSize(0);\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .innerTickSize(-w)\n    .outerTickSize(0)\n    .tickPadding(10);\n    \nsvg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis)\n        .append('text')\n  \t\t.attr('dx', w)  \n                .attr('x', 5)\n                .attr('y', 5)\t\n  \t\t.style('font-weight','bold')\n                .style('','')\n\t\t.text('Cdigo');\n\nsvg.append(\"g\")\n     .attr(\"class\", \"y axis\")\n     .call(yAxis)\n        .append('text')\n            .attr('x',40)\n            .attr('y', -15)\n            .attr('dy', '.71em')\n            .style('text-anchor', 'end')\n            .style('font-weight','bold')\n            .text('Calificacin');\n            \n   \n});\n\nfunction puntos(nota, svg, h, xScale, yScale) {\n    var colorF = \"rgb(202, 110, 35)\",\n        colorS = \"rgb(202, 50, 125)\",\n        xPos = xScale(nota.code)-10,\n        yPosStart = h,\n        yPosEnd = yScale(nota.grade);\n      \n    if(nota.grade >= 5 ){\n        colorF = \"rgb(54, 226, 30)\";\n        colorS = \"rgb(29, 150, 44)\";\n    }else if(nota.grade < 5 && nota.grade >= 4){\n        colorF = \"rgb(221, 239, 52\";\n        colorS = \"rgb(132, 189, 20)\";\n    }else if(nota.grade < 4 && nota.grade >= 3){\n        colorF = \"rgb(249, 249, 144)\";\n        colorS = \"rgb(222, 194, 57)\";\n    }else if(nota.grade < 3 && nota.grade >= 2){\n        colorS = \"rgb(255, 126, 35)\";\n        colorF = \"rgb(255, 171, 90)\";\n    }else{\n        colorS = \"rgb(245, 103, 103)\";\n        colorF = \"rgb(245, 0, 0)\";\n    }\n\n    \n    var circles = svg.append('g')\n        .attr('class', 'notas')\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosStart + ')')\n        .attr('opacity', 0);\n\n      circles.transition()\n        .duration(200)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosEnd + ')')\n        .attr('opacity', 1);\n\n      circles.append('path')\n        .attr('d', 'M' + 24 + ',' + (h-yPosStart) + 'L' + 24 + ',' + (h-yPosStart))\n        .transition()\n          .duration(200)\n          .attr('d', 'M' + 24 + ',' + (h-yPosEnd) + 'L' + 24 + ',' + (radius));\n          \n      circles.append('circle')\n        .attr('class', 'marker-bg-'+i++)\n        .attr('data-grade', nota.grade)\n        .attr('data-code', nota.code)\n        .attr('cx', 24)\n        .attr('cy', 0)\n        .attr('r', radius)\n        .attr('transform', 'translate(' + 0 + ', ' + 0 + ')')\n        .style(\"cursor\", \"pointer\")\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .on(\"click\", imprimir);\n        \n \n}\n\nfunction translate(d) {\n    return \"translate(\"+posX+\",\"+ posY+\")\";\n}\n\nfunction imprimir(d) {\n    \n    var a = this.parentNode.appendChild(this);\n    \n    posX = d3.transform(d3.select(this).attr(\"transform\")).translate[0];\n    posY = d3.transform(d3.select(this).attr(\"transform\")).translate[1]; \n           \n    code_aux = d3.select(this).attr(\"data-code\");\n    grade_aux = d3.select(this).attr(\"data-grade\");\n    \n    d3.select(this)\n        .transition()\n          .duration(750)\n          .attr(\"r\", radius*2);\n      \n    d3.select(this)\n         .transition()\n          .delay(1000)\n          .attr(\"r\", radius);\n   \n   d3.select(\"#update\").remove();\n   d3.select(\"#update\").remove();\n   \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 55)\n        .text(\"Cdigo: 2800\"+code_aux);\n    \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 75)\n        .text(\"Calificacin: \"+grade_aux);\n   \n}\n\n</script>", "description": "visualizaci\u00f3n_notas", "created_at": "2016-09-13T03:01:37Z", "updated_at": "2016-09-22T04:10:27Z", "api": ["d3.json", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.transform"], "readme": "<b>What:</b>\n + <b>Ordered</b>: Quantitative.\n + <b>Dataset Types</b>: Tables. \n + <b>Dataset Availability</b>: Static.\n + <b>Ordering Direction</b>: Diverging.\n \n<b>Why:</b>\n + <b>Analyze</b>: Consume - Present.\n + <b>Search</b>: Lookup.\n + <b>Query</b>: Summarize.\n + <b>Target</b>: Present student's note.\n\n<b>How:</b>\n + <b>Arrange</b>: Order, Align.\n + <b>Map</b>: Color - Hue, Shape - circle.\n + <b>Manipulate</b>: Select.\n + <b>Facet</b>: Yuxtaponer.\n + <b>Reduce</b>: Embed.\n\n--------\n\n<b>Marks:</b>\n + <b>Line</b>: Identifies student's code position.\n + <b>Point</b>: Identifies student's note relative to the student's code.\n \n<b>Channels:</b> \n + <b>Vertical position</b>: Identifies student's note low to high.\n + <b>Horizontal position</b>: Identifies student's code low to high.\n + <b>Color Hue</b>: Unlike the marks for range of notes.\n \n--------\n\nTo proper reading of the information in the first instance, the four number firsts in student's code are removed,  because have pattern 2800.\nMoreover, it was decided to use color hue to create better identification in the rank of the  student's note.\nFinally it was decided to separate each student in order to facilitate identification of the student's note relative to the student's code.\n\nforked from <a href='http://bl.ocks.org/ragut/'>ragut</a>'s block: <a href='http://bl.ocks.org/ragut/02b2faa2802a4f5d7f5c5576b2b89fcd'>visualizaci\u00f3n_notas</a>", "uid": "ragut_15c6fb34d98c77d825da7288e509dd2d"}, {"code": "<script>\n\n    \n var margin = {top: 100, right: 100, bottom: 50, left: 100},\n    w = 900 - margin.left - margin.right,\n    h = 500 - margin.top - margin.bottom,\n    z = 20,\n    x = w / z,\n    y = h / z,\n    radius = 10,\n    pos = 100,\n    posX = 0,\n    posY = 0;\nvar xScale, yScale;\nvar legend =\"\";\nvar estudiantes;\nvar i=0;\n                           \nd3.json('alumnos.json', function (error, estudiantesData) {\n    if (error) {\n      console.error(error);\n      return;\n    }\n    estudiantes = estudiantesData.map(function (d) {\n      return {\n        grade: d.grade,\n        code: d.code,\n      }\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"height\", h + margin.top + margin.bottom)\n    .attr(\"width\", w + margin.left + margin.right)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nxScale =  d3.scale.ordinal().rangeRoundBands([0, w]);\nxScale.domain(estudiantes.map(function(d) { return d.code; }));\n\nyScale = d3.scale.linear()\n    .domain([0, d3.max(estudiantes, function(d){ return d.grade; })])\n    .range([h, 0]);\n    \nvar rectClip = svg.append('clipPath')\n    .attr('id', 'rect-clip')\n    .append('rect')\n      .attr('width', 0)\n      .attr('height', h);\n      \n//--------------- ANIMACIONES ---------------//\nrectClip.transition()\n    .duration(250*estudiantes.length)\n    .attr('width', w);\n\nestudiantes.forEach(function (nota, i) {\n    setTimeout(function () {\n      puntos(nota, svg, h, xScale, yScale);\n    }, 1000 + 500*i);\n  });\n \n//------------------------------------------//\n \nvar legendWidth  = 210, legendHeight = 95;\n \n \nlegend = svg.append('g')\n    .attr('class', 'legend')\n    .attr('transform', 'translate(' + (w/2 - legendHeight) + ','+ (-legendHeight) +')');\n\nlegend.append('rect')\n    .attr('class', 'legend-bg')\n    .attr('width',  legendWidth)\n    .attr('height', legendHeight);\n\nlegend.append('text')\n    .attr('x', 5)\n    .attr('y', 25)\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", \"10px\")\n    .attr(\"font-weight\", \"bold\")\n    .text('Presione el nodo para mayor informacin');\n\n  // clipping to make sure nothing appears behind legend\n  svg.append('clipPath')\n    .attr('id', 'axes-clip')\n    .append('polygon')\n      .attr('points', (-margin.left)                 + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + (h + margin.bottom) + ' ' +\n                      (-margin.left)                 + ',' + (h + margin.bottom));\n\n//---- PINTA LA LINEA CONTINUAS ----//\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .innerTickSize(-h)\n    .outerTickSize(0);\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .innerTickSize(-w)\n    .outerTickSize(0)\n    .tickPadding(10);\n    \nsvg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis)\n        .append('text')\n  \t\t.attr('dx', w)  \n                .attr('x', 5)\n                .attr('y', 5)\t\n  \t\t.style('font-weight','bold')\n                .style('','')\n\t\t.text('Cdigo');\n\nsvg.append(\"g\")\n     .attr(\"class\", \"y axis\")\n     .call(yAxis)\n        .append('text')\n            .attr('x',40)\n            .attr('y', -15)\n            .attr('dy', '.71em')\n            .style('text-anchor', 'end')\n            .style('font-weight','bold')\n            .text('Calificacin');\n            \n   \n});\n\nfunction puntos(nota, svg, h, xScale, yScale) {\n    var colorF = \"rgb(202, 110, 35)\",\n        colorS = \"rgb(202, 50, 125)\",\n        xPos = xScale(nota.code)-10,\n        yPosStart = h,\n        yPosEnd = yScale(nota.grade);\n      \n    if(nota.grade >= 5 ){\n        colorF = \"rgb(54, 226, 30)\";\n        colorS = \"rgb(29, 150, 44)\";\n    }else if(nota.grade < 5 && nota.grade >= 4){\n        colorF = \"rgb(221, 239, 52\";\n        colorS = \"rgb(132, 189, 20)\";\n    }else if(nota.grade < 4 && nota.grade >= 3){\n        colorF = \"rgb(249, 249, 144)\";\n        colorS = \"rgb(222, 194, 57)\";\n    }else if(nota.grade < 3 && nota.grade >= 2){\n        colorS = \"rgb(255, 126, 35)\";\n        colorF = \"rgb(255, 171, 90)\";\n    }else{\n        colorS = \"rgb(245, 103, 103)\";\n        colorF = \"rgb(245, 0, 0)\";\n    }\n\n    \n    var circles = svg.append('g')\n        .attr('class', 'notas')\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosStart + ')')\n        .attr('opacity', 0);\n\n      circles.transition()\n        .duration(200)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosEnd + ')')\n        .attr('opacity', 1);\n\n      circles.append('path')\n        .attr('d', 'M' + 24 + ',' + (h-yPosStart) + 'L' + 24 + ',' + (h-yPosStart))\n        .transition()\n          .duration(200)\n          .attr('d', 'M' + 24 + ',' + (h-yPosEnd) + 'L' + 24 + ',' + (radius));\n          \n      circles.append('circle')\n        .attr('class', 'marker-bg-'+i++)\n        .attr('data-grade', nota.grade)\n        .attr('data-code', nota.code)\n        .attr('cx', 24)\n        .attr('cy', 0)\n        .attr('r', radius)\n        .attr('transform', 'translate(' + 0 + ', ' + 0 + ')')\n        .style(\"cursor\", \"pointer\")\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .on(\"click\", imprimir);\n        \n \n}\n\nfunction translate(d) {\n    return \"translate(\"+posX+\",\"+ posY+\")\";\n}\n\nfunction imprimir(d) {\n    \n    var a = this.parentNode.appendChild(this);\n    \n    posX = d3.transform(d3.select(this).attr(\"transform\")).translate[0];\n    posY = d3.transform(d3.select(this).attr(\"transform\")).translate[1]; \n           \n    code_aux = d3.select(this).attr(\"data-code\");\n    grade_aux = d3.select(this).attr(\"data-grade\");\n    \n    d3.select(this)\n        .transition()\n          .duration(750)\n          .attr(\"r\", radius*2);\n      \n    d3.select(this)\n         .transition()\n          .delay(1000)\n          .attr(\"r\", radius);\n   \n   d3.select(\"#update\").remove();\n   d3.select(\"#update\").remove();\n   \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 55)\n        .text(\"Cdigo: 2800\"+code_aux);\n    \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 75)\n        .text(\"Calificacin: \"+grade_aux);\n   \n}\n\n</script>", "description": "visualizaci\u00f3n_notas", "created_at": "2016-09-13T03:01:37Z", "updated_at": "2016-09-13T03:01:37Z", "api": ["d3.json", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.transform"], "readme": "<b>What:</b>\n + <b>Ordered</b>: Quantitative.\n + <b>Dataset Types</b>: Tables. \n + <b>Dataset Availability</b>: Static.\n + <b>Ordering Direction</b>: Diverging.\n \n<b>Why:</b>\n + <b>Analyze</b>: Consume - Present.\n + <b>Search</b>: Lookup.\n + <b>Query</b>: Summarize.\n + <b>Target</b>: Present student's note.\n\n<b>How:</b>\n + <b>Arrange</b>: Order, Align.\n + <b>Map</b>: Color - Hue, Shape - circle.\n + <b>Manipulate</b>: Select.\n + <b>Facet</b>: Yuxtaponer.\n + <b>Reduce</b>: Embed.\n\n--------\n\n<b>Marks:</b>\n + <b>Line</b>: Identifies student's code position.\n + <b>Point</b>: Identifies student's note relative to the student's code.\n \n<b>Channels:</b> \n + <b>Vertical position</b>: Identifies student's note low to high.\n + <b>Horizontal position</b>: Identifies student's code low to high.\n + <b>Color Hue</b>: Unlike the marks for range of notes.\n \n--------\n\nTo proper reading of the information in the first instance, the four number firsts in student's code are removed,  because have pattern 2800.\nMoreover, it was decided to use color hue to create better identification in the rank of the  student's note.\nFinally it was decided to separate each student in order to facilitate identification of the student's note relative to the student's code.\n\nforked from <a href='http://bl.ocks.org/ragut/'>ragut</a>'s block: <a href='http://bl.ocks.org/ragut/02b2faa2802a4f5d7f5c5576b2b89fcd'>visualizaci\u00f3n_notas</a>", "uid": "ragut_978ea05ed096071b9931e82543196ee3"}, {"code": "<script>\nvar svg = d3.select('svg'),\n    width = +svg.attr('width'),\n    height = +svg.attr('height');\n\n/*******************************************************************************\n * Color Palette\n */\n\nvar color = d3.scaleQuantize()\n  .range(['#ffffb2', '#fed976', '#feb24c', '#fd8d3c', '#f03b20', '#bd0026']);\n\n/******************************************************************************\n * Gooey Filter\n * Source: https://bl.ocks.org/nbremer/3da658e9a21cd3c71d0819f9698f3bfa\n */\n\nvar defs = svg.append('defs');\nvar filter = defs.append('filter').attr('id','gooeyCodeFilter');\nfilter.append('feGaussianBlur')\n  .attr('in','SourceGraphic')\n  .attr('stdDeviation','20')\n  //to fix safari: http://stackoverflow.com/questions/24295043/svg-gaussian-blur-in-safari-unexpectedly-lightens-image\n  .attr('color-interpolation-filters','sRGB')\n  .attr('result','blur');\nfilter.append('feColorMatrix')\n  .attr('in','blur')\n  .attr('mode','matrix')\n  .attr('values','1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9')\n  .attr('result','gooey');\n\n/******************************************************************************\n * Generate 20x10 matrix.\n */\n\nvar matrix = [];\nfor (var i = 0; i < 20; i++) {\n  for (var j = 0; j < 10; j++) {\n    var value = 1 - (Math.abs(10 - i) + Math.abs(5 - j)) / 15;\n    value *= 0.8 + Math.random() * 0.2; // Noise.\n    matrix.push({x: i, y: j, value: value});\n  }\n}\n\n/******************************************************************************\n * Render to grid.\n */\n\nvar cell = svg.append('g')\n    .attr('class', 'cells')\n    .style('filter', 'url(#gooeyCodeFilter)')\n  .selectAll('rect')\n  .data(matrix)\n  .enter().append('rect')\n    .attr('width', 48)\n    .attr('height', 48)\n    .attr('x', (d) => d.x * 48)\n    .attr('y', (d) => d.y * 48)\n    .attr('fill', (d) => color(d.value));\n\ncell.append('title')\n    .text((d) => d.value);\n\n</script>", "description": "Blurred Matrix Heatmap", "created_at": "2016-09-13T01:12:22Z", "updated_at": "2016-10-04T19:17:46Z", "api": ["d3.select", "d3.scaleQuantize"], "readme": "Blur-diffused heatmap.\n", "uid": "donmccurdy_da0e3b4bdb538a18dceb476042325ce2"}, {"code": "<script>\n\n// Select the canvas from the document.\nvar canvas = document.querySelector(\"canvas\");\n\n// Create the WebGL context, with fallback for experimental support.\nvar context = canvas.getContext(\"webgl\")\n    || canvas.getContext(\"experimental-webgl\");\n\n// Compile the vertex shader.\nvar vertexShader = context.createShader(context.VERTEX_SHADER);\ncontext.shaderSource(vertexShader, document.querySelector(\"#vertex-shader\").textContent);\ncontext.compileShader(vertexShader);\nif (!context.getShaderParameter(vertexShader, context.COMPILE_STATUS)) throw new Error(context.getShaderInfoLog(vertexShader));\n\n// Compile the fragment shader.\nvar fragmentShader = context.createShader(context.FRAGMENT_SHADER);\ncontext.shaderSource(fragmentShader, document.querySelector(\"#fragment-shader\").textContent);\ncontext.compileShader(fragmentShader);\nif (!context.getShaderParameter(fragmentShader, context.COMPILE_STATUS)) throw new Error(context.getShaderInfoLog(fragmentShader));\n\n// Link and use the program.\nvar program = context.createProgram();\ncontext.attachShader(program, vertexShader);\ncontext.attachShader(program, fragmentShader);\ncontext.linkProgram(program);\nif (!context.getProgramParameter(program, context.LINK_STATUS)) throw new Error(context.getProgramInfoLog(program));\ncontext.useProgram(program);\n\n// Define the positions (as vec2) of the square that covers the canvas.\nvar positionBuffer = context.createBuffer();\ncontext.bindBuffer(context.ARRAY_BUFFER, positionBuffer);\ncontext.bufferData(context.ARRAY_BUFFER, new Float32Array([\n    -1.0, -1.0,\n    +1.0, -1.0,\n    +1.0, +1.0,\n    -1.0, +1.0\n  ]), context.STATIC_DRAW);\n\n// Bind the position buffer to the position attribute.\nvar positionAttribute = context.getAttribLocation(program, \"a_position\");\ncontext.enableVertexAttribArray(positionAttribute);\ncontext.vertexAttribPointer(positionAttribute, 2, context.FLOAT, false, 0, 0);\n\n// Extract the projection parameters.\nvar translateUniform = context.getUniformLocation(program, \"u_translate\"),\n    scaleUniform = context.getUniformLocation(program, \"u_scale\"),\n    rotateUniform = context.getUniformLocation(program, \"u_rotate\");\n\n// Load the reference image.\nvar image = new Image;\nimage.src = \"milky-way.jpg\";\nimage.onload = readySoon;\nself.onresize = resize;\n\n// Hack to ensure correct inference of window dimensions.\nfunction readySoon() {\n  setTimeout(function() {\n    resize();\n    ready();\n  }, 10);\n}\n\nfunction resize() {\n  var width = Math.max(960, self.innerWidth),\n      height = Math.max(500, self.innerHeight);\n  canvas.setAttribute(\"width\", width);\n  canvas.setAttribute(\"height\", height);\n  context.uniform2f(translateUniform, width / 2, height / 2);\n  context.uniform1f(scaleUniform, 500);\n  context.viewport(0, 0, width, height);\n}\n\nfunction ready() {\n\n  // Create a texture and a mipmap for accurate minification.\n  var texture = context.createTexture();\n  context.bindTexture(context.TEXTURE_2D, texture);\n  context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.LINEAR);\n  context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.LINEAR_MIPMAP_LINEAR);\n  context.texImage2D(context.TEXTURE_2D, 0, context.RGBA, context.RGBA, context.UNSIGNED_BYTE, image);\n  context.generateMipmap(context.TEXTURE_2D);\n\n  // The current rotation and speed.\n  var rotate = [0, 0],\n      speed = [-.001, .0004];\n\n  redraw();\n\n  // Rotate and redraw!\n  function redraw() {\n    rotate[0] += speed[0], rotate[1] += speed[1];\n    context.uniform2fv(rotateUniform, rotate);\n    context.bindTexture(context.TEXTURE_2D, texture); // XXX Safari\n    context.drawArrays(context.TRIANGLE_FAN, 0, 4);\n    requestAnimationFrame(redraw);\n  }\n}\n\n// A polyfill for requestAnimationFrame.\nif (!self.requestAnimationFrame) requestAnimationFrame =\n    self.webkitRequestAnimationFrame\n    || self.mozRequestAnimationFrame\n    || self.msRequestAnimationFrame\n    || self.oRequestAnimationFrame\n    || function(f) { setTimeout(f, 17); };\n\n</script>", "description": "Milky Way", "created_at": "2016-09-13T00:05:08Z", "updated_at": "2016-09-13T00:05:09Z", "api": [], "readme": "This [\u201cmagnificent 360-degree panorama\u201d](http://www.eso.org/public/images/eso0932a/) of the Milky Way was created by the [European Southern Observatory](http://www.eso.org/). The source image is in [equirectangular coordinates](/mbostock/3757119), and is reprojected here using the [stereographic projection](/mbostock/3757137), simulating the view of the night sky from varying positions on Earth.\n\nThis interactive requires WebGL, but see an earlier, slower software implementation of [raster reprojection](/mbostock/4329423) for comparison.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/5446416'>Milky Way</a>", "uid": "clhenrick_e23406d334093e9fe205991d04cfe8be"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatDate = d3.time.format(\"%Y-%m-%d\");\n\nvar c10 = d3.scale.category10();\n\nvar x = d3.time.scale()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar totalLine = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.totalMembers); });\n\nvar activeLine = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.activeMembers); });\n\nvar differenceLine = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.totalMembers - d.activeMembers); });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar dataSource = \"members.csv\";\n\nd3.csv(dataSource, type, renderGraph);\n\n\nfunction renderGraph(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain(d3.extent(data, function(d) { return d.totalMembers; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Members Count\");\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line total\")\n      .attr(\"stroke\", c10(1))\n      .attr(\"d\", totalLine);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line active\")\n      .attr(\"stroke\", c10(2))\n      .attr(\"d\", activeLine);\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line difference\")\n      .attr(\"stroke\", c10(3))\n      .attr(\"d\", differenceLine);\n\n}\n\nfunction type(d) {\n  d.date = formatDate.parse(d['Date']);\n  d.totalMembers = parseInt(d.TotalMembers);\n  d.activeMembers = parseInt(d.ActiveMembers);\n  return d;\n}\n\n</script>", "description": "", "created_at": "2016-09-12T21:22:13Z", "updated_at": "2016-09-12T22:35:04Z", "api": ["d3.time.format", "d3.scale.category10", "d3.time.scale", "d3.scale.linear", "d3.svg.axis", "d3.svg.line", "d3.select", "d3.csv", "d3.extent"], "readme": "", "uid": "pandafulmanda_c6b5b66116c955328d29effb7101c809"}, {"code": "<script>\n\n  var width = 960,\n      height = 500,\n      canvas = document.querySelector(\"canvas\"),\n      context = canvas.getContext(\"2d\"),\n      voronoi = d3.voronoi().extent([[-1, -1],[width + 1, height + 1]]);\n\n  context.fillStyle = \"#ff3d7f\";\n  context.strokeStyle = \"#3fb8af\";\n\n  function relax(points) {\n\n    var polygons = voronoi(points).polygons(),\n        centroids = polygons.map(d3.polygonCentroid),\n        converged = points.every(function(point, i){\n          return distance(point, centroids[i]) < 1;\n        });\n\n    fade();\n\n    draw(points, polygons);\n\n    if (converged) {\n      setTimeout(reset, 750);\n    } else {\n      setTimeout(function(){\n        relax(centroids);\n      }, 50);\n    }\n\n  }\n\n  function fade() {\n    var imageData = context.getImageData(0, 0, width, height);\n\n    for (var i = 3, l = imageData.data.length; i < l; i += 4) {\n      imageData.data[i] = Math.max(0, imageData.data[i] - 10);\n    }\n\n    context.putImageData(imageData, 0, 0);\n  }\n\n  function draw(points, polygons) {\n\n    context.beginPath();\n    polygons.forEach(function(polygon){\n      context.moveTo(polygon[0][0], polygon[0][1]);\n      polygon.slice(1).forEach(function(point){\n        context.lineTo(point[0], point[1]);\n      });\n      context.lineTo(polygon[0][0], polygon[0][1]);\n    });\n    context.stroke();\n\n    context.beginPath();\n    points.forEach(function(point){\n      context.moveTo(point[0], point[1]);\n      context.arc(point[0], point[1], 2, 0, 2 * Math.PI);\n    });\n    context.fill();\n\n  }\n\n  function distance(a, b) {\n    return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));\n  }\n\n  function reset() {\n    var points = d3.range(100).map(function(d){\n      return [Math.random() * width, Math.random() * height];\n    });\n\n    context.clearRect(0, 0, width, height);\n    draw(points, voronoi(points).polygons());\n\n    setTimeout(function(){\n      relax(points);\n    }, 750);\n\n  }\n\n  reset();\n\n</script>", "description": "Voronoi relaxation", "created_at": "2016-09-12T20:23:19Z", "updated_at": "2016-09-21T18:50:51Z", "api": ["d3.voronoi", "d3.range"], "readme": "Voronoi relaxation with [Lloyd's algorithm](https://en.wikipedia.org/wiki/Lloyd's_algorithm) in d3 4.0.\n", "uid": "veltman_3d1fb70e6993d4eb2eff7112c9e7bcf4"}, {"code": "<script>    \n    var width = window.innerWidth;\n    var height = 400;\n    var svg = d3.select('svg')\n    \t.attr('width', width)\n    \t.attr('height', height);\n    var defs = svg.append('defs');\n    \n    var colors = ['#F5C6DD', '#B6DEED', '#9E84C2', '#D3BEDA', '#FFE4E1'];\n//     var strokeColor = '#68bff1';\n//     var fillColor = '#e1fafe';\n    var strokeColor = '#83CCF5';\n    var fillColor = '#F5C6DD';\n    var radius = 50;\n    var strokeWidth = 3;\n    var angles = _.times(6, function(i) {\n      return (2 * Math.PI / 6) * i;\n    });\n    // data for the diamonds for the snowflake\n    var transforms = [\n      [[0, -38], 1.25, .25], // translate, scale, opacity\n      [[0, -26], 1, .2],\n      [[0, -16], .85, .2],\n    ];\n    \n    /*************************************\n    ** gradient\n    *************************************/\n    //Set up a horizontal gradient\n    var gradient = defs.append(\"radialGradient\")\n    \t.attr('id', 'gradient')\n    \t.attr(\"cx\", (-radius / 3) + \"px\")\n      .attr(\"cy\",  (-radius / 3) + \"px\")\n      .attr(\"r\", (radius * 2) + \"px\")\n    \t.attr(\"gradientUnits\", \"userSpaceOnUse\");\n    \n    gradient.append(\"stop\")\n      .attr(\"offset\", \"0%\")\n      .attr(\"stop-color\", fillColor);\n//     gradient.append(\"stop\")\n//       .attr(\"offset\", \"50%\")\n//       .attr(\"stop-color\", colors[3]);\n    gradient.append(\"stop\")\n      .attr(\"offset\", \"100%\")\n      .attr(\"stop-color\", strokeColor);\n    \n    var fillgradient = defs.append(\"linearGradient\")\n    \t.attr('id', 'fillgradient')\n    \t.attr('x2', '0%')\n    \t.attr('y2', '100%');\n    \n    fillgradient.append(\"stop\")\n      .attr(\"offset\", \"25%\")\n      .attr(\"stop-color\", '#fff');\n    fillgradient.append(\"stop\")\n      .attr(\"offset\", \"100%\")\n      .attr(\"stop-color\", strokeColor);\n    \n    /*************************************\n    ** draw snowflake\n    *************************************/\n   \n    // do da drawing\n    var snowflake = svg.append('g')\n    \t.classed('snowflake', true)\n    \t.style('stroke', 'url(#gradient)')\n    \t.attr('transform', 'translate(' + [width / 2, height / 2] + ')');\n    \n    snowflake.append('circle')\n    \t.attr('r', radius * 1.4)\n    \t.attr('fill', 'none')\n    \t.attr('stroke-width', strokeWidth * 2);\n    \n    // x' = x * cos(theta) - y * sin(theta)\n    // y' = y * cos(theta) + x * sin(theta)\n    var y1 = 0;\n    var y2 = -50;\n    snowflake.selectAll('line')\n    \t.data(angles).enter().append('line')\n    \t.attr('x1', function(theta) {\n      \treturn y1 * Math.sin(theta);\n      }).attr('y1', function(theta) {\n      \treturn y1 * Math.cos(theta);\n      }).attr('x2', function(theta) {\n      \treturn y2 * Math.sin(theta);\n      }).attr('y2', function(theta) {\n      \treturn y2 * Math.cos(theta);\n      }).attr('stroke-width', strokeWidth)\n      .attr('stroke-opacity', 1);\n    \n    var diamond = [[0,-12], [10,0], [0,12], [-10,0], [0,-12]];\n    var allFlakes = _.chain(angles)\n    \t.map(function(a) {\n        return _.map(transforms, function(t) {\n          return [a, t];\n        });\n      }).flatten().value();\n    snowflake.selectAll('path')\n    \t.data(allFlakes).enter().insert('path', 'line')\n    \t.attr('d', function(d) {\n      \tvar theta = d[0];\n      \tvar transforms = d[1];\n      \treturn 'M' + _.map(diamond, function(point) {\n          var x = point[0] * transforms[1] + transforms[0][0];\n          var y = point[1] * transforms[1] + transforms[0][1];\n          return [\n            x * Math.cos(theta) - y * Math.sin(theta),\n            y * Math.cos(theta) + x * Math.sin(theta)\n          ];\n        }).join(' L') + 'Z'; \n      })\n//       .attr('fill', 'url(#fillgradient)')\n    \t.attr('fill', 'none')\n    \t.attr('fill-opacity', .25)\n      .attr('stroke-width', strokeWidth)\n      .attr('stroke-opacity', 1)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-linejoin', 'round');\n    \n    \n    /*************************************\n    ** sxywu text\n    *************************************/\n    svg.append('text')\n    \t.attr('x', width / 2)\n    \t.attr('y', height / 2 + 125)\n    \t.attr('text-anchor', 'middle')\n    \t.attr('dy', '.35em')\n    \t.attr('fill', strokeColor)\n    \t.style('fill', 'url(#gradient)')\n    \t.text('sxywu')\n  </script>", "description": "Personal logo iteration 9", "created_at": "2016-09-12T18:41:13Z", "updated_at": "2016-09-14T20:38:27Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/f53c7be8967bd51d76edf3b022ab4ff9'>Personal logo iteration 4</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/f7ce6541546b101585511a0763c0500a'>Personal logo iteration 5</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/32d974214c076de00f3116e11ae4095e'>Personal logo iteration 6</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/1badad84bbfbdbffbd1dd32115787ad6'>Personal logo iteration 7</a>", "uid": "sxywu_aaffb3bbe54a6c232d3944487f47a5f3"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\nvar parseDate = d3.timeParse(\"%b %Y\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]);\n\nvar xAxis = d3.axisBottom(x),\n    yAxis = d3.axisLeft(y);\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, 32])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);\n\nvar area = d3.area()\n    .curve(d3.curveMonotoneX)\n    .x(function(d) { return x(d.date); })\n    .y0(height)\n    .y1(function(d) { return y(d.price); });\n\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"sp500.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.price; })]);\n\n  g.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"area\")\n      .attr(\"d\", area);\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n\n  var d0 = new Date(2003, 0, 1),\n      d1 = new Date(2004, 0, 1);\n\n  // Gratuitous intro zoom!\n  svg.call(zoom).transition()\n      .duration(1500)\n      .call(zoom.transform, d3.zoomIdentity\n          .scale(width / (x(d1) - x(d0)))\n          .translate(-x(d0), 0));\n});\n\nfunction zoomed() {\n  var t = d3.event.transform, xt = t.rescaleX(x);\n  g.select(\".area\").attr(\"d\", area.x(function(d) { return xt(d.date); }));\n  g.select(\".axis--x\").call(xAxis.scale(xt));\n}\n\nfunction type(d) {\n  d.date = parseDate(d.date);\n  d.price = +d.price;\n  return d;\n}\n\n</script>", "description": "Zoom to Domain", "created_at": "2016-09-12T17:58:52Z", "updated_at": "2016-09-12T17:58:55Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.zoom", "d3.area", "d3.csv", "d3.extent", "d3.max"], "readme": "This example demonstrates how to zoom programmatically to a domain of interest.\n", "uid": "mbostock_431a331294d2b5ddd33f947cf4c81319"}, {"code": "<script>\n\nvar wkt = 'PROJCS[\"Albers Conical Equal Area\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.2572221010042,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Albers_Conic_Equal_Area\"],PARAMETER[\"standard_parallel_1\",55],PARAMETER[\"standard_parallel_2\",65],PARAMETER[\"latitude_of_center\",50],PARAMETER[\"longitude_of_center\",-154],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]]]';\n\nvar matrix = customProjection()\n\t.projection(wkt);\n\nvar path = d3.geoPath()\n\t.projection(matrix());\n\nvar container = d3.select(\"body\").append(\"div\")\n\t.attr(\"class\", \"container\")\n\t.attr(\"width\", 960)\n\t.attr(\"height\", 500);\n\nvar profileSelector = container.append(\"div\")\n\t.attr(\"class\", \"profile-selector\")\n\t.style(\"position\", \"absolute\")\n\t.style(\"left\", \"500px\")\n\t.style(\"top\", \"35px\");\n\nvar margin = { top: 30, left: 30, bottom: 30, right: 30 },\n\t\tmapWidth = 460 - margin.left - margin.right,\n\t\tmapHeight = 460 - margin.bottom - margin.top,\n\t\tchartWidth = 460 - margin.left - margin.right,\n\t\tchartHeight = 250 - margin.bottom - margin.top;\n\nvar mapSvg = container.append(\"svg\")\n\t\t.attr(\"width\", mapWidth + margin.left + margin.right)\n\t\t.attr(\"height\", mapHeight + margin.bottom + margin.top)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar chartSvg = container.append(\"svg\")\n\t\t.attr(\"width\", chartWidth + margin.left + margin.right)\n\t\t.attr(\"height\", chartHeight + margin.bottom + margin.top)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleLinear()\n\t.range([0, chartWidth]);\n\nvar y = d3.scaleLinear()\n\t.domain([0, 7000])\n\t.range([chartHeight, 0]);\n\nvar area = d3.area()\n\t\t.x(function(d) { return x(d.distance); })\n\t\t.y0(y(0))\n\t\t.y1(function(d) { return y(d.elevation); });\n\t\nvar line = d3.line()\n\t.x(function(d) { return x(d.distance); })\n\t.y(function(d) { return y(d.elevation); });\n\nd3.queue()\n\t.defer(d3.json, \"denali-peaks.json\")\n\t.defer(d3.json, \"denali-profiles.json\")\n\t.defer(d3.json, \"ring.json\")\n\t.await(ready);\n\nfunction ready(error, peaks, profiles, ring) {\n\tif (error) throw error;\n\n\t//____________________________________________________________________________\n\t// Fit map projection to screen\n\n\tvar b = path.bounds(ring),\n      s = .95 / Math.max((b[1][0] - b[0][0]) / mapWidth, (b[1][1] - b[0][1]) / mapHeight),\n      t = [(mapWidth - s * (b[1][0] + b[0][0])) / 2, (mapHeight - s * (b[1][1] + b[0][1])) / 2];\n\t\n\tpath.projection(matrix(s, 0, 0, -s, t[0], t[1]));\n\n\tvar point = matrix.point(s, 0, 0, -s, t[0], t[1]);\n\t\n\t// Adjust raster size and translation\n\tvar rWidth = (b[1][0] - b[0][0]) * s,\n\t\t\trHeight = (b[1][1] - b[0][1]) * s,\n\t\t\trTranslateX = (mapWidth - rWidth) / 2,\n\t\t\trTranslateY = (mapHeight - rHeight) / 2;\n\t\n\t//____________________________________________________________________________\n\t// Draw relief map\n\n\t// From Thomas Thoren's example:\n\t// https://bl.ocks.org/ThomasThoren/550b2ce8b1e2470e75b2\n\n\tmapSvg.append(\"image\")\n\t\t.attr(\"xlink:href\", \"relief.png\")\n\t\t.attr(\"class\", \"raster\")\n\t\t.attr(\"width\", rWidth)\n\t\t.attr(\"height\", rHeight)\n\t\t.attr(\"transform\", \"translate(\" + rTranslateX + \",\" + rTranslateY + \")\");\n\t\n\t// ...and the border around it\n\tmapSvg.append(\"path\").datum(ring)\n\t\t.attr(\"class\", \"border\")\n\t\t.attr(\"d\", path);\n\t\n\t//____________________________________________________________________________\n\t// Draw peaks\n\n\tvar gPeaks = mapSvg.append(\"g\").attr(\"class\", \"peaks\")\n\t\t\t.selectAll(\".peak\").data([peaks.peak].concat(peaks.subpeaks))\n\t\t.enter().append(\"g\")\n\t\t\t.attr(\"class\", \"peak\")\n\t\t\t.attr(\"transform\", function(peak) {\n\t\t\t\tvar p = point(peak.lat, peak.lon);\n\t\t\t\treturn \"translate(\" + p[0] + \",\" + p[1] + \")\";\n\t\t\t});\n\t\n\tgPeaks.append(\"circle\")\n\t\t.attr(\"r\", 3);\n\t\n\tgPeaks.append(\"text\")\n\t\t.each(function(peak) {\n\t\t\td3.select(this).call(orientLabel, peak.labelOrientation || \"NE\");\n\t\t})\n\t\t.text(function(peak) { return peak.name; });\n\t\n\t//____________________________________________________________________________\n\t// Draw overhead profile lines on map\n\n\tvar profileIndex = 0;\n\n\tvar profileLines = mapSvg.append(\"g\").attr(\"class\", \"overhead-profiles\")\n\t\t\t.selectAll(\".overhead-profile\").data(profiles.features)\n\t\t.enter().append(\"path\")\n\t\t\t.attr(\"class\", \"overhead-profile\")\n\t\t\t.attr(\"d\", path)\n\t\t\t.classed(\"hidden\", function(d, i) { return i != profileIndex; });\n\t\t\n\t//____________________________________________________________________________\n\t// Draw profile as a line chart\n\n\tvar elevations = profiles.features.map(function(feature) {\n\t\treturn feature.properties.elevations;\n\t});\n\n\tvar elevation = elevations[profileIndex];\n\n\tx.domain(d3.extent(elevation, function(d) { return d.distance; }));\n\n\tvar profile = chartSvg.append(\"g\").attr(\"class\", \"profiles\")\n\t\t\t.selectAll(\".profile\").data([elevation])\n\t\t.enter().append(\"g\")\n\t\t\t.attr(\"class\", \"profile\");\n\t\n\tprofile.append(\"path\").attr(\"class\", \"area\")\n\t\t.attr(\"d\", area);\n\t\n\tprofile.append(\"path\").attr(\"class\", \"line\")\n\t\t.attr(\"d\", line);\n\t\n\tchartSvg.append(\"g\")\n\t\t.attr(\"class\", \"axis axis--x\")\n\t\t.attr(\"transform\", \"translate(0,\" + chartHeight + \")\")\n\t\t.call(d3.axisBottom(x));\n\t\n\tvar yAxis = chartSvg.append(\"g\")\n\t\t.attr(\"class\", \"axis axis--y\")\n\t\t.call(d3.axisLeft(y).tickFormat(d3.format(\".2s\")))\n\t\n\tyAxis.selectAll(\".tick line\")\n\t\t.attr(\"x1\", chartWidth)\n\t\n\tyAxis.selectAll(\".tick text\")\n\t\t.attr(\"dx\", \"0.5em\");\n\t\n\t// Y-axis label\n\tyAxis.append(\"text\")\n\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t.attr(\"dx\", \"0.33em\")\n\t\t.attr(\"dy\", \".66em\")\n\t\t.style(\"fill\", \"#000\")\n\t\t.text(\"meters\");\n\t\n\t// South Peak Label\n\tvar southPeakLabel = chartSvg.append(\"g\")\n\t\t.attr(\"class\", \"south-peak-label\")\n\t\t.attr(\"transform\", \"translate(200, 23)\");\n\t\n\tsouthPeakLabel.append(\"circle\")\n\t\t.attr(\"r\", 4);\n\t\n\tsouthPeakLabel.append(\"text\")\n\t\t.attr(\"dx\", \"0.33em\")\n\t\t.attr(\"dy\", \"-0.66em\")\n\t\t.text(\"South Peak (6190 m)\");\n\n\t//____________________________________________________________________________\n\t// Add content to profile selector\n\n\tprofileSelector.selectAll(\"button\").data(peaks.subpeaks)\n\t\t.enter().append(\"button\")\n\t\t\t.html(function(d) { return d.name; })\n\t\t\t.on(\"click\", function(d, i) { update(i); });\n\n\tfunction update(index) {\n\n\t\tprofileIndex = index;\n\n\t\t// Update overhead profile lines\n\t\tprofileLines\n\t\t\t.classed(\"hidden\", function(d, i) { return i != profileIndex; });\n\n\t\t// Update the elevation line chart\n\t\televation = elevations[profileIndex];\n\n\t\tprofile.data([elevation]);\n\n\t\tprofile.select(\".line\").attr(\"d\", line);\n\t\tprofile.select(\".area\").attr(\"d\", area);\n\t}\n}\n\n// Orient text label relative to it's current position given a cardinal or\n// intermediate direction (i.e., N, S, E, W, NE, SE, SW, NW)\nfunction orientLabel(selection, orientation) {\n\tvar dx, dy, textAnchor;\n\t\n\t// Determine `dx` (x-offset) and the `text-anchor` \n\tif (orientation === \"N\" || orientation == \"S\") {\n\t\tdx = 0; \n\t\ttextAnchor = \"middle\";\n\t}\n\tif (contains(orientation, \"E\")) {\n\t\tdx = \".33em\";\n\t\ttextAnchor = \"start\";\n\t}\n\tif (contains(orientation, \"W\")) {\n\t\tdx = \"-.33em\";\n\t\ttextAnchor = \"end\";\n\t}\n\n\t// Determine `dy` (y-offset)\n\tdy = contains(orientation, \"N\") ? \"-.33em\" :\n\t\t\t contains(orientation, \"S\") ? \"1em\" : 0;\n\t\n\treturn selection\n\t\t.attr(\"dx\", dx)\n\t\t.attr(\"dy\", dy)\n\t\t.style(\"text-anchor\", textAnchor);\n\n\tfunction contains(str, x) { return str.indexOf(x) !== -1; }\n}\n\n\n// Create custom projection using Proj4.js \nfunction customProjection() {\n\n\tvar projection = function(d) { return d; };\n\n\t// TODO: Think about moving these matrix parameters into \n\t//       setter-functions like projection.translate() and\n\t//       projection.scale().\n\n\tfunction matrix(a, b, c, d, tx, ty) {\n\t\tif (!arguments.length) {\n\t\t\ta = 1; b = 0; c = 0; d = -1; tx = 0; ty = 0;\n\t\t}\n\n\t\treturn d3.geoTransform({\n\t\t\tpoint: function(x, y) {\n\t\t\t\tvar p = projection.forward([x, y]);\n\t\t\t\tthis.stream.point(a * p[0] + b * p[1] + tx, \n\t\t\t\t\t\t\t\t\t\t\t\t\tc * p[0] + d * p[1] + ty)\n\t\t\t}\n\t\t});\n\t}\n\n\tmatrix.projection = function(_) {\n\t\tif (!arguments.length) return projection;\n\n\t\t// Pass a proj or wkt string defining a projection. This will convert from\n\t\t// WGS84 to the specified projection.\n\t\tif (typeof _ === \"string\") {\n\t\t\tprojection = proj4(_);\n\t\t}\n\n\t\t// Pass a pair of proj or wkt strings defining the source and destination \n\t\t// projections. First element is the source, second is the destination.\n\t\tif (_ instanceof Array) {\n\t\t\tif (_.length !== 2) { \n\t\t\t\tthrow new Error(\"Array passed to customProjection.projection() must \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"be of length 2: [srcProj, dstProj]\");\n\t\t\t}\n\t\t\tprojection = proj4(_[0], _[1]);\n\t\t}\n\n\t\t// Pass a Proj4.js function directly\n\t\tif (typeof _ === \"function\") {\n\t\t\tprojection = _;\n\t\t}\n\n\t\treturn matrix;\n\t};\n\n\t// Point transformation function\n\tmatrix.point = function(a, b, c, d, tx, ty) {\n\t\treturn function(x, y) {\n\t\t\tvar p = projection.forward([x, y]);\n\t\t\treturn [a * p[0] + b * p[1] + tx, c * p[0] + d * p[1] + ty];\n\t\t};\n\t};\n\n\treturn matrix;\n}\n\n</script>", "description": "Denali Elevation Profiles", "created_at": "2016-09-12T01:15:21Z", "updated_at": "2016-09-12T02:07:05Z", "api": ["d3.ticks", "d3.geoPath", "d3.select", "d3.scaleLinear", "d3.area", "d3.line", "d3.queue", "d3.extent", "d3.axisBottom", "d3.axisLeft", "d3.format", "d3.geoTransform"], "readme": "Click the buttons to see different elevation profiles of [Denali](https://en.wikipedia.org/wiki/Denali).\n\nElevation data are from the \n[Shuttle Radar Topography Mission](http://www2.jpl.nasa.gov/srtm/) and were \ncollected using Derek Watkins's [SRTM Tile Grabber](http://dwtkns.com/srtm/).\nThe `create-profiles.js` Node.js script shows how the profiles were created \nfrom the elevation data. \nData on the peaks came from [peakbagger.com](http://peakbagger.com/peak.aspx?pid=271).\nThe shaded relief color palette came from [here](http://soliton.vm.bytemark.co.uk/pub/cpt-city/views/totp-svg.html).\nBy the way, a realistic coloring of the mountain would be almost completely \nwhite. I wanted to highlight the elevation change so I chose this color ramp.", "uid": "armollica_beebf49a0d7df1303d7e63b709ecdfcc"}, {"code": "<script>    \n    var width = window.innerWidth / 2;\n    var height = 400;\n    var svg = d3.select('svg')\n    \t.attr('width', width)\n    \t.attr('height', height);\n    var defs = svg.append('defs');\n    \n    var colors = d3.scaleOrdinal()\n    \t.range(['#F5C6DD', '#B6DEED', '#9E84C2', '#D3BEDA', '#FFE4E1']);\n    var strokeColor = '#68bff1';\n    var fillColor = '#e1fafe';\n    var radius = 50;\n    var strokeWidth = 3;\n    var angles = _.times(6, function(i) {\n      return 60 * i;\n    });\n    // data for the diamonds for the snowflake\n    var transforms = [\n      [[0, -36], 1.25, .25], // translate, scale, opacity\n      [[0, -26], 1, .2],\n      [[0, -16], .85, .2],\n    ];\n    \n    /*************************************\n    ** gradient\n    *************************************/\n    //Set up a horizontal gradient\n    var gradient = defs.append(\"radialGradient\")\n    \t.attr('id', 'gradient')\n    \t.attr(\"cx\", (-radius / 3) + \"px\")\n      .attr(\"cy\",  (-radius / 3) + \"px\")\n      .attr(\"r\", (radius * 1.5) + \"px\")\n//     \t.attr('x1', (-radius * 2) + 'px')\n//     \t.attr('y1', (-radius * 2) + 'px')\n//     \t.attr('x2', (radius * 2) + 'px')\n//     \t.attr('y2', (radius * 2) + 'px')\n    \t.attr(\"gradientUnits\", \"userSpaceOnUse\");\n    \n    //First stop to fill the region between 0% and 40%\n    gradient.append(\"stop\")\n      .attr(\"offset\", \"25%\")\n      .attr(\"stop-color\", fillColor);\n    //Second stop to fill the region between 40% and 100%\n    gradient.append(\"stop\")\n      .attr(\"offset\", \"100%\")\n      .attr(\"stop-color\", strokeColor);\n    \n    /*************************************\n    ** clip path\n    *************************************/\n    var clip = defs.append('clipPath')\n    \t.attr('id', 'snowflake')\n    \t.attr(\"gradientUnits\", \"userSpaceOnUse\");\n    \n    var allFlakes = _.chain(angles)\n    \t.map(function(a) {\n        return _.map(transforms, function(t) {\n          return [a, t];\n        });\n      }).flatten().value()\n    clip.selectAll('path')\n      .data(allFlakes)\n      .enter().append('path')\n        .attr('d', 'M0,-12 L10,0 L0,12 L-10,0 L0,-12Z').attr('transform', function(d) {\n      \t\tvar a = d[0];\n          var t = d[1];\n      \t\treturn 'rotate(' + a + ')translate(' + t[0] + ')' +\n            'scale(' + t[1] + ')';\n        }).attr('stroke-width', strokeWidth);\n    \n    /*************************************\n    ** draw snowflake\n    *************************************/\n   \n    // do da drawing\n    var snowflake = svg.append('g')\n    \t.classed('snowflake', true)\n//     \t.attr('opacity', .5)\n    \t.attr('transform', 'translate(' + [width / 2, height / 2] + ')');\n    \n    snowflake.append('circle')\n    \t.attr('r', radius * 1.5)\n    \t.attr('fill', '#fff')\n    \t.style('stroke', 'url(#gradient)')\n    \t.attr('stroke-width', strokeWidth * 1.5);\n    \n    snowflake.append('circle')\n    \t.classed('gradient', true)\n    \t.attr('r', radius * 1.25)\n    \t.style('clip-path', 'url(#snowflake)')\n    \t.style('fill', 'url(#gradient)')\n    \t.attr('opacity', .5);\n    \n    var flake = snowflake.selectAll('g')\n    \t.data(angles).enter().append('g')\n    \t.attr('transform', function(d) {\n        return 'rotate(' + d + ')';\n      });\n    \n    flake.append('line')\n    \t.attr('y1', -50)\n    \t.attr('y2', 50)\n    \t.attr('stroke-width', strokeWidth)\n    \t.attr('stroke', strokeColor)\n      .attr('stroke-opacity', 1);\n    \n    flake.selectAll('path')\n      .data(transforms)\n      .enter().append('path')\n        .attr('d', 'M0,-12 L10,0 L0,12 L-10,0 L0,-12Z').attr('transform', function(d) {\n      \t\treturn 'translate(' + d[0] + ')' +\n            'scale(' + d[1] + ')';\n        }).attr('fill', 'none')\n    \t\t.attr('stroke-alignment', 'inner')\n      \t.attr('stroke-width', strokeWidth)\n        .attr('stroke', strokeColor)\n    \t\t.attr('stroke-opacity', 1)\n      \t.attr('stroke-linecap', 'round')\n        .attr('stroke-linejoin', 'bevel');\n    \n    \n    /*************************************\n    ** sxywu text\n    *************************************/\n    svg.append('text')\n    \t.attr('x', width / 2)\n    \t.attr('y', height / 2 + 125)\n    \t.attr('text-anchor', 'middle')\n    \t.attr('dy', '.35em')\n    \t.attr('fill', strokeColor)\n    \t.style('fill', 'url(#gradient)')\n    \t.text('sxywu')\n  </script>", "description": "Personal logo iteration 7", "created_at": "2016-09-11T23:04:57Z", "updated_at": "2016-09-12T18:41:12Z", "api": ["d3.select", "d3.scaleOrdinal"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/f53c7be8967bd51d76edf3b022ab4ff9'>Personal logo iteration 4</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/f7ce6541546b101585511a0763c0500a'>Personal logo iteration 5</a>\n\nforked from <a href='http://bl.ocks.org/sxywu/'>sxywu</a>'s block: <a href='http://bl.ocks.org/sxywu/32d974214c076de00f3116e11ae4095e'>Personal logo iteration 6</a>", "uid": "sxywu_1badad84bbfbdbffbd1dd32115787ad6"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"indicators.csv\", function(error, countries) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(countries[0]).filter(function(d) {    \n    return d != \"Country\" && (      \n         y[d] = d3.scale.linear()\n        .domain(d3.extent(countries, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n  var dropDown = d3.select(\"#table_container\").append(\"select\")\n                    .attr(\"name\", \"country-list\")\n  \t\t\t\t\t\t\t\t\t.on(\"change\", change);\n  \n\tvar options = dropDown.selectAll(\"option\")\n           .data(countries.sort(function (a,b) {return d3.ascending(a.Country, b.Country);}))\n         \t.enter()\n           .append(\"option\");\n  \n  options.text(function (d) { return d[\"Country\"]; })\n       .attr(\"value\", function (d) { return d[\"Country\"]; });\n  \n    \n\tfunction change() {\n    var selectedIndex = dropDown.property('selectedIndex'),\n        selectedCountry          = options[0][selectedIndex].__data__;    \n    foreground.style(\"display\", function(d) {\n    \tif(d.Country==selectedCountry[\"Country\"]){\n       return null;\n    \t}\n      else{\n       return \"none\";\n      }\n     });    \n  }\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });  \n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n      .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { \n    \t\t\tif(d!=\"Rank\"){\n    \t\t\t  return d.toString().split(\"-\")[1].trim();\n          }\n    \t\t\telse{\n            return d;\n          }\n          })\n      .style(\"fill\",function(d){\n    \t\t\tvar randomColor = Math.floor(Math.random()*16777215).toString(16);\n    \t\t\treturn randomColor;\n      });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n      .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n  // add style linepath\n  d3.selectAll(\".foreground path\").style(\"stroke\",function(d,i){     \n    \t\t\tif(i<85){\n            return \"hsl(240,\"+(((170-i)*90)/170)+\"%,50%)\";\n          }\n          else{\n            return \"hsl(54,\"+(((i)*90)/170)+\"%,50%)\";\n            //return \"hsl(240,100%,50%)\";\n          }   \t\t\t\n  }).style(\"stroke-width\",function(d,i){\n    return (1-((i)/250))*5;\n  }).style(\"opacity\",function(d,i){   \n    return 1-((i)/300);\n    \n  });\n  \n});\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {      \n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "3D EPI Data Visual analitycs", "created_at": "2016-09-11T06:15:52Z", "updated_at": "2016-09-11T06:55:07Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.ascending", "d3.svg.brush", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n\nWhat:\n\n    structure:Table    \n    A Quantitive attribute: indicators\n    A categorical attribute: Countries\n    \n\nWhy:\n\nPresent the distribution of the information of a country in all their aspects like politics,economics,environment etc.\n\nHow: Polar Area 3D chart\n\n\t\tmark:\n    \n    \t\t\t-3d area\n          -3D volume\n          \n    channels:\n    \n    \t\t\tAngle to express dimension\n          color to differentiate dimension\n          3d Volumen\n          \n   \n   Expressiveness:\n   \n   The color channel do not match some indicators\n   the data is not show in an order way and it show more information that the\n   dataset has like the volume chart and the angle position of each indicator.\n   Because it id 3d some indicator are covering others.\n   Other important aspect is that the kind of measures of each indicator\n   are not show so what is the range, domain of each data?\n   \t\n   Effectiveness:\n   \n   This charts do not use the most important channels to show the indicators.\n   It use 3d position so it is difficult to compare, it use angles and areas and the dataset is not too complex to use that.\n          \n   Development:\n   \n   First, the best form to show quantitive attributes is with 2D chart. Second, using principal marks like lines, points and channels like bars to compare the principal information. Other channels like shapes to show secundary information like the mean of those indicators to understand without read.finishing, the best colors to use are those have strong tones because it is more easy to differentiate.\n          \n    In this prototype we show a first level of the data collected. The data itself is clasified into categories and subcategories. Here we presente the axis of the categories. In future developements clicking over each acces will grant acces to a detailed graph (same structure) to the subcategories. This design decision was made due to the large amount of data in the dataset and the possibility of breaking it into smaller steps, that way we can use the visualization tool to analyze at several levels of abstraction.\n\nforked from <a href='http://bl.ocks.org/tizon9804/'>tizon9804</a>'s block: <a href='http://bl.ocks.org/tizon9804/d4ab67d803079a49ab4ec4ecc158edfd'>3D EPI Data Visual analitycs</a>", "uid": "jcamilort_e8d50f58313f1c0f87df9fe2d143b857"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"indicators.csv\", function(error, countries) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(countries[0]).filter(function(d) {    \n    return d != \"Country\" && (      \n         y[d] = d3.scale.linear()\n        .domain(d3.extent(countries, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n  \n  var dropDown = d3.select(\"#table_container\").append(\"select\")\n                    .attr(\"name\", \"country-list\")\n  \t\t\t\t\t\t\t\t\t.on(\"change\", change);\n\tvar options = dropDown.selectAll(\"option\")\n           .data(countries)\n         \t.enter()\n           .append(\"option\");\n  \n  options.text(function (d) { return d[\"Country\"]; })\n       .attr(\"value\", function (d) { return d[\"Country\"]; });\n  \n    \n\tfunction change() {\n    var selectedIndex = dropDown.property('selectedIndex'),\n        selectedCountry          = options[0][selectedIndex].__data__;    \n    foreground.style(\"display\", function(d) {\n    \tif(d.Country==selectedCountry[\"Country\"]){\n       return null;\n    \t}\n      else{\n       return \"none\";\n      }\n     });    \n  }\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n      .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { \n    \t\t\tif(d!=\"Rank\"){\n    \t\t\t  return d.toString().split(\"-\")[1].trim();\n          }\n    \t\t\telse{\n            return d;\n          }\n          })\n      .style(\"fill\",function(d){\n    \t\t\tvar randomColor = Math.floor(Math.random()*16777215).toString(16);\n    \t\t\treturn randomColor;\n      });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n      .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n  // add style linepath\n  d3.selectAll(\".foreground path\").style(\"stroke\",function(d,i){\n          //console.log(d.Rank);\n    \t\t\treturn 1\n  }).style(\"stroke-width\",function(d,i){\n    return (1-(d.Rank/170))*2;\n  }).style(\"opacity\",function(d,i){\n    //console.log((i/170));\n    return 1-(d.Rank/170);\n    \n  });\n  \n});\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      console.log(extents);\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "3D EPI Data Visual analitycs", "created_at": "2016-09-11T05:09:31Z", "updated_at": "2016-09-11T06:14:20Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.svg.brush", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n\nWhat:\n\n    structure:Table    \n    A Quantitive attribute: indicators\n    A categorical attribute: Countries\n    \n\nWhy:\n\nPresent the distribution of the information of a country in all their aspects like politics,economics,environment etc.\n\nHow: Polar Area 3D chart\n\n\t\tmark:\n    \n    \t\t\t-3d area\n          -3D volume\n          \n    channels:\n    \n    \t\t\tAngle to express dimension\n          color to differentiate dimension\n          3d Volumen\n          \n   \n   Expressiveness:\n   \n   The color channel do not match some indicators\n   the data is not show in an order way and it show more information that the\n   dataset has like the volume chart and the angle position of each indicator.\n   Because it id 3d some indicator are covering others.\n   Other important aspect is that the kind of measures of each indicator\n   are not show so what is the range, domain of each data?\n   \t\n   Effectiveness:\n   \n   This charts do not use the most important channels to show the indicators.\n   It use 3d position so it is difficult to compare, it use angles and areas and the dataset is not too complex to use that.\n          \n   Development:\n   \n   First, the best form to show quantitive attributes is with 2D chart. Second, using principal marks like lines, points and channels like bars to compare the principal information. Other channels like shapes to show secundary information like the mean of those indicators to understand without read.finishing, the best colors to use are those have strong tones because it is more easy to differentiate.\n          \n\nforked from <a href='http://bl.ocks.org/tizon9804/'>tizon9804</a>'s block: <a href='http://bl.ocks.org/tizon9804/d4ab67d803079a49ab4ec4ecc158edfd'>3D EPI Data Visual analitycs</a>", "uid": "jcamilort_fc698a90abc87dc2d645a564cbc35a91"}, {"code": "<script>\n      \nvar margin = {top: 10, right: 20, bottom: 30, left: 120},\n    width = 900 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n            valueMargin = 4,\n  barHeight = 10,\n    labelWidth = 0;\n\n  \nvar y = d3.scaleBand()\n    .range([0, height-50])\n\t\t.paddingInner(0.1);\n  \nvar x = d3.scaleLinear()\n    .range([0, width]);\n\n  \nvar p = d3.scaleLinear()\n\t\t.range([0, 100]);\n\nvar yAxis = d3.axisLeft()\n    .scale(y)\n;\n\nvar xAxis = d3.axisBottom()\n    .scale(x)\n    .ticks(5, \"%\"); \n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar defs = d3.select(\"body svg\").append(\"defs\");\n  \nvar chart = d3.select(\".chart\")\n    .attr(\"width\", width);\n \nd3.tsv(\"source.tsv\", type, function(error, data) { \n\tif(error) {\n  \tconsole.error(error);\n    alert(error);\n    return;\n  }\n  update(data);\n});\n  var SelectedCountry = \"Switzerland\";\n   \nfunction update(data){\n  \n\n  d3.select(\"#sec1\").selectAll('p')\n    .data(SelectedCountry[0]).enter().append('h1')\n    .text(function(d) { return SelectedCountry; })\n    .attr('class', 'enter');\n  \n  // Scale the range of the data in the domains\n  y.domain(data.map(function(d) { return d.Country; })); \n  x.domain([0, d3.max(data, function(d) { return d.CurrentContry; })]);\n  p.domain(x.domain());\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", 6)\n      .attr(\"dx\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Porcents\");\n\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Countries\");\n\n  var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n  var color = d3.scaleOrdinal(d3.schemeCategory10);\n  \n  svg.selectAll(\".bar\")\n      .data(data)\n    \t.enter()\n    \t.append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", function(d) { return y(d.Country); })\n      .attr(\"height\", y.bandwidth())\n  \t\t.style(\"fill\",function(d) { return color(d.Color); })\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return x(d.CurrentContry); })\n  \t\t.on(\"mouseover\", function(d, i) {\n                div.style(\"left\", d3.event.pageX+10+\"px\");\n                div.style(\"top\", d3.event.pageY-25+\"px\");\n                div.style(\"display\", \"inline-block\");\n                div.html((d.Country)+\"<br> \"+(d.CurrentContry*100)+\"%\");\n  \t\t\t})\n  \t\t.on(\"mouseout\", function(d, i) {\n                div.style(\"display\", \"none\");\n  \t\t\t}).append(\"text\")\n            .attr(\"class\", \"country\")\n            .attr(\"y\", barHeight / 2)\n            .attr(\"dx\", -valueMargin + labelWidth) //margin right\n            .attr(\"dy\", \".35em\") //vertical align middle\n            .attr(\"text-anchor\", \"end\")\n            .text(function(d){\n                return (d.CurrentContry);\n            }) \n            .attr(\"x\", function(d){\n                var width = this.getBBox().width;\n                return Math.max(width + valueMargin, x(d.CurrentContry));\n            });\n  \n\n};\n\n  \nfunction type(d) {\n  d.CurrentContry = d[SelectedCountry]/100;\n  d.Fisheries = d.Fisheries/100; // coerce to number\n  d.EPIScore = d.EPIScore/100;\n  return d;\n}\n\n</script>", "description": "Tarea4", "created_at": "2016-09-11T05:03:54Z", "updated_at": "2016-09-11T05:15:36Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.axisBottom", "d3.select", "d3.tsv", "d3.max", "d3.scaleOrdinal"], "readme": "## Authors:\nEduard Avelda\u00f1o\nCristian Gutierrez\n\n## WHAT?\nDataset Type:  Table.\nData Type: Items, attributes (Quantitative).\n\n## WHY?\nWe have two actions: Discover and Present.  Both Works for Analyze the data.\nTarget: Distribution.\n\nDiscover the percentage of EPI (Environmental Performance Index) for each country.\nPresent indicators Environmental Health and Ecosystem Vitality for each country.\n## HOW?\nMarks: Volume and Area.\nChannels: Size (Volume) and Color (Hue).\nArrange: Express.\nMap: Color.\nManipulate: Select\n\n\n## REVIEW                         \nThe channels used are the least effective in the Framework of Tamara teacher. Volume does not allow adequately perceive the magnitude of each of the attributes, although it is valid to note that use hue to clearly identify the categories, but the colors used have tones that do not allow proper distinction. The channel volume does not allow a clear perception of the magnitudes and also favors the overlap of marks.\n\nTask of discovering the percentage of each country, it is clear that the used filter does not work (displays only the vis of Germany), but it is valid to note that a summary of the country shows the percentage of EPI and its ranking is shown against rest.\n\nAs for the task of presenting the Environmental Health and Ecosystem Vitality indicators for each country it can be noticed that use less effective channels. The vis violates the principle of effectiveness as 3D shapes are less effective, this could be done better using a bar chart.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/davidgutierrez/'>davidgutierrez</a>'s block: <a href='http://bl.ocks.org/davidgutierrez/473d7579c839fe90735dcba659f8171b'>Tarea4</a>", "uid": "eduavencama_8fd325ade497f7c2d28c4eefb4dda13e"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"indicators.csv\", function(error, countries) {\n  \n   \n    \n   \n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(countries[0]).filter(function(d) {    \n    return d != \"Country\" && (      \n         y[d] = d3.scale.linear()\n        .domain(d3.extent(countries, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n\n  var dropDown = d3.select(\"#table_container\").append(\"select\")\n                    .attr(\"name\", \"country-list\")\n  \t\t\t\t\t\t\t\t\t.on(\"change\", change);\n\tvar options = dropDown.selectAll(\"option\")\n           .data(countries)\n         \t.enter()\n           .append(\"option\");\n  \n  options.text(function (d) { return d[\"Country\"]; })\n       .attr(\"value\", function (d) { return d[\"Country\"]; });\n  \n    \n\tfunction change() {\n    var selectedIndex = dropDown.property('selectedIndex'),\n        selectedCountry          = options[0][selectedIndex].__data__;\n  \n    foreground.style(\"display\", \"none\");\n    foreground.style(\"display\",selectedCountry);\n    //path(selectedCountry).stroke(\"steelblue\");\n    //var fs = d3.select(\"#selectedName\").append(\"p\").text(selectedCountry[\"Country\"]);\n    \n    //var actives = dimensions.filter(function(p) { return y[selectedCountry];});\n   // foreground.style(\"display\", function(d) {\n    //\treturn actives;\n  //});\n    \n    //foreground.style(\"display\", function(d) {\n    //\treturn dimensions.filter(function(p) { return y[selectedCountry]; });\n    //}) ;\n    //path(selectedCountry).attr(\"class\", \"foreground\");\n   // foreground(path(selectedCountry));\n   // d3.select(\"#selectedName\").append(\"p\").text(selectedCountry[\"Country\"]);\n\t}\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n      .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d; });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n      .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n});\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "3D EPI Data Visual analitycs", "created_at": "2016-09-11T04:15:05Z", "updated_at": "2016-09-11T05:09:25Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.svg.brush"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n\nWhat:\n\n    structure:Table    \n    A Quantitive attribute: indicators\n    A categorical attribute: Countries\n    \n\nWhy:\n\nPresent the distribution of the information of a country in all their aspects like politics,economics,environment etc.\n\nHow: Polar Area 3D chart\n\n\t\tmark:\n    \n    \t\t\t-3d area\n          -3D volume\n          \n    channels:\n    \n    \t\t\tAngle to express dimension\n          color to differentiate dimension\n          3d Volumen\n          \n   \n   Expressiveness:\n   \n   The color channel do not match some indicators\n   the data is not show in an order way and it show more information that the\n   dataset has like the volume chart and the angle position of each indicator.\n   Because it id 3d some indicator are covering others.\n   Other important aspect is that the kind of measures of each indicator\n   are not show so what is the range, domain of each data?\n   \t\n   Effectiveness:\n   \n   This charts do not use the most important channels to show the indicators.\n   It use 3d position so it is difficult to compare, it use angles and areas and the dataset is not too complex to use that.\n          \n   Development:\n   \n   First, the best form to show quantitive attributes is with 2D chart. Second, using principal marks like lines, points and channels like bars to compare the principal information. Other channels like shapes to show secundary information like the mean of those indicators to understand without read.finishing, the best colors to use are those have strong tones because it is more easy to differentiate.\n          \n\nforked from <a href='http://bl.ocks.org/tizon9804/'>tizon9804</a>'s block: <a href='http://bl.ocks.org/tizon9804/d4ab67d803079a49ab4ec4ecc158edfd'>3D EPI Data Visual analitycs</a>", "uid": "jcamilort_75949a078ffb954905569a4a972ea59d"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"indicators.csv\", function(error, countries) {\n  \n   \n    \n   \n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(countries[0]).filter(function(d) {    \n    return d != \"Country\" && (      \n         y[d] = d3.scale.linear()\n        .domain(d3.extent(countries, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n  \n\tvar dataF = [{\"value\":\"AFG\"}, {\"value\": \"ALB\"},{\n    \"value\":\"COL\"}];\n  var dropDown = d3.select(\"#table_container\").append(\"select\")\n                    .attr(\"name\", \"country-list\");\n\tvar options = dropDown.selectAll(\"option\")\n           .data(countries)\n         \t.enter()\n           .append(\"option\");\n  \n  options.text(function (d) { return d[\"Country\"]; })\n       .attr(\"value\", function (d) { return d[\"Country\"]; });\n  \n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n      .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d; });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n      .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n});\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "3D EPI Data Visual analitycs", "created_at": "2016-09-11T04:11:18Z", "updated_at": "2016-09-11T04:11:36Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.svg.brush"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n\nWhat:\n\n    structure:Table    \n    A Quantitive attribute: indicators\n    A categorical attribute: Countries\n    \n\nWhy:\n\nPresent the distribution of the information of a country in all their aspects like politics,economics,environment etc.\n\nHow: Polar Area 3D chart\n\n\t\tmark:\n    \n    \t\t\t-3d area\n          -3D volume\n          \n    channels:\n    \n    \t\t\tAngle to express dimension\n          color to differentiate dimension\n          3d Volumen\n          \n   \n   Expressiveness:\n   \n   The color channel do not match some indicators\n   the data is not show in an order way and it show more information that the\n   dataset has like the volume chart and the angle position of each indicator.\n   Because it id 3d some indicator are covering others.\n   Other important aspect is that the kind of measures of each indicator\n   are not show so what is the range, domain of each data?\n   \t\n   Effectiveness:\n   \n   This charts do not use the most important channels to show the indicators.\n   It use 3d position so it is difficult to compare, it use angles and areas and the dataset is not too complex to use that.\n          \n   Development:\n   \n   First, the best form to show quantitive attributes is with 2D chart. Second, using principal marks like lines, points and channels like bars to compare the principal information. Other channels like shapes to show secundary information like the mean of those indicators to understand without read.finishing, the best colors to use are those have strong tones because it is more easy to differentiate.\n          \n\nforked from <a href='http://bl.ocks.org/tizon9804/'>tizon9804</a>'s block: <a href='http://bl.ocks.org/tizon9804/d4ab67d803079a49ab4ec4ecc158edfd'>3D EPI Data Visual analitycs</a>", "uid": "jcamilort_ef60fb4bad1dd29e0b82074805769856"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var dataMulti;\nd3.csv(\"indicators.csv\", function(error, countries) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(countries[0]).filter(function(d) {\n    \n  \n    y[\"Country\"]\n    \n    return d != \"Country\" && (\n         y[d] = d3.scale.linear()\n        .domain(d3.extent(countries, function(p) { return +p[d]; }))\n        .range([height, 0]));\n    \n  }));\n  \n  var dataF = [{\"value\":\"AFG\"}, {\"value\": \"ALB\"},{\n    \"value\":\"COL\"}];\n  var dropDown = d3.select(\"#table_container\").append(\"select\")\n                    .attr(\"name\", \"country-list\");\n\tvar options = dropDown.selectAll(\"option\")\n           .data(countries)\n         \t.enter()\n           .append(\"option\");\n  \n  options.text(function (d) { return d[\"Country\"]; })\n       .attr(\"value\", function (d) { return d[\"Country\"]; });\n  \n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n    .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d; });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n      .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n});\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "3D EPI Data Visual analitycs", "created_at": "2016-09-11T03:43:20Z", "updated_at": "2016-09-11T04:10:39Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.svg.brush"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n\nWhat:\n\n    structure:Table    \n    A Quantitive attribute: indicators\n    A categorical attribute: Countries\n    \n\nWhy:\n\nPresent the distribution of the information of a country in all their aspects like politics,economics,environment etc.\n\nHow: Polar Area 3D chart\n\n\t\tmark:\n    \n    \t\t\t-3d area\n          -3D volume\n          \n    channels:\n    \n    \t\t\tAngle to express dimension\n          color to differentiate dimension\n          3d Volumen\n          \n   \n   Expressiveness:\n   \n   The color channel do not match some indicators\n   the data is not show in an order way and it show more information that the\n   dataset has like the volume chart and the angle position of each indicator.\n   Because it id 3d some indicator are covering others.\n   Other important aspect is that the kind of measures of each indicator\n   are not show so what is the range, domain of each data?\n   \t\n   Effectiveness:\n   \n   This charts do not use the most important channels to show the indicators.\n   It use 3d position so it is difficult to compare, it use angles and areas and the dataset is not too complex to use that.\n          \n   Development:\n   \n   First, the best form to show quantitive attributes is with 2D chart. Second, using principal marks like lines, points and channels like bars to compare the principal information. Other channels like shapes to show secundary information like the mean of those indicators to understand without read.finishing, the best colors to use are those have strong tones because it is more easy to differentiate.\n          \n\nforked from <a href='http://bl.ocks.org/tizon9804/'>tizon9804</a>'s block: <a href='http://bl.ocks.org/tizon9804/d4ab67d803079a49ab4ec4ecc158edfd'>3D EPI Data Visual analitycs</a>", "uid": "jcamilort_aeeb590a7ef54c971084bf46cc05f43d"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"indicators.csv\", function(error, countries) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(countries[0]).filter(function(d) {\n    return d != \"Country\" && (\n         y[d] = d3.scale.linear()\n        .domain(d3.extent(countries, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n    .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d; });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n      .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n  \n\n});\n  \nvar dropDown = d3.select(\"#list_cont\").append(\"select\")\n                    .attr(\"name\", \"country-list\");\n    \n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "3D EPI Data Visual analitycs", "created_at": "2016-09-11T03:25:03Z", "updated_at": "2016-09-11T03:40:05Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.svg.brush"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n\nWhat:\n\n    structure:Table    \n    A Quantitive attribute: indicators\n    A categorical attribute: Countries\n    \n\nWhy:\n\nPresent the distribution of the information of a country in all their aspects like politics,economics,environment etc.\n\nHow: Polar Area 3D chart\n\n\t\tmark:\n    \n    \t\t\t-3d area\n          -3D volume\n          \n    channels:\n    \n    \t\t\tAngle to express dimension\n          color to differentiate dimension\n          3d Volumen\n          \n   \n   Expressiveness:\n   \n   The color channel do not match some indicators\n   the data is not show in an order way and it show more information that the\n   dataset has like the volume chart and the angle position of each indicator.\n   Because it id 3d some indicator are covering others.\n   Other important aspect is that the kind of measures of each indicator\n   are not show so what is the range, domain of each data?\n   \t\n   Effectiveness:\n   \n   This charts do not use the most important channels to show the indicators.\n   It use 3d position so it is difficult to compare, it use angles and areas and the dataset is not too complex to use that.\n          \n   Development:\n   \n   First, the best form to show quantitive attributes is with 2D chart. Second, using principal marks like lines, points and channels like bars to compare the principal information. Other channels like shapes to show secundary information like the mean of those indicators to understand without read.finishing, the best colors to use are those have strong tones because it is more easy to differentiate.\n          \n\nforked from <a href='http://bl.ocks.org/tizon9804/'>tizon9804</a>'s block: <a href='http://bl.ocks.org/tizon9804/d4ab67d803079a49ab4ec4ecc158edfd'>3D EPI Data Visual analitycs</a>", "uid": "jcamilort_39e64e6b6e098c72a9eda3a21a4e4f72"}, {"code": "<script>\nvar d3 = window.d3;\n\nvar svg = d3.select('svg'),\n    width = +svg.attr('width'),\n    height = +svg.attr('height');\n\nvar simulation = d3.forceSimulation()\n    .force('link', d3.forceLink().id(function(d) { return d.id; }))\n    .force('charge', d3.forceManyBody())\n    .force('center', d3.forceCenter(width / 2, height * 1.12 / 2));\n\n/*******************************************************************************\n * Color Palette\n * Source: https://github.com/Jam3/nice-color-palettes\n */\n\nvar color = d3.scaleOrdinal([\n  '#e8ddcb',\n  '#033649',\n  '#036564',\n  '#031634',\n  '#547980',\n  '#45ada8',\n  '#9de0ad',\n  '#e5fcc2'\n]);\n\n/******************************************************************************\n * Gooey Filter\n * Source: https://bl.ocks.org/nbremer/3da658e9a21cd3c71d0819f9698f3bfa\n */\n\nvar defs = svg.append('defs');\nvar filter = defs.append('filter').attr('id','gooeyCodeFilter');\n      filter.append('feGaussianBlur')\n        .attr('in','SourceGraphic')\n        .attr('stdDeviation','12')\n        //to fix safari: http://stackoverflow.com/questions/24295043/svg-gaussian-blur-in-safari-unexpectedly-lightens-image\n        .attr('color-interpolation-filters','sRGB')\n        .attr('result','blur');\n      filter.append('feColorMatrix')\n        .attr('in','blur')\n        .attr('mode','matrix')\n        .attr('values','1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9')\n        .attr('result','gooey');\n\n/******************************************************************************\n * Force-directed Graph\n * Source: https://bl.ocks.org/mbostock/4062045\n */\n\nd3.json('miserables.json', function(error, graph) {\n  if (error) throw error;\n\n  var link = svg.append('g')\n      .attr('class', 'links')\n    .selectAll('line')\n    .data(graph.links)\n    .enter().append('line')\n      .attr('stroke-width', function(d) { return Math.sqrt(d.value); });\n\n  var node = svg.append('g')\n      .attr('class', 'nodes')\n      .style('filter', 'url(#gooeyCodeFilter)')\n    .selectAll('circle')\n    .data(graph.nodes)\n    .enter().append('circle')\n      .attr('r', 20)\n      .attr('fill', function(d) { return color(d.group); })\n      .call(d3.drag()\n          .on('start', dragstarted)\n          .on('drag', dragged)\n          .on('end', dragended));\n\n  node.append('title')\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on('tick', ticked);\n\n  simulation.force('link')\n      .links(graph.links);\n\n  function ticked() {\n    link\n        .attr('x1', function(d) { return d.source.x; })\n        .attr('y1', function(d) { return d.source.y; })\n        .attr('x2', function(d) { return d.target.x; })\n        .attr('y2', function(d) { return d.target.y; });\n\n    node\n        .attr('cx', function(d) { return d.x; })\n        .attr('cy', function(d) { return d.y; });\n  }\n});\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\n</script>", "description": "Gooey Force-Directed Graph in D3", "created_at": "2016-09-11T02:31:26Z", "updated_at": "2016-09-16T23:49:44Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.scaleOrdinal", "d3.json", "d3.drag"], "readme": "Force-directed graph [by mbostock](https://bl.ocks.org/mbostock/4062045), remixed with a gooey SVG filter for no good reason.\n", "uid": "donmccurdy_bbbe54879b7538cb7bc0ff654e225359"}, {"code": "<script>\nvar width = 960,\n    height = 800;\n\nvar linkColor = d3.scaleSequential(d3.interpolateMagma)\n  .domain([220, -1])\n\nvar canvas = d3.select(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }).distance(0.3).strength(1.6))\n    .force(\"charge\", d3.forceManyBody().strength(-0.35).distanceMax(220))\n    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n//    .force(\"vertical\", d3.forceY().strength(0.0001))\n//    .force(\"horizontal\", d3.forceX().strength(0.0001))\n    .alphaDecay(0.002);\n\nvar graph = {};\n\nd3.text(\"commanche_dual.mtx\", function(error, raw) {\n  if (error) throw error;\n\n  var node_set = d3.set();\n\n  var lines = raw.split(\"\\n\")\n    .slice(15);\n\n  var pairs = lines\n    .map(function(d) { return d.split(\" \"); });\n\n  pairs.forEach(function(d) {\n    node_set.add(d[0]);\n    node_set.add(d[1]);\n  });\n\n  graph.nodes = node_set.values().map(function(d) {\n      return {\n        id: d\n      };\n    });\n\n  graph.links = pairs.map(function(d) {\n      return {\n        source: d[0],\n        target: d[1]\n      }\n    })\n    .filter(function(d) {\n      return d.source !== d.target;\n    });\n\n  simulation\n      .nodes(graph.nodes)\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  d3.range(10).forEach(simulation.tick);\n\n  simulation\n      .on(\"tick\", ticked);\n\n  canvas.call(d3.drag()\n          .container(canvas.node())\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n\n    context.globalAlpha = 0.35;\n    context.beginPath();\n    context.strokeStyle = \"#777\";\n    graph.links.forEach(drawLink);\n    context.stroke();\n\n    context.globalAlpha = 1;\n    context.fillStyle = \"#000\";\n    graph.nodes.forEach(drawNode);\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.8).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.fillStyle = d3.interpolateMagma(Math.sqrt(d.vx*d.vx + d.vy*d.vy)/1.5);\n  context.fillRect(d.x-0.75, d.y-0.75, 1.5, 1.5);\n}\n\n</script>", "description": "Comanche Dual", "created_at": "2016-09-11T01:58:58Z", "updated_at": "2016-09-11T02:47:18Z", "api": ["d3.scaleSequential", "d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.forceY", "d3.forceX", "d3.text", "d3.set", "d3.range", "d3.drag", "d3.interpolateMagma"], "readme": "The [comanche dual graph](http://www.cise.ufl.edu/research/sparse/matrices/Pothen/commanche_dual.html) from the [The University of Florida Sparse Matrix Collection](http://www.cise.ufl.edu/research/sparse/matrices/index.html).\n\n7,922 nodes with 11,881 edges. Self-edges were removed from the links array. Nodes are colored by their velocity.\n\n<a href=\"http://www.cise.ufl.edu/research/sparse/matrices/Pothen/commanche_dual.html\"><img width=\"600\" src=\"http://www.cise.ufl.edu/research/sparse/matrices/Pothen/commanche_dual_gplot.png\"/></a>\n", "uid": "syntagmatic_75c5ca501200b0cf7a5958b4e404f777"}, {"code": "<script>\n    const WIDTH = 960\n    const HEIGHT = 500\n    \n    const PRIMES =[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101, 103, 107,109,113,127,131,137,139,149,151,157]\n    const OPERATORS = [\n      function(a, b) { return a + b }, \n      function(a, b) { return a - b },\n      function(a, b) { return a * b }, \n      function(a, b) { return a / b },\n\t    function(a, b) { return a % b }\n   \t]\n    \n    const CRITERION = [\n      function(n) { return true },\n      function(n) { return n > 110 },\n      function(n) { return n % 5 === 0 },\n      function(n) { return n % 15 === 0 },\n      function(n) { return n % 210 === 0 },\n      function(n) { return n % 14 === 0 },\n      function(n) { return n % 7 === 0 },\n      function(n) { return n > 150 },\n      function(n) { return true }\n    ]\n    \n    const MUTATION_RATE = 0.0008\n    \n    const clampColor = function(input) {\n      return Math.round(Math.max(0, Math.min(255, input)))\n    }\n    \n    const wrap = function(n) {\n      if (n < 0) { return false } // return n + WIDTH * HEIGHT }\n      if (n > WIDTH * HEIGHT) { return false } // return n - WIDTH * HEIGHT }\n      return n\n    }\n    \n    const adjacencyTransform = [\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - WIDTH - 1) : false },\n      function(n) { return wrap(n - WIDTH) },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n - WIDTH + 1) : false },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n - 1) : false },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + 1) : false },\n      function(n) { return (n % WIDTH !== 0) ? wrap(n + WIDTH - 1) : false },\n      function(n) { return wrap(n + WIDTH) },\n      function(n) { return ((n + 1) % WIDTH !== 0) ? wrap(n + WIDTH + 1) : false },\n    ]\n    \n    // Set up\n    var slots, cells, liveCells, pxToPaint, tribes, lineage\n    \n    var candidate = function(parent) {\n      var genes = {\n        numbers: parent.genes.numbers.map(function(n) { return n }),\n        operators: parent.genes.operators.map(function(n) { return n })\n      }\n      var colorCache = Object.assign({}, parent.color)\n      var fitness = parent.fitness\n      var generation = parent.generation + 1\n      var hue = parent.hue\n      \n      // Mutate\n      if (Math.random() < MUTATION_RATE) {\n        var numberSlot = Math.floor(Math.random() * genes.numbers.length)\n        var primeToPick = Math.floor(Math.random() * PRIMES.length)\n        genes.numbers[numberSlot] = PRIMES[primeToPick]\n      \n        fitness = genes.operators.reduce(function(n, currentOp, i) {\n          return OPERATORS[currentOp](n, genes.numbers[i + 1]) \n        }, genes.numbers[0])\n        \n        hue = Math.round(Math.random() * 60 - 30 + 120 + parent.hue)\n        //hue = (tribes.length % 8) * 45\n\n        generation = 0\n      }\n      \n      var hsl = d3.hsl(\n        hue, \n        0.75,\n        0.48 - Math.sin(generation / 15) * 0.03\n      )\n      \n      var rgb = d3.rgb(hsl)\n      \n      color = {\n        r: clampColor(rgb.r),\n        g: clampColor(rgb.g),\n        b: clampColor(rgb.b)\n      }\n      \n      var child = {\n        generation: generation,\n        genes: genes,\n        cooldown: genes.numbers.length + genes.operators.length,\n        hue: hue,\n        color: color,\n        fitness: fitness,\n        tribeId: parent.tribeId\n      }\n      \n      return child\n    }\n    \n    var reproduce = function(child, coordinate) {\n      var adjacentAvalible = adjacencyTransform.map(function(fn) {\n        return fn(coordinate)\n      }).filter(function(co) {\n        return co && slots[co] === null\n      })\n\n      if (child.generation === 0) {\n        if (typeof child.tribeId === 'number') {\n          // if it isn't one of the originals\n        \tvar parentTribeId = child.tribeId\n        \n          lineage.push({\n            parent: parentTribeId,\n            child: tribes.length\n          })  \n        }\n        \n        child.tribeId = tribes.length\n      \ttribes.push([coordinate])\n      } else {\n        tribes[child.tribeId].push(coordinate)\n      }\n      \n      child.coordinate = coordinate\n\t\t\tchild.adjacentAvalible = adjacentAvalible\n      \n      cells.push(child)\n      liveCells.push(child)\n      slots[coordinate] = cells.length - 1\n      pxToPaint.push(coordinate)\n    }\n    \n    var reproduceThrow = function(parent, coordinate) {\n     \n      if (slots[coordinate] !== null) {\n        var index = parent.adjacentAvalible.indexOf(coordinate)\n        parent.adjacentAvalible.splice(index, 1)\n        \n        return\n      }\n      \n      var column = Math.floor((coordinate % WIDTH) / WIDTH * 9)      \n      var criteria = CRITERION[column]\n      \n      var newChild = candidate(parent)\n      \n      if (criteria(newChild.fitness)) {\n        reproduce(newChild, coordinate)\n      }\n    }\n    \n    // Feel free to change or delete any of the code you see in this editor!\n    var canvas = d3.select(\"body\").append(\"canvas\")\n      .attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT);\n    \n    var svg = d3.select(\"body\").append(\"svg\")\n    \t.attr(\"width\", WIDTH)\n      .attr(\"height\", HEIGHT)\n    \t.style(\"position\", \"absolute\")\n    \t.style(\"top\", 0)\n    \t.style(\"left\", 0)\n    \n    var ctx = canvas.node().getContext(\"2d\");\n    \n    var imgData = ctx.getImageData(0, 0, WIDTH, HEIGHT)\n    var data = imgData.data\n    \n    var resetSimulation = function() {\n      slots = d3.range(960 * 500).map(function() { return null })\n      cells = []\n      liveCells = []\n      tribes = []\n      lineage = []\n      pxToPaint = []\n      \n      overlay()\n    \n      var c1 = WIDTH * HEIGHT / 2 + 20\n      var c2 = WIDTH * HEIGHT / 2 - 20\n      \n      var firstCell = { \n        generation: 0,\n        genes: {\n          numbers: [13, 0],\n          operators: [0]\n        },\n        cooldown: 0,\n        hue: Math.round(360 * Math.random()),\n        color: {\n          r: 155,\n          g: 155,\n          b: 155\n        },\n        fitness: 13\n      }\n      \n      var secondCell = {\n        generation: 0,\n        genes: {\n          numbers: [13, 0],\n          operators: [0]\n        },\n        cooldown: 0,\n        hue: (firstCell.hue + 180) % 360,\n        color: {\n          r: 155,\n          g: 155,\n          b: 155\n        },\n        fitness: 13\n      }\n      \n      reproduce(firstCell, c1)\n      reproduce(secondCell, c2)\n      \n      slots.forEach(function(slot, i) {\n        var b = i * 4\n        data[b] = 255\n        data[b + 1] = 255\n        data[b + 2] = 255\n      })\n      \n      ctx.putImageData(imgData, 0, 0)\n      \n      window.requestAnimationFrame(tick)\n    }\n    \n    var overlay = function() {\n      var keys = d3.range(tribes.length)\n      \n      var significantTribes = keys.filter(function(key) {\n        return tribes[key].length > 20\n      })\n      \n      var coordinates = significantTribes.map(function(key) {\n        var tribe = tribes[key]\n        var originalCoordinate = tribe[0]\n        \n        var x = originalCoordinate % WIDTH\n        var y = Math.floor(originalCoordinate / WIDTH)\n        \n        return { x: x, y: y }\n      })\n      \n      var linkedCoordinates = lineage.filter(function(line) {\n        return significantTribes.indexOf(line.child) >= 0\n      })\n      .map(function(pair) {       \n        var parent = tribes[pair.parent][0]\n        var child = tribes[pair.child][0]\n        \n        return {\n          x1: parent % WIDTH,\n          y1: Math.floor(parent / WIDTH),\n          x2: child % WIDTH,\n          y2: Math.floor(child / WIDTH)\n        }\n      })\n      \n      var circles = svg.selectAll('circle')\n      \t.data(coordinates)\n      \n      circles.enter().append(\"circle\")\n      \t.attr('r', 5)\n      \t.attr('fill', 'none')\n      \t.attr('stroke-width', 2.5)\n      \t.attr('stroke', '#ffffff')\n      .merge(circles)\n      \t.attr('cx', function(d) { return d.x })\n      \t.attr('cy', function(d) { return d.y })\n      \n      circles.exit().remove()\n      \n      var lines = svg.selectAll('line')\n      \t.data(linkedCoordinates)\n      \n      lines.enter().append('line')\n      \t.attr('stroke', '#ffffff')\n      \t.attr('stroke-width', 1.5)\n      .merge(lines)\n      \t.attr('stroke-dasharray', function(d) {\n        \tvar dx = d.x1 - d.x2\n          var dy = d.y1 - d.y2\n        \tvar length = Math.sqrt(dx * dx + dy * dy)\n        \n        \treturn '0, 4, ' + (length - 12)\n      \t})\n      \t.attr('x1', function(d) { return d.x1 })\n\t      .attr('y1', function(d) { return d.y1 })\n      \t.attr('x2', function(d) { return d.x2 })\n      \t.attr('y2', function(d) { return d.y2 })\n      \n      lines.exit().remove()\n    }\n    \n    var tick = function() {\n      // Should Continue\n      pxToPaint = []\n      \n      // Simulate\n      var cullCells = []\n      liveCells.forEach(function(cell, i) {\n        if (cell.adjacentAvalible.length <= 0) {\n          cullCells.push(i)\n          return \n        }\n        \n        var target = cell.adjacentAvalible[Math.floor(cell.adjacentAvalible.length * Math.random())]\n        \n        reproduceThrow(cell, target)\n      })\n      \n      cullCells.reverse()\n      cullCells.forEach(function(id) {\n        liveCells.splice(id, 1)\n      })\n      \n      // Paint\n    \tpxToPaint.forEach(function(coordinate) {\n        var r = coordinate * 4\n        var g = r + 1\n        var b = g + 1\n        var a = b + 1\n\n        var slot = slots[coordinate]\n        \n        // if slot has a cell\n        var cell = cells[slot]\n            \t\t\t\t\n        data[r] = cell.color.r\n        data[g] = cell.color.g\n        data[b] = cell.color.b\n        data[a] = 255\n      })\n\n      ctx.putImageData(imgData, 0, 0)\n      \n      if (Math.random() > 0.9) {\n\t      overlay()        \n      }\n      \n      if (liveCells.length > 0) {\n      \twindow.requestAnimationFrame(tick)  \n      } else {\n        console.log('done')\n        setTimeout(resetSimulation, 5000)\n      }\n      \n    }\n    \n    resetSimulation()\n    \n    \n  </script>", "description": "Antibiotic Resistance Simulation", "created_at": "2016-09-11T01:24:53Z", "updated_at": "2016-09-17T17:55:29Z", "api": ["d3.hsl", "d3.rgb", "d3.select", "d3.range"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nInspired by [this Harvard antibiotics resistance study](http://www.vox.com/2016/9/8/12852924/evolution-bacteria-timelapse-video-mega-harvard) I wanted to build a simulation of evolution.\n\nIn this simulation the cells each produce a number, determined by its \"genes\", which are two random numbers added together. As they reproduce, sometimes those genes mutate, and the cells produce a new number. When they mutate, they are assigned a different color in the visualization.\n\nThe \"petri dish\" is divided into 9 sections, like in the Harvard study. In place of exponentially increasing amounts of antibiotics in each column, the survival criteria is whether the cell's number is divisible by an increasingly large number.\n\nThis is my admission entry to visFest 2016 =)", "uid": "tonyhschu_067d977d6d4ae7224dcebdf3775d9e7e"}, {"code": "<script>\n  \n\nvar margin = {top: 40, right: 40, bottom: 40, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 200 - margin.top - margin.bottom;\n\n// var svg = d3.select(\"svg\"),\n//     margin = {top: 40, right: 40, bottom: 40, left: 40},\n//     width = svg.attr(\"width\") - margin.left - margin.right,\n//     height = svg.attr(\"height\") - margin.top - margin.bottom;\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \n//   \tconsole.log(svg.attr(\"height\"))\n\nvar formatValue = d3.format(\",d\");\n\nvar x = d3.scaleLog()\n    .rangeRound([0, width]);\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.value; }));\n  \n  offset = 100;\n\n  var simulation = d3.forceSimulation(data)\n      .force(\"x\", d3.forceX(function(d) { return width - x(d.value); }).strength(1))\n      .force(\"y\", d3.forceY(function(d) { return (height / 2) -80; }))\n      .force(\"collide\", d3.forceCollide(4))\n//       .alpha(0.2)\n      .stop();\n  \n//   d3.transition()\n//   \t.duration(1000)\n//     .tween((a))\n  \n//   simulation.transition()\n//   \t.duration(2000)\n//     .alpha(1);\n  \n//   var simulation = d3.forceSimulation(data)\n//       .force(\"x\", d3.forceX(function(d) { return x(d.value); }).strength(1))\n//       .force(\"y\", d3.forceY(height / 2))\n//       .force(\"collide\", d3.forceCollide(4))\n//       .stop();\n\n  for (var i = 0; i < 120; ++i) simulation.tick();\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(20, \".0s\"));\n  \n  var cell = g.append(\"g\")\n      .attr(\"class\", \"cells\")\n    .selectAll(\"g\").data(d3.voronoi()\n        .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.top]])\n        .x(function(d) { return d.x; })\n        .y(function(d) { return d.y; })\n      .polygons(data)).enter().append(\"g\");\n  \n  \n  \tcell.append('image')\t\t\n\t\t\t.attr('xlink:href',\n          'https://twemoji.maxcdn.com/svg/1f41d.svg')\n    \t.attr('height', '12')\n    \t.attr('width', '12')\n      .attr(\"x\", function(d) { return d.data.x; })\n      .attr(\"y\", function(d) { return d.data.y; });\n  \n  \n  \tcell.selectAll(\"image\")\n    .transition()\n    .duration(750)\n    .delay(500)\n    .attr(\"x\", function(d) { return width - d.data.x; })\n    .attr(\"y\", function(d) { return d.data.y+80; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.data.id + \"\\n\" + formatValue(d.data.value); });\n});\n\nfunction type(d) {\n  if (!d.value) return;\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Beeswarm (With Flying Bees)", "created_at": "2016-09-11T01:16:01Z", "updated_at": "2016-09-17T07:36:56Z", "api": ["d3.select", "d3.format", "d3.scaleLog", "d3.csv", "d3.extent", "d3.forceSimulation", "d3.forceX", "d3.forceY", "d3.forceCollide", "d3.transition", "d3.axisBottom", "d3.voronoi"], "readme": "A static beeswarm plot implemented using [d3-force](https://github.com/d3/d3-force)\u2019s [collision constraint](https://github.com/d3/d3-force#collision). A Voronoi overlay improves hover interaction.\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/6526445e2b44303eebf21da3b6627320'>Beeswarm</a>\n\nforked from <a href='http://bl.ocks.org/BBischof/'>BBischof</a>'s block: <a href='http://bl.ocks.org/BBischof/55811a4111d5d1fad25937fb51436671'>Beeswarm (Broken)</a>", "uid": "BBischof_d5ac5608467c9cea983018fda46a39f0"}, {"code": "<script>\n\nvar margin = {top: 30, right: 10, bottom: 10, left: 30},\n    width = 960 - margin.left - margin.right,\n    height = 4000 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"dataVis.json\", function(error, errors) {\n  if (error) throw error;\n\n  errors.sort(function(a, b) { return b.value - a.value; });\n\n  // Set the scale domain.\n  x.domain([0, d3.max(errors, function(d) { return d.value; })]);\n  y.domain(d3.range(errors.length));\n\n  svg.selectAll(\".value\")\n      .data(errors)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"value\")\n      .attr(\"y\", function(d, i) { return y(i)-90; })\n      .attr(\"width\", function(d) { return x(d.value); })\n      .attr(\"height\", y.rangeBand());\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(d3.svg.axis()\n      .scale(x)\n      .orient(\"top\")\n      .ticks(12)\n      .tickSize(-height));\n\n  svg.selectAll(\".title\")\n      .data(errors)\n      .enter().append(\"text\")\n      .attr(\"class\", \"name\")\n      .attr(\"x\", -16)\n      .attr(\"y\", function(d, i) { return y(i)-90 + y.rangeBand() / 2; })\n      .attr(\"dx\", -3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.value + \"   --   year: \" + d.year + \", \" + d.title; });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n    .append(\"line\")\n      .attr(\"y2\", height);\n});\n\n</script>", "description": "Anthropocene data visualization uniandes", "created_at": "2016-09-11T01:06:58Z", "updated_at": "2016-09-11T03:18:22Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.select", "d3.json", "d3.max", "d3.range", "d3.svg.axis"], "readme": "Anthropocene data visualization\n\nhttp://adatavisualization.net/index.php?page=performance\n\nEl ejemplo puesto en clase es de gr\u00e1ficos 3D. Estos gr\u00e1ficos no son los m\u00e1s adecuados ya que se pierde completamente la capacidad de comparaci\u00f3n de los valores, ya que la vista en perspectiva impide poder hacer ese an\u00e1lisis.\n\nLo propuesto en este gr\u00e1fico es poder ver claramente los detalles de cada uno de los items, sus valores y los eventos. Adem\u00e1s poderlos hacer comparables con el nivel de resultados del congreso del website (adatavisualization.net)\n\nNota: La fuente de datos es tiene datos muy descorganizados, adem\u00e1s no est\u00e1n del todo estandarizados, lo cual dificult\u00f3 el desarrllo . Por tal motivo tuve que corregir y escoger solo datos de la decada de 1900.", "uid": "cis321_be52874656622cccaf3eddc30e175ea4"}, {"code": "<script>\nvar width = 960,\n    height = 600;\n\nvar linkColor = d3.scaleSequential(d3.interpolateMagma)\n  .domain([220, -1])\n\nvar canvas = d3.select(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }).distance(22).strength(0.2))\n    .force(\"charge\", d3.forceManyBody().strength(-6).distanceMax(380))\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nvar graph = {};\n\nd3.text(\"lock1074.mtx\", function(error, raw) {\n  if (error) throw error;\n\n  var node_set = d3.set();\n\n  var pairs = raw.split(\"\\n\")\n    .slice(14)\n    .map(function(d) { return d.split(\" \"); });\n\n  pairs.forEach(function(d) {\n    node_set.add(d[0]);\n    node_set.add(d[1]);\n  });\n\n  graph.nodes = node_set.values().map(function(d) {\n      return {\n        id: d\n      };\n    });\n\n  graph.links = pairs.map(function(d) {\n      return {\n        source: d[0],\n        target: d[1]\n      }\n    })\n    .filter(function(d) {\n      return d.source !== d.target;\n    });\n\n  simulation\n      .nodes(graph.nodes)\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  d3.range(10).forEach(simulation.tick);\n\n  simulation\n      .on(\"tick\", ticked);\n\n  canvas.call(d3.drag()\n          .container(canvas.node())\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n\n    context.globalAlpha = 0.2;\n    graph.links.forEach(drawLink);\n\n    context.globalAlpha = 1;\n    context.fillStyle = d3.interpolateViridis(0.15);\n    graph.nodes.forEach(drawNode);\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  var distance = 50; //Math.sqrt( Math.pow(d.source.x - d.target.x, 2) + Math.pow(d.source.y - d.target.y, 2));\n  context.beginPath();\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n  context.strokeStyle = linkColor(distance);\n  context.stroke();\n}\n\nfunction drawNode(d) {\n//  context.fillStyle = d3.interpolateMagma(Math.sqrt(d.vx*d.vx + d.vy*d.vy));\n  context.fillRect(d.x-0.75, d.y-0.75, 1.5, 1.5);\n}\n\n</script>", "description": "Sparse Matrix Force Graph", "created_at": "2016-09-11T00:20:33Z", "updated_at": "2016-09-11T00:25:52Z", "api": ["d3.scaleSequential", "d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.text", "d3.set", "d3.range", "d3.drag", "d3.interpolateViridis", "d3.interpolateMagma"], "readme": "The [lock1074 graph](http://www.cise.ufl.edu/research/sparse/matrices/HB/lock1074.html) from the [The University of Florida Sparse Matrix Collection](http://www.cise.ufl.edu/research/sparse/matrices/index.html).\n\n1,040 nodes with 25,276 edges. Self-edges were removed from the links array. Links are colored by the distance between nodes.\n", "uid": "trinary_976ea89cbcddde3027c41c6f228427be"}, {"code": "<script>\n\n    var margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 40\n      };\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var x = d3.scaleLinear()\n          .range([0, width]);\n\n    var y = d3.scaleBand()\n        .range([height, 0]);\n\n    var xAxis = d3.axisTop(x)\n        .ticks(10, \"%\");\n\n    var yAxis = d3.axisLeft(y);\n\n    d3.tsv(\"data.tsv\", type, function(error, data) {\n      if (error) throw error;\n\n      data.sort(function(a, b) {\n        return a.frequency - b.frequency;\n      });\n\n      x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n      y.domain(data.map(function(d) { return d.letter; }))\n        .paddingInner(0.1);\n\n\n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" + -2 + \")\")\n          .call(xAxis);\n\n      svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis);\n\n      svg.selectAll(\".bar\")\n          .data(data)\n        .enter().append(\"rect\")\n          .attr(\"class\", \"bar\")\n          .attr(\"x\", 0)\n          .attr(\"height\", y.bandwidth())\n          .attr(\"y\", function(d) { return y(d.letter); })\n          .attr(\"width\", function(d) { return x(d.frequency); });\n\n    });\n\n    function type(d) {\n      d.frequency = +d.frequency;\n      return d;\n    }\n\n  </script>", "description": "Horizontal Bar Chart Sort", "created_at": "2016-09-10T23:20:50Z", "updated_at": "2016-09-10T23:22:25Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisTop", "d3.axisLeft", "d3.tsv", "d3.max"], "readme": "", "uid": "rcrocker13_66a11b84ff86edc61ffb61b3d99cf02a"}, {"code": "<script>\n        \n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;    \n    \n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width]) \n          .padding(0.1);\n    \nvar y = d3.scaleLinear()\n          .range([height, 0]);\n//test\nvar stack = d3.stack()    \n    \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");    \n    \n// read in the data   \nd3.csv(\"data.csv\", function(d) {\n  return {\n    country: d.Country,\n    rank: +d.Rank,\n    OverScore: +d[\"2016 EPI Score\"],\n\t\tHI:+d[\"EH - Health Impacts\"],\n    AIR:+d[\"EH - Air Quality\"],\n    WS:+d[\"EH -Water and Sanitation\"],\n    WR:+d[\"EV - Water Resources\"],\n    A:+d[\"EV - Agriculture\"],\n    FO:+d[\"EV - Forests\"],\n    FI:+d[\"EV - Fisheries\"],\n    BH:+d[\"EV- Biodiversity and Habitat\"],\n    CE:+d[\"EV - Climate and Energy\"],\n  };        \n},\n       \n\n\n       \n\tfunction(error, data) {\n  \tif (error) throw error; \n\n  //fix data for one country\n  var khar2 =d3.values(data[0]);\n  khar2.splice(0,2);\n  //console.log(khar2);\n // console.log(data[0]);\n  // Scale the range of the data in the domains\n  x.domain(data.columns.slice(6,15));\n  y.domain([0, 100]);  \n  \n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));  \n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data[0])\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(headers); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.HI); })\n      .attr(\"height\", function(d) { return height - y(d.HI); });\n \n  //console.log(d3.values(data[0])); \n  \n\n});\n  </script>", "description": "fresh block", "created_at": "2016-09-10T22:58:15Z", "updated_at": "2016-09-23T02:21:45Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.stack", "d3.select", "d3.csv", "d3.values", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "elt12njo_99ce0c2cee3a9bee3cbbab03109b4038"}, {"code": "<script>\n    \n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;    \n    \n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width]) \n          .padding(0.1);\nvar y = d3.scaleLinear()\n          .range([height, 0]);\n\n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");    \n\n// read in the data\nd3.csv(\"data.csv\", function(d, i, columns) {\n  return {\n    country: d.Country,\n    rank: +d.Rank,\n    OverScore: +d[\"2016 EPI Score\"],\n    //headers: columns.slice(6,15).map(function(key),\n      \n    info: columns.slice(6,15).map(function(key) {\n      return {\n        Type: key,\n        Score: +d[key] \n        \n      }; \n    })\n  };       \n},\n\n          \n              function(error, data) {\n  if (error) throw error;\nconsole.log(data); \n \n  \n  // Scale the range of the data in the domains\n  x.domain(data.columns.slice(6,15));\n  y.domain([0, 100]);  \n\n  \n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));  \n\n\n});\n  </script>", "description": "test1", "created_at": "2016-09-10T22:58:14Z", "updated_at": "2016-09-23T02:21:37Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.csv", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "elt12njo_38600ed46e9fb1f794fd39863c55f233"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 110, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width])\n          .padding(0.1);\nvar y = d3.scaleLinear()\n          .range([height, 0]);\n          \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// get the data\nd3.csv(\"2014_germany.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n    d.type = d.type;\n    d.score = +d.score;\n\n  });\n  console.log(data);\n\t\n  // Scale the range of the data in the domains\n  x.domain(data.map(function(d) { return d.type; }));\n  y.domain([0, d3.max(data, function(d) { return d.score; })]);\n\n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.type); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.score); })\n      .attr(\"height\", function(d) { return height - y(d.score); });\n\n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x))\n\t\t .selectAll(\"text\")\t\n     .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \".8em\")\n  .style(\"font-size\", \"15px\") \n        .attr(\"dy\", \".75em\")\n           .attr(\"transform\",  \"rotate(-35)\");\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n});\n\n</script>", "description": "Bar chart", "created_at": "2016-09-10T22:48:06Z", "updated_at": "2016-09-10T22:50:29Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a simple bar graph  written using d3.js v4. \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/bdf28027e0ce70bd132edc64f1dd7ea4'>Bar chart</a>", "uid": "elt12njo_76b484f5187c7ecfc83070dd81897327"}, {"code": "<script>\n\n    var margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 40\n      };\n    var width = 960 - margin.left - margin.right;\n    var height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var x = d3.scaleLinear()\n          .range([0, width]);\n\n    var y = d3.scaleBand()\n        .range([height, 0]);\n\n    var xAxis = d3.axisBottom(x)\n        .ticks(10, \"%\");\n\n    var yAxis = d3.axisLeft(y);\n\n    d3.tsv(\"data.tsv\", type, function(error, data) {\n      if (error) throw error;\n\n      x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n      y.domain(data.map(function(d) { return d.letter; }))\n        .paddingInner(0.1)\n        .paddingOuter(0.5);\n\n\n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis)\n        .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"transform\", \"translate(\" + width + \",0)\")\n          .attr(\"y\", -5)\n          .style(\"text-anchor\", \"end\")\n          .text(\"Frequency\");\n\n      svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis);\n\n      svg.selectAll(\".bar\")\n          .data(data)\n        .enter().append(\"rect\")\n          .attr(\"class\", \"bar\")\n          .attr(\"x\", 0)\n          .attr(\"height\", y.bandwidth())\n          .attr(\"y\", function(d) { return y(d.letter); })\n          .attr(\"width\", function(d) { return x(d.frequency); });\n\n    });\n\n    function type(d) {\n      d.frequency = +d.frequency;\n      return d;\n    }\n\n  </script>", "description": "Horizontal Bar Chart v4", "created_at": "2016-09-10T22:46:22Z", "updated_at": "2016-09-10T22:49:50Z", "api": ["d3.select", "d3.scaleLinear", "d3.scaleBand", "d3.axisBottom", "d3.axisLeft", "d3.tsv", "d3.max"], "readme": "", "uid": "rcrocker13_106939b994bf8b80ccb3da0d544fc992"}, {"code": "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n\nvar grandparentlabels= [\"Environmental Health\",\"Ecosystem Vitality\"];\n\nvar parentlabels= [\n \" EH - Health Impacts\",\n\"EH - Air Quality\",\n\"EH -Water and Sanitation\",\n\"EV - Water Resources\",\n\"EV - Agriculture\",\n\"EV - Forests\",\n\"EV - Fisheries\",\n\"EV- Biodiversity and Habitat\",\n\"EV - Climate and Energy\"];\n  \nvar parentvalues= [100,78.5,100,95.18,65.31,31.35,13.4,100,62.77];\n  \n var grandparentvalues = [92.83, 72.73];\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([0,height-margin.bottom]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.tickSize(0);\nvar BAR_HEIGHT = 17;\n  \nvar colScale = d3.scale.ordinal()\n    .range([    \"#ff8c00\",\"#f9bb00\",\"#ff6100\",\"#555f9f\",, \"#10599c\",\"#0099cc\",\"#216342\", \"#339966\",\"#009900\"]);\n  \n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  //y.domain(data.map(function(d) { return d.parent; }));\n  y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dx\", 60.2+\"em\")\n      .style(\"text-anchor\", \"end\")\n  \t\t.text(\"EPI score\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n//d3.select(\"input\").on(\"change\", change);\nd3.select(\"#groupParents\").on(\"change\", groupParents);\nd3.select(\"#groupGrandparents\").on(\"change\", groupGrandparents);\n\n  \nvar sortTimeoutP = setTimeout(function() {\n    d3.select(\"#groupParents\").property(\"checked\", true).each(groupParents);\n }, 10000);\n  \n var sortTimeoutGP = setTimeout(function() {\n    d3.select(\"#groupGrandparents\").property(\"checked\", true).each(groupGrandparents);\n  }, 20000);\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n \n      //code to sort\n      clearTimeout(sortTimeoutP);\n  \n\t\t//var y0= y.domain(data.map(function(d) { return d.parent; })).copy();\n \n  \tvar y0 = y.domain(data.map(this.checked\n        ? function(d) { return d.parent;}\n        : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 17;\n\t\t\t\t\t\treturn d.label; }))\n        //.map(function(d) { return d.parent; })\n        .copy();\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return margin.top+y(d.parent); })\n    .attr(\"width\", function(d,i) { return x(parentvalues[i/2]); })\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.parent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n} \n\nfunction groupGrandparents() {\n  \n   var BAR_HEIGHT = 167;\n  \n  clearTimeout(sortTimeoutGP);\n  \n\t\tvar y0= y.domain(data.map(this.checked\n      ? function(d) { return d.grandparent; }\n      : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 18;\n\t\t\t\t\t\treturn d.label; }))\n    .copy();\n //x.domain([0, d3.max(parentvalues)]);\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return  margin.top + i*BAR_HEIGHT})//y(grandparentlabels); }) //si pudiera anotarlos por mi solito margin.top, height/2\n    .style(\"fill\", function(d,i) {return [colScale[0],colScale[7]];} )\n    .attr(\"width\", function(d,i) { return x(grandparentvalues[i/2]);})\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        //.attr(\"y\", function(d) { return y0(d.grandparent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t//.attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\t\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}\n  \n  \n</script>", "description": "Tarea 4 - EPI Visualization", "created_at": "2016-09-10T22:06:36Z", "updated_at": "2016-09-10T22:06:36Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categ\u00f3rico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar \u00e9stos datos es la longitud en una escala alineada. Por ello se decidi\u00f3 realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidi\u00f3 realizar horizontal para poder tener una mejor visualizaci\u00f3n sobre los c\u00f3digos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota espec\u00edfica de cada usuario (\"Detail on demand\") y ver\u00edficar de acuerdo al matiz(hue) si aprob\u00f3, reprob\u00f3 o pas\u00f3 raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/368d648d9b931cbbd310cc6f7260c8b1'>Tarea 4 - EPI Visualization</a>", "uid": "f94f_78faa9b93b7d92e3bc39cd258f4ec90b"}, {"code": "<script>\n\nvar margin = {top: 45, right: 80, bottom: 150, left: 180},\n    width = 3500 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  \nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  var color = d3.scale.ordinal()\n\t\t.range([\"#FF0000\",\"#60497A\",\"#F79620\", \"#F5C918\", \"#FF6600\", \"#707FBE\", \"#3669B3\", \"#009ACC\", \"#008C8C\", \"#3EBCA2\",\"#2DB45F\"]);\n\nd3.tsv(\"EPI.tsv\", function(error, data){\n\n\t// filter year\n\tvar data = data.filter(function(d){\n    return d.Year == '2014' \n      /*&& (d.Country == 'Germany'\n          ||d.Country == 'Colombia'\n          ||d.Country == 'Bolivia')*/;});//todo\n\t// Get every column value\n\tvar elements = Object.keys(data[0])\n\t\t.filter(function(d){\n\t\t\treturn ((d != \"Year\") & (d != \"Country\"));\n\t\t});\n  \n  var epiNames = d3.keys(data[0]).filter(function(key) { \t\t     return  ((key != \"Year\") & (key != \"Country\") & (key != \"EPI Score\")& (key != \"10-Year Percent Change\")); });\n  \n\tvar selection = elements[0];\n\n\tvar y = d3.scale.linear()\n\t\t\t.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d[selection];\n\t\t\t})])\n\t\t\t.range([height, 0]);\n\n\tvar x = d3.scale.ordinal()\n\t\t\t.domain(data.map(function(d){ return d.Country;}))\n\t\t\t.rangeBands([0, width]);\n\n\n\tvar xAxis = d3.svg.axis()\n\t\t.scale(x)\n\t  .orient(\"bottom\");\n\n\tvar yAxis = d3.svg.axis()\n\t\t.scale(y)\n\t  .orient(\"left\");\n  \n  var legend = svg.selectAll(\".legend\")\n\t\t  .data(epiNames.slice())\n\t\t  .enter().append(\"g\")\n\t\t  .attr(\"class\", \"legend\")\n\t\t  .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n\t\tlegend.append(\"rect\")\n\t\t  .attr(\"x\",  - 180)\n\t\t  .attr(\"width\", 18)\n\t\t  .attr(\"height\", 18)\n\t\t  .style(\"fill\", color);\n\n\t\tlegend.append(\"text\")\n\t\t  .attr(\"x\", -160)\n\t\t  .attr(\"y\", 9)\n\t\t  .attr(\"dy\", \".35em\")\n\t\t  //.style(\"text-anchor\", \"end\")\n\t\t  .text(function(d) { return d; });\n\n\tsvg.append(\"g\")\n    \t.attr(\"class\", \"x axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis)\n    \t.selectAll(\"text\")\n    \t.style(\"font-size\", \"12px\")\n      \t.style(\"text-anchor\", \"end\")\n      \t.attr(\"dx\", \"-.8em\")\n      \t.attr(\"dy\", \"-.55em\")\n      \t.attr(\"transform\", \"rotate(-45)\" );\n\n\n \tsvg.append(\"g\")\n    \t.attr(\"class\", \"y axis\")\n    \t.call(yAxis);\n\n\tsvg.selectAll(\"rectangle\")\n\t\t.data(data)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\").attr(\"fill\",\"steelblue\")\n\t\t.attr(\"width\", width/data.length-1)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d[selection]);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / data.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d[selection]);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Country + \" : \" + d[selection];\n\t\t});\n\n\tvar selector = d3.select(\"#drop\")\n    \t.append(\"select\")\n    \t.attr(\"id\",\"dropdown\")\n    \t.on(\"change\", function(d){\n        \tselection = document.getElementById(\"dropdown\");\n\n        \ty.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d[selection.value];})]);\n\n        \tyAxis.scale(y);\n\n        \td3.selectAll(\".rectangle\")\n           \t\t.transition()\n\t            .attr(\"height\", function(d){\n\t\t\t\t\treturn height - y(+d[selection.value])\n          console.log(+d[selection.value]);\n\t\t\t\t}).attr(\"fill\", getColor(selection.value))\n\t\t\t\t.attr(\"x\", function(d, i){\n\t\t\t\t\treturn (width / data.length) * i ;\n\t\t\t\t})\n\t\t\t\t.attr(\"y\", function(d){\n\t\t\t\t\treturn y(+d[selection.value]);\n\t\t\t\t})\n           \t\t.ease(\"linear\")\n           \t\t.select(\"title\")\n           \t\t.text(function(d){\n           \t\t\treturn d.Country + \" : \" + d[selection.value];\n           \t\t});\n      \n           \td3.selectAll(\"g.y.axis\")\n           \t\t.transition()\n           \t\t.call(yAxis);\n\n         });\n\n    selector.selectAll(\"option\")\n      .data(elements)\n      .enter().append(\"option\")\n      .attr(\"value\", function(d){\n        return d;\n      })\n      .text(function(d){\n        return d;\n      })\n    \n    \n    \n\n    function getColor(d) {\n      \tvar color = \"\";\n        console.log(d);\n        switch (d) {\n          case \"Environmental Health\":\n            color = \"#FF0000\";\n            break;\n          case \"Ecosystem Vitality\":\n            color = \"#60497A\";\n            break;\n          case \"EH - Health Impacts\":\n            color = \"#F79620\";\n            break;\n          case \"EH - Air Quality\":\n            color = \"#F5C918\";\n            break;\n          case \"EH -Water and Sanitation\":\n            color = \"#FF6600\";\n            break;\n          case \"EV - Water Resources\":\n            color = \"#707FBE\";\n            break;\n          case \"EV - Agriculture\":\n            color = \"#3669B3\";\n            break;\n          case \"EV - Forests\":\n            color = \"#009ACC\";\n            break;\n          case \"EV - Fisheries\":\n            color = \"#008C8C\";\n            break;\n          case \"EV- Biodiversity and Habitat\":\n            color = \"#3EBCA2\";\n            break;\n          case \"EV - Climate and Energy\":\n            color = \"#2DB45F\";\n            break;\n          \n          default:\n              color = \"#919191\";\n    \t\t}\n      return color\n    }\n\n});\n  \n</script>", "description": "EPI Interactive Bar Chart", "created_at": "2016-09-10T22:03:03Z", "updated_at": "2016-09-11T02:25:56Z", "api": ["d3.select", "d3.scale.ordinal", "d3.tsv", "d3.keys", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n<i><u>Please click the 'Open' link at the bottom of the viz to view the full image.</u></i>\n\n\n<b><u>Credits</u></b>\n\n* Emilio Alvarado\n* Adriana L\u00f3pez\n\n<b><u>About</u></b>\n\nThis bar chart is constructed from a TSV file storing the Environment Performance Index (EPI) of all countries. \n\nThe explanation about EPI variables can be found in http://epi.yale.edu/. The dataset was located in the section:  http://epi.yale.edu/downloads. The data for 2014 can be downloaded from:  http://epi.yale.edu/sites/default/files/2014_epi_framework_indicator_scores_friendly_0.xls.\n\nThe next section presents the visualization analysis based on Tamara's Analytics framework.\n\n<b><u>What, Why and How Analysis</u></b>\n\n<b>What:</b> The dataset is formed by a table, with an ordinal attribute (the countries) and some quantitative attributes (Year,\tEPI Score,\t10-Year Percent Change,\tEnvironmental Health,\tEcosystem Vitality,\tEH - Health Impacts,\tEH - Air Quality,\tEH -Water and Sanitation,\tEV - Water Resources,\tEV - Agriculture,\tEV - Forests,\tEV - Fisheries,\tEV- Biodiversity and Habitat and\tEV - Climate and Energy).\n\n<b>Why:</b> The following are the two main tasks this viz is made for:\n\n1. Present (action) the distribution (target) of he EPI variables scores among the whole countries.\n2. Discover (action) special features (target) as the countries with the less score in a specific variable. \n\n\n<b>How:</b> We used the line as the mark and the length as the channel. The visualization presents the data for each variable. For this task, you can filter the EPI variable with the selector on the top of the viz.\n\n<b><u>Decisions</u></b>\n<p>\n1. We used the line mark and the channel length to represent the quantitative attributes (EPI variables), since the length is the best positioned channel in perception assessments of experts.\n</p>\n<p>\n2. The data is only sorted by the \"EPI Score\", which let identify the highest and the lowest score, and know which country has the best and worst total score.\n</p>\n<p>\n3. The color channel was not used to represent the ordinal attribute of the countries, because the number of countries (178) need many hues or scales luminescence, which does not really contribute with the representation. The country label on each data was used instead, which let identify the score obtained for each country according the selected variable.\n<p>\n<p>\n4. The color channel was used to represent the EPI variables according the EPI color code, because this color coding is familiar to the EPI community.\n<p>\n<p>\n5. A conventions table was used at the left of the viz, to show the whole EPI color scale.\n<p>\n<b><u>What was not so well?</b></u>\n<p>\n<li>The country labels were in vertical direction, which is some uncomfortable for the user, so we inclined them to 45\u00b0.\n</li>\n</p>\n\n<div>......................................................................................</div>\n\n\n\nforked from <a href='http://bl.ocks.org/jonahwilliams/'>jonahwilliams</a>'s block: <a href='http://bl.ocks.org/jonahwilliams/2f16643b999ada7b1909'>Interactive Bar Chart I</a>\n", "uid": "emilioalvarado_0d14fd5ef94ef8629a6a63e1a43e8fb2"}, {"code": "<script>\n\nvar margin = {top: 100, right: 10, bottom: 10, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"indicators.csv\", function(error, countries) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(countries[0]).filter(function(d) {    \n    return d != \"Country\" && (      \n         y[d] = d3.scale.linear()\n        .domain(d3.extent(countries, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n  \n  var dropDown = d3.select(\"#table_container\").append(\"select\")\n                    .attr(\"name\", \"country-list\")\n  \t\t\t\t\t\t\t\t\t.on(\"change\", change);\n\tvar options = dropDown.selectAll(\"option\")\n           .data(countries\n                 .sort(function(a,b) { return d3.ascending(a.Country,b.Country);}))\n         \t .enter()\n           .append(\"option\");\n  \n  options.text(function (d) { return d[\"Country\"]; })\n       .attr(\"value\", function (d) { return d[\"Country\"]; });\n  \n    \n\tfunction change() {\n    var selectedIndex = dropDown.property('selectedIndex'),\n        selectedCountry          = options[0][selectedIndex].__data__;    \n    foreground.style(\"display\", function(d) {\n    \tif(d.Country==selectedCountry[\"Country\"]){\n       return null;\n    \t}\n      else{\n       return \"none\";\n      }\n     });    \n  }\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n      .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(countries)\n    .enter().append(\"path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });  \n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n      .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { \n    \t\t\tif(d!=\"Rank\"){\n    \t\t\t  return d.toString().split(\"-\")[1].trim();\n          }\n    \t\t\telse{\n            return d;\n          }\n          })\n      .style(\"fill\",function(d){\n    \t\t\tvar randomColor = Math.floor(Math.random()*16777215).toString(16);\n    \t\t\treturn randomColor;\n      });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) { d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brush\", brush)); })\n      .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n  // add style linepath\n  d3.selectAll(\".foreground path\").style(\"stroke\",function(d,i){ \n            return \"hsl(\"+(((170-d.Rank)*90)/170)+\",80%,60%)\";          \t\t\t\n  }).style(\"stroke-width\",function(d,i){\n    return (1-(d.Rank/170)*5)+5;\n  }).style(\"opacity\",function(d,i){   \n    return 1-((d.Rank)/300);\n    \n  });\n  \n});\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [x(p), y[p](d[p])]; }));\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {      \n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "3D EPI Data Visual analitycs", "created_at": "2016-09-10T21:49:43Z", "updated_at": "2016-09-11T06:58:16Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.ascending", "d3.svg.brush", "d3.selectAll"], "readme": "<h2>Tarea 4</h2>\n<h3>Juan Camilo Ortiz</h3>\n<h3>Stevenson Contreras</h3>\n\nWhat:\n\n    structure:Table    \n    A Quantitive attribute: indicators\n    A categorical attribute: Countries\n    \n\nWhy:\n\nPresent the distribution of the information of a country in all their aspects like politics,economics,environment etc.\n\nHow: Polar Area 3D chart\n\n\t\tmark:\n    \n    \t\t\t-3d area\n          -3D volume\n          \n    channels:\n    \n    \t\t\tAngle to express dimension\n          color to differentiate dimension\n          3d Volumen\n          \n   \n   Expressiveness:\n   \n   The color channel do not match some indicators\n   the data is not show in an order way and it show more information that the\n   dataset has like the volume chart and the angle position of each indicator.\n   Because it id 3d some indicator are covering others.\n   Other important aspect is that the kind of measures of each indicator\n   are not show so what is the range, domain of each data?\n   \t\n   Effectiveness:\n   \n   This charts do not use the most important channels to show the indicators.\n   It use 3d position so it is difficult to compare, it use angles and areas and the dataset is not too complex to use that.\n          \n   Development:\n   \n   First, the best form to show quantitive attributes is with 2D chart. Second, using principal marks like lines, points and channels like bars to compare the principal information. Other channels like shapes to show secundary information like the mean of those indicators to understand without read.finishing, the best colors to use are those have strong tones because it is more easy to differentiate.\n   \n   Alternative:\n   \n   In this prototype we show a first level of the data collected. The data itself is clasified into categories and subcategories. Here we presente the axis of the categories. In future developements clicking over each acces will grant acces to a detailed graph (same structure) to the subcategories. This design decision was made due to the large amount of data in the dataset and the possibility of breaking it into smaller steps, that way we can use the visualization tool to analyze at several levels of abstraction.\n          ", "uid": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd"}, {"code": "<script>\n\nvar margin = {top: 15, right: 50, bottom: 80, left: 50},\n    width = 2200 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"EPI.tsv\", function(error, data){\n\n\t// filter year\n\tvar data = data.filter(function(d){return d.Year == '2014';});\n\t// Get every column value\n\tvar elements = Object.keys(data[0])\n\t\t.filter(function(d){\n\t\t\treturn ((d != \"Year\") & (d != \"Country\"));\n\t\t});\n\tvar selection = elements[0];\n\n\tvar y = d3.scale.linear()\n\t\t\t.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d[selection];\n\t\t\t})])\n\t\t\t.range([height, 0]);\n\n\tvar x = d3.scale.ordinal()\n\t\t\t.domain(data.map(function(d){ return d.Country;}))\n\t\t\t.rangeBands([0, width]);\n\n\n\tvar xAxis = d3.svg.axis()\n\t\t.scale(x)\n\t    .orient(\"bottom\");\n\n\tvar yAxis = d3.svg.axis()\n\t\t.scale(y)\n\t    .orient(\"left\");\n\n\tsvg.append(\"g\")\n    \t.attr(\"class\", \"x axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis)\n    \t.selectAll(\"text\")\n    \t.style(\"font-size\", \"10px\")\n      \t.style(\"text-anchor\", \"end\")\n      \t.attr(\"dx\", \"-.8em\")\n      \t.attr(\"dy\", \"-.55em\")\n      \t.attr(\"transform\", \"rotate(-90)\" );\n\n\n \tsvg.append(\"g\")\n    \t.attr(\"class\", \"y axis\")\n    \t.call(yAxis);\n\n\tsvg.selectAll(\"rectangle\")\n\t\t.data(data)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/data.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d[selection]);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / data.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d[selection]);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Country + \" : \" + d[selection];\n\t\t});\n\n\tvar selector = d3.select(\"#drop\")\n    \t.append(\"select\")\n    \t.attr(\"id\",\"dropdown\")\n    \t.on(\"change\", function(d){\n        \tselection = document.getElementById(\"dropdown\");\n\n        \ty.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d[selection.value];})]);\n\n        \tyAxis.scale(y);\n\n        \td3.selectAll(\".rectangle\")\n           \t\t.transition()\n\t            .attr(\"height\", function(d){\n\t\t\t\t\treturn height - y(+d[selection.value]);\n\t\t\t\t})\n\t\t\t\t.attr(\"x\", function(d, i){\n\t\t\t\t\treturn (width / data.length) * i ;\n\t\t\t\t})\n\t\t\t\t.attr(\"y\", function(d){\n\t\t\t\t\treturn y(+d[selection.value]);\n\t\t\t\t})\n           \t\t.ease(\"linear\")\n           \t\t.select(\"title\")\n           \t\t.text(function(d){\n           \t\t\treturn d.Country + \" : \" + d[selection.value];\n           \t\t});\n      \n           \td3.selectAll(\"g.y.axis\")\n           \t\t.transition()\n           \t\t.call(yAxis);\n\n         });\n\n    selector.selectAll(\"option\")\n      .data(elements)\n      .enter().append(\"option\")\n      .attr(\"value\", function(d){\n        return d;\n      })\n      .text(function(d){\n        return d;\n      })\n\n\n});\n\n</script>", "description": "Grouped Bar Chart - CNDT", "created_at": "2016-09-10T21:39:11Z", "updated_at": "2016-10-04T22:55:38Z", "api": ["d3.select", "d3.tsv", "d3.scale.linear", "d3.max", "d3.scale.ordinal", "d3.svg.axis", "d3.selectAll"], "readme": "This grouped bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding and color encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting#wiki-d3_format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\n<b><u>About</u></b>\n\nThis bar chart is constructed from a TSV file storing the exam grades of students in an imaginary Visual Analytics class. The next section presents the visualization analysis based on Tamara's Analytics framework.\n\n<b><u>What, Why and How Analysis</u></b>\n\n<b>What:</b> The dataset is formed by a table, with an ordinal attribute (the student code) and a quantitative attribute (the exam's grades).\n\n<b>Why:</b> The following are the two main tasks this viz is made for:\n\n1. Present (action) the distribution (target) of exam grades among the whole class.\n2. Discover (action) special features (target) as the number of students who failed the exam.\n3. Identify the exam grade for a specific student.\n\n<b>How:</b> I used the line as the mark and the length as the channel. The visualization presents the data sorted by the exam grades, in descending order.\n\n<b><u>Decisions</u></b>\n<p>\n1. I used the line mark and the channel length to represent the quantitative attribute exam notes, since the length is the best positioned channel in perception assessments of experts.\n</p>\n<p>\n2. The data is sorted by the score on the exam, which let identify the highest and the lowest score, and know how many people lost the test. You may find outliers too, like the 5.2 value (I assume the exam grades range goes from 0.0 to 5.0).\n</p>\n<p>\n3. The color channel was not used to represent the ordinal attribute of the students, because the number of students (23) need many hues or scales luminescence, which does not really contribute in the representation. The student code label on each data was used instead, which let identify the score obtained for each student.\n<p>\n<b><u>What was not so well?</b></u>\n<p>\n<li>The student code label is not visible to a very small bar (eg 0.11).\n</li>\n<li>The channel color may be useful to mark in red scores under 3.0, to identify first glance students failed the exam.\n</li>\n</p>\n\n<div>......................................................................................</div>\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887051'>Grouped Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/emilioalvarado/'>emilioalvarado</a>'s block: <a href='http://bl.ocks.org/emilioalvarado/b314651b76f2e0d7f63ae7b32ccfcb2d'>Grouped Bar Chart</a>", "uid": "emilioalvarado_ee634ac32c2c18af3f217616add4871c"}, {"code": "<script>\n\nvar margin = {top: 80, right: 180, bottom: 80, left: 180},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"VotingInformation.tsv\", function(error, data){\n\n\t// filter year\n\tvar data = data.filter(function(d){return d.Year == '2012';});\n\t// Get every column value\n\tvar elements = Object.keys(data[0])\n\t\t.filter(function(d){\n\t\t\treturn ((d != \"Year\") & (d != \"State\"));\n\t\t});\n\tvar selection = elements[0];\n\n\tvar y = d3.scale.linear()\n\t\t\t.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d[selection];\n\t\t\t})])\n\t\t\t.range([height, 0]);\n\n\tvar x = d3.scale.ordinal()\n\t\t\t.domain(data.map(function(d){ return d.State;}))\n\t\t\t.rangeBands([0, width]);\n\n\n\tvar xAxis = d3.svg.axis()\n\t\t.scale(x)\n\t    .orient(\"bottom\");\n\n\tvar yAxis = d3.svg.axis()\n\t\t.scale(y)\n\t    .orient(\"left\");\n\n\tsvg.append(\"g\")\n    \t.attr(\"class\", \"x axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis)\n    \t.selectAll(\"text\")\n    \t.style(\"font-size\", \"8px\")\n      \t.style(\"text-anchor\", \"end\")\n      \t.attr(\"dx\", \"-.8em\")\n      \t.attr(\"dy\", \"-.55em\")\n      \t.attr(\"transform\", \"rotate(-90)\" );\n\n\n \tsvg.append(\"g\")\n    \t.attr(\"class\", \"y axis\")\n    \t.call(yAxis);\n\n\tsvg.selectAll(\"rectangle\")\n\t\t.data(data)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/data.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d[selection]);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / data.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d[selection]);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.State + \" : \" + d[selection];\n\t\t});\n\n\tvar selector = d3.select(\"#drop\")\n    \t.append(\"select\")\n    \t.attr(\"id\",\"dropdown\")\n    \t.on(\"change\", function(d){\n        \tselection = document.getElementById(\"dropdown\");\n\n        \ty.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d[selection.value];})]);\n\n        \tyAxis.scale(y);\n\n        \td3.selectAll(\".rectangle\")\n           \t\t.transition()\n\t            .attr(\"height\", function(d){\n\t\t\t\t\treturn height - y(+d[selection.value]);\n\t\t\t\t})\n\t\t\t\t.attr(\"x\", function(d, i){\n\t\t\t\t\treturn (width / data.length) * i ;\n\t\t\t\t})\n\t\t\t\t.attr(\"y\", function(d){\n\t\t\t\t\treturn y(+d[selection.value]);\n\t\t\t\t})\n           \t\t.ease(\"linear\")\n           \t\t.select(\"title\")\n           \t\t.text(function(d){\n           \t\t\treturn d.State + \" : \" + d[selection.value];\n           \t\t});\n      \n           \td3.selectAll(\"g.y.axis\")\n           \t\t.transition()\n           \t\t.call(yAxis);\n\n         });\n\n    selector.selectAll(\"option\")\n      .data(elements)\n      .enter().append(\"option\")\n      .attr(\"value\", function(d){\n        return d;\n      })\n      .text(function(d){\n        return d;\n      })\n\n\n});\n\n</script>", "description": "Interactive Bar Chart I", "created_at": "2016-09-10T21:27:19Z", "updated_at": "2016-09-10T21:27:20Z", "api": ["d3.select", "d3.tsv", "d3.scale.linear", "d3.max", "d3.scale.ordinal", "d3.svg.axis", "d3.selectAll"], "readme": "\n\nforked from <a href='http://bl.ocks.org/jonahwilliams/'>jonahwilliams</a>'s block: <a href='http://bl.ocks.org/jonahwilliams/2f16643b999ada7b1909'>Interactive Bar Chart I</a>", "uid": "emilioalvarado_a8a4914112719e4095a7116762b4dbe9"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width])\n          .padding(0.1);\nvar y = d3.scaleLinear()\n          .range([height, 0]);\n          \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// get the data\nd3.csv(\"sales.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n    d.sales = +d.sales;\n  });\n\n  // Scale the range of the data in the domains\n  x.domain(data.map(function(d) { return d.salesperson; }));\n  y.domain([0, d3.max(data, function(d) { return d.sales; })]);\n\n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.salesperson); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.sales); })\n      .attr(\"height\", function(d) { return height - y(d.sales); });\n\n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n});\n\n</script>", "description": "Simple bar graph in v4", "created_at": "2016-09-10T21:25:32Z", "updated_at": "2016-09-10T21:25:32Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a simple bar graph  written using d3.js v4. \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/bdf28027e0ce70bd132edc64f1dd7ea4'>Simple bar graph in v4</a>", "uid": "elt12njo_cd642695e6ce6a82b6d6d8afcced0275"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width])\n          .padding(0.1);\nvar y = d3.scaleLinear()\n          .range([height, 0]);\n          \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// get the data\nd3.csv(\"sales.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n    d.sales = +d.sales;\n  });\n\n  // Scale the range of the data in the domains\n  x.domain(data.map(function(d) { return d.salesperson; }));\n  y.domain([0, d3.max(data, function(d) { return d.sales; })]);\n\n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.salesperson); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.sales); })\n      .attr(\"height\", function(d) { return height - y(d.sales); });\n\n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n});\n\n</script>", "description": "Simple bar graph in v4", "created_at": "2016-09-10T21:23:15Z", "updated_at": "2016-09-10T21:23:15Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a simple bar graph  written using d3.js v4. \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/bdf28027e0ce70bd132edc64f1dd7ea4'>Simple bar graph in v4</a>", "uid": "elt12njo_55682835e5b13b56162eed186e61de08"}, {"code": "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n\nvar parentlabels= [\n \" EH - Health Impacts\",\n\"EH - Air Quality\",\n\"EH -Water and Sanitation\",\n\"EV - Water Resources\",\n\"EV - Agriculture\",\n\"EV - Forests\",\n\"EV - Fisheries\",\n\"EV- Biodiversity and Habitat\",\n\"EV - Climate and Energy\"];\n  \nvar parentvalues= [100,78.5,100,95.18,65.31,31.35,13.4,100,62.77];\n  \n var grandparentvalues = [92.83, 72.73];\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([0,height-margin.bottom]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.tickSize(0);\nvar BAR_HEIGHT = 17;\n  \nvar colScale = d3.scale.ordinal()\n    .range([    \"#ff8c00\",\"#f9bb00\",\"#ff6100\",\"#555f9f\",, \"#10599c\",\"#0099cc\",\"#216342\", \"#339966\",\"#009900\"]);\n  \n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  //y.domain(data.map(function(d) { return d.parent; }));\n  y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dx\", 60.2+\"em\")\n      .style(\"text-anchor\", \"end\")\n  \t\t.text(\"EPI score\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n//d3.select(\"input\").on(\"change\", change);\nd3.select(\"#groupParents\").on(\"change\", groupParents);\nd3.select(\"#groupGrandparents\").on(\"change\", groupGrandparents);\n\n\tvar sortTimeoutP = setTimeout(function() {\n    d3.select(\"#groupParents\").property(\"checked\", true).each(groupParents);\n  }, 2000);\n  \n  var sortTimeoutGP = setTimeout(function() {\n    d3.select(\"#groupGrandparents\").property(\"checked\", true).each(groupGrandparents);\n  }, 2000);\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction change() {\n/*    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var y0 = y.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.label, b.label); })\n        .map(function(d) { return d.label; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return y0(a.label) - y0(b.label); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.label)+margin.top; });\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n */ }\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n  /*y.domain(data.map(function(d) { return d.parent; }));\n  svg.selectAll(\".bar\")\n    .enter()\n    .append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y(d.parent); })*/\n  /*var pdata = d3.nest()\n  .key(function(d) { return d.parent;})\n  .rollup(function(d) { \n   \treturn d3.mean(d, function(g) {return g.value; });})\n  .entries(data);\n  \n  pdata.forEach(function(d) {\n \td.parent = d.key;\n \td.value = d.values;\n\t});*/\n      \n      //code to sort\n      clearTimeout(sortTimeoutP);\n  \n\t\t//var y0= y.domain(data.map(function(d) { return d.parent; })).copy();\n \n  \tvar y0 = y.domain(data.map(this.checked\n        ? function(d) { return d.parent;}\n        : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 17;\n\t\t\t\t\t\treturn d.label; }))\n        //.map(function(d) { return d.parent; })\n        .copy();\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return margin.top+y(d.parent); })\n    .attr(\"width\", function(d,i) { return x(parentvalues[i/2]); })\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.parent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n} \n/*  \nfunction groupGrandparents() {\n  \n   var BAR_HEIGHT = 167;\n  \n  /*y.domain(data.map(function(d) { return d.grandparent; }));\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  .attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n}*//*   \n  \n  clearTimeout(sortTimeoutGP);\n  \n\t\tvar y0= y.domain(data.map(function(d) { return d.grandparent; }))   ;\n //x.domain([0, d3.max(parentvalues)]);\n\n    svg.selectAll(\".bar\")\n    //.append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y0(d.grandparent); })\n    //.style(\"fill\", function(d) {return [colScale[0],colScale[5]];} )\n    .attr(\"height\", BAR_HEIGHT)\n    .attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    /*transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.grandparent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t.attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\t\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}*/\n</script>", "description": "Tarea 4 - Visualization horizontal v3", "created_at": "2016-09-10T20:51:27Z", "updated_at": "2016-09-10T21:23:51Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max", "d3.ascending", "d3.nest", "d3.mean"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categ\u00f3rico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar \u00e9stos datos es la longitud en una escala alineada. Por ello se decidi\u00f3 realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidi\u00f3 realizar horizontal para poder tener una mejor visualizaci\u00f3n sobre los c\u00f3digos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota espec\u00edfica de cada usuario (\"Detail on demand\") y ver\u00edficar de acuerdo al matiz(hue) si aprob\u00f3, reprob\u00f3 o pas\u00f3 raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/368d648d9b931cbbd310cc6f7260c8b1'>Tarea 4 - Visualization horizontal v3</a>\n\nforked from <a href='http://bl.ocks.org/f94f/'>f94f</a>'s block: <a href='http://bl.ocks.org/f94f/27d6b22dd88a68588fdcf1dc198d06de'>Tarea 4 - Visualization horizontal v3</a>", "uid": "f94f_b95fc00044614dd0441317d94bdb968f"}, {"code": "<script>\n\nvar width = 900,\n    height = 550;\n\nvar nodes =  [{'item':'HealthIpacts','radius': 100, 'color':'#795548'},\n             {'item':'AirQuality', 'radius':78, 'color':'#F44336'},\n             {'item':'Water&Sanitation', \"radius\":100, 'color':'#9C27B0'},\n             {'item':'WaterResources', 'radius':95.18, 'color':'#3F51B5'},\n             {'item':'Agriculture', 'radius':65.31, 'color':'#00BCD4'},\n             {'item':'Forests', 'radius':31.35, 'color':'#009688'},\n             {'item':'Fisheries', 'radius':13.4/2, 'color':'#CDDC39'},\n             {'item':'Biodiversity', 'radius':100/2, 'color':'#FF9800'},\n             {'item':'Climate&Energy', 'radius':62.77/2, 'color':'#FFEB3B'},\n             {'item':'', 'radius':100/2, 'color':'black'}],\n    root = nodes[9];\nroot.radius = 0;\nroot.fixed = true;\n\nvar force = d3.layout.force()\n    .gravity(0.05)\n    .charge(function(d, i) { return i ? 0 : -2000; })\n    .nodes(nodes)\n    .size([width, height]);\n\nforce.start();\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.selectAll(\"circle\")\n    .data(nodes)\n  \t.enter().append(\"circle\")\n    .attr(\"r\", function(d) { return d.radius; })\n    .style(\"fill\", function(d, i) { return d.color })\n\t\t.text(function(d){return d.item});\n  \nsvg.selectAll('text')\n  \t.data(nodes)\n\t\t.enter().append('text')\n\t\t.text(function(d,i){if(i<9){return d.item+\" :\"+d.radius}else{return null}})\n\t\t.style(\"font-family\",\"'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica \t\t\t\tNeue', Helvetica, Arial, 'Lucida Grande', sans-serif\");\n  \n\nforce.on(\"tick\", function(e) {\n  var q = d3.geom.quadtree(nodes),\n      i = 0,\n      n = nodes.length;\n\n  while (++i < n) q.visit(collide(nodes[i]));\n\n  svg.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return d.x; })\n      .attr(\"cy\", function(d) { return d.y; });\n  \n   svg.selectAll(\"text\")\n      .attr(\"x\", function(d) { return d.x-(d.radius/2); })\n      .attr(\"y\", function(d) { return d.y; });\n});\n\nsvg.on(\"mousemove\", function() {\n  var p1 = d3.mouse(this);\n  root.px = p1[0];\n  root.py = p1[1];\n  force.resume();\n});\n\nfunction collide(node) {\n  var r = node.radius +16,\n      nx1 = node.x - r,\n      nx2 = node.x + r,\n      ny1 = node.y - r,\n      ny2 = node.y + r;\n  return function(quad, x1, y1, x2, y2) {\n    if (quad.point && (quad.point !== node)) {\n      var x = node.x - quad.point.x,\n          y = node.y - quad.point.y,\n          l = Math.sqrt(x * x + y * y),\n          r = node.radius + quad.point.radius;\n      if (l < r) {\n        l = (l - r) / l * .5;\n        node.x -= x *= l;\n        node.y -= y *= l;\n        quad.point.x += x;\n        quad.point.y += y;\n      }\n    }\n    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n  };\n}\n\n</script>", "description": "Tarea4", "created_at": "2016-09-10T20:43:04Z", "updated_at": "2016-09-10T21:22:50Z", "api": ["d3.layout.force", "d3.select", "d3.geom.quadtree", "d3.mouse"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org\n\nVisualizacion a analizar:\n\nhttp://adatavisualization.net/index.php?page=performance\n\nExpresividad evaluaci\u00f3n: \n\n\u2022\tLa visualizaci\u00f3n expresa \u00fanicamente los datos del dataset. \n\u2022\tLas caracteriticas de los  canales no son iguales a las caracter\u00edsticas de la data.\n\nEfectividad Expresion: \n\n\u2022\tPresicion\no\tNo es posible ser preciso usando esta visualizaci\u00f3n ya que la visualizaci\u00f3n en 3d genera oclusi\u00f3n.\n\u2022\tDiscriminabilidad \no\tEsta visualizaci\u00f3n no permite una discriminaci\u00f3n clara.\n\u2022\tSeparacion:\no\tLa visualizcion usa el canar color:hue que permite la discriminaci\u00f3n de los datos.\n\n\nCreemos que es posible lograr una visualizaci\u00f3n que deforma mas sencilla exprese los datos de forma mas clara y permita lograr de una mejor forma el cumplimiento de la tareas.\n\n\nNosotros proponemos realizar una visualizaci\u00f3n 2D, la cual mejore la expresividad usando posici\u00f3n en una escala com\u00fan, para esto usamos la posici\u00f3n (area) como discriminante y el color como seprador, tambi\u00e9n usamos etiquetas de texo como m\u00e9todo de precisi\u00f3n. \n", "uid": "jorgeehernandez_e2c36a269cf5d1ac0606c1e9bc587f39"}, {"code": "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n\nvar parentlabels= [\n \" EH - Health Impacts\",\n\"EH - Air Quality\",\n\"EH -Water and Sanitation\",\n\"EV - Water Resources\",\n\"EV - Agriculture\",\n\"EV - Forests\",\n\"EV - Fisheries\",\n\"EV- Biodiversity and Habitat\",\n\"EV - Climate and Energy\"];\n  \nvar parentvalues= [100,78.5,100,95.18,65.31,31.35,13.4,100,62.77];\n  \n var grandparentvalues = [92.83, 72.73];\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([0,height-margin.bottom]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.tickSize(0);\nvar BAR_HEIGHT = 17;\n  \nvar colScale = d3.scale.ordinal()\n    .range([    \"#ff8c00\",\"#f9bb00\",\"#ff6100\",\"#555f9f\",, \"#10599c\",\"#0099cc\",\"#216342\", \"#339966\",\"#009900\"]);\n  \n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  //y.domain(data.map(function(d) { return d.parent; }));\n  y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dx\", 60.2+\"em\")\n      .style(\"text-anchor\", \"end\")\n  \t\t.text(\"EPI score\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n//d3.select(\"input\").on(\"change\", change);\nd3.select(\"#groupParents\").on(\"change\", groupParents);\nd3.select(\"#groupGrandparents\").on(\"change\", groupGrandparents);\n\n\tvar sortTimeoutP = setTimeout(function() {\n    d3.select(\"#groupParents\").property(\"checked\", true).each(groupParents);\n  }, 2000);\n  \n  var sortTimeoutGP = setTimeout(function() {\n    d3.select(\"#groupGrandparents\").property(\"checked\", true).each(groupGrandparents);\n  }, 2000);\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction change() {\n/*    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var y0 = y.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.label, b.label); })\n        .map(function(d) { return d.label; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return y0(a.label) - y0(b.label); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.label)+margin.top; });\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n */ }\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n  /*y.domain(data.map(function(d) { return d.parent; }));\n  svg.selectAll(\".bar\")\n    .enter()\n    .append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y(d.parent); })*/\n  /*var pdata = d3.nest()\n  .key(function(d) { return d.parent;})\n  .rollup(function(d) { \n   \treturn d3.mean(d, function(g) {return g.value; });})\n  .entries(data);\n  \n  pdata.forEach(function(d) {\n \td.parent = d.key;\n \td.value = d.values;\n\t});*/\n      \n      //code to sort\n      clearTimeout(sortTimeoutP);\n  \n\t\t//var y0= y.domain(data.map(function(d) { return d.parent; })).copy();\n \n  \tvar y0 = y.domain(data.map(this.checked\n        ? function(d) { return d.parent;}\n        : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 17;\n\t\t\t\t\t\treturn d.label; }))\n        //.map(function(d) { return d.parent; })\n        .copy();\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return margin.top+y(d.parent); })\n    .attr(\"width\", function(d,i) { return x(parentvalues[i/2]); })\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.parent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n} \n/*  \nfunction groupGrandparents() {\n  \n   var BAR_HEIGHT = 167;\n  \n  /*y.domain(data.map(function(d) { return d.grandparent; }));\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  .attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n}*//*   \n  \n  clearTimeout(sortTimeoutGP);\n  \n\t\tvar y0= y.domain(data.map(function(d) { return d.grandparent; }))   ;\n //x.domain([0, d3.max(parentvalues)]);\n\n    svg.selectAll(\".bar\")\n    //.append(\"rect\")\n  \t.attr(\"y\", function(d) { return margin.top+y0(d.grandparent); })\n    //.style(\"fill\", function(d) {return [colScale[0],colScale[5]];} )\n    .attr(\"height\", BAR_HEIGHT)\n    .attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    /*transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.grandparent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t.attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\t\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}*/\n  \n  \n</script>", "description": "Tarea 4 - Visualization horizontal v3", "created_at": "2016-09-10T20:36:59Z", "updated_at": "2016-09-10T20:47:53Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max", "d3.ascending", "d3.nest", "d3.mean"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categ\u00f3rico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar \u00e9stos datos es la longitud en una escala alineada. Por ello se decidi\u00f3 realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidi\u00f3 realizar horizontal para poder tener una mejor visualizaci\u00f3n sobre los c\u00f3digos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota espec\u00edfica de cada usuario (\"Detail on demand\") y ver\u00edficar de acuerdo al matiz(hue) si aprob\u00f3, reprob\u00f3 o pas\u00f3 raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/368d648d9b931cbbd310cc6f7260c8b1'>Tarea 4 - Visualization horizontal v3</a>", "uid": "f94f_27d6b22dd88a68588fdcf1dc198d06de"}, {"code": "<script>\n\n//Margins\nvar margin = {top: 40, right: 20, bottom: 100, left: 65},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n//axis Variables (scale)\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n  \n//create svg  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n//create the dropdown-list\nvar dropDown = d3.select(\"#filter\").append(\"select\").attr('class','select')\n\t\t\t\t\t\t\t\t\t\t.attr(\"name\", \"country-list\")\n\t\t\t\t\t\t\t\t\t\t.on('change',onchange);\n  \n  //File\nvar selectedValue = \"Switzerland.csv\";\n\n// create message-Popout\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    if(d.Value)\n    {return \"<strong>Index:</strong> <span style='color:#feff32'>\" + d.Value + \"</span>\"}\n    else{return \"<strong>Index:</strong> <span style='color:#feff32'>\" + \"NA\" + \"</span>\"};\n  });\n  \n //load multiple files\n  queue()\n    .defer(d3.csv,selectedValue)\n    .defer(d3.csv, \"data2014.csv\")\n    .await(loadData)\n \n  //load file\n  function loadData (error,land,countries){\n   if (error) throw error;\n  \n    //create tip\nsvg.call(tip); // create svg\n\n\t//domain axis variables\n  x.domain(land.map(function(d) { return d.Features; }));\n  y.domain([0, d3.max(land, function(d) { return parseFloat(d.Value) || -1; })]);\n\n      \n  //load countries in the selector\n\t\tvar options = dropDown.selectAll(\"option\")\n         .data(countries)\n         .enter()\n           .append(\"option\");\n\t\toptions.text(function (d) {  return d.Rank+\". \" + d.Country; })\n       .attr(\"value\", function (d) { return d.Country; })\n       .attr(\"id\", function (d) { return d.Rank; });\n      \n      \n      \n  //add x axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(10,\" + height + \")\")\n      .call(xAxis)\n       .selectAll(\"text\")\t\n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-.em\")\n            .attr(\"dy\", \".55em\")\n            .attr(\"transform\", function(d) {\n                return \"rotate(-20)\" \n                });\n    \n\t// add y axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Index\");\n\n      // load graph\n  svg.selectAll(\".bar\")\n      .data(land)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.Features)+6; })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(parseFloat(d.Value) || -1); })\n      .attr(\"height\", function(d) { return height - y(d.Value); })\n  \t\t.style(\"fill\",function(d,i){if(i==0){return \"RGB(247,150,70)\";}\n                                  else if(i==1|| i==2||i==3){return \"RGB(245,201,24)\";}\n                                  else if(i==4||i==5){return \"RGB(250,110,44)\";}\n                                  else if(i==6){return \"RGB(214,127,190)\";}\n                                  else if(i==7|| i==8){return \"RGB(54,105,179)\";}\n                                  else if(i==9){return \"RGB(0,154,204)\";}\n                                  else if(i==10|| i==11){return \"RGB(0,140,140)\";}\n                                  else if(i==11|| i==12||i==13||i==14)\n                                  {return \"RGB(62,188,162)\";}\n                                  else{return \"RGB(0,128,0)\";}})\n  \t\t.style(\"hover\",\"brown\")\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n    \n} \n    \n  //method on change drop-down\n  function onchange(){\n    selectedValue = d3.select('select').property(\"value\")+\".csv\";\n    \n    //Load multiple data again \n  \tqueue()\n    .defer(d3.csv,selectedValue)\n    .defer(d3.csv, \"data2014.csv\")\n    .await(reLoad)\n   function reLoad(error,country,countries)\n   {\n\t\t// Scale the range of the data again\n  x.domain(country.map(function(d) { return d.Features; }));\n  y.domain([0, d3.max(country, function(d) { return parseFloat(d.Value) || -1; })]);\n     \n     // Make the changes\n \tsvg.select(\".x axis\") // change the x axis\n            .transition()\n    \t\t\t\t.duration(750)\n            .call(xAxis);\n  svg.select(\".y axis\") // change the y axis\n  \t\t\t\t\t.transition()\n  \t\t\t\t\t.duration(750)\n  \t\t\t\t\t.call(yAxis);\n svg.selectAll(\".bar\")   // change bars\n \t\t\t\t\t.data(country)\n \t\t\t\t\t.selectAll(\".bar\")\n       \t\t.attr(\"height\", function(d) { return height - y(d.Value); });\n\n   }\n  }\n  \n  //pre-procesing\n  function type(d) {\n  d.Features = d.Features;\n  d.Value = parseFloat(d.Value) || -1;\n  return d;\n}\n</script>", "description": "Tarea4-Task4.2", "created_at": "2016-09-10T20:32:37Z", "updated_at": "2016-09-10T21:19:48Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tip", "d3.max"], "readme": "<center><b>Homework 4. </b><br> \nLaura Cortes 201326232 <br>\nAnamaria Mojica 201316580</center>\n\n<b>For the analysis:</b><br>\n<center><b><font color=\"red\">What: </font></b><br></center>\nTable: <br>\ncategorical attributes.<br>\ncategorical attribute.<br>\n<p align=\"justify\">Items: each row represent the environmental performance index (EPI) for 178 countries with the respective ranks, and features listed below: <br></p>\n<ol type=\"1\">\n<li>EPI Score</li>\n<li>10-Year Percent Change</li>\n<li>Environmental Health\t</li>\n<li>Ecosystem Vitality</li>\n<li>EH - Health Impacts\t</li>\n<li>EH - Air Quality\t</li>\n<li>EH -Water and Sanitation</li>\t\n<li>EV - Water Resources\t</li>\n<li>EV - Agriculture\t</li>\n<li>EV - Forests\t</li>\n<li>EV - Fisheries\t</li>\n<li>EV- Biodiversity and Habitat</li>\t\n<li>EV - Climate and Energy\t</li>\n<li>Child Mortality\t</li>\n<li>Household Air Quality</li>\t\n<li>Air Pollution - Average Exposure to PM2.5</li>\t\n<li>Air Pollution - Average PM2.5 Exceedance\t</li>\n<li>Access to Sanitation\t</li>\n<li>Access to Drinking Water\t</li>\n<li>Wastewater Treatment\t</li>\n<li>Agricultural Subsidies\t</li>\n<li>Pesticide Regulation\t</li>\n<li>Change in Forest Cover \t</li>\n<li>Fish Stocks\t</li>\n<li>Coastal Shelf Fishing Pressure</li>\t\n<li>Terrestrial Protected Areas (National Biome Weights)</li>\t\n<li>Terrestrial Protected Areas (Global Biome Weights)\t</li>\n<li>Marine Protected Areas\t</li>\n<li>Critical Habitat Protection\t</li>\n<li>Trend in Carbon Intensity\t</li>\n<li>Change of Trend in Carbon Intensity\t</li>\n<li>Trend in CO2 Emissions per KwH</li>\n<li>Access to Electricity</li>\n</ol>\n\n<center><b><font color=\"#cc9900\">Why: </font></b><br></center>\nAnalyze: Present the information for the consumption of the citizens.\nIt is presumable that people will explore through countries without knowing exactly which attribute is going to be interesting for them.\nThrough the visualization is expected that people have the ability to identify outliers, trends for a specific country and the summary for the selected country. Finally, is hoped that they find dependencies between attributes. <br>\n<center><b><font color=\"#339933\">How: </font></b><br></center>\nFor encoding the information it is used a 3D graph, is not ordered but it is aligned and for the mapping of the attributes they use volume,color hue and saturation. They try to summarize the data of each country making a map and representing the embed information through those 3D graphs.\n\n\n<center><b><font color=\"red\">Criticism: </font></b><br></center>\n<b>Effectiveness: </b>The principle say that in the visualization should encode most important attributes with highest ranked channels. In this visualization it is used height (depth), in volumes, to express the quantitative scale. Which does not represent in a clear way the scale for the human and can compare the values with each other. However in the diagram is express the values explicit with number. The highest ranked channels are not used in this visualization properly.Position is used circularly that in the context of the data does not make sense. Furthermore this distribution generates occlusion.\n\n<b>Expressiveness:</b> The principle says that the codification should express all but, only the attributes from the dataset. They are using the saturation of some colors such as green and blue, so that, gives the idea that some attributes are more important than others which is not necessarily true. Nevertheless the visualization includes every indicator clearly. \n\n", "uid": "aiMojica10_8e5a528de0e530ab263ea282c8779677"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1)\n    .align(0.1);\n\nvar y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\nvar z = d3.scaleOrdinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nvar stack = d3.stack();\n\nd3.csv(\"data.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  data.sort(function(a, b) { return b.total - a.total; });\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n  z.domain(data.columns.slice(1));\n\n  g.selectAll(\".serie\")\n    .data(stack.keys(data.columns.slice(1))(data))\n    .enter().append(\"g\")\n      .attr(\"class\", \"serie\")\n      .attr(\"fill\", function(d) { return z(d.key); })\n    .selectAll(\"rect\")\n    .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.data.State); })\n      .attr(\"y\", function(d) { return y(d[1]); })\n      .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n      .attr(\"width\", x.bandwidth());\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y).ticks(10, \"s\"))\n    .append(\"text\")\n      .attr(\"x\", 2)\n      .attr(\"y\", y(y.ticks(10).pop()))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Population\");\n\n  var legend = g.selectAll(\".legend\")\n    .data(data.columns.slice(1).reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; })\n      .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", z);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n});\n\nfunction type(d, i, columns) {\n  for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  return d;\n}\n\n</script>", "description": "Stacked Bar Chart", "created_at": "2016-09-10T20:01:22Z", "updated_at": "2016-09-10T20:01:22Z", "api": ["d3.select", "d3.scaleBand", "d3.scaleLinear", "d3.scaleOrdinal", "d3.stack", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This stacked bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](/mbostock/3019563) and a number of D3 features:\n\n* [d3-dsv](https://github.com/d3/d3-dsv) - load and parse data\n* [d3-scale](https://github.com/d3/d3-scale) - *x*- and *y*-position, and color encoding\n* [d3-format](https://github.com/d3/d3-format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3-array](https://github.com/d3/d3-array) - compute simple statistics (e.g., max)\n* [d3-axis](https://github.com/d3/d3-axis) - display axes\n* [d3-shape](https://github.com/d3/d3-shape) - computed stacked positions\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3886208'>Stacked Bar Chart</a>", "uid": "elt12njo_129a27ac621a35a44ab8a68a99b6a508"}, {"code": "<script>\n\n  var data = [],\n      svg,\n      defs,\n      gBrush,\n      brush,\n      main_xScale,\n      mini_xScale,\n      main_yScale,\n      mini_yScale,\n      main_yZoom,\n      main_xAxis,\n      main_yAxis,\n      mini_width,\n      textScale;\n\n  init();\n\n  function init() {\n\n    \n    mydata = d3.csv(\"epi.csv\", function(d) {\n      return {\n        country: d.country,\n        make: d.Make,\n        model: d.Model,\n        length: +d.Length \n        // convert \"Length\" column to number\n      };\n    }, function(error, rows) {\n      console.log(rows);\n    });\n    \n    \n    //Create the random data\n    for (var i = 0; i < 50; i++) {\n      var my_object = {};\n      my_object.key = i;\n      my_object.country = makeWord();\n      my_object.value = Math.floor(Math.random() * 600);\n      data.push(my_object);\n    }//for i \n    data.sort(function(a,b) { return b.value - a.value; });\n\n    /////////////////////////////////////////////////////////////\n    ///////////////// Set-up SVG and wrappers ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Added only for the mouse wheel\n    var zoomer = d3.behavior.zoom()\n        .on(\"zoom\", null);\n\n    var main_margin = {top: 10, right: 10, bottom: 30, left: 100},\n        main_width = 500 - main_margin.left - main_margin.right,\n        main_height = 400 - main_margin.top - main_margin.bottom;\n\n    var mini_margin = {top: 10, right: 10, bottom: 30, left: 10},\n        mini_height = 400 - mini_margin.top - mini_margin.bottom;\n    mini_width = 100 - mini_margin.left - mini_margin.right;\n\n    svg = d3.select(\"#chart\").append(\"svg\")\n        .attr(\"class\", \"svgWrapper\")\n        .attr(\"width\", main_width + main_margin.left + main_margin.right + mini_width + mini_margin.left + mini_margin.right)\n        .attr(\"height\", main_height + main_margin.top + main_margin.bottom)\n        .call(zoomer)\n        .on(\"wheel.zoom\", scroll)\n        //.on(\"mousewheel.zoom\", scroll)\n        //.on(\"DOMMouseScroll.zoom\", scroll)\n        //.on(\"MozMousePixelScroll.zoom\", scroll)\n        //Is this needed?\n        .on(\"mousedown.zoom\", null)\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    var mainGroup = svg.append(\"g\")\n            .attr(\"class\",\"mainGroupWrapper\")\n            .attr(\"transform\",\"translate(\" + main_margin.left + \",\" + main_margin.top + \")\")\n            .append(\"g\") //another one for the clip path - due to not wanting to clip the labels\n            .attr(\"clip-path\", \"url(#clip)\")\n            .style(\"clip-path\", \"url(#clip)\")\n            .attr(\"class\",\"mainGroup\");\n\n    var miniGroup = svg.append(\"g\")\n            .attr(\"class\",\"miniGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    var brushGroup = svg.append(\"g\")\n            .attr(\"class\",\"brushGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    /////////////////////////////////////////////////////////////\n    ////////////////////// Initiate scales //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    main_xScale = d3.scale.linear().range([0, main_width]);\n    mini_xScale = d3.scale.linear().range([0, mini_width]);\n\n    main_yScale = d3.scale.ordinal().rangeBands([0, main_height], 0.4, 0);\n    mini_yScale = d3.scale.ordinal().rangeBands([0, mini_height], 0.4, 0);\n\n    //Based on the idea from: http://stackoverflow.com/questions/21485339/d3-brushing-on-grouped-bar-chart\n    main_yZoom = d3.scale.linear()\n        .range([0, main_height])\n        .domain([0, main_height]);\n\n    //Create x axis object\n    main_xAxis = d3.svg.axis()\n      .scale(main_xScale)\n      .orient(\"bottom\")\n      .ticks(4)\n      //.tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the x axis\n    d3.select(\".mainGroupWrapper\")\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(\" + 0 + \",\" + (main_height + 5) + \")\");\n\n    //Create y axis object\n    main_yAxis = d3.svg.axis()\n      .scale(main_yScale)\n      .orient(\"left\")\n      .tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the y axis\n    mainGroup.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(-5,0)\");\n \n    /////////////////////////////////////////////////////////////\n    /////////////////////// Update scales ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the scales\n    main_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    mini_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    mini_yScale.domain(data.map(function(d) { return d.country; }));\n    \n    //Create the visual part of the y axis\n    d3.select(\".mainGroup\").select(\".y.axis\").call(main_yAxis);\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////// Label axis scales /////////////////////\n    /////////////////////////////////////////////////////////////\n\n    textScale = d3.scale.linear()\n      .domain([15,50])\n      .range([12,6])\n      .clamp(true);\n    \n    /////////////////////////////////////////////////////////////\n    ///////////////////////// Create brush //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //What should the first extent of the brush become - a bit arbitrary this\n    var brushExtent = Math.max( 1, Math.min( 20, Math.round(data.length*0.2) ) );\n\n    brush = d3.svg.brush()\n        .y(mini_yScale)\n        .extent([mini_yScale(data[0].country), mini_yScale(data[brushExtent].country)])\n        .on(\"brush\", brushmove)\n        //.on(\"brushend\", brushend);\n\n    //Set up the visual part of the brush\n    gBrush = d3.select(\".brushGroup\").append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush);\n    \n    gBrush.selectAll(\".resize\")\n      .append(\"line\")\n      .attr(\"x2\", mini_width);\n\n    gBrush.selectAll(\".resize\")\n      .append(\"path\")\n      .attr(\"d\", d3.svg.symbol().type(\"triangle-up\").size(20))\n      .attr(\"transform\", function(d,i) { \n        return i ? \"translate(\" + (mini_width/2) + \",\" + 4 + \") rotate(180)\" : \"translate(\" + (mini_width/2) + \",\" + -4 + \") rotate(0)\"; \n      });\n\n    gBrush.selectAll(\"rect\")\n      .attr(\"width\", mini_width);\n\n    //On a click recenter the brush window\n    gBrush.select(\".background\")\n      .on(\"mousedown.brush\", brushcenter)\n      .on(\"touchstart.brush\", brushcenter);\n\n    ///////////////////////////////////////////////////////////////////////////\n    /////////////////// Create a rainbow gradient - for fun ///////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    defs = svg.append(\"defs\")\n\n    //Create two separate gradients for the main and mini bar - just because it looks fun\n    createGradient(\"gradient-rainbow-main\", \"60%\");\n    createGradient(\"gradient-rainbow-mini\", \"13%\");\n\n    //Add the clip path for the main bar chart\n    defs.append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n      .append(\"rect\")\n    \t.attr(\"x\", -main_margin.left)\n      .attr(\"width\", main_width + main_margin.left)\n      .attr(\"height\", main_height);\n\n    /////////////////////////////////////////////////////////////\n    /////////////// Set-up the mini bar chart ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //The mini brushable bar\n    //DATA JOIN\n    var mini_bar = d3.select(\".miniGroup\").selectAll(\".bar\")\n      .data(data, function(d) { return d.key; });\n\n    //UDPATE\n    mini_bar\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand());\n\n    //ENTER\n    mini_bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand())\n      .style(\"fill\", \"url(#gradient-rainbow-mini)\");\n\n    //EXIT\n    mini_bar.exit()\n      .remove();\n\n    //Start the brush\n    gBrush.call(brush.event);\n\n  }//init\n\n  //Function runs on a brush move - to update the big bar chart\n  function update() {\n\n    /////////////////////////////////////////////////////////////\n    ////////// Update the bars of the main bar chart ////////////\n    /////////////////////////////////////////////////////////////\n\n    //DATA JOIN\n    var bar = d3.select(\".mainGroup\").selectAll(\".bar\")\n        .data(data, function(d) { return d.key; });\n\n    //UPDATE\n    bar\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand())\n      .attr(\"x\", 0)\n      .transition().duration(50)\n      .attr(\"width\", function(d) { return main_xScale(d.value); });\n\n    //ENTER\n    bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"fill\", \"url(#gradient-rainbow-main)\")\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand())\n      .attr(\"x\", 0)\n      .transition().duration(50)\n      .attr(\"width\", function(d) { return main_xScale(d.value); });\n\n    //EXIT\n    bar.exit()\n      .remove();\n\n  }//update\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Brush functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //First function that runs on a brush move\n  function brushmove() {\n\n    var extent = brush.extent();\n\n    //Which bars are still \"selected\"\n    var selected = mini_yScale.domain()\n      .filter(function(d) { return (extent[0] - mini_yScale.rangeBand() + 1e-2 <= mini_yScale(d)) && (mini_yScale(d) <= extent[1] - 1e-2); }); \n    //Update the colors of the mini chart - Make everything outside the brush grey\n    d3.select(\".miniGroup\").selectAll(\".bar\")\n      .style(\"fill\", function(d, i) { return selected.indexOf(d.country) > -1 ? \"url(#gradient-rainbow-mini)\" : \"#e0e0e0\"; });\n\n    //Update the label size\n    d3.selectAll(\".y.axis text\")\n      .style(\"font-size\", textScale(selected.length));\n    \n    /////////////////////////////////////////////////////////////\n    ///////////////////// Update the axes ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Reset the part that is visible on the big chart\n    var originalRange = main_yZoom.range();\n    main_yZoom.domain( extent );\n\n    //Update the domain of the x & y scale of the big bar chart\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    main_yScale.rangeBands( [ main_yZoom(originalRange[0]), main_yZoom(originalRange[1]) ], 0.4, 0);\n\n    //Update the y axis of the big chart\n    d3.select(\".mainGroup\")\n      .select(\".y.axis\")\n      .call(main_yAxis);\n\n    //Find the new max of the bars to update the x scale\n    var newMaxXScale = d3.max(data, function(d) { return selected.indexOf(d.country) > -1 ? d.value : 0; });\n    main_xScale.domain([0, newMaxXScale]);\n\n    //Update the x axis of the big chart\n    d3.select(\".mainGroupWrapper\")\n      .select(\".x.axis\")\n      .transition().duration(50)\n      .call(main_xAxis);\n\n    //Update the big bar chart\n    update();\n    \n  }//brushmove\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Click functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Based on http://bl.ocks.org/mbostock/6498000\n  //What to do when the user clicks on another location along the brushable bar chart\n  function brushcenter() {\n    var target = d3.event.target,\n        extent = brush.extent(),\n        size = extent[1] - extent[0],\n        range = mini_yScale.range(),\n        y0 = d3.min(range) + size / 2,\n        y1 = d3.max(range) + mini_yScale.rangeBand() - size / 2,\n        center = Math.max( y0, Math.min( y1, d3.mouse(target)[1] ) );\n\n    d3.event.stopPropagation();\n\n    gBrush\n        .call(brush.extent([center - size / 2, center + size / 2]))\n        .call(brush.event);\n\n  }//brushcenter\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Scroll functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  function scroll() {\n\n    //Mouse scroll on the mini chart\n    var extent = brush.extent(),\n      size = extent[1] - extent[0],\n      range = mini_yScale.range(),\n      y0 = d3.min(range),\n      y1 = d3.max(range) + mini_yScale.rangeBand(),\n      dy = d3.event.deltaY,\n      topSection;\n\n    if ( extent[0] - dy < y0 ) { topSection = y0; } \n    else if ( extent[1] - dy > y1 ) { topSection = y1 - size; } \n    else { topSection = extent[0] - dy; }\n\n    //Make sure the page doesn't scroll as well\n    d3.event.stopPropagation();\n    d3.event.preventDefault();\n\n    gBrush\n        .call(brush.extent([ topSection, topSection + size ]))\n        .call(brush.event);\n\n  }//scroll\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Helper functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Create a gradient \n  function createGradient(idName, endPerc) {\n\n    var coloursRainbow = [\"#EFB605\", \"#E9A501\", \"#E48405\", \"#E34914\", \"#DE0D2B\", \"#CF003E\", \"#B90050\", \"#A30F65\", \"#8E297E\", \"#724097\", \"#4F54A8\", \"#296DA4\", \"#0C8B8C\", \"#0DA471\", \"#39B15E\", \"#7EB852\"];\n\n    defs.append(\"linearGradient\")\n      .attr(\"id\", idName)\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", \"0%\").attr(\"y1\", \"0%\")\n      .attr(\"x2\", endPerc).attr(\"y2\", \"0%\")\n      .selectAll(\"stop\") \n      .data(coloursRainbow)                  \n      .enter().append(\"stop\") \n      .attr(\"offset\", function(d,i) { return i/(coloursRainbow.length-1); })   \n      .attr(\"stop-color\", function(d) { return d; });\n  }//createGradient\n\n  //Function to generate random strings of 5 letters - for the demo only\n  function makeWord() {\n      var possible_UC = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      var text = possible_UC.charAt(Math.floor(Math.random() * possible_UC.length));\n      \n      var possible_LC = \"abcdefghijklmnopqrstuvwxyz\";\n\n      for( var i=0; i < 5; i++ )\n          text += possible_LC.charAt(Math.floor(Math.random() * possible_LC.length));\n\n      return text;\n  }//makeWord\n\n  </script>", "description": "Brushable Horizontal Bar Chart - V", "created_at": "2016-09-10T19:08:38Z", "updated_at": "2016-09-10T21:40:46Z", "api": ["d3.csv", "d3.behavior.zoom", "d3.select", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.max", "d3.svg.brush", "d3.svg.symbol", "d3.selectAll", "d3.min", "d3.mouse", "d3.event.stopPropagation", "d3.event.preventDefault"], "readme": "This is exactly the same as [version IV](http://bl.ocks.org/nbremer/326fb6de768e85261bfd47aa1f497863) of the brushable horizontal bar chart, but this one has a x scale that updates to fit the largest visible bar in the available width.\n\nFor a bit more background, you can read my mini-blog about it [Brushable & interactive bar chart in d3.js](http://www.visualcinnamon.com/2016/07/brush-bar-chart-d3.html)\n\n\nforked from <a href='http://bl.ocks.org/nstrayer/'>nstrayer</a>'s block: <a href='http://bl.ocks.org/nstrayer/8e46c8f116614f628e3aaeec09167edb'>Brushable Horizontal Bar Chart - V</a>", "uid": "emilioalvarado_63f8f6fe240b0e9f495992e967f13d7c"}, {"code": "<script>\n\nvar diameter = 960,\n    format = d3.format(\",d\"),\n    color = d3.scale.category20c();\n\nvar bubble = d3.layout.pack()\n    .sort(null)\n    .size([diameter, diameter])\n    .padding(1.5);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", diameter)\n    .attr(\"height\", diameter)\n    .attr(\"class\", \"bubble\");\n  \n d3.json(\"data.json\", function(data) {\n  \n  var nodes= bubble.nodes(data)\n  \n  var node = svg.selectAll(\".node\")\n      .data(nodes)\n  \t\t.filter(function(d){ return !d.children;})\n      .enter()\n  \t\t.append(\"g\")\n      \t.attr(\"class\", \"node\")\n      \t.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"title\")\n      .text(function(d) { return d.className + \": \" + format(d.value); });\n\n  node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; })\n  \t\t.attr(\"fill\",function(d){return color(d.valor);})\t\n      \n\n  node.append(\"text\")\n      .attr(\"dy\", \".3em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.indicador });\n});\n\n\n\n</script>", "description": "fresh block", "created_at": "2016-09-10T18:22:41Z", "updated_at": "2016-09-10T19:25:47Z", "api": ["d3.format", "d3.scale.category20c", "d3.layout.pack", "d3.select", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "mavaron_13f43b1782e5eceef6e45c155eab2256"}, {"code": "<script>\n\n//Margins\nvar margin = {top: 40, right: 20, bottom: 100, left: 65},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n//axis Variables (scale)\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n  \n   \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  //File\nvar selectedValue = \"Switzerland.csv\";\n  \n //load multiple files\n  queue()\n    .defer(d3.csv,selectedValue)\n    .defer(d3.csv, \"data2014.csv\")\n    .await(loadData)\n \n  //load file\n  function loadData (error,land,countries){\n   if (error) throw error;\n  \n //message-Popout\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    if(d.Value)\n    {return \"<strong>Index:</strong> <span style='color:#feff32'>\" + d.Value + \"</span>\"}\n    else{return \"<strong>Index:</strong> <span style='color:#feff32'>\" + \"NA\" + \"</span>\"};\n  });\n    \n      //create the dropdown-list\nvar dropDown = d3.select(\"#filter\").append(\"select\").attr('class','select')\n\t\t\t\t\t\t\t\t\t\t.attr(\"name\", \"country-list\")\n\t\t\t\t\t\t\t\t\t\t.on('change',onchange);\n\n\nsvg.call(tip); // create svg\n\n\t//domain axis variables\n  x.domain(land.map(function(d) { return d.Features; }));\n  y.domain([0, d3.max(land, function(d) { return parseFloat(d.Value) || -1; })]);\n\n      \n  //load countries in the selector\n\t\tvar options = dropDown.selectAll(\"option\")\n         .data(countries)\n         .enter()\n           .append(\"option\");\n\t\toptions.text(function (d) {  return d.Rank+\". \" + d.Country; })\n       .attr(\"value\", function (d) { return d.Country; })\n       .attr(\"id\", function (d) { return d.Rank; });\n      \n      \n      \n  //add x axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(10,\" + height + \")\")\n      .call(xAxis)\n       .selectAll(\"text\")\t\n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-.em\")\n            .attr(\"dy\", \".55em\")\n            .attr(\"transform\", function(d) {\n                return \"rotate(-20)\" \n                });\n    \n\t// add y axis\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Index\");\n\n      // load graph\n  svg.selectAll(\".bar\")\n      .data(land)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.Features)+6; })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(parseFloat(d.Value) || -1); })\n      .attr(\"height\", function(d) { return height - y(d.Value); })\n  \t\t.style(\"fill\",function(d,i){if(i==0){return \"RGB(247,150,70)\";}\n                                  else if(i==1|| i==2||i==3){return \"RGB(245,201,24)\";}\n                                  else if(i==4||i==5){return \"RGB(250,110,44)\";}\n                                  else if(i==6){return \"RGB(214,127,190)\";}\n                                  else if(i==7|| i==8){return \"RGB(54,105,179)\";}\n                                  else if(i==9){return \"RGB(0,154,204)\";}\n                                  else if(i==10|| i==11){return \"RGB(0,140,140)\";}\n                                  else if(i==11|| i==12||i==13||i==14)\n                                  {return \"RGB(62,188,162)\";}\n                                  else{return \"RGB(0,128,0)\";}})\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n  \n} \n    \n  //method on change list\n  function onchange(){\n    selectedValue = d3.select('select').property(\"value\")+\".csv\";\n    \n    //Load multiple data again \n  \tqueue()\n    .defer(d3.csv,selectedValue)\n    .defer(d3.csv, \"data2014.csv\")\n    .await(reLoad)\n   function reLoad(error,country,countries)\n   {\n\t\t// Scale the range of the data again\n  x.domain(country.map(function(d) { return d.Features; }));\n  y.domain([0, d3.max(country, function(d) { return parseFloat(d.Value) || -1; })]);\n     \n     d3.select(\"#details\").text(selectedValue);\n     // Make the changes\n \tsvg.select(\".x axis\") // change the x axis\n            .transition()\n    \t\t\t\t.duration(750)\n            .call(xAxis);\n  svg.select(\".y axis\") // change the y axis\n  \t\t\t\t\t.transition()\n  \t\t\t\t\t.duration(750)\n  \t\t\t\t\t.call(yAxis);\n svg.selectAll(\".bar\")   // change bars\n \t\t\t\t\t.data(country);\n \n     \n   }\n  }\n  \n  //pre-procesing\n  function type(d) {\n  d.Features = d.Features;\n  d.Value = parseFloat(d.Value) || -1;\n  return d;\n}\n</script>", "description": "Tarea4-Task4", "created_at": "2016-09-10T17:32:55Z", "updated_at": "2016-09-10T20:18:01Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tip", "d3.max"], "readme": "<b>What: </b> <br>\nTable<br>\none categorical attribute : code <br>\none quiantitative attribute: grade\n\n<b>Why:</b>  <br>\nPresent-Distribution  <br>\nlookup-values  <br>\n\n<b>How:</b> <br>\nSeparate horizontally (code) <br>\nAligned vertically (grade) <br>\n\n<b>Argumentation </b>  <br>\n<p> For the students the essential is to know their grades, because of this, \nin the diagram are shown the grades with the student code and not only the grades. Considering this, the bar diagram is chosen for the representation. Line is chosen as the market, because it helps to represent with the help of the length of it a grade. In the horizontal axis are the codes and in the vertical axis are the grades, starting with 0 and finishing a little more than five. They are chosen in this oreder because it is easier to compare, vertically, the grades between students. </p>\n\n\n\n\nforked from <a href='http://bl.ocks.org/aiMojica10/'>aiMojica10</a>'s block: <a href='http://bl.ocks.org/aiMojica10/cb8b73e9ef7e1b58e775dae8512e7476'>Tarea3-Notas</a>", "uid": "aiMojica10_3aa0fe6aee566b13e246a00bf5c5b144"}, {"code": "<script>\n    // Tile providers\n    var tileProviders = {\n  \t\tmapboxSatellite: tileUrl(\"http://{s}.tiles.mapbox.com/v4/mapbox.streets-satellite/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibXVraHR5YXIiLCJhIjoiZHdCSFRKNCJ9.-bpAlV1GXhC5qWRpI8QOVw\"),\n  \t\tslr: tileUrl(\"http://api.cal-adapt.org/tiles/slr_sfbay_{slrScenario}_jdr/{z}/{x}/{y}.png?style=slr\")\n};\n    \n    // Get width and height of map\n    var mapWindow = document.getElementsByClassName('map')[0];\n\t\tvar width = mapWindow.offsetWidth;\n\t\tvar height =mapWindow.offsetHeight;\n    \n    // Initialize map elements\n    var pi = Math.PI,\n    tau = 2 * pi;\n    \n    // Initialize the projection to fit the world in a 11 square centered at the origin.\n    var projection = d3.geoMercator()\n    \t.scale(1 / tau)\n    \t.translate([0, 0]);\n\n    var path = d3.geoPath()\n    \t.projection(projection);\n\n    var tile = d3.tile()\n    \t.size([width, height]);\n\n    var zoom = d3.zoom()\n    \t.scaleExtent([1 << 16, 1 << 24])\n    \t.on(\"zoom\", zoomed);\n    \n    var svg = d3.select(\"svg\");\n    \n    // Initialize defs element to hold filters and clip paths\n    var defs = svg.append(\"defs\");\n    \n    // Add basemap grayscale filter\n\t\tvar filterBasemap = defs.append(\"filter\")\n    \t.attr(\"id\", \"basemapFilter\")\n    \t.append(\"feColorMatrix\");\n    filterBasemap\n    \t.attr(\"type\", \"saturate\")\n      .attr(\"values\",0);\n    \n    // Add clip path\n    var countiesClipPath = defs.append(\"clipPath\").attr(\"id\", \"clip\").append('path');\n\n    // Add county borders\n    var counties = svg.append('path').attr(\"class\", \"counties\");\n\t\t\n    \n    // Initialize map tiles\n    var satelliteImages = tileImages(tile).url(tileProviders.mapboxSatellite);\n    var satelliteRaster  = svg.append(\"g\")\n      .classed('satellite', true)\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"filter\", \"url(#basemapFilter)\")\n      .append(\"g\")\n      .style('opacity', 0.5);\n\n\n    var slrImages = tileImages(tile).url(tileProviders.slr);\n    var slrRaster  = svg.append(\"g\")\n      .classed('slr', true)\n      .style('opacity', 0.8)\n      .append(\"g\");\n    \n    // Compute the projected initial center.\n\t\tvar center = projection([-122.244, 37.843]);\n\n\t\t//countiesClipPath url\n\t\tvar url='http://api.cal-adapt.org/api/counties/?intersects={%22type%22:%22Polygon%22,%22coordinates%22:[[[-122.776880212876961,38.340314875516867],[-121.69175774422628,38.32283628487383],[-121.718794306364515,37.338284374515446],[-122.796071544122455,37.36843682447212],[-122.796071544122455,37.36843682447212],[-122.776880212876961,38.340314875516867]]]}&srs=4326';\n\n\n    d3.json(url, function(error, features) {\n      if (error) throw error;\n      // Apply a zoom transform equivalent to projection.{scale,translate,center}.\n      svg\n        .call(zoom)\n        .call(zoom.transform, d3.zoomIdentity\n          .translate(width / 2, height / 2)\n          .scale(1 << 17)\n          .translate(-center[0], -center[1]));\n\n      countiesClipPath\n        .attr(\"d\", path(features));\n\n      counties\n        .attr(\"d\", path(features));\n    });\n    \n    \n   \t// Helper Functions\n\t\tfunction zoomed() {\n    \tvar transform = d3.event.transform;\n      var tiles;\n\n      if (transform) {\n        tiles = tile\n          .scale(transform.k)\n          .translate([transform.x, transform.y])();\n      }\n\n      countiesClipPath\n      \t.attr(\"transform\", transform)\n      \t.style(\"stroke-width\", 1 / transform.k);\n\n      counties\n        .attr(\"transform\", transform)\n        .style(\"stroke-width\", 1 / transform.k);\n\n      satelliteRaster.call(satelliteImages);\n      slrRaster.call(slrImages);\n    }\n\n    function stringify(scale, translate) {\n      var k = scale / 256, r = scale % 1 ? Number : Math.round;\n      return \"translate(\" + r(translate[0] * scale) + \",\" + r(translate[1] * scale) + \") scale(\" + k + \")\";\n    }\n    \n    var slrScenario = '0_0m'; //default value\n    function tileUrl(pattern){\n      return function (d){\n        return pattern\n          .replace(\"{x}\", d[0])\n          .replace(\"{y}\", d[1])\n          .replace(\"{z}\", d[2])\n          .replace(\"{s}\", [\"a\", \"b\", \"c\"][Math.random() * 3 | 0])\n          .replace(\"{slrScenario}\", slrScenario);\n      };\n    }\n    \n    function tileImages(tile){\n  \t\tvar url = tileProviders.mapboxSatellite;\n  \t\tvar images = function (raster){\n      \tvar tiles = tile();\n      \tvar image = raster\n      \t\t.attr(\"transform\", \"scale(\" + tiles.scale + \")translate(\" + tiles.translate + \")\")\n         .selectAll(\"image\")\n           .data(tiles, function(d) { return d; });\n\n        image.exit()\n          .remove();\n\n        image.enter().append(\"image\")\n          .attr(\"xlink:href\", url)\n          .attr(\"width\", 1)\n          .attr(\"height\", 1)\n          .attr(\"opacity\", 1)\n          .attr(\"x\", function(d) { return d[0]; })\n          .attr(\"y\", function(d) { return d[1]; });\n      };\n\n      images.url = function (_){\n        return arguments.length ? (url = _, images) : url;\n      }\n\n      return images;\n    }\n    \n    // SLR scenario picker\n    d3.select('#opts')\n      .on('change', function() {\n      \tslrScenario = d3.select(this).property('value');\n  \t\t\tslrRaster.selectAll('image').remove();\n  \t\t\tslrRaster.call(slrImages);\n    });\n    \n    // Legend\n    var linear = d3.scaleOrdinal()\n      .domain(['0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '>4' ])\n      .range([ '#ffffd9','#edf8b1','#c7e9b4','#7fcdbb','#41b6c4','#1d91c0','#225ea8','#253494','#081d58']);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"legendLinear\")\n      .attr(\"transform\", \"translate(20,50)\");\n\n    var legendLinear = d3.legendColor()\n      .shapeWidth(20)\n      .scale(linear);\n\n    svg.select(\".legendLinear\")\n      .call(legendLinear);\n\n    d3.selectAll('.cell rect')\n    \t.style('opacity', 0.8);\n\n    \n\n  </script>", "description": "Cal-Adapt - Sea Level Rise Data (Radke et al 2016)", "created_at": "2016-09-10T17:04:02Z", "updated_at": "2016-10-13T21:33:05Z", "api": ["d3.geoMercator", "d3.geoPath", "d3.tile", "d3.zoom", "d3.select", "d3.json", "d3.scaleOrdinal", "d3.legendColor", "d3.selectAll"], "readme": "Explore depth of future innundations resuting from Sea Level Rise and likely future storm events for the San Francisco Bay. This data is based on following study:\n\n> Radke, J. D., G. S. Biging, M. Schmidt-Poolman, H. Foster, E. Roe, Y. Ju, O. Hoes, T.\nBeach, A. Alruheil, L. Meier, W. Hsu, R. Neuhausler, W. Fourt (University of\nCalifornia, Berkeley). 2016. An Assessment of the Climate Change Vulnerability\nof the Natural Gas Transmission Infrastructure for the San Francisco Bay Area, \nSacramento\u2014San Joaquin Delta, and Coastal California. California Energy\nCommission.\n\n### A brief summary of the study:\n\n- The researchers first created a high resolution surface model combining bathymetry, land surface elevations and significant surface elevations (such as levees, building footprints, roadways).\n- Second, historic tidal and river water surface elevation data were acquired and combined with the surface model to provide inputs for the 3Di hydrodynamic model. \n- Third, simulations in 3Di were undertaken to predict hourly water surface elevations, over a 72 hour period, during the 100 year storm events, using projected future Sea Level Rise (increments of 0, 0.5, 1.0, 1.41 meters). \n\nWhile the original study modelled the San Francsico Bay at resolutions that ranged between 3 square meters and 12 square meters, the data on [Cal-Adapt](beta.cal-adapt.org) has been resampled to a spatial resolution of 3 square meters and shows the maximum innundation depth during the 72 hour simulation period.\n\n### Built with [blockbuilder.org](http://blockbuilder.org)\n\n### With help from following blocks:\n\n- [Raster & Vector III](http://bl.ocks.org/mbostock/5914438)\n- [Cross Country Trip](http://bl.ocks.org/curran/96823ad84b0415536980b1cbf57b1dcc)\n- [Clipped Map Tiles](http://bl.ocks.org/mbostock/4150951)\n- [Dynamic Tiles Masking](http://bl.ocks.org/KoGor/2d3a9d250f46e59bfc6e)\n- [Apply clipPath to transformed g element - Stackoverflow](http://stackoverflow.com/questions/14456809/apply-clippath-to-transformed-g-element)\n\n####Disclaimer: This is a personal exercise in visualizing this dataset. Any views or ideas represented here are personal and do not represent those of people, institutions or organizations that I may be associated with.\n", "uid": "mukhtyar_0919114dceb85d70c24d4003aa84681d"}, {"code": "<script>\n\nvar margin = {top: 30, right: 120, bottom: 0, left: 245},\n    width = 960 - margin.left - margin.right,\n    height = 350 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar barHeight = 25;\n\nvar color = d3.scale.ordinal()\n    .range([\"steelblue\", \"#98AFC7\"]);\n\nvar duration = 750,\n    delay = 25;\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {return \"<span style='color:Chartreuse;font-size: 10pt;font-family: arial'>\" + d.value + \"</span>\";\n  })\nvar partition = d3.layout.partition()\n    .value(function(d) { return d.size; });\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"top\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"rect\")\n    .attr(\"class\", \"background\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .on(\"click\", up);\n\n  svg.call(tip);\n  \nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .append(\"text\")\n    .attr(\"x\", -50)\n    .attr(\"dx\", \".1em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"CLICK ON BAR FOR DETAILS\");\n\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n  .append(\"line\")\n    .attr(\"y1\", \"100%\");\n\nd3.json(\"readme.json\", function(error, root) {\n  if (error) throw error;\n\n  partition.nodes(root);\n  x.domain([0, root.value]).nice();\n  down(root, 0);\n});\n\nfunction down(d, i) {\n  if (!d.children || this.__transition__) return;\n  var end = duration + d.children.length * delay;\n\n  // Mark any currently-displayed bars as exiting.\n  var exit = svg.selectAll(\".enter\")\n      .attr(\"class\", \"exit\");\n\n  // Entering nodes immediately obscure the clicked-on bar, so hide it.\n  exit.selectAll(\"rect\").filter(function(p) { return p === d; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Enter the new bars for the clicked-on data.\n  // Per above, entering bars are immediately visible.\n  var enter = bar(d)\n      .attr(\"transform\", stack(i))\n      .style(\"opacity\", 1);\n\n  // Have the text fade-in, even though the bars are visible.\n  // Color the bars as parents; they will fade to children if appropriate.\n  enter.select(\"text\").style(\"fill-opacity\", 1e-6);\n  enter.select(\"rect\").style(\"fill\", color(true));\n\n  // Update the x-scale domain.\n  x.domain([0, d3.max(d.children, function(d) { return d.value; })]).nice();\n\n  // Update the x-axis.\n  svg.selectAll(\".x.axis\").transition()\n      .duration(duration)\n      .call(xAxis);\n\n  // Transition entering bars to their new position.\n  var enterTransition = enter.transition()\n      .duration(duration)\n      .delay(function(d, i) { return i * delay; })\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + barHeight * i * 1.2 + \")\"; });\n\n  // Transition entering text.\n  enterTransition.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition entering rects to the new x-scale.\n  enterTransition.select(\"rect\")\n      .attr(\"width\", function(d) { return x(d.value); })\n      .style(\"fill\", function(d) { return color(!!d.children); });\n\n  // Transition exiting bars to fade out.\n  var exitTransition = exit.transition()\n      .duration(duration)\n      .style(\"opacity\", 1e-6)\n      .remove();\n\n  // Transition exiting bars to the new x-scale.\n  exitTransition.selectAll(\"rect\")\n      .attr(\"width\", function(d) { return x(d.value); });\n\n  // Rebind the current node to the background.\n  svg.select(\".background\")\n      .datum(d)\n    .transition()\n      .duration(end);\n\n  d.index = i;\n}\n\nfunction up(d) {\n  if (!d.parent || this.__transition__) return;\n  var end = duration + d.children.length * delay;\n\n  // Mark any currently-displayed bars as exiting.\n  var exit = svg.selectAll(\".enter\")\n      .attr(\"class\", \"exit\");\n\n  // Enter the new bars for the clicked-on data's parent.\n  var enter = bar(d.parent)\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + barHeight * i * 1.2 + \")\"; })\n      .style(\"opacity\", 1e-6);\n\n  // Color the bars as appropriate.\n  // Exiting nodes will obscure the parent bar, so hide it.\n  enter.select(\"rect\")\n      .style(\"fill\", function(d) { return color(!!d.children); })\n    .filter(function(p) { return p === d; })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the x-scale domain.\n  x.domain([0, d3.max(d.parent.children, function(d) { return d.value; })]).nice();\n\n  // Update the x-axis.\n  svg.selectAll(\".x.axis\").transition()\n      .duration(duration)\n      .call(xAxis);\n\n  // Transition entering bars to fade in over the full duration.\n  var enterTransition = enter.transition()\n      .duration(end)\n      .style(\"opacity\", 1);\n\n  // Transition entering rects to the new x-scale.\n  // When the entering parent rect is done, make it visible!\n  enterTransition.select(\"rect\")\n      .attr(\"width\", function(d) { return x(d.value); })\n      .each(\"end\", function(p) { if (p === d) d3.select(this).style(\"fill-opacity\", null); });\n\n  // Transition exiting bars to the parent's position.\n  var exitTransition = exit.selectAll(\"g\").transition()\n      .duration(duration)\n      .delay(function(d, i) { return i * delay; })\n      .attr(\"transform\", stack(d.index));\n\n  // Transition exiting text to fade out.\n  exitTransition.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition exiting rects to the new scale and fade to parent color.\n  exitTransition.select(\"rect\")\n      .attr(\"width\", function(d) { return x(d.value); })\n      .style(\"fill\", color(true));\n\n  // Remove exiting nodes when the last child has finished transitioning.\n  exit.transition()\n      .duration(end)\n      .remove();\n\n  // Rebind the current parent to the background.\n  svg.select(\".background\")\n      .datum(d.parent)\n    .transition()\n      .duration(end);\n}\n\n// Creates a set of bars for the given data node, at the specified index.\nfunction bar(d) {\n  var bar = svg.insert(\"g\", \".y.axis\")\n      .attr(\"class\", \"enter\")\n      .attr(\"transform\", \"translate(0,5)\")\n    .selectAll(\"g\")\n      .data(d.children)\n    .enter().append(\"g\")\n      .style(\"cursor\", function(d) { return !d.children ? null : \"pointer\"; })\n      .on(\"click\", down);\n\n  bar.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", barHeight / 2)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d.name; });\n\n  bar.append(\"rect\")\n      .attr(\"width\", function(d) { return x(d.value); })\n      .attr(\"height\", barHeight)\n        .on('mouseover', tip.show)\n      .on('mouseout', tip.hide);\n\n  return bar;\n}\n\n// A stateful closure for stacking bars horizontally.\nfunction stack(i) {\n  var x0 = 0;\n  return function(d) {\n    var tx = \"translate(\" + x0 + \",\" + barHeight * i * 1.2 + \")\";\n    x0 += x(d.value);\n    return tx;\n  };\n}\n\n</script>", "description": "EPI Data Visulization", "created_at": "2016-09-10T14:54:02Z", "updated_at": "2016-09-10T19:20:35Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.tip", "d3.layout.partition", "d3.svg.axis", "d3.select", "d3.json", "d3.max"], "readme": "This bar chart visualizes hierarchical data using [D3](http://mbostock.github.com/d3/). Each blue bar represents a folder, whose length encodes the total size of all files in that folder (and all subfolders). Clicking on a bar dives into that folder, while clicking on the background bubbles back up to the parent folder. The effect is similar to a [zoomable partition layout](http://bl.ocks.org/1005873), though in a more conventional display.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1283663'>Hierarchical Bar Chart</a>", "uid": "willroj_0a6368d923dea0776fc7a00ab3749f9d"}, {"code": "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scaleLinear()\n    .range([0,width]);\n//var x = d3.scale.linear()\n//    .range([0,width]);\nvar y = d3.scaleOrdinal()\n    .range([0,(height-margin.bottom)]);\n\n\nvar xAxis = d3.axisTop(x)\n    //.scale(x)\n    //.orient(\"bottom\")\n\t\t.tickArguments(10);\n\n  //nup, no funcion\nvar yAxis = d3.axisLeft(y);\n    //.orient(\"left\")\n\t\t//.tickSize(0);\nvar BAR_HEIGHT = 37;\n  \nvar colScale = d3.scaleOrdinal()\n    .range([\"#009900\", \"#339966\", \"#216342\", \"#0099cc\", \"#10599c\" ,\"#555f9f\", ,\"#ff6100\",\"#f9bb00\", \"#ff8c00\"]);\n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  y.domain(data.map(function(d) { return d.parent; }));\n  //y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", 3.28)\n      .attr(\"dx\", \"0.976em\")\n      .style(\"text-anchor\", \"end\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n  y.domain(data.map(function(d) { return d.parent; }));\n  svg.selectAll(\".bar\")\n    .enter()\n    .append(\"rect\")\n  \t\t.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n} \n  \nfunction groupParents() {\n  y.domain(data.map(function(d) { return d.grandparent; }));\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n  .attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n}   \n  \n</script>", "description": "Tarea 4 - Visualization horizontal d3.v4", "created_at": "2016-09-10T14:34:20Z", "updated_at": "2016-09-10T16:15:58Z", "api": ["d3.scaleLinear", "d3.scale.linear", "d3.scaleOrdinal", "d3.axisTop", "d3.axisLeft", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categ\u00f3rico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar \u00e9stos datos es la longitud en una escala alineada. Por ello se decidi\u00f3 realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidi\u00f3 realizar horizontal para poder tener una mejor visualizaci\u00f3n sobre los c\u00f3digos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota espec\u00edfica de cada usuario (\"Detail on demand\") y ver\u00edficar de acuerdo al matiz(hue) si aprob\u00f3, reprob\u00f3 o pas\u00f3 raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/368d648d9b931cbbd310cc6f7260c8b1'>Tarea 4 - Grades Visualization horizontal</a>", "uid": "damayor_7b07253b1e232131cced9247626a5b38"}, {"code": "<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks (1);\n\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Score:</strong> <span style='color:white'>\" + d.Score + \"</span>\";\n  })\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"Germany.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.Indicator; }));\n  y.domain([0, d3.max(data, function(d) { return d.Score; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  \n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.Indicator); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.Score); })\n      .attr(\"height\", function(d) { return height - y(d.Score); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n  \n});\n\nfunction type(d) {\n  d.Score = +d.Score;\n  return d;\n\n}\n\n</script>", "description": "fresh block", "created_at": "2016-09-10T10:34:16Z", "updated_at": "2016-09-10T11:08:53Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097"}, {"code": "<script>\nvar width = 960,\n    height = 800;\n\nvar linkColor = d3.scaleSequential(d3.interpolateMagma)\n  .domain([240, -2])\n\nvar canvas = d3.select(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }).distance(8).strength(0.45))\n    .force(\"charge\", d3.forceManyBody().strength(-2).distanceMax(250))\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nvar graph = {};\n\nd3.text(\"mplate.mtx\", function(error, raw) {\n  if (error) throw error;\n\n  var node_set = d3.set();\n\n  var pairs = raw.split(\"\\n\")\n    .slice(14)\n    .map(function(d) { return d.split(\" \"); });\n\n  pairs.forEach(function(d) {\n    node_set.add(d[0]);\n    node_set.add(d[1]);\n  });\n\n  graph.nodes = node_set.values().map(function(d) {\n      return {\n        id: d\n      };\n    });\n\n  graph.links = pairs.map(function(d) {\n      return {\n        source: d[0],\n        target: d[1]\n      }\n    })\n    .filter(function(d) {\n      return d.source !== d.target;\n    });\n\n  simulation\n      .nodes(graph.nodes)\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  d3.range(10).forEach(simulation.tick);\n\n  simulation\n      .on(\"tick\", ticked);\n\n  canvas.call(d3.drag()\n          .container(canvas.node())\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n\n    context.globalAlpha = 0.15;\n    context.beginPath();\n    context.strokeStyle = \"#777\";\n    graph.links.forEach(drawLink);\n    context.stroke();\n\n    context.globalAlpha = 1;\n    graph.nodes.forEach(drawNode);\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.fillStyle = d3.interpolateMagma(Math.sqrt(d.vx*d.vx + d.vy*d.vy)/3);\n  context.fillRect(d.x-1, d.y-1, 2, 2);\n}\n\n</script>", "description": "Force Stress Test", "created_at": "2016-09-10T08:59:13Z", "updated_at": "2016-09-10T09:30:00Z", "api": ["d3.scaleSequential", "d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.text", "d3.set", "d3.range", "d3.drag", "d3.interpolateMagma"], "readme": "The [mplate graph](http://www.cise.ufl.edu/research/sparse/matrices/Cote/mplate.html) from the [The University of Florida Sparse Matrix Collection](http://www.cise.ufl.edu/research/sparse/matrices/index.html).\n\nThis is a stress test of [d3-force](https://github.com/d3/d3-force) with 5,964 nodes and 68,115 edges. Self-edges were removed from the links array. Nodes are colored by their velocity.\n", "uid": "syntagmatic_6f30a2d719871d041c6eace2193b9f33"}, {"code": "<script>\nvar width = 960,\n    height = 600;\n\nvar linkColor = d3.scaleSequential(d3.interpolateMagma)\n  .domain([220, -1])\n\nvar canvas = d3.select(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }).distance(22).strength(0.2))\n    .force(\"charge\", d3.forceManyBody().strength(-6).distanceMax(380))\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nvar graph = {};\n\nd3.text(\"lock1074.mtx\", function(error, raw) {\n  if (error) throw error;\n\n  var node_set = d3.set();\n\n  var pairs = raw.split(\"\\n\")\n    .slice(14)\n    .map(function(d) { return d.split(\" \"); });\n\n  pairs.forEach(function(d) {\n    node_set.add(d[0]);\n    node_set.add(d[1]);\n  });\n\n  graph.nodes = node_set.values().map(function(d) {\n      return {\n        id: d\n      };\n    });\n\n  graph.links = pairs.map(function(d) {\n      return {\n        source: d[0],\n        target: d[1]\n      }\n    })\n    .filter(function(d) {\n      return d.source !== d.target;\n    });\n\n  simulation\n      .nodes(graph.nodes)\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  d3.range(10).forEach(simulation.tick);\n\n  simulation\n      .on(\"tick\", ticked);\n\n  canvas.call(d3.drag()\n          .container(canvas.node())\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n\n    context.globalAlpha = 0.2;\n    graph.links.forEach(drawLink);\n\n    context.globalAlpha = 1;\n    context.fillStyle = d3.interpolateViridis(0.15);\n    graph.nodes.forEach(drawNode);\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  var distance = Math.sqrt( Math.pow(d.source.x - d.target.x, 2) + Math.pow(d.source.x - d.target.x, 2));\n  context.beginPath();\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n  context.strokeStyle = linkColor(distance);\n  context.stroke();\n}\n\nfunction drawNode(d) {\n//  context.fillStyle = d3.interpolateMagma(Math.sqrt(d.vx*d.vx + d.vy*d.vy));\n  context.fillRect(d.x-0.75, d.y-0.75, 1.5, 1.5);\n}\n\n</script>", "description": "Sparse Matrix Force Graph", "created_at": "2016-09-10T07:52:17Z", "updated_at": "2016-09-11T11:21:25Z", "api": ["d3.scaleSequential", "d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.text", "d3.set", "d3.range", "d3.drag", "d3.interpolateViridis", "d3.interpolateMagma"], "readme": "The [lock1074 graph](http://www.cise.ufl.edu/research/sparse/matrices/HB/lock1074.html) from the [The University of Florida Sparse Matrix Collection](http://www.cise.ufl.edu/research/sparse/matrices/index.html).\n\n1,040 nodes with 25,276 edges. Self-edges were removed from the links array. Links are colored by the distance between nodes.\n", "uid": "syntagmatic_c334d4293b72a2d1b8827c70e88d4d4f"}, {"code": "<script>\nvar width = 960,\n    height = 600;\n\nvar canvas = d3.select(\"canvas\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nvar context = canvas.node().getContext(\"2d\");\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody().strength(-10).distanceMax(300))\n    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n    .force(\"vertical\", d3.forceY().strength(0.018))\n    .force(\"horizontal\", d3.forceX().strength(0.006));\n\nvar graph = {};\n\nd3.text(\"3437.edges\", function(error, raw) {\n  if (error) throw error;\n\n  var node_set = d3.set();\n\n  var pairs = raw.split(\"\\n\")\n    .map(function(d) { return d.split(\" \"); });\n\n  pairs.forEach(function(d) {\n    node_set.add(d[0]);\n    node_set.add(d[1]);\n  });\n\n  graph.nodes = node_set.values().map(function(d) {\n    return {\n      id: d\n    };\n  });\n\n  graph.links = pairs.map(function(d) {\n    return {\n      source: d[0],\n      target: d[1]\n    }\n  });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  canvas.call(d3.drag()\n          .container(canvas.node())\n          .subject(dragsubject)\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  function ticked() {\n    context.clearRect(0, 0, width, height);\n\n    context.beginPath();\n    graph.links.forEach(drawLink);\n    context.globalAlpha = 0.12;\n    context.strokeStyle = \"#999\";\n    context.stroke();\n\n    context.beginPath();\n    graph.nodes.forEach(drawNode);\n    context.globalAlpha = 1;\n    context.fillStyle = d3.interpolateViridis(0.335);\n    context.fill();\n  }\n\n  function dragsubject() {\n    return simulation.find(d3.event.x, d3.event.y);\n  }\n});\n\nfunction dragstarted() {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d3.event.subject.fx = d3.event.subject.x;\n  d3.event.subject.fy = d3.event.subject.y;\n}\n\nfunction dragged() {\n  d3.event.subject.fx = d3.event.x;\n  d3.event.subject.fy = d3.event.y;\n}\n\nfunction dragended() {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d3.event.subject.fx = null;\n  d3.event.subject.fy = null;\n}\n\nfunction drawLink(d) {\n  context.moveTo(d.source.x, d.source.y);\n  context.lineTo(d.target.x, d.target.y);\n}\n\nfunction drawNode(d) {\n  context.moveTo(d.x + 2.5, d.y);\n  context.arc(d.x, d.y, 2.5, 0, 2 * Math.PI);\n}\n\n</script>", "description": "Facebook Egonet", "created_at": "2016-09-10T07:04:19Z", "updated_at": "2016-09-10T07:42:21Z", "api": ["d3.select", "d3.forceSimulation", "d3.forceLink", "d3.forceManyBody", "d3.forceCenter", "d3.forceY", "d3.forceX", "d3.text", "d3.set", "d3.drag", "d3.interpolateViridis"], "readme": "An example of a [d3-force](https://github.com/d3/d3-force) graph with 536 nodes and 9627 edges. The new canvas-based rendering is significantly faster than the [SVG Force-Directed Graph](https://bl.ocks.org/mbostock/4062045).\n\nTo keep nodes on the screen, I tweaked the following forces:\n\n* Lowered the `strength` of the **charge** force and added a `distanceMax`\n* Added **vertical** and **horizontal** forces which help keep nodes from drifting offscreen with `forceY` and `forceX`\n\nFacebook egonet data from [Julian McAuley and Jure Leskovec](https://snap.stanford.edu/data/egonets-Facebook.html).\n", "uid": "syntagmatic_954b31aa8b8beb91b30ccb0c9e57f6ce"}, {"code": "<script>\nvar margin = {top: 10, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n  barHeight = 50,\n    labelWidth = 0;\n\n  \nvar y = d3.scaleBand()\n    .range([0, height])\n\t\t.paddingInner(0.1);\n  \nvar x = d3.scaleLinear()\n    .range([0, width]);\n\n  \nvar p = d3.scaleLinear()\n\t\t.range([0, 100]);\n\nvar yAxis = d3.axisLeft()\n    .scale(y)\n;\n\nvar xAxis = d3.axisBottom()\n    .scale(x)\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar defs = d3.select(\"body svg\").append(\"defs\");\n  \nvar chart = d3.select(\".chart\")\n    .attr(\"width\", width);\n \nd3.tsv(\"source.tsv\", type, function(error, data) { \n  \n  y.domain(data.map(function(d) { return d.Country; }));\n  x.domain([0, d3.max(data, function(d) { return d.Switzerland; })]);\n  p.domain(x.domain());\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Fisheries\");\n var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", function(d) { return y(d.Country); })\n      .attr(\"height\", y.bandwidth())\n      .attr(\"x\", 0)\n      .attr(\"width\", width)\n  \t\t.style(\"fill\", function(d, i) { return \"url(#gradient_\" + i + \")\"; }) \n  \t\t.on(\"mouseover\", function(d, i) {\n                div.style(\"left\", d3.event.pageX+10+\"px\");\n                div.style(\"top\", d3.event.pageY-25+\"px\");\n                div.style(\"display\", \"inline-block\");\n                div.html((d.Country)+\"<br> grade:\"+(d.Switzerland));\n  \t\t\t})\n  \t\t.on(\"mouseout\", function(d, i) {\n                div.style(\"display\", \"none\");\n  \t\t\t})\n  ;\n  defs.selectAll(\"linearGradient\")\n  \t\t.data(data)\n  \t.enter().append(\"linearGradient\")\n  \t\t.attr(\"id\", function(d, i) { return \"gradient_\" + i; })\n  \t\t.attr(\"x1\", 0)\n  \t\t.attr(\"x2\", 1)\n  \t\t.attr(\"y1\", 0)\n  \t\t.attr(\"y2\", 0)\n  \t\t.each(function(d) {\n   \t\t\t\tvar self = d3.select(this);\n    \t\t\tvar stops = [\"bar start\", \"bar end\", \"empty end\"];\n    \t\t\tself.selectAll(\"stop\")\n          \t\t.data(stops)\n          \t.enter().append(\"stop\")\n          \t\t.attr(\"class\", function(s, i) { return s; })\n          \t\t.attr(\"offset\", function(s, i) {\n            \t\t\treturn (i ? p(d.Switzerland) : \"0\") + \"%\";\n          \t\t\t})\n         \t;\n  \t\t\t})\n \t;\n\n});\n\n  \nfunction type(d) {\n  d.Fisheries = +d.Fisheries; // coerce to number\n  d.EPIScore = +d.EPIScore;\n  return d;\n}\n\n</script>", "description": "Tarea4", "created_at": "2016-09-10T06:57:45Z", "updated_at": "2016-09-10T06:57:45Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.axisBottom", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/davidgutierrez/'>davidgutierrez</a>'s block: <a href='http://bl.ocks.org/davidgutierrez/473d7579c839fe90735dcba659f8171b'>Tarea4</a>", "uid": "eduavencama_e9155a6869c457c71fbc8978f776214d"}, {"code": "<script>\n      \nvar margin = {top: 10, right: 20, bottom: 30, left: 120},\n    width = 900 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n            valueMargin = 4,\n  barHeight = 10,\n    labelWidth = 0;\n\n  \nvar y = d3.scaleBand()\n    .range([0, height])\n\t\t.paddingInner(0.1);\n  \nvar x = d3.scaleLinear()\n    .range([0, width]);\n\n  \nvar p = d3.scaleLinear()\n\t\t.range([0, 100]);\n\nvar yAxis = d3.axisLeft()\n    .scale(y)\n;\n\nvar xAxis = d3.axisBottom()\n    .scale(x)\n    .ticks(5, \"%\"); \n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar defs = d3.select(\"body svg\").append(\"defs\");\n  \nvar chart = d3.select(\".chart\")\n    .attr(\"width\", width);\n \nd3.tsv(\"source.tsv\", type, function(error, data) { \n\tif(error) {\n  \tconsole.error(error);\n    alert(error);\n    return;\n  }\n  update(data);\n});\n  var SelectedCountry = \"Switzerland\";\n   \nfunction update(data){\n  \n\n  d3.select(\"#sec1\").selectAll('p')\n    .data(SelectedCountry[0]).enter().append('h1')\n    .text(function(d) { return SelectedCountry; })\n    .attr('class', 'enter');\n  \n  // Scale the range of the data in the domains\n  y.domain(data.map(function(d) { return d.Country; })); \n  x.domain([0, d3.max(data, function(d) { return d.CurrentContry; })]);\n  p.domain(x.domain());\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", 6)\n      .attr(\"dx\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Porcents\");\n\n  \n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Countries\");\n\n  var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n  var color = d3.scaleOrdinal(d3.schemeCategory10);\n  \n  svg.selectAll(\".bar\")\n      .data(data)\n    \t.enter()\n    \t.append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", function(d) { return y(d.Country); })\n      .attr(\"height\", y.bandwidth())\n  \t\t.style(\"fill\",function(d) { return color(d.Color); })\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return x(d.CurrentContry); })\n  \t\t.on(\"mouseover\", function(d, i) {\n                div.style(\"left\", d3.event.pageX+10+\"px\");\n                div.style(\"top\", d3.event.pageY-25+\"px\");\n                div.style(\"display\", \"inline-block\");\n                div.html((d.Country)+\"<br> \"+(d.CurrentContry*100)+\"%\");\n  \t\t\t})\n  \t\t.on(\"mouseout\", function(d, i) {\n                div.style(\"display\", \"none\");\n  \t\t\t}).append(\"text\")\n            .attr(\"class\", \"country\")\n            .attr(\"y\", barHeight / 2)\n            .attr(\"dx\", -valueMargin + labelWidth) //margin right\n            .attr(\"dy\", \".35em\") //vertical align middle\n            .attr(\"text-anchor\", \"end\")\n            .text(function(d){\n                return (d.CurrentContry);\n            }) \n            .attr(\"x\", function(d){\n                var width = this.getBBox().width;\n                return Math.max(width + valueMargin, x(d.CurrentContry));\n            });\n  \n\n};\n\n  \nfunction type(d) {\n  d.CurrentContry = d[SelectedCountry]/100;\n  d.Fisheries = d.Fisheries/100; // coerce to number\n  d.EPIScore = d.EPIScore/100;\n  return d;\n}\n\n</script>", "description": "Tarea4", "created_at": "2016-09-10T02:27:40Z", "updated_at": "2016-09-11T04:58:37Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.axisBottom", "d3.select", "d3.tsv", "d3.max", "d3.scaleOrdinal"], "readme": "## Authors:\n - Eduard Avenda\u00f1o\n - Cristian Gutierrez\n\n## WHAT?\n - Dataset Type:  Table.\n - Data Type: Items, attributes (Quantitative).\n\n## WHY?\n - We have two Actions: Discover and Present.  Both Works for Analyze the data.\n - Target: Distribution.\n\nDiscover the percentage of EPI (Environmental Performance Index) for each country.\nPresent indicators Environmental Health and Ecosystem Vitality for each country.\n## HOW?\n - Marks: Volume and Area.\n - Channels: Size (Volume) and Color (Hue).\n - Arrange: Express.\n - Map: Color.\n - Manipulate: Select\n\n\n## REVIEW                         \nThe channels used are the least effective in the Framework of Tamara teacher. Volume does not allow adequately perceive the magnitude of each of the attributes, although it is valid to note that use hue to clearly identify the categories, but the colors used have tones that do not allow proper distinction. The channel volume does not allow a clear perception of the magnitudes and also favors the overlap of marks.\n\nTask of discovering the percentage of each country, it is clear that the used filter does not work (displays only the vis of Germany), but it is valid to note that a summary of the country shows the percentage of EPI and its ranking is shown against rest.\n\nAs for the task of presenting the Environmental Health and Ecosystem Vitality indicators for each country it can be noticed that use less effective channels. The vis violates the principle of effectiveness as 3D shapes are less effective, this could be done better using a bar chart.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "davidgutierrez_473d7579c839fe90735dcba659f8171b"}, {"code": "<script>\nvar data = [\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Health Impacts\",\n   \"label\": \"Child Mortality\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Household Air Quality\",\n   \"value\": 95\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average Exposure to PM2.5\",\n   \"value\": 82.24\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Air Quality\",\n   \"label\": \"Air Pollution - Average PM2.5 Exceedance\",\n   \"value\": 58.27\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Sanitation\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Environmental Health\",\n   \"parent\": \"Water and Sanitation\",\n   \"label\": \"Access to Drinking Water\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Water Resources\",\n   \"label\": \"Wastewater Treatment\",\n   \"value\": 95.18\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Agricultural Subsidies\",\n   \"value\": 38.62\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Agriculture\",\n   \"label\": \"Pesticide Regulation\",\n   \"value\": 92\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Forests\",\n   \"label\": \"Change in Forest Cover \",\n   \"value\": 31.35\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Fish Stocks\",\n   \"value\": 8.33\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Fisheries\",\n   \"label\": \"Coastal Shelf Fishing Pressure\",\n   \"value\": 18.46\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (National Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Terrestrial Protected Areas (Global Biome Weights)\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \" Biodiversity and Habitat\",\n   \"label\": \"Marine Protected Areas\",\n   \"value\": 100\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in Carbon Intensity\",\n   \"value\": 65.24\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Change of Trend in Carbon Intensity\",\n   \"value\": 27.82\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Trend in CO2 Emissions per KwH\",\n   \"value\": 58.26\n },\n {\n   \"grandparent\": \"Ecosystem Vitality\",\n   \"parent\": \"Climate and Energy\",\n   \"label\": \"Access to Electricity\",\n   \"value\": 100\n }\n]\n\nvar grandparentlabels= [\"Environmental Health\",\"Ecosystem Vitality\"];\n\nvar parentlabels= [\n \" EH - Health Impacts\",\n\"EH - Air Quality\",\n\"EH -Water and Sanitation\",\n\"EV - Water Resources\",\n\"EV - Agriculture\",\n\"EV - Forests\",\n\"EV - Fisheries\",\n\"EV- Biodiversity and Habitat\",\n\"EV - Climate and Energy\"];\n  \nvar parentvalues= [100,78.5,100,95.18,65.31,31.35,13.4,100,62.77];\n  \n var grandparentvalues = [92.83, 72.73];\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 155},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([0,height-margin.bottom]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\t\t.tickSize(0);\nvar BAR_HEIGHT = 17;\n  \nvar colScale = d3.scale.ordinal()\n    .range([    \"#ff8c00\",\"#f9bb00\",\"#ff6100\",\"#555f9f\",, \"#10599c\",\"#0099cc\",\"#216342\", \"#339966\",\"#009900\"]);\n  \n\n  /*\nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n  \n  */\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//svg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  //y.domain(data.map(function(d) { return d.grandparent; }));\n  //y.domain(data.map(function(d) { return d.parent; }));\n  y.domain(data.map(function(d) { return d.label; }));\n  x.domain([0, d3.max(data, function(d) { return d.value; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"x\", 9)\n      .attr(\"dx\", 60.2+\"em\")\n      .style(\"text-anchor\", \"end\")\n  \t\t.text(\"EPI score\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.label); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.parent); })\n  \t\t\t\t//.attr(\"y\", function(d) { return margin.top+y(d.grandparent); })\n  \t\t//.on('mouseover', tip.show)\n  \t\t//.on('mouseout', tip.hide)\n  \t\t//.on(\"click\", clicked) ??\n      .attr(\"height\", BAR_HEIGHT)//height/data.length )//y.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.value); })\n  \t.style(\"fill\", function(d) {return colScale(d.parent);} );\n  \n  \nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n  \n//d3.select(\"input\").on(\"change\", change);\nd3.select(\"#groupParents\").on(\"change\", groupParents);\nd3.select(\"#groupGrandparents\").on(\"change\", groupGrandparents);\n\n  \nvar sortTimeoutP = setTimeout(function() {\n    d3.select(\"#groupParents\").property(\"checked\", true).each(groupParents);\n }, 10000);\n  \n var sortTimeoutGP = setTimeout(function() {\n    d3.select(\"#groupGrandparents\").property(\"checked\", true).each(groupGrandparents);\n  }, 20000);\n  \n/*\nfunction clicked(d) {\n  var x, y, k;\n\n  if (d && centered !== d) {\n    var centroid = path.centroid(d);\n    x = centroid[0];\n    y = centroid[1];\n    k = 4;\n    centered = d;\n  } else {\n    x = width / 2;\n    y = height / 2;\n    k = 1;\n    centered = null;\n  }\n\n  g.selectAll(\"path\")\n      .classed(\"active\", centered && function(d) { return d === centered; });\n\n  g.transition()\n      .duration(750)\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")scale(\" + k + \")translate(\" + -x + \",\" + -y + \")\")\n      .style(\"stroke-width\", 1.5 / k + \"px\");\n}\n*/\n  \nfunction groupParents() {\n  var BAR_HEIGHT = 37;\n \n      //code to sort\n      clearTimeout(sortTimeoutP);\n  \n\t\t//var y0= y.domain(data.map(function(d) { return d.parent; })).copy();\n \n  \tvar y0 = y.domain(data.map(this.checked\n        ? function(d) { return d.parent;}\n        : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 17;\n\t\t\t\t\t\treturn d.label; }))\n        //.map(function(d) { return d.parent; })\n        .copy();\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return margin.top+y(d.parent); })\n    .attr(\"width\", function(d,i) { return x(parentvalues[i/2]); })\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"y\", function(d) { return y0(d.parent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n} \n\nfunction groupGrandparents() {\n  \n   var BAR_HEIGHT = 167;\n  \n  clearTimeout(sortTimeoutGP);\n  \n\t\tvar y0= y.domain(data.map(this.checked\n      ? function(d) { return d.grandparent; }\n      : function(d) {\n      //TODO desagregar\n      \t\t\tVAR_HEIGHT= 18;\n\t\t\t\t\t\treturn d.label; }))\n    .copy();\n //x.domain([0, d3.max(parentvalues)]);\n\n    svg.selectAll(\".bar\")\n  \t.attr(\"y\", function(d,i) { return  margin.top + i*BAR_HEIGHT})//y(grandparentlabels); }) //si pudiera anotarlos por mi solito margin.top, height/2\n    .style(\"fill\", function(d,i) {return [colScale[0],colScale[7]];} )\n    .attr(\"width\", function(d,i) { return x(grandparentvalues[i/2]);})\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        //.attr(\"y\", function(d) { return y0(d.grandparent)+margin.top; })\n    \t\t.attr(\"height\", BAR_HEIGHT)\n    \t\t//.attr(\"width\", function(d,i) { return x(grandparentvalues[i] );})\n\t\n\n    transition.select(\".y.axis\")\n        .call(yAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}\n  \n  \n</script>", "description": "Tarea 4 - EPI Visualization", "created_at": "2016-09-10T02:09:30Z", "updated_at": "2016-09-10T22:06:57Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n\n<h3>ISIS4822 - Visual Analytics\n<p>201224710  - Felipe Mat\u00e8\n<p>201224714  - David Ricardo Mayorga\n<p>Tarea 4. 3D EPI Data Visualization</h3>\n\n\n<h2>Expresividad</h2>\nLos datos que se muestran en la visualizaci\u00f3n original corresponden a los datos que se tienen, no se est\u00e1n creando ni inventando la informaci\u00f3n ni las escalas de medici\u00f3n. Ahora bien, los canales que decidieron usar no son los mejores para visualizar esta informaci\u00f3n. Hicieron uso de una dimensi\u00f3n adicional que, aunque llamativa, obstruye la mirada al momento de observar detenidamente los datos. Esto ocasiona que no sea posible determinar cu\u00e1l es un m\u00e1ximo en la visualizaci\u00f3n, o incluso qu\u00e9 tan lejos est\u00e1 un par\u00e1metro de su nivel m\u00e1ximo, adem\u00e1s de no poder identificar el valor de este si no fuera por la tabla de al lado. Este constante movimiento de alternar la vista entre la tabla y la gr\u00e1fica se vuelve por ende, molesto. La visualizaci\u00f3n de las diferentes \u00e1reas se vuelve confusa al final, sin poder entender bien que nos quiere decir la visualizaci\u00f3n. Adicionalmente los colores que manejan son f\u00e1cilmente confundibles con el color del fondo y pueden agotar al espectador.\n\n\n<h2>Efectividad</h2>\nPara la visualizaci\u00f3n usan uno de los canales peor ranqueados: vol\u00famenes. Hay que tener mucho cuidado al usar este canal, pues tiene muchas problem\u00e1ticas presentes en la visualizaci\u00f3n como la obstrucci\u00f3n, ocasionando que se sobrepongan datos encima de otros. Hacen uso de la forma y de los colores para diferenciar entre atributos que son dos canales buenos de usar para atributos categ\u00f3ricos, pero la forma, el \u00e1rea e incluso el \u00e1ngulo no es el mejor canal para atributos ordinales. En este caso usan la forma para indicar tambi\u00e9n la cantidad del atributo, lo cual lo vuelve un atributo ordinal. Los colores siempre son buenos de usar, pero en \u00e9ste caso el problema radica en la falta de intensidad, los cual los hace mezclables con el fondo blanco, cansando la mirada del espectador. Para la visualizaci\u00f3n del mapamundi, se recomienda usar m\u00e1s delimitaciones de figuras que la suma de muchos puntos. Aunque sirve de esta forma, puede ponerse en tela de juicio si un grupo de puntos sean en verdad el pa\u00eds seleccionado (lo que efectivamente sucede en este caso: Polonia est\u00e1 se\u00f1alada en vez de Alemania).\n\n<h2>Nuestra propuesta</h2>\nLa visualizaci\u00f3n propuesta trata de cerca el hecho que se tiene solo atributos cuantitativos en una misma escala. Por eso se ha decidido que la longitud es el mejor canal para representar la informaci\u00f3n. Algunos atributos se pueden agregar lo que permite tener una visi\u00f3n m\u00e1s global del pa\u00eds.\n\n<h3>Referencicias</h3>\nhttp://epi.yale.edu/sites/default/files/2014_epi_framework_indicator_scores_friendly_0.xls\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/092bb5b3f7478bbeeaf56f60ed9565cc'>Tarea 3 - Grades Visualization horizontal</a>", "uid": "damayor_368d648d9b931cbbd310cc6f7260c8b1"}, {"code": "<script>\n\nvar data = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];  \n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 55},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([height,0]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n  \nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  x.domain([0, d3.max(data, function(d) { return d.grade; })]);\n  y.domain(data.map(function(d) { return d.code; }));\n \n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", 6)\n      .attr(\"dx\", \"0.71em\")\n      .style(\"text-anchor\", \"end\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.code); })\n  \t\t.on('mouseover', tip.show)\n  \t\t.on('mouseout', tip.hide)\n      .attr(\"height\", 17)//x.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.grade); })\n  \n  \nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n \n\n</script>", "description": "Tarea 3 - Grades Visualization horizontal", "created_at": "2016-09-10T01:53:35Z", "updated_at": "2016-09-10T01:53:35Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categ\u00f3rico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar \u00e9stos datos es la longitud en una escala alineada. Por ello se decidi\u00f3 realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidi\u00f3 realizar horizontal para poder tener una mejor visualizaci\u00f3n sobre los c\u00f3digos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota espec\u00edfica de cada usuario (\"Detail on demand\") y ver\u00edficar de acuerdo al matiz(hue) si aprob\u00f3, reprob\u00f3 o pas\u00f3 raspando.</p>\n\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/3cd76524b53adcd478c1963fbf4f8264'>Tarea 3 - Grades Visualization horizontal</a>", "uid": "damayor_092bb5b3f7478bbeeaf56f60ed9565cc"}, {"code": "<script>\n\n    \n var margin = {top: 100, right: 100, bottom: 50, left: 100},\n    w = 900 - margin.left - margin.right,\n    h = 500 - margin.top - margin.bottom,\n    z = 20,\n    x = w / z,\n    y = h / z,\n    radius = 10,\n    pos = 100,\n    posX = 0,\n    posY = 0;\nvar xScale, yScale;\nvar legend =\"\";\nvar estudiantes;\nvar i=0;\n                           \nd3.json('alumnos.json', function (error, estudiantesData) {\n    if (error) {\n      console.error(error);\n      return;\n    }\n    estudiantes = estudiantesData.map(function (d) {\n      return {\n        grade: d.grade,\n        code: d.code,\n      }\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"height\", h + margin.top + margin.bottom)\n    .attr(\"width\", w + margin.left + margin.right)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nxScale =  d3.scale.ordinal().rangeRoundBands([0, w]);\nxScale.domain(estudiantes.map(function(d) { return d.code; }));\n\nyScale = d3.scale.linear()\n    .domain([0, d3.max(estudiantes, function(d){ return d.grade; })])\n    .range([h, 0]);\n    \nvar rectClip = svg.append('clipPath')\n    .attr('id', 'rect-clip')\n    .append('rect')\n      .attr('width', 0)\n      .attr('height', h);\n      \n//--------------- ANIMACIONES ---------------//\nrectClip.transition()\n    .duration(250*estudiantes.length)\n    .attr('width', w);\n\nestudiantes.forEach(function (nota, i) {\n    setTimeout(function () {\n      puntos(nota, svg, h, xScale, yScale);\n    }, 1000 + 500*i);\n  });\n \n//------------------------------------------//\n \nvar legendWidth  = 210, legendHeight = 95;\n \n \nlegend = svg.append('g')\n    .attr('class', 'legend')\n    .attr('transform', 'translate(' + (w/2 - legendHeight) + ','+ (-legendHeight) +')');\n\nlegend.append('rect')\n    .attr('class', 'legend-bg')\n    .attr('width',  legendWidth)\n    .attr('height', legendHeight);\n\nlegend.append('text')\n    .attr('x', 5)\n    .attr('y', 25)\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", \"10px\")\n    .attr(\"font-weight\", \"bold\")\n    .text('Presione el nodo para mayor informacin');\n\n  // clipping to make sure nothing appears behind legend\n  svg.append('clipPath')\n    .attr('id', 'axes-clip')\n    .append('polygon')\n      .attr('points', (-margin.left)                 + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + (h + margin.bottom) + ' ' +\n                      (-margin.left)                 + ',' + (h + margin.bottom));\n\n//---- PINTA LA LINEA CONTINUAS ----//\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .innerTickSize(-h)\n    .outerTickSize(0);\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .innerTickSize(-w)\n    .outerTickSize(0)\n    .tickPadding(10);\n    \nsvg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis)\n        .append('text')\n  \t\t.attr('dx', w)  \n                .attr('x', 5)\n                .attr('y', 5)\t\n  \t\t.style('font-weight','bold')\n                .style('','')\n\t\t.text('Cdigo');\n\nsvg.append(\"g\")\n     .attr(\"class\", \"y axis\")\n     .call(yAxis)\n        .append('text')\n            .attr('x',40)\n            .attr('y', -15)\n            .attr('dy', '.71em')\n            .style('text-anchor', 'end')\n            .style('font-weight','bold')\n            .text('Calificacin');\n            \n   \n});\n\nfunction puntos(nota, svg, h, xScale, yScale) {\n    var colorF = \"rgb(202, 110, 35)\",\n        colorS = \"rgb(202, 50, 125)\",\n        xPos = xScale(nota.code)-10,\n        yPosStart = h,\n        yPosEnd = yScale(nota.grade);\n      \n    if(nota.grade >= 5 ){\n        colorF = \"rgb(54, 226, 30)\";\n        colorS = \"rgb(29, 150, 44)\";\n    }else if(nota.grade < 5 && nota.grade >= 4){\n        colorF = \"rgb(221, 239, 52\";\n        colorS = \"rgb(132, 189, 20)\";\n    }else if(nota.grade < 4 && nota.grade >= 3){\n        colorF = \"rgb(249, 249, 144)\";\n        colorS = \"rgb(222, 194, 57)\";\n    }else if(nota.grade < 3 && nota.grade >= 2){\n        colorS = \"rgb(255, 126, 35)\";\n        colorF = \"rgb(255, 171, 90)\";\n    }else{\n        colorS = \"rgb(245, 103, 103)\";\n        colorF = \"rgb(245, 0, 0)\";\n    }\n\n    \n    var circles = svg.append('g')\n        .attr('class', 'notas')\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosStart + ')')\n        .attr('opacity', 0);\n\n      circles.transition()\n        .duration(200)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosEnd + ')')\n        .attr('opacity', 1);\n\n      circles.append('path')\n        .attr('d', 'M' + 24 + ',' + (h-yPosStart) + 'L' + 24 + ',' + (h-yPosStart))\n        .transition()\n          .duration(200)\n          .attr('d', 'M' + 24 + ',' + (h-yPosEnd) + 'L' + 24 + ',' + (radius));\n          \n      circles.append('circle')\n        .attr('class', 'marker-bg-'+i++)\n        .attr('data-grade', nota.grade)\n        .attr('data-code', nota.code)\n        .attr('cx', 24)\n        .attr('cy', 0)\n        .attr('r', radius)\n        .attr('transform', 'translate(' + 0 + ', ' + 0 + ')')\n        .style(\"cursor\", \"pointer\")\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .on(\"click\", imprimir);\n        \n \n}\n\nfunction translate(d) {\n    return \"translate(\"+posX+\",\"+ posY+\")\";\n}\n\nfunction imprimir(d) {\n    \n    var a = this.parentNode.appendChild(this);\n    \n    posX = d3.transform(d3.select(this).attr(\"transform\")).translate[0];\n    posY = d3.transform(d3.select(this).attr(\"transform\")).translate[1]; \n           \n    code_aux = d3.select(this).attr(\"data-code\");\n    grade_aux = d3.select(this).attr(\"data-grade\");\n    \n    d3.select(this)\n        .transition()\n          .duration(750)\n          .attr(\"r\", radius*2);\n      \n    d3.select(this)\n         .transition()\n          .delay(1000)\n          .attr(\"r\", radius);\n   \n   d3.select(\"#update\").remove();\n   d3.select(\"#update\").remove();\n   \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 55)\n        .text(\"Cdigo: 2800\"+code_aux);\n    \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 75)\n        .text(\"Calificacin: \"+grade_aux);\n   \n}\n\n</script>", "description": "visualizaci\u00f3n_notas", "created_at": "2016-09-10T00:20:41Z", "updated_at": "2016-09-10T23:54:56Z", "api": ["d3.json", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.transform"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/ragut/'>ragut</a>'s block: <a href='http://bl.ocks.org/ragut/e0d1df91524517d90eb824bcfc1e4afc'>visualizaci\u00f3n_notas</a>\n\nforked from <a href='http://bl.ocks.org/ragut/'>ragut</a>'s block: <a href='http://bl.ocks.org/ragut/1e8806a880fda6ff5793239b766f9374'>visualizaci\u00f3n_notas</a>\n\nforked from <a href='http://bl.ocks.org/ragut/'>ragut</a>'s block: <a href='http://bl.ocks.org/ragut/02b2faa2802a4f5d7f5c5576b2b89fcd'>visualizaci\u00f3n_notas</a>", "uid": "ragut_cc5ac044337113aedfa270eb3e7e811a"}, {"code": "<script>\n    //Mrgenes\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \n    // Definig selector\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\t\tvar dropDown = d3.select(\"#filter\").append(\"select\")\n                    .attr(\"name\", \"country-list\");\n    \n    //axis\n    var x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\t\t\n    var y = d3.scale.linear()\n    .range([height, 0]);\n\t\t\n    var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\t\t\n    var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n      \n    var svg = d3.select(\"#chart\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.l + margin.r)\n\t\t.attr(\"height\", height + margin.t + margin.b);\n    \n\n\t\t//multiple loads\n    queue()\n    .defer(d3.csv,\"datos.csv\")\n    .defer(d3.csv,\"Switzerland.csv\")\n    .await(loadData)\n  //load file\n    function loadData (error,data,pais){\n  //d3.csv(\"datos.csv\", type, function(error, data) {\n  if (error) throw error;\n    \n \n  \t//load countries in the selector\n\t\tvar options = dropDown.selectAll(\"option\")\n         .data(data)\n         .enter()\n           .append(\"option\");\n\t\toptions.text(function (d) {  return d.Rank+\". \" + d.Country; })\n       .attr(\"value\", function (d) { return d.Country; })\n       .attr(\"id\", function (d) { return d.Rank; });\n      \n   \t//Add axis x \n   \tsvg.append(\"g\")\n      \t.attr(\"class\", \"x axis\")\n      \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n      \t.call(xAxis)\n    \t.append(\"text\")\n    \t\t.attr(\"x\",width)\n    \t\t.text(\"Features\");\n    \n    //Add axis y\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Score\");\n    \n    //load the graph\n    svg.selectAll(\".bar\")\n      .data(pais)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.feature); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n //});\n    }\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n  </script>", "description": "Tarea 4: Indicadores-2", "created_at": "2016-09-09T23:12:28Z", "updated_at": "2016-09-10T14:25:54Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.csv"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/LauraCortes/'>LauraCortes</a>'s block: <a href='http://bl.ocks.org/LauraCortes/dacb4b52782fca365dcea5d9310610d0'>Tarea 4: Indicadores</a>\n\nforked from <a href='http://bl.ocks.org/LauraCortes/'>LauraCortes</a>'s block: <a href='http://bl.ocks.org/LauraCortes/df8e68d8bf899bf4af425ff2e665aaae'>Tarea 4: Indicadores</a>", "uid": "aiMojica10_5e50953f06f120deb19a39441bf1f81a"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width])\n          .padding(0.1);\nvar y = d3.scaleLinear()\n          .range([height, 0]);\n          \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// get the data\nd3.csv(\"sales.csv\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n    d.sales = +d.sales\n    d.salesperson = d[\"salesperson hej\"];\n  });\n\n  // Scale the range of the data in the domains\n  x.domain(data.map(function(d) { return d.salesperson; }));\n  y.domain([0, d3.max(data, function(d) { return d.sales; })]);\n\n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.salesperson); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.sales); })\n      .attr(\"height\", function(d) { return height - y(d.sales); });\n\n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n});\n\n</script>", "description": "Simple bar graph in v4", "created_at": "2016-09-09T22:56:04Z", "updated_at": "2016-09-09T23:40:19Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.csv", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This is a simple bar graph  written using d3.js v4. \n\nThis graph is part of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.\n\nforked from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/bdf28027e0ce70bd132edc64f1dd7ea4'>Simple bar graph in v4</a>", "uid": "elt12njo_dd2391dc0796b79d7291aff529e50fb0"}, {"code": "<script>\n\nvar margin = { top: 20, right: 20, bottom: 30, left: 40 },\n\t\twidth = 960 - margin.left - margin.right,\n\t\theight = 500 - margin.top - margin.bottom;\n\nvar x = d3.scaleBand()\n\t.rangeRound([0, width])\n\t.padding(0.1);\n\nvar y = d3.scaleLinear()\n\t.rangeRound([height, 0]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n\t.attr(\"height\", height + margin.top + margin.bottom);\n\nvar g = svg.append(\"g\")\n\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar devicePixelRatio = window.devicePixelRatio || 1;\n\nvar canvas = d3.select(\"body\").append(\"canvas\")\n  .attr(\"width\", (width + margin.left + margin.right) * devicePixelRatio)\n  .attr(\"height\", (height + margin.top + margin.bottom) * devicePixelRatio)\n  .style(\"width\", width + \"px\")\n  .style(\"height\", height + \"px\")\n  .style(\"margin-top\", margin.top + \"px\")\n  .style(\"margin-left\", margin.left + \"px\");\n\nvar context = canvas.node().getContext(\"2d\");\ncontext.scale(devicePixelRatio, devicePixelRatio);\n\nd3.tsv(\"data.tsv\", processRow, function(error, data) {\n\tif (error) throw error;\n\n\t// Update scales\n\tx.domain(data.map(function(d) { return d.letter; }));\n\ty.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n\t// Draw axes\n\tg.append(\"g\")\n\t\t.attr(\"class\", \"axis axis--x\")\n\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t.call(d3.axisBottom(x))\n\t\t.select(\"path\")\n\t\t.style(\"stroke\", \"none\");\n\t\n\tg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis axis--y\")\n\t\t\t.call(d3.axisLeft(y).tickFormat(d3.format(\".0%\")))\n\t\t.append(\"text\")\n\t\t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t.attr(\"dx\", \"-1em\")\n\t\t\t.attr(\"dy\", \"1.66em\")\n\t\t\t.style(\"fill\", \"#000\")\n\t\t\t.text(\"Frequency\");\n\t\n\t// Draw bars\n\tg.append(\"g\")\n\t\t\t.attr(\"class\", \"bars\")\n\t\t.selectAll(\".bar\").data(data)\n\t\t.enter().append(\"rect\")\n\t\t\t.attr(\"class\", \"bar\")\n\t\t\t.attr(\"x\", function(d) { return x(d.letter); })\n\t\t\t.attr(\"y\", function(d) { return y(d.frequency); })\n\t\t\t.attr(\"width\", x.bandwidth())\n\t\t\t.attr(\"height\", function(d) { return height - y(d.frequency); })\n\t\t\t.style(\"fill\", \"steelblue\");\n\n\t// Convert SVG to Canvas\n\t// see: https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Drawing_DOM_objects_into_a_canvas\n\tvar DOMURL = window.URL || window.webkitURL || window;\n\n\tvar svgString = domNodeToString(svg.node());\n\t\n\tvar image = new Image();\n\tvar svgBlob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\n\tvar url = DOMURL.createObjectURL(svgBlob);\n\n\timage.onload = function() {\n\t\tcontext.drawImage(image, 0, 0);\n\t\tDOMURL.revokeObjectURL(url);\n\t}\n\n\timage.src = url;\n});\n\nfunction processRow(d) {\n\td.frequency = +d.frequency;\n\treturn d;\n}\n\n// Get the string representation of a DOM node (removes the node)\nfunction domNodeToString(domNode) {\n\tvar element = document.createElement(\"div\");\n\telement.appendChild(domNode);\n\treturn element.innerHTML;\n}\n\n</script>", "description": "Convert SVG to Retina Canvas", "created_at": "2016-09-09T22:49:06Z", "updated_at": "2016-09-11T11:23:57Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.tsv", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.format"], "readme": "Convert SVG to canvas on-the-fly. Updated to support higher pixel densities, like Retina displays. Compare to [Andrew Mollica's example](http://bl.ocks.org/armollica/99f18720eb9762351febd64236bb1b9e) which looks slightly fuzzy on high-density displays.\n\nThis article from MDN explains the process:\n[Drawing DOM object into a canvas](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Drawing_DOM_objects_into_a_canvas).\nThis works for any DOM object, not just SVG. Not sure if this is well supported\nby older browsers. Works on Chrome, Firefox and IE 10 for me.\nThe bar chart is a fork of this block by Mike Bostock: \n[Canvas Bar Chart](http://bl.ocks.org/mbostock/946ddf8a32b3b660ffd8).\n", "uid": "syntagmatic_1dd1acd35f77c1fc64863e42f4a405bb"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar EPI_Score =\t80.47;\nvar Ten_Year_Percent_Change = 1.89;\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"opacity\", function(d){\n    \tif(d.value > 0 && d.value <= 40){\n      \treturn 0.3;\n      }else if(d.value > 40 && d.value <= 80){\n        return 0.5;\n      }else if(d.value > 80 && d.value <= 90){\n        return 0.7;\n      }else if(d.value > 90 && d.value <= 100){\n        return 0.9;\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index; \n            }\n    });\n   \n});\n</script>", "description": "Tarea 4 Germany copy", "created_at": "2016-09-09T22:11:23Z", "updated_at": "2016-09-09T22:17:24Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n<b>What, why, and how analysis</b>\n\n<b>What?</b>\n\n<li>Dataset Type: Table (A bar chart)</li>\n<li>Data Types: Items & Attributes</li>\n<ol> <li>Measuring indexes (Categorical type)</li>\n<li> Values of index  (Ordered, quantitative, sequential)</li></ol>\n\n<b>Why?</b>\n\n<li> Actions:</li>\n<ol> <i>Analyze</i> <ol><li> Consume &#8594; Present</li></ol></ol>\n<ol> <i>Search</i> <ol><li> Lookup &#8594; Target & Location known</li></ol></ol>\n<ol> <i>Query</i> <ol><li> Identify</li></ol></ol>\n<li> Targets:</li>\n<ol> <i>All data</i> <ol><li> Outliers</li></ol></ol>\n<ol> <i>Attributes</i> <ol><li> Distribution</li></ol></ol>\n\n<b>How?</b>\n\n<li> Encode</li>\n<ol>  <i>Arrange </i> <ol><li> Express & Align</li></ol></ol>\n<ol>  <i>Map </i> <ol><li> Color &#8594;Saturation</li><li> Size</li></ol></ol>\n<li> Manipulate </li>\n<ol> <i>Select </i> </ol>\n\n<br><b>Tasks</b>\n<p>Present the measurement indexes from the dataset obtained from the EPI.</p>\n<p>Lookup for interesting data knowing the target and location of the information.</p>\n<p>Identify outliers in the data.</p>\n<p>Identify the distribution that forms the data.</p>\n\n\n<br><b>Decisions made:</b>\n<p>The main task of the proposed visualization was to compare the different indexes of the country, and view the difference between them. For that reason, we choose the bar chart, because it helps the user to understand and compare effectively the values of the indicators. We made an ordering functionality to show a more accurately comparison, but the user also has the option for viewing the data as it is. In the case when the data is not ordered, we decide to put a new channel that enforce the concept of comparison, that\u2019s why we set the opacity of the bars according to the value of the data.</p>\n\n<p>The channels used in the visualization were the length of the bars and the color (saturation/opacity), and the bars were the marks. Talking about the chart characteristics, we put the value of the index in the Y axis, as is a continuous variable. And in the X axis it's set the measurement indexes of the country, a categorical, unordered variable.</p>\n\n<p>The diagram interaction is seen in the moment the user passes the mouse over the bars (hover). In this interaction the user can \"ask\" the visualization and the visualization will tell him the exact value of that index. In addition, the user can interact with the visualization making click over the checkbox to sort or not the visualization. For maintaining the best accuracy with the data, the tooltip was implemented as the names of the measurement indexes were kind of large and the user really can't tell what is the exact value of the bars just with a simple glance. Also the names of the indexes were rotated for better visualization.</p>\n\n<br><b>Effectiveness & Expressiveness</b>\n\nOur visualization has a good expressiveness because we are the information of the dataset correctly and not showing another data that doesn\u2019t correspond to the data we have. In addition, we have the ordered data in a way that represents correctly the dataset and matches the channels and the data characteristics. \n\nThe effectiveness is achieved correctly because we are using the highest ranked channels, as the length and the saturation or opacity to encode the attributes of the dataset. We user the bars length as it is the best ranked channel, and after that we set the opacity of the bars because the saturation is one of the best ranked channels also.\n\n\nforked from <a href='http://bl.ocks.org/carlosfelipetorres/'>carlosfelipetorres</a>'s block: <a href='http://bl.ocks.org/carlosfelipetorres/9eea8d99357e9f7e02208dd63a68358c'>Tarea 4 Germany</a>", "uid": "carlosfelipetorres_2d6cb01ddd672176836356517433cb88"}, {"code": "<script>\n    //Mrgenes\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \n    // Definir selector\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 500)\n\t\tvar dropDown = d3.select(\"#filter\").append(\"select\")\n                    .attr(\"name\", \"country-list\");\n    \n    //Ejes\n    var x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\t\tvar y = d3.scale.linear()\n    .range([height, 0]);\n\t\tvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\t\tvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n      \n    var svg = d3.select(\"#chart\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.l + margin.r)\n\t\t.attr(\"height\", height + margin.t + margin.b);\n    \n  //Cargar archivo\n  d3.csv(\"datos.csv\", type, function(error, data) {\n  if (error) throw error;\n  \n    \tdata.sort(function(a, b) { return \t\td3.ascending(a.Country, b.Country); })\n    \n  \t//Cargar pases en el selector\n\t\tvar options = dropDown.selectAll(\"option\")\n         .data(data)\n         .enter()\n           .append(\"option\");\n\t\toptions.text(function (d) { return d.Country; })\n       .attr(\"value\", function (d) { return d.Country; })\n       .attr(\"id\", function (d) { return d.Rank; });\n    \n    x.domain();\n\t\ty.domain([0, 100]);\n    \n   \t//Agrega el eje x \n   \tsvg.append(\"g\")\n      \t.attr(\"class\", \"x axis\")\n      \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n      \t.call(xAxis);\n    \n    //Agrega el eje y\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Score\");\n    \n    //Carga la grfica\n    \n });\n\nfunction type(d) {\n  d.EPI_Score = +d.EPI_Score;\n  return d;\n}\n  </script>", "description": "Tarea 4: Indicadores", "created_at": "2016-09-09T20:04:10Z", "updated_at": "2016-09-10T02:30:25Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.csv", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/LauraCortes/'>LauraCortes</a>'s block: <a href='http://bl.ocks.org/LauraCortes/dacb4b52782fca365dcea5d9310610d0'>Tarea 4: Indicadores</a>", "uid": "LauraCortes_df8e68d8bf899bf4af425ff2e665aaae"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar rateById = d3.map();\n\nvar quantize = d3.scaleQuantize()\n    .domain([0, 0.15])\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geoAlbersUsa()\n    .scale(1280)\n    .translate([width / 2, height / 2]);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nd3.queue()\n    .defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantize(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n}\n\n</script>", "description": "Choropleth", "created_at": "2016-09-09T17:55:04Z", "updated_at": "2016-09-09T17:55:04Z", "api": ["d3.select", "d3.map", "d3.scaleQuantize", "d3.range", "d3.geoAlbersUsa", "d3.geoPath", "d3.queue"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.", "uid": "tarekrached_30700ff04941b39d3d57d38a7e91cd5b"}, {"code": "<script>\n// Select the canvas from the document.\nvar canvas = document.querySelector(\"canvas\");\n\nvar width = +canvas.getAttribute('width') || 600,\n    height = +canvas.getAttribute('height') || 400;\nwidth = Math.max(width, self.innerWidth);\nheight = Math.max(height, self.innerHeight);\ncanvas.setAttribute('width', width);\ncanvas.setAttribute('height', height);\n\n// save the legend\nvar legend = d3.select('#legend').html();\n\n// Create the WebGL context, with fallback for experimental support.\nvar context = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n\n// Compile the vertex shader.\nvar vertexShader = context.createShader(context.VERTEX_SHADER);\ncontext.shaderSource(vertexShader, document.querySelector(\"#vertex-shader\").textContent);\ncontext.compileShader(vertexShader);\nif (!context.getShaderParameter(vertexShader, context.COMPILE_STATUS)) throw new Error(context.getShaderInfoLog(vertexShader));\n\n// Compile the fragment shader.\nvar fragmentShader = context.createShader(context.FRAGMENT_SHADER);\ncontext.shaderSource(fragmentShader, document.querySelector(\"#fragment-shader\").textContent);\ncontext.compileShader(fragmentShader);\nif (!context.getShaderParameter(fragmentShader, context.COMPILE_STATUS)) throw new Error(context.getShaderInfoLog(fragmentShader));\n\n// Link and use the program.\nvar program = context.createProgram();\ncontext.attachShader(program, vertexShader);\ncontext.attachShader(program, fragmentShader);\ncontext.linkProgram(program);\nif (!context.getProgramParameter(program, context.LINK_STATUS)) throw new Error(context.getProgramInfoLog(program));\ncontext.useProgram(program);\n\n// Define the positions (as vec2) of the square that covers the canvas.\nvar positionBuffer = context.createBuffer();\ncontext.bindBuffer(context.ARRAY_BUFFER, positionBuffer);\ncontext.bufferData(context.ARRAY_BUFFER, new Float32Array([\n    -1.0, -1.0,\n    +1.0, -1.0,\n    +1.0, +1.0,\n    -1.0, +1.0\n  ]), context.STATIC_DRAW);\n\n// Bind the position buffer to the position attribute.\nvar positionAttribute = context.getAttribLocation(program, \"a_position\");\ncontext.enableVertexAttribArray(positionAttribute);\ncontext.vertexAttribPointer(positionAttribute, 2, context.FLOAT, false, 0, 0);\n\n// Extract the projection parameters.\nvar translateUniform = context.getUniformLocation(program, \"u_translate\"),\n    scaleUniform = context.getUniformLocation(program, \"u_scale\"),\n    rotateUniform = context.getUniformLocation(program, \"u_rotate\");\n\n// Load the reference image.\nvar image = new Image;\nimage.src = \"Mars_Viking_MDIM21_ClrMosaic_global_1024.jpg\";\nimage.onload = readySoon;\n\nvar projection = d3.geoOrthographic()\n    .translate([width / 2, height / 2])\n    .scale(0.95 * height / 2);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\n\nvar svg = d3.select('svg')\n    .attr('width', width)\n    .attr('height', height);\n\nsvg._defs = svg.append(\"defs\");\nsvg._clip = svg._defs.append(\"path\")\n    .datum({\n        type: \"Sphere\"\n    })\n    .attr(\"id\", \"sphere\");\n\nsvg._defs.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\");\n\nsvg._earth = svg.append('g')\n    .attr(\"clip-path\", \"url(#clip)\")\n    .style('cursor', '-webkit-grab');\n\nsvg._polygons = svg._earth.append('g').attr('class', 'polygons');\nsvg._links = svg._earth.append('g').attr('class', 'links');\nsvg._missions = svg._earth.append('g').attr('class', 'missions');\n\nsvg._shade = svg.append(\"use\")\n    .attr(\"class\", \"stroke\")\n    .attr(\"xlink:href\", \"#sphere\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"stroke-width\", 3)\n    .attr(\"fill\", \"url(#grad1)\")\n    .attr('pointer-events', 'none');\n\n\n\n// Hack to ensure correct inference of window dimensions.\nfunction readySoon() {\n    // https://raw.githubusercontent.com/rhodges/hodgimoto/master/app/layers/mars_landings.geojson\n    d3.json('mars_landings.geojson', function (err, missions) {\n\n        var v = svg._voronoi = d3.geoVoronoi()(missions),\n            polygons = v.polygons(),\n            urquhart = v.links().features.filter(function(l) {\n                return l.properties.urquhart;\n            });\n\n\n        svg._missions = svg._missions\n            .selectAll('path')\n            .data(missions.features);\n        var enter = svg._missions.enter().append('path');\n        svg._missions = svg._missions.merge(enter);\n\n        svg._polygons = svg._polygons\n            .selectAll('path')\n            .data(polygons.features);\n        var enter = svg._polygons.enter().append('path');\n        svg._polygons = svg._polygons.merge(enter);\n\n        svg._links = svg._links\n            .selectAll('path')\n            .data(urquhart);\n        var enter = svg._links.enter().append('path');\n        svg._links = svg._links.merge(enter);\n\n        setTimeout(function () {\n            resize();\n            ready();\n        }, 10);\n    });\n}\n\nfunction resize() {\n    canvas.setAttribute(\"width\", width);\n    canvas.setAttribute(\"height\", height);\n    context.uniform2f(translateUniform, width / 2, height / 2);\n    context.viewport(0, 0, width, height);\n}\n\nfunction ready() {\n\n    // Create a texture and a mipmap for accurate minification.\n    var texture = context.createTexture();\n    context.bindTexture(context.TEXTURE_2D, texture);\n    context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.LINEAR);\n    context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.LINEAR_MIPMAP_LINEAR);\n    context.texImage2D(context.TEXTURE_2D, 0, context.RGBA, context.RGBA, context.UNSIGNED_BYTE, image);\n    context.generateMipmap(context.TEXTURE_2D);\n\n    // The current rotation\n    var scale = scale0 = projection.scale(),\n        rotate = [0, 0, 0];\n\n    // Rotate and redraw!\n    function redraw() {\n        projection.scale(scale).rotate(rotate);\n        svg._missions.attr('d', path);\n        svg._polygons.attr('d', path);\n        svg._links.attr('d', path);\n        svg._clip.attr('d', path);\n\n        context.uniform1f(scaleUniform, scale);\n        context.uniform3fv(rotateUniform, rotate);\n        context.bindTexture(context.TEXTURE_2D, texture); // XXX Safari\n        context.drawArrays(context.TRIANGLE_FAN, 0, 4);\n\n    }\n\n    svg\n    .on('mousemove', function () {\n            var p = d3.mouse(this),\n                c = projection.invert(p),\n                found;\n\n            // if we're on the Earth\n            if (c[0] !== 90 &&\n            (found = svg._voronoi.find(c[0], c[1], 0.8 /* radian */ ))) {\n\n                var center = d3.geoCentroid(svg._missions.data()[found.index]);\n\n                var circle = d3.geoCircle().center(center),\n                    r = d3.geoLength({\n                        type: \"LineString\",\n                        coordinates: [c, center]\n                    }) * 180 / Math.PI;\n\n                r = Math.max(1.1 * r, 5);\n\n                svg._earth.append('path')\n                    .attr('class', 'glow')\n                    .transition()\n                    .attrTween('d', function () {\n                        return function (t) {\n                            return path(circle.radius(2 + r * d3.easePolyIn(t, 4))()) || ''; // empty path when the signal comes from the hidden side of the planet\n                        };\n                    })\n                    .remove();\n\n                var p = svg._missions.data()[found.index].properties;\n                d3.select('#legend h1').text(p.NAME);\n                d3.select('#legend p').html(\n                    '<a href=\"' + p.WEB_LINK + '\">' + p.FULL_NAME + '</a>' + \n                    '<br>' +\n                    p.COUNTRY + ', ' + p.YEAR + '.'\n                    /* +\n                                   '<br>' +\n                                 p.X_COORD + \"&times\" + p.Y_COORD */\n                );\n                path.pointRadius(function (d, j) {\n                    return j == found.index ? 8 : 4.5 /* 4.5 = default value */ ;\n                });\n                redraw();\n            } else {\n                d3.select('#legend').html(legend);\n            }\n        });\n\n\n    var lambda = d3.scaleLinear()\n        .domain([-width / 2, width / 2])\n        .range([-180, 180]);\n\n    var phi = d3.scaleLinear()\n        .domain([0, height])\n        .range([90, -90]);\n\n    var q, r, transform, d;\n\n    zoom = d3.zoom()\n        .scaleExtent([.8, 1.5])\n        .on(\"start\", function () {\n            q = rotate, d = [0, 0, 0]; // accumulate change in d\n            r = d3.mouse(this);\n            svg._earth.style('cursor', '-webkit-grabbing');\n        })\n        .on(\"zoom.redraw\", function () {\n            scale = scale0 * d3.event.transform.k;\n            var p = d3.mouse(this);\n            var dr = [lambda(p[0]) - lambda(r[0]), phi(p[1]) - phi(r[1])];\n            r = p;\n\n            // inverse dr[0] if the mouse is beyond one of the poles\n            var a = (phi(p[1]) - rotate[1]) * Math.PI / 180,\n                ca = Math.cos(a),\n                sa = Math.sin(a);\n\n            d = [d[0] + dr[0] * (ca < 0 ? -1 : 1),\n                        d[1] + dr[1], d[2] + dr[0] * -sa];\n\n            rotate = [q[0] + d[0], q[1] + d[1], q[2] + 0 * d[2]];\n\n            redraw();\n        })\n        .on('end', function() {\n            svg._earth.style('cursor', '-webkit-grab');\n        });\n\n    d3.select(\"svg\")\n        .call(zoom);\n\n    redraw();\n\n    var elapsed = null;\n\n    function animate(t) {\n        elapsed = t;\n        //d3.select(\"canvas\").transition().call(zoom.transform, d3.zoomIdentity);\n        requestAnimationFrame(animate);\n    }\n    //animate();\n\n}\n\n// A polyfill for requestAnimationFrame.\nif (!self.requestAnimationFrame) requestAnimationFrame =\n    self.webkitRequestAnimationFrame || self.mozRequestAnimationFrame || self.msRequestAnimationFrame || self.oRequestAnimationFrame || function (f) {\n        setTimeout(f, 17);\n    };\n</script>", "description": "Missions to Mars Urquhart Graph", "created_at": "2016-09-09T06:57:40Z", "updated_at": "2016-09-12T14:52:08Z", "api": ["d3.geoCentroid", "d3.geoLength", "d3.select", "d3.geoOrthographic", "d3.geoPath", "d3.json", "d3.geoVoronoi", "d3.mouse", "d3.geoCircle", "d3.easePolyIn", "d3.scaleLinear", "d3.zoom"], "readme": "This block demonstrates <a href=\"https://github.com/Fil/d3-geo-voronoi\">d3-geo-voronoi</a>\u2019s <a href=\"https://en.wikipedia.org/wiki/Urquhart_graph\">Urquhart Graph</a> feature, in red.\n\nThe `geoVoronoi.find(x,y)` method is used to select the mission that will \u2018radiate\u2019 towards the cursor. (Tiny green lines show the underlying Voronoi tesselation.)\n\n \n\nDataset from <a href=\"https://github.com/rhodges/hodgimoto/blob/master/app/layers/mars_landings.geojson\">Ryan Hodges</a>; image: <a href=\"http://astrogeology.usgs.gov/search/details/Mars/Viking/MDIM21/Mars_Viking_MDIM21_ClrMosaic_global_232m/cub\">USGS</a>.\n\nUses @mbostock's [Milky Way](http://bl.ocks.org/mbostock/5446416) block for the WebGL reprojection shader, <a href=\"http://bl.ocks.org/Fil/358e889380bfc9d8e4871cc9dc338cf9\">adapted for the orthographic projection</a>. License GPL-3.\n\n \n\nTo do:\n\n-- terminator lighting\n\n\n", "uid": "Fil_1c2f954201523af16280db018ddd90cc"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {margin:60, top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n    \nvar EPI_Score =\t80.47;\nvar Ten_Year_Percent_Change = 1.89;\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \nvar tooltip = d3.select(\"body\")\n        .append(\"label\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n    \n\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.value = +d.value;\n  });\n\n\n  x.domain(data.map(function(d) { return d.index; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"x\", 70)\n      .attr(\"dy\", \"-0.2296em\")\n      .attr(\"transform\", \"rotate(-90)\")\n  \t\t.style(\"font-weight\",\"bold\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.index); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); })\n    .style(\"opacity\", function(d){\n    \tif(d.value > 0 && d.value <= 40){\n      \treturn 0.3;\n      }else if(d.value > 40 && d.value <= 80){\n        return 0.5;\n      }else if(d.value > 80 && d.value <= 90){\n        return 0.7;\n      }else if(d.value > 90 && d.value <= 100){\n        return 0.9;\n      }\n  });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.value - a.value; }\n        : function(a, b) { return d3.ascending(a.index, b.index); })\n        .map(function(d) { return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      \t.selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  $('rect').tipsy({ \n      gravity: 'w', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value +\" \"+d.index; \n            }\n    });\n   \n});\n</script>", "description": "Tarea 4 Germany", "created_at": "2016-09-09T04:38:24Z", "updated_at": "2016-09-09T22:18:21Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n<b>What, why, and how analysis</b>\n\n<b>What?</b>\n\n<li>Dataset Type: Table (A bar chart)</li>\n<li>Data Types: Items & Attributes</li>\n<ol> <li>Measuring indexes (Categorical type)</li>\n<li> Values of index  (Ordered, quantitative, sequential)</li></ol>\n\n<b>Why?</b>\n\n<li> Actions:</li>\n<ol> <i>Analyze</i> <ol><li> Consume &#8594; Present</li></ol></ol>\n<ol> <i>Search</i> <ol><li> Lookup &#8594; Target & Location known</li></ol></ol>\n<ol> <i>Query</i> <ol><li> Identify</li></ol></ol>\n<li> Targets:</li>\n<ol> <i>All data</i> <ol><li> Outliers</li></ol></ol>\n<ol> <i>Attributes</i> <ol><li> Distribution</li></ol></ol>\n\n<b>How?</b>\n\n<li> Encode</li>\n<ol>  <i>Arrange </i> <ol><li> Express & Align</li></ol></ol>\n<ol>  <i>Map </i> <ol><li> Color &#8594;Saturation</li><li> Size</li></ol></ol>\n<li> Manipulate </li>\n<ol> <i>Select </i> </ol>\n\n<br><b>Tasks</b>\n<p>Present the measurement indexes from the dataset obtained from the EPI.</p>\n<p>Lookup for interesting data knowing the target and location of the information.</p>\n<p>Identify outliers in the data.</p>\n<p>Identify the distribution that forms the data.</p>\n\n\n<br><b>Decisions made:</b>\n<p>The main task of the proposed visualization was to compare the different indexes of the country, and view the difference between them. For that reason, we choose the bar chart, because it helps the user to understand and compare effectively the values of the indicators. We made an ordering functionality to show a more accurately comparison, but the user also has the option for viewing the data as it is. In the case when the data is not ordered, we decide to put a new channel that enforce the concept of comparison, that\u2019s why we set the opacity of the bars according to the value of the data.</p>\n\n<p>The channels used in the visualization were the length of the bars and the color (saturation/opacity), and the bars were the marks. Talking about the chart characteristics, we put the value of the index in the Y axis, as is a continuous variable. And in the X axis it's set the measurement indexes of the country, a categorical, unordered variable.</p>\n\n<p>The diagram interaction is seen in the moment the user passes the mouse over the bars (hover). In this interaction the user can \"ask\" the visualization and the visualization will tell him the exact value of that index. In addition, the user can interact with the visualization making click over the checkbox to sort or not the visualization. For maintaining the best accuracy with the data, the tooltip was implemented as the names of the measurement indexes were kind of large and the user really can't tell what is the exact value of the bars just with a simple glance. Also the names of the indexes were rotated for better visualization.</p>\n\n<br><b>Effectiveness & Expressiveness</b>\n\nOur visualization has a good expressiveness because we are the information of the dataset correctly and not showing another data that doesn\u2019t correspond to the data we have. In addition, we have the ordered data in a way that represents correctly the dataset and matches the channels and the data characteristics. \n\nThe effectiveness is achieved correctly because we are using the highest ranked channels, as the length and the saturation or opacity to encode the attributes of the dataset. We user the bars length as it is the best ranked channel, and after that we set the opacity of the bars because the saturation is one of the best ranked channels also.\n", "uid": "carlosfelipetorres_9eea8d99357e9f7e02208dd63a68358c"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale();\n\nvar yAxis = d3.axisLeft(y)\n    .scale()\n    .tickFormat(formatPercent);\n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\").append(\"div\").append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n   d3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.frequency = +d.frequency;\n  });\n\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n     \n     $('rect').tipsy({ \n      gravity: 's', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.frequency; \n            }\n    });\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.frequency - a.frequency; }\n        : function(a, b) { return d3.ascending(a.letter, b.letter); })\n        .map(function(d) { return d.letter; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.letter) - x0(b.letter); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.letter); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n  }\n   \n});\n</script>", "description": "fresh block", "created_at": "2016-09-09T04:26:06Z", "updated_at": "2016-09-09T04:38:08Z", "api": ["d3.format", "d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/nychi713/'>nychi713</a>'s block: <a href='http://bl.ocks.org/nychi713/521b41546408a6ecdf05970d6a217606'>fresh block</a>", "uid": "carlosfelipetorres_1fd0b1a3784de17f52a5db8211eb6898"}, {"code": "<script>\n    \n    // load the external data\n     // set the dimensions and margins of the graph\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n          width = 1260 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom;\n\n    // set the ranges\n    var x = d3.scaleBand()\n              .range([0, width])\n              .padding(0.1);\n    var y = d3.scaleLinear()\n              .range([height, 0]);\n   \n    \n    var tooltip = d3.select(\"body\")\n        .append(\"div\").append(\"div\").append(\"div\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var color = d3.scaleOrdinal(d3.schemeCategory20c);\n    \n    x.domain(data.map(function(d) { return d.index; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n   \n    svg.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return x(d.index); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"height\", function(d) { return height - y(d.value); })\n    \t\t.style(\"fill\", function(d){ return color(d.value); });\n\n    \t\t\n    // add the x Axis\n    svg.append(\"g\")\n    \t\t.attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // add the y Axis\n    svg.append(\"g\")\n    \t\t.attr(\"class\", \"y axis\")\n        .call(d3.axisLeft(y));\n    \n    $('rect').tipsy({ \n      gravity: 's', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value; \n            }\n    });\n    \n    d3.select(\"input\").on(\"change\", sortArray);\n\n    var sortTimeout = setTimeout(function() {\n      d3.select(\"input\").property(\"checked\", true).each(sortArray);\n    }, 2000);\n    \nfunction sortArray (){\n   clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data = data.sort(function (a, b) {\n        if (a.value < b.value) return -1;\n        if (a.value > b.value) return 1;\n        \treturn 0;})\n        .map(function(d) {console.log(d.value); return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(x)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}\n  </script>", "description": "Tarea4", "created_at": "2016-09-09T04:16:34Z", "updated_at": "2016-09-09T04:17:18Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.scaleOrdinal", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n<h1>Tarea 4</h1>\n\n\n<b>What, why, and how analysis</b>\n\n<b>What?</b>\n\n<li>Dataset Type: Table (A bar chart)</li>\n<li>Data Types: Items & Attributes</li>\n<ol> <li>Codes of students (Categorical type)</li>\n<li> Grades (Ordered, quantitative, sequential)</li></ol>\n\n<b>Why?</b>\n\n<li> Actions:</li>\n<ol> <i>Analyze</i> <ol><li> Consume &#8594; Present</li></ol></ol>\n<ol> <i>Search</i> <ol><li> Lookup &#8594; Target & Location known</li></ol></ol>\n<ol> <i>Query</i> <ol><li> Compare</li></ol></ol>\n<li> Targets:</li>\n<ol> <i>All data</i> <ol><li> Trends</li></ol></ol>\n<ol> <i>Attributes</i> <ol><li> Distribution</li></ol></ol>\n\n<b>How?</b>\n\n<li> Encode</li>\n<ol>  <i>Arrange </i> <ol><li> Express & Align</li></ol></ol>\n<ol>  <i>Map </i> <ol><li> Size</li></ol></ol>\n<li> Manipulate </li>\n<ol> <i>Select </i> </ol>\n\n<b>Decisions made:</b>\n\n\nforked from <a href='http://bl.ocks.org/carlosfelipetorres/'>carlosfelipetorres</a>'s block: <a href='http://bl.ocks.org/carlosfelipetorres/820ebca0ba0b9ed3177be2dcf5c844bf'>Tarea4</a>", "uid": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n\n\nvar x = d3.scaleBand()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\n\nvar xAxis = d3.axisBottom(x)\n    .scale(x)\n.tickSize(0)\n    .tickPadding(6);\n\nvar yAxis = d3.axisLeft(y)\n    .scale(y);\n\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n   d3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.frequency = +d.frequency;\n  });\n\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"transform\", \"rotate(90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr('width', x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n\n  d3.select(\"input\").on(\"change\", change);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 2000);\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.frequency - a.frequency; }\n        : function(a, b) { return d3.ascending(a.letter, b.letter); })\n        .map(function(d) { return d.letter; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.letter) - x0(b.letter); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.letter); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      .selectAll(\"g\")\n        .delay(delay);\n  }\n   \n});\n</script>", "description": "Homework 4 d3v4", "created_at": "2016-09-09T03:23:55Z", "updated_at": "2016-09-09T04:54:23Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "nychi713_521b41546408a6ecdf05970d6a217606"}, {"code": "<script>\n    var data;\n    // load the external data\n    d3.json(\"datajson.json\", function(error, datajson) {\n      data = datajson;\n    });\n     // set the dimensions and margins of the graph\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n          width = 1260 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom;\n\n    // set the ranges\n    var x = d3.scaleBand()\n              .range([0, width])\n              .padding(0.1);\n    var y = d3.scaleLinear()\n              .range([height, 0]);\n   \n    \n    var tooltip = d3.select(\"body\")\n        .append(\"div\").append(\"div\").append(\"div\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var color = d3.scaleOrdinal(d3.schemeCategory20c);\n    \n    x.domain(data.map(function(d) { return d.index; }));\n    y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n   \n    svg.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return x(d.index); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", function(d) { return y(d.value); })\n        .attr(\"height\", function(d) { return height - y(d.value); })\n    \t\t.style(\"fill\", function(d){ return color(d.value); });\n\n    \t\t\n    // add the x Axis\n    svg.append(\"g\")\n    \t\t.attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // add the y Axis\n    svg.append(\"g\")\n    \t\t.attr(\"class\", \"y axis\")\n        .call(d3.axisLeft(y));\n    \n    $('rect').tipsy({ \n      gravity: 's', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.value; \n            }\n    });\n    \n    d3.select(\"input\").on(\"change\", sortArray);\n\n    var sortTimeout = setTimeout(function() {\n      d3.select(\"input\").property(\"checked\", true).each(sortArray);\n    }, 2000);\n    \nfunction sortArray (){\n   clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data = data.sort(function (a, b) {\n        if (a.value < b.value) return -1;\n        if (a.value > b.value) return 1;\n        \treturn 0;})\n        .map(function(d) {console.log(d.value); return d.index; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.index) - x0(b.index); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.index); });\n\n    transition.select(\".x.axis\")\n        .call(x)\n      \t.selectAll(\"g\")\n        .delay(delay);\n}\n  </script>", "description": "Tarea4", "created_at": "2016-09-09T00:29:35Z", "updated_at": "2016-09-09T04:05:36Z", "api": ["d3.json", "d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.scaleOrdinal", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n<h1>Tarea 4</h1>\n\n\n<b>What, why, and how analysis</b>\n\n<b>What?</b>\n\n<li>Dataset Type: Table (A bar chart)</li>\n<li>Data Types: Items & Attributes</li>\n<ol> <li>Codes of students (Categorical type)</li>\n<li> Grades (Ordered, quantitative, sequential)</li></ol>\n\n<b>Why?</b>\n\n<li> Actions:</li>\n<ol> <i>Analyze</i> <ol><li> Consume &#8594; Present</li></ol></ol>\n<ol> <i>Search</i> <ol><li> Lookup &#8594; Target & Location known</li></ol></ol>\n<ol> <i>Query</i> <ol><li> Compare</li></ol></ol>\n<li> Targets:</li>\n<ol> <i>All data</i> <ol><li> Trends</li></ol></ol>\n<ol> <i>Attributes</i> <ol><li> Distribution</li></ol></ol>\n\n<b>How?</b>\n\n<li> Encode</li>\n<ol>  <i>Arrange </i> <ol><li> Express & Align</li></ol></ol>\n<ol>  <i>Map </i> <ol><li> Size</li></ol></ol>\n<li> Manipulate </li>\n<ol> <i>Select </i> </ol>\n\n<b>Decisions made:</b>\n", "uid": "carlosfelipetorres_820ebca0ba0b9ed3177be2dcf5c844bf"}, {"code": "<script>\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n\n    var x = d3.scaleBand()\n    \t\t\t.range([0, width], .1);\n\n    var y = d3.scaleLinear()\n        .range([height, 0]);\n\n    var xAxis = d3.axisBottom(x);\n\n    var yAxis = d3.axisLeft(y)\n        .ticks(10, \"%\");\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    d3.tsv(\"data.tsv\", type, function(error, data) {\n      if (error) throw error;\n\n      x.domain(data.map(function(d) { return d.letter; }))\n      \t.paddingInner(0.1)\n      \t.paddingOuter(0.5);\n      y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n      svg.append(\"g\")\n          .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis);\n\n      svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .call(yAxis)\n        .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", 6)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(\"Frequency\");\n\n      svg.selectAll(\".bar\")\n          .data(data)\n        .enter().append(\"rect\")\n          .attr(\"class\", \"bar\")\n          .attr(\"x\", function(d) { return x(d.letter); })\n          .attr(\"width\", x.bandwidth())\n          .attr(\"y\", function(d) { return y(d.frequency); })\n          .attr(\"height\", function(d) { return height - y(d.frequency); });\n    });\n\n    function type(d) {\n      d.frequency = +d.frequency;\n      return d;\n    }\n\n  </script>", "description": "Let's Make a Bar Chart (v4)", "created_at": "2016-09-08T20:35:43Z", "updated_at": "2016-09-08T20:39:19Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.axisBottom", "d3.axisLeft", "d3.select", "d3.tsv", "d3.max"], "readme": "", "uid": "rcrocker13_78368af248f42eae9f7cdf8bc530328b"}, {"code": "<script>\n    // Select the canvas from the document.\n    var canvas = document.querySelector(\"canvas\");\n\n    // Create the WebGL context, with fallback for experimental support.\n    var context = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n\n    // Compile the vertex shader.\n    var vertexShader = context.createShader(context.VERTEX_SHADER);\n    context.shaderSource(vertexShader, document.querySelector(\"#vertex-shader\").textContent);\n    context.compileShader(vertexShader);\n    if (!context.getShaderParameter(vertexShader, context.COMPILE_STATUS)) throw new Error(context.getShaderInfoLog(vertexShader));\n\n    // Compile the fragment shader.\n    var fragmentShader = context.createShader(context.FRAGMENT_SHADER);\n    context.shaderSource(fragmentShader, document.querySelector(\"#fragment-shader\").textContent);\n    context.compileShader(fragmentShader);\n    if (!context.getShaderParameter(fragmentShader, context.COMPILE_STATUS)) throw new Error(context.getShaderInfoLog(fragmentShader));\n\n    // Link and use the program.\n    var program = context.createProgram();\n    context.attachShader(program, vertexShader);\n    context.attachShader(program, fragmentShader);\n    context.linkProgram(program);\n    if (!context.getProgramParameter(program, context.LINK_STATUS)) throw new Error(context.getProgramInfoLog(program));\n    context.useProgram(program);\n\n    // Define the positions (as vec2) of the square that covers the canvas.\n    var positionBuffer = context.createBuffer();\n    context.bindBuffer(context.ARRAY_BUFFER, positionBuffer);\n    context.bufferData(context.ARRAY_BUFFER, new Float32Array([\n    -1.0, -1.0,\n    +1.0, -1.0,\n    +1.0, +1.0,\n    -1.0, +1.0\n  ]), context.STATIC_DRAW);\n\n    // Bind the position buffer to the position attribute.\n    var positionAttribute = context.getAttribLocation(program, \"a_position\");\n    context.enableVertexAttribArray(positionAttribute);\n    context.vertexAttribPointer(positionAttribute, 2, context.FLOAT, false, 0, 0);\n\n    // Extract the projection parameters.\n    var translateUniform = context.getUniformLocation(program, \"u_translate\"),\n        scaleUniform = context.getUniformLocation(program, \"u_scale\"),\n        rotateUniform = context.getUniformLocation(program, \"u_rotate\");\n\n    // Load the reference image.\n    var image = new Image;\n    image.src = \"Mars_Viking_MDIM21_ClrMosaic_global_1024.jpg\";\n    image.onload = readySoon;\n    self.onresize = resize;\n    var width = 960,\n        height = 500;\n\n\n    // Hack to ensure correct inference of window dimensions.\n    function readySoon() {\n        setTimeout(function () {\n            resize();\n            ready();\n        }, 10);\n    }\n\n    function resize() {\n        width = Math.max(width, self.innerWidth);\n        height = Math.max(height, self.innerHeight);\n        canvas.setAttribute(\"width\", width);\n        canvas.setAttribute(\"height\", height);\n        context.uniform2f(translateUniform, width / 2, height / 2);\n        context.viewport(0, 0, width, height);\n    }\n\n    function ready() {\n\n        // Create a texture and a mipmap for accurate minification.\n        var texture = context.createTexture();\n        context.bindTexture(context.TEXTURE_2D, texture);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.LINEAR);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.LINEAR_MIPMAP_LINEAR);\n        context.texImage2D(context.TEXTURE_2D, 0, context.RGBA, context.RGBA, context.UNSIGNED_BYTE, image);\n        context.generateMipmap(context.TEXTURE_2D);\n\n        // The current rotation and speed.\n        var scale = 280,\n            translate = [0,0],\n            speed = [-0.001, 0];\n\n        // Rotate and redraw!\n        function redraw() {\n\n            context.uniform1f(scaleUniform, scale);\n            context.uniform2fv(rotateUniform, [ -5 * translate[0] / scale, 3 * translate[1] / scale ]);\n            context.bindTexture(context.TEXTURE_2D, texture); // XXX Safari\n            context.drawArrays(context.TRIANGLE_FAN, 0, 4);\n\n        }\n\n        interact = 1;\n\n        zoom = d3.behavior.zoom()\n                .scale(scale)\n                .center([0,0])\n                .scaleExtent([ scale * .5, scale * 2 ])\n                .on(\"zoom.redraw\", function () {\n\n                    scale = d3.event.scale;\n                    var translate0 = translate;\n                    translate = d3.event.translate;\n\n                    var dx = translate[0] - translate0[0],\n                        dy = translate[1] - translate0[1];\n\n                    redraw();\n\n                    if (d3.event.sourceEvent) {\n                        interact = 1;\n\n                    if (Math.abs(dx) > Math.max(0.005, Math.abs(dy)))\n                        speed = [ -0.01 * dx / Math.abs(dx), 0];\n                    else if (Math.abs(dy) >  Math.max(0.005, Math.abs(dx)))\n                        speed = [0, -0.01 * dy / Math.abs(dy)];\n                    else\n                        speed = [0, 0];\n\n                    }\n                })\n\n        d3.select(\"canvas\")\n            .call(zoom);\n\n        redraw();\n\n        var elapsed = null;\n        function animate(t) {\n            interact -= 0.1;\n            \n            if (interact < 0) {\n                translate[0] += speed[0] * (elapsed - t);\n                translate[1] += speed[1] * (elapsed - t);\n                d3.select(\"canvas\")\n                   .call(zoom.translate(translate).event);\n                redraw();\n            }\n\n            elapsed = t;\n            requestAnimationFrame(animate);\n        }\n\n        animate();\n\n    }\n\n    // A polyfill for requestAnimationFrame.\n    if (!self.requestAnimationFrame) requestAnimationFrame =\n        self.webkitRequestAnimationFrame || self.mozRequestAnimationFrame || self.msRequestAnimationFrame || self.oRequestAnimationFrame || function (f) {\n            setTimeout(f, 17);\n        };\n</script>", "description": "Mars on a WebGL globe", "created_at": "2016-09-08T18:38:04Z", "updated_at": "2016-09-10T21:07:10Z", "api": ["d3.behavior.zoom", "d3.select"], "readme": "This in Mars in WebGL.\n\nProblems solved:\n\n-- invert geoOrthographic (instead of geoStereographic).\n\n-- what to do for pixels outside the globe\n\n-- white artifacts on the boundary of the jpg image (they were on the original image!)\n\n\n\n\nForked from @mbostock's [Milky Way](http://bl.ocks.org/mbostock/5446416) block. License GPL-3.\n\nImage from NASA: http://astropedia.astrogeology.usgs.gov/download/Mars/Viking/MDIM21/thumbs/Mars_Viking_MDIM21_ClrMosaic_global_1024.jpg\n", "uid": "Fil_358e889380bfc9d8e4871cc9dc338cf9"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nsvg = svg\n    .append('g');\n\n\nvar projection = d3.geoOrthographic().scale(214),\n    path = d3.geoPath().projection(projection).pointRadius(1);\n\n\nvar g = svg.append('g')\n    .attr('class', 'world')\n    .append('g')\n    .attr(\"class\", \"s\");\n\nvar defs = g.append(\"defs\");\n\ndefs.append(\"path\")\n    .datum({\n        type: \"Sphere\"\n    })\n    .attr(\"id\", \"sphere\")\n    .attr(\"d\", path);\n\ng.append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\")\n    .attr(\"fill\", \"#fcfcff\");\n\ndefs.append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"use\")\n    .attr(\"xlink:href\", \"#sphere\");\n\ng.attr(\"clip-path\", \"url(#clip)\")\n\ng.append('g')\n    .attr('class', 'countries');\n\ng.append(\"g\")\n    .attr(\"class\", \"polygons\")\n\nvar site = g.append(\"g\")\n    .attr(\"class\", \"site\")\n    .selectAll('path')\n    .data([null]);\nvar enter = site\n    .enter() \n    .append('path');\nsite = site.merge(enter);\n\nvar legend = svg\n    .append('text')\n    .attr('transform', 'translate(' + [width / 2, 30] + ')')\n    .attr('class', 'legend')\n    .attr('text-anchor', 'middle')\n    .attr('font-size', '20px')\n    .attr('font-family', 'Helvetica');\n\nvar drag = 0;\n\nd3.queue()\n    .defer(d3.json, 'countries.geojson')\n    .await(function (err, world) {\n        var visit = 0;\n        var countries = d3.select('.countries')\n            .selectAll('path')\n            .data(world.features);\n\n        var enter = countries.enter()\n            .append('path');\n        countries = countries.merge(enter);\n        countries\n            .attr('d', path)\n\n        var subregions = d3.set(world.features.map(function (d) {\n            return d.properties.subregion;\n        })).values();\n\n        go(countries, subregions[visit]);\n\n        d3.interval(visitnext, 1200)\n\n        function visitnext() {\n            if (drag) return;\n            visit = (visit + 1) % subregions.length;\n            go(countries, subregions[visit]);\n        }\n    });\n\nfunction go(countries, subregion) {\n\n    legend.text('The convex hull of ' + (subregion == 'Caribbean' || subregion == 'Seven seas (open ocean)' ? 'the ' : '') + subregion)\n\n    var sites = [],\n        centroids = [];\n\n    countries.data()\n        .filter(function (d) {\n            return d.properties.subregion == subregion;\n        })\n        .map(function (d) {\n            // remove French Guyane for the computation of bounds\n            var e = JSON.parse(JSON.stringify(d));\n            if (e.properties.iso_a3 == 'FRA') {\n                e.geometry.coordinates = d.geometry.coordinates.slice(2);\n            }\n            return e;\n        })\n        .map(function (d) {\n            var convex = d3.geoVoronoi()\n                .hull(d3.geoBounds(d))\n                .coordinates[0];\n            sites.push(convex[0]);\n            sites.push(convex[1]);\n            sites.push([convex[0][0], convex[1][1]]);\n            sites.push([convex[1][0], convex[0][1]]);\n            centroids.push(d3.geoCentroid(d));\n        });\n\n\n\n    var hull = d3.geoVoronoi().hull(sites);\n\n    // special case, sorry!\n    if (subregion == \"Antarctica\") {\n        hull = d3.geoCircle().center([0, -90]).radius(29)();\n    }\n\n    var rotation = d3.geoCentroid({\n            type: 'MultiPoint',\n            coordinates: sites\n        })\n        .map(function (x) {\n            return -x;\n        });\n\n    projection.rotate(rotation);\n\n    countries.attr(\"d\", path);\n\n    d3.select('.polygons path').remove();\n    var poly = d3.select('.polygons')\n        .append(\"path\")\n        .datum(hull)\n        .attr('d', path);\n\n    site.datum({\n            type: \"MultiPoint\",\n            coordinates: sites\n        });\n\n\n\n\n    function draw() {\n        poly.attr('d', path);\n        countries.attr(\"d\", path);\n        site.attr('d', path)\n    }\n\n    draw();\n\n\n    // drag and zoom\n    svg.select('.world')\n        .call(d3.drag()\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended)\n        )\n        .call(d3.zoom()\n            .scaleExtent([1, 8])\n            .on(\"zoom\", zoomed)\n            .on(\"start\", function () {\n                drag++;\n            })\n            .on(\"end\", function () {\n                setTimeout(function () {\n                    drag--;\n                }, 1500);\n            })\n        );\n\n    function zoomed() {\n        svg.select('.world').attr(\"transform\", d3.event.transform);\n    }\n\n    function dragstarted() {\n        drag++;\n        q = projection.rotate();\n        r = d3.mouse(this);\n    }\n\n    function dragended() {\n        setTimeout(function () {\n            drag--;\n        }, 2000);\n    }\n\n    var lambda = d3.scaleLinear()\n        .domain([0, width])\n        .range([-180, 180]);\n\n    var phi = d3.scaleLinear()\n        .domain([0, height])\n        .range([90, -90]);\n\n    function dragged() {\n        var p = d3.mouse(this);\n        projection.rotate([lambda(p[0]) - lambda(r[0]) + q[0], phi(p[1]) - phi(r[1]) + q[1]]);\n        draw();\n    }\n\n}\n</script>", "description": "geoVoronoi.hull()", "created_at": "2016-09-08T13:45:28Z", "updated_at": "2016-09-11T04:17:50Z", "api": ["d3.geoLength", "d3.select", "d3.geoOrthographic", "d3.geoPath", "d3.queue", "d3.set", "d3.interval", "d3.geoVoronoi", "d3.geoBounds", "d3.geoCentroid", "d3.geoCircle", "d3.drag", "d3.zoom", "d3.mouse", "d3.scaleLinear"], "readme": "Use [`geoVoronoi.hull`](https://github.com/Fil/d3-geo-voronoi/#geo_voronoi_hull) to compute the convex hull of a set of points in spherical coordinates.\n\nCountries are grouped by their (World Bank) subregion, and we extract the bounding box for each of them. Then we highlight the convex hull of the set of all corners of the bounding boxes.\n\n(With a special treatment for Antarctica and French Guyane.)\n\nWatch, drag, and zoom.", "uid": "Fil_6a1ed09f6e5648a5451cb130f2b13d20"}, {"code": "<script>\n\n\tvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n\t\twidth = 1000 - margin.left - margin.right,\n\t\theight = 400 - margin.top - margin.bottom;\n\n\tvar x0 = d3.scale.ordinal()\n\t\t.rangeRoundBands([0, width - 150], .1);\n\n\tvar x1 = d3.scale.ordinal();\n\n\tvar y = d3.scale.linear()\n\t\t.range([height, 0]);\n\n\tvar color = d3.scale.ordinal()\n\t\t.range([\"#F79620\", \"#F5C918\", \"#FF6600\", \"#707FBE\", \"#3669B3\", \"#009ACC\", \"#008C8C\", \"#3EBCA2\",\"#2DB45F\"]);\n\t  \n\tvar xAxis = d3.svg.axis()\n\t\t.scale(x0)\n\t\t.orient(\"bottom\");\n\n\tvar yAxis = d3.svg.axis()\n\t\t.scale(y)\n\t\t.orient(\"left\")\n\t\t.tickFormat(d3.format(\".2s\"));\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\td3.csv(\"data.csv\", function(error, data) {\n\t\tif (error) throw error;\n    \n\n\t\tvar epiNames = d3.keys(data[0]).filter(function(key) { \t\t     return key !== \"Country\"; });\n\n\t\tdata.forEach(function(d) {\n\t\td.epi = epiNames.map(function(name) { return {name: name, value: +d[name]}; });\n\t\t});\n\n\t\tx0.domain(data.map(function(d) { return d.Country; }));\n\t\tx1.domain(epiNames).rangeRoundBands([0, x0.rangeBand()]);\n\t\ty.domain([0, d3.max(data, function(d) { return d3.max(d.epi, function(d) { return d.value; }); })]);\n\n\t\tsvg.append(\"g\")\n\t\t  .attr(\"class\", \"x axis\")\n\t\t  .attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t  .call(xAxis);\n    \n\t\tsvg.append(\"g\")\n\t\t  .attr(\"class\", \"y axis\")\n\t\t  .call(yAxis)\n\t\t.append(\"text\")\n\t\t  .attr(\"transform\", \"rotate(-90)\")\n\t\t  .attr(\"y\", 5)\n\t\t  .attr(\"dy\", \".71em\")\n\t\t  .style(\"text-anchor\", \"end\")\n\t\t  .text(\"Environmental Performance Index\");\n\n\t\tvar country = svg.selectAll(\".country\")\n\t\t  .data(data)\n\t\t.enter().append(\"g\")\n\t\t  .attr(\"class\", \"country\")\n\t\t  .attr(\"transform\", function(d) { return \"translate(\" + x0(d.Country) + \",0)\"; });\n\n\t\tcountry.selectAll(\"rect\")\n\t\t  .data(function(d) { return d.epi; })\n\t\t.enter().append(\"rect\").attr(\"width\", x1.rangeBand())\n\t\t  .attr(\"x\", function(d) { return x1(d.name); })\n\t\t  .attr(\"y\", function(d) { return y(d.value); })\n\t\t  .attr(\"height\", function(d) { return height - y(d.value); })\n    .on(\"mouseover\", function(d, i) {\n                div.style(\"left\", d3.event.pageX+10+\"px\");\n                div.style(\"top\", d3.event.pageY-25+\"px\");\n                div.style(\"display\", \"inline-block\");\n                div.html((d.Country)+\"<br> \"+(d.CurrentContry*100)+\"%\");\n  \t\t\t})\n\t\t  .style(\"fill\", function(d) { return color(d.name); });\n\n\t\tvar legend = svg.selectAll(\".legend\")\n\t\t  .data(epiNames.slice())\n\t\t  .enter().append(\"g\")\n\t\t  .attr(\"class\", \"legend\")\n\t\t  .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n\t\tlegend.append(\"rect\")\n\t\t  .attr(\"x\", width - 18)\n\t\t  .attr(\"width\", 18)\n\t\t  .attr(\"height\", 18)\n\t\t  .style(\"fill\", color);\n\n\t\tlegend.append(\"text\")\n\t\t  .attr(\"x\", width - 24)\n\t\t  .attr(\"y\", 9)\n\t\t  .attr(\"dy\", \".35em\")\n\t\t  .style(\"text-anchor\", \"end\")\n\t\t  .text(function(d) { return d; });\n\t});\n\n</script>", "description": "Grouped Bar Chart", "created_at": "2016-09-08T04:23:07Z", "updated_at": "2016-09-10T21:39:04Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.format", "d3.select", "d3.csv", "d3.keys", "d3.max"], "readme": "This grouped bar chart is constructed from a CSV file storing the populations of different states by age group. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.csv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding and color encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting#wiki-d3_format) - SI prefix formatting (e.g., \u201c10M\u201d for 10,000,000)\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.keys](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_keys) - compute column names\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\n<b><u>About</u></b>\n\nThis bar chart is constructed from a TSV file storing the exam grades of students in an imaginary Visual Analytics class. The next section presents the visualization analysis based on Tamara's Analytics framework.\n\n<b><u>What, Why and How Analysis</u></b>\n\n<b>What:</b> The dataset is formed by a table, with an ordinal attribute (the student code) and a quantitative attribute (the exam's grades).\n\n<b>Why:</b> The following are the two main tasks this viz is made for:\n\n1. Present (action) the distribution (target) of exam grades among the whole class.\n2. Discover (action) special features (target) as the number of students who failed the exam.\n3. Identify the exam grade for a specific student.\n\n<b>How:</b> I used the line as the mark and the length as the channel. The visualization presents the data sorted by the exam grades, in descending order.\n\n<b><u>Decisions</u></b>\n<p>\n1. I used the line mark and the channel length to represent the quantitative attribute exam notes, since the length is the best positioned channel in perception assessments of experts.\n</p>\n<p>\n2. The data is sorted by the score on the exam, which let identify the highest and the lowest score, and know how many people lost the test. You may find outliers too, like the 5.2 value (I assume the exam grades range goes from 0.0 to 5.0).\n</p>\n<p>\n3. The color channel was not used to represent the ordinal attribute of the students, because the number of students (23) need many hues or scales luminescence, which does not really contribute in the representation. The student code label on each data was used instead, which let identify the score obtained for each student.\n<p>\n<b><u>What was not so well?</b></u>\n<p>\n<li>The student code label is not visible to a very small bar (eg 0.11).\n</li>\n<li>The channel color may be useful to mark in red scores under 3.0, to identify first glance students failed the exam.\n</li>\n</p>\n\n<div>......................................................................................</div>\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887051'>Grouped Bar Chart</a>", "uid": "emilioalvarado_b314651b76f2e0d7f63ae7b32ccfcb2d"}, {"code": "<script>\n\nvar margin = {top: 12, right: 12, bottom: 12, left: 12},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar randomX = d3.randomBates(2),\n    randomY = d3.randomBates(2),\n    points = d3.range(2000).map(function() { return [width * randomX(), height * randomY()]; });\n\nvar hexbin = d3.hexbin()\n    .extent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]])\n    .radius(10);\n\nvar bins = hexbin(points);\n\nvar color = d3.scaleSequential(d3.interpolatePlasma)\n    .domain([0, 10]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"hexagons\")\n  .selectAll(\"path\")\n    .data(bins)\n  .enter().append(\"path\")\n    .attr(\"d\", hexbin.hexagon())\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .style(\"fill\", function(d) { return color(d.length); });\n\n\n/* Messing with bl.ocks.org styles */\nif(window.parent && window.parent.document) {\n  window.parent.document.body.style.backgroundColor = \"#111\"\n  window.parent.document.body.style.color = \"#fff\"\n  d3.selectAll(window.parent.document.getElementsByTagName(\"a\")).style(\"color\", \"rgb(244, 136, 73)\");\n}\n</script>", "description": "Hexbins", "created_at": "2016-09-07T21:47:41Z", "updated_at": "2016-09-10T04:29:04Z", "api": ["d3.randomBates", "d3.range", "d3.hexbin", "d3.scaleSequential", "d3.select", "d3.selectAll"], "readme": "A demonstration of the [d3-hexbin](https://github.com/d3/d3-hexbin) plugin for D3 4.0.\n", "uid": "syntagmatic_748b02519c942c5291f302e060315ad6"}, {"code": "<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks (1);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grades:</strong> <span style='color:white'>\" + d.grade + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"Grades.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "grades", "created_at": "2016-09-07T20:17:36Z", "updated_at": "2016-09-07T20:40:01Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nWhat? Is a data table with two attributes one qualitative and another quantitative.\n\nWhy? To present the results of the exam. \n\nHow? Aligning the grades, and separating with color when the user picks a code.\n\nI used a bar chart that allows to see the grade of each student when the user pick the bar corresponding to a code The decision to use the bar chart taken due to the length is the most powerful and clearest of the marks, choose color to highlight and differentiate a bar from the others.\n\nAll the code start with the same 4 numbers \"2380\" that\u2019s the reason why is only shown the last 4 numbers which differs each student.\n\n", "uid": "gpenam92_4481113e132b6c87a3375d7cc4ed1fdb"}, {"code": "<script>\n\n  var data = [],\n      svg,\n      defs,\n      gBrush,\n      brush,\n      main_xScale,\n      mini_xScale,\n      main_yScale,\n      mini_yScale,\n      main_yZoom,\n      main_xAxis,\n      main_yAxis,\n      mini_width,\n      textScale;\n\n  init();\n\n  function init() {\n\n    //Create the random data\n    for (var i = 0; i < 40; i++) {\n      var my_object = {};\n      my_object.key = i;\n      my_object.country = makeWord();\n      my_object.value = Math.floor(Math.random() * 600);\n      data.push(my_object);\n    }//for i \n    data.sort(function(a,b) { return b.value - a.value; });\n\n    /////////////////////////////////////////////////////////////\n    ///////////////// Set-up SVG and wrappers ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Added only for the mouse wheel\n    var zoomer = d3.behavior.zoom()\n        .on(\"zoom\", null);\n\n    var main_margin = {top: 10, right: 10, bottom: 30, left: 100},\n        main_width = 500 - main_margin.left - main_margin.right,\n        main_height = 400 - main_margin.top - main_margin.bottom;\n\n    var mini_margin = {top: 10, right: 10, bottom: 30, left: 10},\n        mini_height = 400 - mini_margin.top - mini_margin.bottom;\n    mini_width = 100 - mini_margin.left - mini_margin.right;\n\n    svg = d3.select(\"#chart\").append(\"svg\")\n        .attr(\"class\", \"svgWrapper\")\n        .attr(\"width\", main_width + main_margin.left + main_margin.right + mini_width + mini_margin.left + mini_margin.right)\n        .attr(\"height\", main_height + main_margin.top + main_margin.bottom)\n        .call(zoomer)\n        .on(\"wheel.zoom\", scroll)\n        //.on(\"mousewheel.zoom\", scroll)\n        //.on(\"DOMMouseScroll.zoom\", scroll)\n        //.on(\"MozMousePixelScroll.zoom\", scroll)\n        //Is this needed?\n        .on(\"mousedown.zoom\", null)\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    var mainGroup = svg.append(\"g\")\n            .attr(\"class\",\"mainGroupWrapper\")\n            .attr(\"transform\",\"translate(\" + main_margin.left + \",\" + main_margin.top + \")\")\n            .append(\"g\") //another one for the clip path - due to not wanting to clip the labels\n            .attr(\"clip-path\", \"url(#clip)\")\n            .style(\"clip-path\", \"url(#clip)\")\n            .attr(\"class\",\"mainGroup\");\n\n    var miniGroup = svg.append(\"g\")\n            .attr(\"class\",\"miniGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    var brushGroup = svg.append(\"g\")\n            .attr(\"class\",\"brushGroup\")\n            .attr(\"transform\",\"translate(\" + (main_margin.left + main_width + main_margin.right + mini_margin.left) + \",\" + mini_margin.top + \")\");\n\n    /////////////////////////////////////////////////////////////\n    ////////////////////// Initiate scales //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    main_xScale = d3.scale.linear().range([0, main_width]);\n    mini_xScale = d3.scale.linear().range([0, mini_width]);\n\n    main_yScale = d3.scale.ordinal().rangeBands([0, main_height], 0.4, 0);\n    mini_yScale = d3.scale.ordinal().rangeBands([0, mini_height], 0.4, 0);\n\n    //Based on the idea from: http://stackoverflow.com/questions/21485339/d3-brushing-on-grouped-bar-chart\n    main_yZoom = d3.scale.linear()\n        .range([0, main_height])\n        .domain([0, main_height]);\n\n    //Create x axis object\n    main_xAxis = d3.svg.axis()\n      .scale(main_xScale)\n      .orient(\"bottom\")\n      .ticks(4)\n      //.tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the x axis\n    d3.select(\".mainGroupWrapper\")\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(\" + 0 + \",\" + (main_height + 5) + \")\");\n\n    //Create y axis object\n    main_yAxis = d3.svg.axis()\n      .scale(main_yScale)\n      .orient(\"left\")\n      .tickSize(0)\n      .outerTickSize(0);\n\n    //Add group for the y axis\n    mainGroup.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(-5,0)\");\n \n    /////////////////////////////////////////////////////////////\n    /////////////////////// Update scales ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Update the scales\n    main_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    mini_xScale.domain([0, d3.max(data, function(d) { return d.value; })]);\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    mini_yScale.domain(data.map(function(d) { return d.country; }));\n    \n    //Create the visual part of the y axis\n    d3.select(\".mainGroup\").select(\".y.axis\").call(main_yAxis);\n\n    /////////////////////////////////////////////////////////////\n    ///////////////////// Label axis scales /////////////////////\n    /////////////////////////////////////////////////////////////\n\n    textScale = d3.scale.linear()\n      .domain([15,50])\n      .range([12,6])\n      .clamp(true);\n    \n    /////////////////////////////////////////////////////////////\n    ///////////////////////// Create brush //////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //What should the first extent of the brush become - a bit arbitrary this\n    var brushExtent = Math.max( 1, Math.min( 20, Math.round(data.length*0.2) ) );\n\n    brush = d3.svg.brush()\n        .y(mini_yScale)\n        .extent([mini_yScale(data[0].country), mini_yScale(data[brushExtent].country)])\n        .on(\"brush\", brushmove)\n        //.on(\"brushend\", brushend);\n\n    //Set up the visual part of the brush\n    gBrush = d3.select(\".brushGroup\").append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush);\n    \n    gBrush.selectAll(\".resize\")\n      .append(\"line\")\n      .attr(\"x2\", mini_width);\n\n    gBrush.selectAll(\".resize\")\n      .append(\"path\")\n      .attr(\"d\", d3.svg.symbol().type(\"triangle-up\").size(20))\n      .attr(\"transform\", function(d,i) { \n        return i ? \"translate(\" + (mini_width/2) + \",\" + 4 + \") rotate(180)\" : \"translate(\" + (mini_width/2) + \",\" + -4 + \") rotate(0)\"; \n      });\n\n    gBrush.selectAll(\"rect\")\n      .attr(\"width\", mini_width);\n\n    //On a click recenter the brush window\n    gBrush.select(\".background\")\n      .on(\"mousedown.brush\", brushcenter)\n      .on(\"touchstart.brush\", brushcenter);\n\n    ///////////////////////////////////////////////////////////////////////////\n    /////////////////// Create a rainbow gradient - for fun ///////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    defs = svg.append(\"defs\")\n\n    //Create two separate gradients for the main and mini bar - just because it looks fun\n    createGradient(\"gradient-rainbow-main\", \"60%\");\n    createGradient(\"gradient-rainbow-mini\", \"13%\");\n\n    //Add the clip path for the main bar chart\n    defs.append(\"clipPath\")\n      .attr(\"id\", \"clip\")\n      .append(\"rect\")\n    \t.attr(\"x\", -main_margin.left)\n      .attr(\"width\", main_width + main_margin.left)\n      .attr(\"height\", main_height);\n\n    /////////////////////////////////////////////////////////////\n    /////////////// Set-up the mini bar chart ///////////////////\n    /////////////////////////////////////////////////////////////\n\n    //The mini brushable bar\n    //DATA JOIN\n    var mini_bar = d3.select(\".miniGroup\").selectAll(\".bar\")\n      .data(data, function(d) { return d.key; });\n\n    //UDPATE\n    mini_bar\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand());\n\n    //ENTER\n    mini_bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", 0)\n      .attr(\"width\", function(d) { return mini_xScale(d.value); })\n      .attr(\"y\", function(d,i) { return mini_yScale(d.country); })\n      .attr(\"height\", mini_yScale.rangeBand())\n      .style(\"fill\", \"url(#gradient-rainbow-mini)\");\n\n    //EXIT\n    mini_bar.exit()\n      .remove();\n\n    //Start the brush\n    gBrush.call(brush.event);\n\n  }//init\n\n  //Function runs on a brush move - to update the big bar chart\n  function update() {\n\n    /////////////////////////////////////////////////////////////\n    ////////// Update the bars of the main bar chart ////////////\n    /////////////////////////////////////////////////////////////\n\n    //DATA JOIN\n    var bar = d3.select(\".mainGroup\").selectAll(\".bar\")\n        .data(data, function(d) { return d.key; });\n\n    //UPDATE\n    bar\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand())\n      .attr(\"x\", 0)\n      .transition().duration(50)\n      .attr(\"width\", function(d) { return main_xScale(d.value); });\n\n    //ENTER\n    bar.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"fill\", \"url(#gradient-rainbow-main)\")\n      .attr(\"y\", function(d,i) { return main_yScale(d.country); })\n      .attr(\"height\", main_yScale.rangeBand())\n      .attr(\"x\", 0)\n      .transition().duration(50)\n      .attr(\"width\", function(d) { return main_xScale(d.value); });\n\n    //EXIT\n    bar.exit()\n      .remove();\n\n  }//update\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Brush functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //First function that runs on a brush move\n  function brushmove() {\n\n    var extent = brush.extent();\n\n    //Which bars are still \"selected\"\n    var selected = mini_yScale.domain()\n      .filter(function(d) { return (extent[0] - mini_yScale.rangeBand() + 1e-2 <= mini_yScale(d)) && (mini_yScale(d) <= extent[1] - 1e-2); }); \n    //Update the colors of the mini chart - Make everything outside the brush grey\n    d3.select(\".miniGroup\").selectAll(\".bar\")\n      .style(\"fill\", function(d, i) { return selected.indexOf(d.country) > -1 ? \"url(#gradient-rainbow-mini)\" : \"#e0e0e0\"; });\n\n    //Update the label size\n    d3.selectAll(\".y.axis text\")\n      .style(\"font-size\", textScale(selected.length));\n    \n    /////////////////////////////////////////////////////////////\n    ///////////////////// Update the axes ///////////////////////\n    /////////////////////////////////////////////////////////////\n\n    //Reset the part that is visible on the big chart\n    var originalRange = main_yZoom.range();\n    main_yZoom.domain( extent );\n\n    //Update the domain of the x & y scale of the big bar chart\n    main_yScale.domain(data.map(function(d) { return d.country; }));\n    main_yScale.rangeBands( [ main_yZoom(originalRange[0]), main_yZoom(originalRange[1]) ], 0.4, 0);\n\n    //Update the y axis of the big chart\n    d3.select(\".mainGroup\")\n      .select(\".y.axis\")\n      .call(main_yAxis);\n\n    //Find the new max of the bars to update the x scale\n    var newMaxXScale = d3.max(data, function(d) { return selected.indexOf(d.country) > -1 ? d.value : 0; });\n    main_xScale.domain([0, newMaxXScale]);\n\n    //Update the x axis of the big chart\n    d3.select(\".mainGroupWrapper\")\n      .select(\".x.axis\")\n      .transition().duration(50)\n      .call(main_xAxis);\n\n    //Update the big bar chart\n    update();\n    \n  }//brushmove\n\n  /////////////////////////////////////////////////////////////\n  ////////////////////// Click functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Based on http://bl.ocks.org/mbostock/6498000\n  //What to do when the user clicks on another location along the brushable bar chart\n  function brushcenter() {\n    var target = d3.event.target,\n        extent = brush.extent(),\n        size = extent[1] - extent[0],\n        range = mini_yScale.range(),\n        y0 = d3.min(range) + size / 2,\n        y1 = d3.max(range) + mini_yScale.rangeBand() - size / 2,\n        center = Math.max( y0, Math.min( y1, d3.mouse(target)[1] ) );\n\n    d3.event.stopPropagation();\n\n    gBrush\n        .call(brush.extent([center - size / 2, center + size / 2]))\n        .call(brush.event);\n\n  }//brushcenter\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Scroll functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  function scroll() {\n\n    //Mouse scroll on the mini chart\n    var extent = brush.extent(),\n      size = extent[1] - extent[0],\n      range = mini_yScale.range(),\n      y0 = d3.min(range),\n      y1 = d3.max(range) + mini_yScale.rangeBand(),\n      dy = d3.event.deltaY,\n      topSection;\n\n    if ( extent[0] - dy < y0 ) { topSection = y0; } \n    else if ( extent[1] - dy > y1 ) { topSection = y1 - size; } \n    else { topSection = extent[0] - dy; }\n\n    //Make sure the page doesn't scroll as well\n    d3.event.stopPropagation();\n    d3.event.preventDefault();\n\n    gBrush\n        .call(brush.extent([ topSection, topSection + size ]))\n        .call(brush.event);\n\n  }//scroll\n\n  /////////////////////////////////////////////////////////////\n  ///////////////////// Helper functions //////////////////////\n  /////////////////////////////////////////////////////////////\n\n  //Create a gradient \n  function createGradient(idName, endPerc) {\n\n    var coloursRainbow = [\"#EFB605\", \"#E9A501\", \"#E48405\", \"#E34914\", \"#DE0D2B\", \"#CF003E\", \"#B90050\", \"#A30F65\", \"#8E297E\", \"#724097\", \"#4F54A8\", \"#296DA4\", \"#0C8B8C\", \"#0DA471\", \"#39B15E\", \"#7EB852\"];\n\n    defs.append(\"linearGradient\")\n      .attr(\"id\", idName)\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", \"0%\").attr(\"y1\", \"0%\")\n      .attr(\"x2\", endPerc).attr(\"y2\", \"0%\")\n      .selectAll(\"stop\") \n      .data(coloursRainbow)                  \n      .enter().append(\"stop\") \n      .attr(\"offset\", function(d,i) { return i/(coloursRainbow.length-1); })   \n      .attr(\"stop-color\", function(d) { return d; });\n  }//createGradient\n\n  //Function to generate random strings of 5 letters - for the demo only\n  function makeWord() {\n      var possible_UC = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      var text = possible_UC.charAt(Math.floor(Math.random() * possible_UC.length));\n      \n      var possible_LC = \"abcdefghijklmnopqrstuvwxyz\";\n\n      for( var i=0; i < 5; i++ )\n          text += possible_LC.charAt(Math.floor(Math.random() * possible_LC.length));\n\n      return text;\n  }//makeWord\n\n  </script>", "description": "Brushable Horizontal Bar Chart - V", "created_at": "2016-09-07T19:29:35Z", "updated_at": "2016-09-09T20:23:15Z", "api": ["d3.behavior.zoom", "d3.select", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.max", "d3.svg.brush", "d3.svg.symbol", "d3.selectAll", "d3.min", "d3.mouse", "d3.event.stopPropagation", "d3.event.preventDefault"], "readme": "This is exactly the same as [version IV](http://bl.ocks.org/nbremer/326fb6de768e85261bfd47aa1f497863) of the brushable horizontal bar chart, but this one has a x scale that updates to fit the largest visible bar in the available width.\n\nFor a bit more background, you can read my mini-blog about it [Brushable & interactive bar chart in d3.js](http://www.visualcinnamon.com/2016/07/brush-bar-chart-d3.html)\n", "uid": "nstrayer_8e46c8f116614f628e3aaeec09167edb"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\n    var margin = {top: 20, right: 20, bottom: 70, left: 40},\n    \t\twidth = 600 - margin.left - margin.right,\n    \t\theight = 300 - margin.top - margin.bottom;\n    \n    var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\n    var y = d3.scale.linear().range([height,0]);\n    \n    var xAxis = d3.svg.axis()\n    \t\t.scale(x)\n    \t\t.orient(\"bottom\");\n    \n    var yAxis = d3.svg.axis()\n\t\t\t\t.scale(y)\n    \t\t.orient(\"left\")\n    \t\t.ticks(1);\n    \n    var tip = d3.tip()\n  \t\t.attr('class', 'd3-tip')\n  \t\t.offset([-10, 0])\n  \t\t.html(function(d) {\n    \treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"\t\t</span>\";\n  })\n    \n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    \t.attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top +\")\");\n    \n  svg.call(tip)\n    \n\n    d3.tsv(\"Grades.tsv\", type,function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grades; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide);\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n    \n  </script>", "description": "fresh block", "created_at": "2016-09-07T14:58:27Z", "updated_at": "2016-09-07T20:07:54Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "gpenam92_3d36c5c08309ebd4ebeb19c91fe66b1a"}, {"code": "<script>\n    // Feel free to change or delete any of the code you see in this editor!\nvar myData=[12, 15, 20, 50];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 200 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar wScale = d3.scaleLinear()\n\t.range([0, width]);\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar BAR_HEIGHT = 20;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar xAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis x--axis\");\n  \n\twScale.domain([0, d3.max(myData)]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(myData);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n    \n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", 0)\n    .attr(\"y\", function(d, i ) { return i * (BAR_HEIGHT+1);})\n    .attr(\"height\", BAR_HEIGHT)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .transition().duration(1000)\n    .attr(\"width\", function(d) { return wScale(d); });\n  \t\n  xAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisTop()\n  \t.scale(wScale)\n    .ticks(3));\n\n  </script>", "description": "fresh block", "created_at": "2016-09-07T12:38:35Z", "updated_at": "2016-09-07T12:38:35Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.max", "d3.axisTop"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jorgeehernandez_0fd0080aa77ea52304ce233d671ce485"}, {"code": "<script>\n    var myData=[12, 15, 20, 50];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 200 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar wScale = d3.scaleLinear()\n\t.range([0, width]);\n\n\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar BAR_HEIGHT = 20;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar xAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis x--axis\");\n  \n  \nfunction update(myData, attr) {\n\n\tvar fnAcc = function(d) { return d[attr]; }\n  \n \tmyData = myData.sort(function (a, b) {\n  \treturn d3.descending(a[attr], b[attr]);\n  }).filter(function (d) {\n  \treturn d[attr]<20000;\n  });\n  \n  \n\twScale.domain([0, d3.max(myData, fnAcc) ]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(myData);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", 0)\n    .attr(\"y\", function(d, i ) { return i * (BAR_HEIGHT+1);})\n    .attr(\"height\", BAR_HEIGHT)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .transition().duration(1000)\n    .attr(\"width\", function(d) { return wScale(fnAcc(d)); });\n  \t\n  xAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisTop()\n  \t.scale(wScale)\n    .ticks(3));\n}\n\nvar res=\"https://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=f11688d9fc777acfb94a22ddd0077381&extras=count_views%2C+count_faves%2C+count_comments&format=json&nojsoncallback=1&api_sig=db63d57735ecc57c074f4c962f21ae31\";\n\nd3.json(res, function(err, data) {\n\tif(err) {\n  \tconsole.err(err);\n    alert(err);\n    return;\n  }\n  \n  data.photos.photo.forEach(function (d) {\n  \td.count_views = +d.count_views;\n    d.count_faves = +d.count_faves;\n    d.count_comments = +d.count_comments;\n  })\n  console.log(data);\n  update(data.photos.photo, \"count_views\");\n});\n\n\n  </script>", "description": "fresh block", "created_at": "2016-09-07T05:44:23Z", "updated_at": "2016-09-07T05:44:24Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.descending", "d3.max", "d3.axisTop", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Adlopez2016_0a84dfac1d23ebbf8205e22d21cf75d9"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n//Tooltip\nvar tooltip = d3.select(\"body\").append(\"div\")\n\t.attr(\"class\", \"tooltip\");\n  \n  \n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.code = +d.code;\n        d.grade = +d.grade;\n    });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  // add axis\n  svg.append(\"g\")\n  .transition().duration(3000)\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n  \t.transition().duration(3000)\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n  \n  svg.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 5)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\");\n\n  var bars = svg.selectAll(\".bars\")\n  \t.data(data);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n  \n  // Add bar chart\n  svg.selectAll(\"bar\")\n      .data(data)\n\t    .enter()\n    .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n  \n  .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(700)\n               .style(\"opacity\", 1);\n          tooltip.html(\"Student: \" +d.code + \"<br/> Grade: \" + d.grade)\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  });\n  \n</script>", "description": "fresh block", "created_at": "2016-09-07T04:44:48Z", "updated_at": "2016-09-07T04:45:52Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.select", "d3.svg.axis", "d3.json", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n1)\n\t-What: \n  \t-Data Types: Items and attributes.\n    -Dataset Types: Tables.\n    -Atributes Types: Quantitative.\n    -Ordering direction: Diverging.\n\t-Why:\n  \t-Analyze:\n    \t-Consume: Present and Enjoy.\n    -Query: Compare.\n    -All Data: Features.\n    -Attributes: One.\n\tHow:\n  \t-Encode: Align.\n    -Map:\n    \t-Color: Hue.\n      -Size.\n    -Facet: Superimpose.  \t\n\n2)Argumentation\nThe mark used was the line because is one of the simplest figures to recognize and understand for humans. The length was used to be a simple chanel and to witch people are accustomed. The color are vivid to not discourage the students and changes color when is put the mouse over, to make more easy understand witch is being observed.\n\n\nDocumentos de apoyo:\n\n  - URL: http://bl.ocks.org/Jverma/887877fc5c2c2d99be10 de Juna Verma\n  - URL: http://bl.ocks.org/weiglemc/6185069 de Michele Weigle\n\nforked from <a href='http://bl.ocks.org/f94f/'>f94f</a>'s block: <a href='http://bl.ocks.org/f94f/eaea26f110b8d76afc2a4330d737df69'>fresh block</a>", "uid": "f94f_b350177133aac8f945017b91d43b321c"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n//Tooltip\nvar tooltip = d3.select(\"body\").append(\"div\")\n\t.attr(\"class\", \"tooltip\");\n  \n  \n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.code = +d.code;\n        d.grade = +d.grade;\n    });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  // add axis\n  svg.append(\"g\")\n  .transition().duration(3000)\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n  \t.transition().duration(3000)\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n  \n  svg.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 5)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\");\n\n  var bars = svg.selectAll(\".bars\")\n  \t.data(data);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n  \n  // Add bar chart\n  svg.selectAll(\"bar\")\n      .data(data)\n\t    .enter()\n    .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n  \n  .on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(700)\n               .style(\"opacity\", 1);\n          tooltip.html(\"Student: \" +d.code + \"<br/> Grade: \" + d.grade)\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  });\n  \n</script>", "description": "fresh block", "created_at": "2016-09-07T04:22:33Z", "updated_at": "2016-09-07T04:22:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.select", "d3.svg.axis", "d3.json", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "f94f_eaea26f110b8d76afc2a4330d737df69"}, {"code": "<script>\n(function() {\n  d3.horizon = function() {\n    var bands = 1, // between 1 and 5, typically\n        mode = \"offset\", // or mirror\n        interpolate = \"linear\", // or basis, monotone, step-before, etc.\n        x = d3_horizonX,\n        y = d3_horizonY,\n        w = 960,\n        h = 40,\n        duration = 0;\n\n    var color = d3.scaleLinear()\n        .domain([-1, 0, 0, 1])\n        .range([\"#08519c\", \"#bdd7e7\", \"#bae4b3\", \"#006d2c\"]);\n\n    // For each small multiple\n    function horizon(g) {\n      g.each(function(d, i) {\n        var g = d3.select(this),\n            n = 2 * bands + 1,\n            xMin = Infinity,\n            xMax = -Infinity,\n            yMax = -Infinity,\n            x0, // old x-scale\n            y0, // old y-scale\n            id; // unique id for paths\n\n        // Compute x- and y-values along with extents.\n        var data = d.map(function(d, i) {\n          var xv = x.call(this, d, i),\n              yv = y.call(this, d, i);\n          if (xv < xMin) xMin = xv;\n          if (xv > xMax) xMax = xv;\n          if (-yv > yMax) yMax = -yv;\n          if (yv > yMax) yMax = yv;\n          return [xv, yv];\n        });\n\n        // Compute the new x- and y-scales, and transform.\n        var x1 = d3.scaleLinear().domain([xMin, xMax]).range([0, w]),\n            y1 = d3.scaleLinear().domain([0, yMax]).range([0, h * bands]),\n            t1 = d3_horizonTransform(bands, h, mode);\n\n        // Retrieve the old scales, if this is an update.\n        if (this.__chart__) {\n          x0 = this.__chart__.x;\n          y0 = this.__chart__.y;\n          t0 = this.__chart__.t;\n          id = this.__chart__.id;\n        } else {\n          x0 = x1.copy();\n          y0 = y1.copy();\n          t0 = t1;\n          id = ++d3_horizonId;\n        }\n\n        // We'll use a defs to store the area path and the clip path.\n        var defs = g.selectAll(\"defs\")\n            .data([null]);\n\n        // The clip path is a simple rect.\n        defs.enter().append(\"defs\").append(\"clipPath\")\n            .attr(\"id\", \"d3_horizon_clip\" + id)\n          .append(\"rect\")\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n\n        defs.select(\"rect\").transition()\n            .duration(duration)\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n\n        // We'll use a container to clip all horizon layers at once.\n        g.selectAll(\"g\")\n            .data([null])\n          .enter().append(\"g\")\n            .attr(\"clip-path\", \"url(#d3_horizon_clip\" + id + \")\");\n\n        // Instantiate each copy of the path with different transforms.\n        var path = g.select(\"g\").selectAll(\"path\")\n            .data(d3.range(-1, -bands - 1, -1).concat(d3.range(1, bands + 1)), Number);\n\n        var d0 = d3_horizonArea\n            //.interpolate(interpolate)\n            .x(function(d) { return x0(d[0]); })\n            .y0(h * bands)\n            .y1(function(d) { return h * bands - y0(d[1]); })\n            (data);\n\n        var d1 = d3_horizonArea\n            .x(function(d) { return x1(d[0]); })\n            .y1(function(d) { return h * bands - y1(d[1]); })\n            (data);\n\n        path.enter().append(\"path\")\n            .style(\"fill\", color)\n            .attr(\"transform\", t0)\n            .attr(\"d\", d0);\n\n        path.transition()\n            .duration(duration)\n            .style(\"fill\", color)\n            .attr(\"transform\", t1)\n            .attr(\"d\", d1);\n\n        path.exit().transition()\n            .duration(duration)\n            .attr(\"transform\", t1)\n            .attr(\"d\", d1)\n            .remove();\n\n        // Stash the new scales.\n        this.__chart__ = {x: x1, y: y1, t: t1, id: id};\n      });\n      d3.timerFlush();\n    }\n\n    horizon.duration = function(x) {\n      if (!arguments.length) return duration;\n      duration = +x;\n      return horizon;\n    };\n\n    horizon.bands = function(x) {\n      if (!arguments.length) return bands;\n      bands = +x;\n      color.domain([-bands, 0, 0, bands]);\n      return horizon;\n    };\n\n    horizon.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return horizon;\n    };\n\n    horizon.colors = function(x) {\n      if (!arguments.length) return color.range();\n      color.range(x);\n      return horizon;\n    };\n\n    horizon.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x + \"\";\n      return horizon;\n    };\n\n    horizon.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return horizon;\n    };\n\n    horizon.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return horizon;\n    };\n\n    horizon.width = function(x) {\n      if (!arguments.length) return w;\n      w = +x;\n      return horizon;\n    };\n\n    horizon.height = function(x) {\n      if (!arguments.length) return h;\n      h = +x;\n      return horizon;\n    };\n\n    return horizon;\n  };\n\n  var d3_horizonArea = d3.area(),\n      d3_horizonId = 0;\n\n  function d3_horizonX(d) {\n    return d[0];\n  }\n\n  function d3_horizonY(d) {\n    return d[1];\n  }\n\n  function d3_horizonTransform(bands, h, mode) {\n    return mode == \"offset\"\n        ? function(d) { return \"translate(0,\" + (d + (d < 0) - bands) * h + \")\"; }\n        : function(d) { return (d < 0 ? \"scale(1,-1)\" : \"\") + \"translate(0,\" + (d - bands) * h + \")\"; };\n  }\n})();\n\n\nvar width = 960,\n    height = 500;\nconsole.log(4);\nvar chart = d3.horizon()\n    .width(width)\n    .height(height)\n    .bands(1)\n    .mode(\"mirror\")\n    .interpolate(\"basis\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nd3.json(\"unemployment.json\", function(error, data) {\n  if (error) throw error;\n\n  // Offset so that positive is above-average and negative is below-average.\n  var mean = data.rate.reduce(function(p, v) { return p + v; }, 0) / data.rate.length;\n\n  // Transpose column values to rows.\n  data = data.rate.map(function(rate, i) {\n    return [Date.UTC(data.year[i], data.month[i] - 1), rate - mean];\n  });\n\n  // Render the chart.\n  svg.data([data]).call(chart);\n\n  // Enable mode buttons.\n  d3.selectAll(\"#horizon-controls input[name=mode]\").on(\"change\", function() {\n    svg.call(chart.duration(0).mode(this.value));\n  });\n\n  // Enable bands buttons.\n  d3.selectAll(\"#horizon-bands button\").data([-1, 1]).on(\"click\", function(d) {\n    var n = Math.max(1, chart.bands() + d);\n    d3.select(\"#horizon-bands-value\").text(n);\n    svg.call(chart.duration(1000).bands(n).height(height / n));\n  });\n});\n\n</script>", "description": "Horizon Chart", "created_at": "2016-09-07T03:45:13Z", "updated_at": "2016-09-08T02:26:08Z", "api": ["d3.scaleLinear", "d3.select", "d3.range", "d3.timer.flush", "d3.area", "d3.timerFlush", "d3.horizon", "d3.json", "d3.selectAll"], "readme": "Horizon charts combine position and color to reduce vertical space. Start with a standard area chart, then **mirror** negative values (in blue) or **offset** them vertically. Click the **+ button** above to increase the number of bands, turning the area into a horizon.\n\nImplemented with the [d3.horizon](https://github.com/d3/d3-plugins/tree/master/horizon) plugin.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/1483226'>Horizon Chart</a>", "uid": "owenr_3f8133b8edf99731d54104ca1b622d30"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  \nfunction update(myData, attr) {\n\n\tvar fnAcc = function(d) { return d[attr]; }\n  \n \tmyData = myData.sort(function (a, b) {\n  \treturn d3.descending(a[attr], b[attr]);\n  });\n  \n  \n\twScale.domain([0, d3.max(myData, fnAcc) ]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(myData);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", 0)\n    .attr(\"y\", function(d, i ) { return i * (BAR_HEIGHT+1);})\n    .attr(\"height\", BAR_HEIGHT)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .transition().duration(1000)\n    .attr(\"width\", function(d) { return wScale(fnAcc(d)); });\n  \t\n  xAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisTop()\n  \t.scale(wScale)\n    .ticks(3));\n}\n  \n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.code = +d.code;\n        d.grade = +d.grade;\n    });\n  \n  data.sort(function(a, b) {\n    return a.grade - b.grade;\n  });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { \n    return d.grade; })]);\n\n  // add axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(0)\")\n      .attr(\"y\", -10)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Grade Scale\");\n  \n  \n  // Add bar chart\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); }).sort();\n\n  console.log(data);\n  //update(data);\n  \n});\n\n</script>", "description": "Exam Grades - Vertical Bar Chart from external JSON file", "created_at": "2016-09-07T03:44:51Z", "updated_at": "2016-09-07T04:39:09Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.descending", "d3.max", "d3.axisTop", "d3.json"], "readme": "A simple bar chart build using data from an external JSON file. \n\nforked from <a href='http://bl.ocks.org/Jverma/'>Jverma</a>'s block: <a href='http://bl.ocks.org/Jverma/887877fc5c2c2d99be10'>Bar chart from external JSON file</a>", "uid": "emilioalvarado_cc77d77a4173f5b3bc254c46762ca253"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.Letter = d.Letter;\n        d.Freq = +d.Freq;\n    });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.Letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.Freq; })]);\n\n  // add axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 5)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n\n  // Add bar chart\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.Letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.Freq); })\n      .attr(\"height\", function(d) { return height - y(d.Freq); });\n\n});\n\n</script>", "description": "Bar chart from external JSON file", "created_at": "2016-09-07T03:42:24Z", "updated_at": "2016-09-07T03:42:24Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max"], "readme": "A simple bar chart build using data from an external JSON file. \n\nforked from <a href='http://bl.ocks.org/Jverma/'>Jverma</a>'s block: <a href='http://bl.ocks.org/Jverma/887877fc5c2c2d99be10'>Bar chart from external JSON file</a>", "uid": "f94f_6f1d5e3196c3a8896b282978f5fe536c"}, {"code": "<script>\n  \n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 200 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar wScale = d3.scaleLinear()\n\t.range([0, width]);\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar BAR_HEIGHT = 20;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar xAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis x--axis\");\n  \n  \nfunction update(myData, attr) {\n\n\tvar fnAcc = function(d) { return d[attr]; }\n  \n \tmyData = myData.sort(function (a, b) {\n  \treturn d3.descending(a[attr], b[attr]);\n  });\n  \n  \n\twScale.domain([0, d3.max(myData, fnAcc) ]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(myData);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", 0)\n    .attr(\"y\", function(d, i ) { return i * (BAR_HEIGHT+1);})\n    .attr(\"height\", BAR_HEIGHT)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .transition().duration(1000)\n    .attr(\"width\", function(d) { return wScale(fnAcc(d)); });\n  \t\n  xAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisTop()\n  \t.scale(wScale)\n    .ticks(3));\n}\n\nvar res=\"https://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=f11688d9fc777acfb94a22ddd0077381&extras=count_views%2C+count_faves%2C+count_comments&format=json&nojsoncallback=1&api_sig=db63d57735ecc57c074f4c962f21ae31\";\n\nd3.json(res, function(err, data) {\n\tif(err) {\n  \tconsole.err(err);\n    alert(err);\n    return;\n  }\n  \n  data.photos.photo.forEach(function (d) {\n  \td.count_views = +d.count_views;\n    d.count_faves = +d.count_faves;\n    d.count_comments = +d.count_comments;\n  })\n  console.log(data);\n  update(data.photos.photo, \"count_views\");\n});\n\n</script>", "description": "Test Block", "created_at": "2016-09-07T03:03:10Z", "updated_at": "2016-09-07T05:02:29Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.descending", "d3.max", "d3.axisTop", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n<b><u>About</u></b>\n\n\n\nforked from <a href='http://bl.ocks.org/emilioalvarado/'>emilioalvarado</a>'s block: <a href='http://bl.ocks.org/emilioalvarado/eb4c676b760e471c5e37ea49f808fc2d'>Grades block</a>", "uid": "emilioalvarado_c4246dbe21746463f53f05bf5da5db1b"}, {"code": "<script>\n\nvar margin = {top: 40, right: 20, bottom: 70, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Code:</strong> <span style='color:red'>\" + d.code + \"</span>    <strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"grades.tsv\", type, function(error, data) {\n  data.sort(function(a,b) {return (a.grade > b.grade) ? -1 : ((b.grade > a.grade) ? 1 : 0);} );\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)   \n    \t.selectAll(\"text\")  \n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-65)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    \t.append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n      .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n    \t.style(\"fill\", function(d) {\n    \t\tif (d.grade < 3) {return \"red\"}\n    \t\telse if (d.grade > 4)\t{ return \"green\" }\n    \t;})\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "Student grades", "created_at": "2016-09-07T02:34:37Z", "updated_at": "2016-09-07T21:31:36Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Student grades chart.\n\nThis chart is an easy way to show all grades of the student. It stands out the level of your student discriminated with colors. Green great students, Orange good students and red for bad students. In other hand, it has descending order, in order to compare the performance of each students.\n\nWhat? Why? How? Analysis\n\nWhat? \nIt use tables (Items and atributes). \n\nWhy?\nIt is used to discover and present the data\n\nHow? \nThe bar chart are ordered, aligned and express de grades. It categorize for great, good and bad student by color hue.\n", "uid": "cis321_756fd191aad4450867c2a5c309053e5b"}, {"code": "<script>\n  var myData=[12, 15, 20, 50];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 200 - margin.left - margin.right,\n    height = 200 - margin.top - margin.bottom;\n\nvar xScale = d3.scaleLinear()\n\t.range([0, width]);\nvar yScale = d3.scaleLinear()\n\t.range([0, height]);\n\n\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar CIRCLE_R = 5;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar xAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis x--axis\")\n  .attr(\"transform\", \"translate(0, \" + height + \")\");\nxAxis.append(\"text\")\n\t.attr(\"class\", \"label\")\n  .attr(\"transform\", \"translate(\" +width + \", \" + 20 + \")\");;\nvar yAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis y--axis\");\nyAxis.append(\"text\")\n\t.attr(\"class\", \"label\")\n  .attr(\"transform\", \"translate(-30,0) rotate(-90)\");  \n  \n  \nfunction update(myData, attrX, attrY) {\n\n\tvar fnAccX = function(d) { return d[attrX]; };\n  var fnAccY = function(d) { return d[attrY]; };\n     \n\txScale.domain([0, d3.max(myData, fnAccX) ]);\n  yScale.domain([0, d3.max(myData, fnAccY) ]);\n  \n\tvar points = svg.selectAll(\".points\")\n  \t.data(myData);\n  \n  //Enter\n  var pointsEnter = points.enter()\n  \t.append(\"circle\")\n    .attr(\"class\", \"points\")\n    .attr(\"r\", 0);\n  \n  //Exit\n  points.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"r\", 0)\n  \t.remove();\n \n  //Update\n  points.merge(pointsEnter)\n  \t.attr(\"cx\", function(d) { return xScale(fnAccX(d)); })\n    .attr(\"cy\", function(d) { return yScale(fnAccY(d)); })\n    .attr(\"r\", CIRCLE_R)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .on(\"mouseover\", onMouseOver)\n    .on(\"mouseout\", onMouseOut);\n  \t\n  xAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisBottom()\n  \t.scale(xScale)\n    .ticks(3));\n    \n  xAxis.select(\".label\").text(attrX);\n  yAxis.select(\".label\").text(attrY);    \n  \n  \n  yAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisLeft()\n  \t\t.scale(yScale)\n    \t.ticks(3)\n     );\n    \n}\n\nfunction onMouseOver(d) {\n\td3.select(\"#details\").text(d.title);\n  d3.select(this)\n  \t.transition()\n    .duration(500)  \n  \t.attr(\"r\", CIRCLE_R*5);\n}\n\n\nfunction onMouseOut(d) {\n  d3.select(this)\n  \t.transition()\n    .duration(500)\n  \t.attr(\"r\", CIRCLE_R);\n}\nvar res=\"https://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=f11688d9fc777acfb94a22ddd0077381&extras=count_views%2C+count_faves%2C+count_comments&format=json&nojsoncallback=1&api_sig=db63d57735ecc57c074f4c962f21ae31\";\n\nd3.json(res, function(err, data) {\n\tif(err) {\n  \tconsole.err(err);\n    alert(err);\n    return;\n  }\n  \n  data.photos.photo.forEach(function (d) {\n  \td.count_views = +d.count_views;\n    d.count_faves = +d.count_faves;\n    d.count_comments = +d.count_comments;\n  })\n  console.log(data);\n  update(data.photos.photo, \"count_views\", \"count_faves\");\n});\n\n\n  </script>", "description": "D3Tutorialv2", "created_at": "2016-09-07T01:47:58Z", "updated_at": "2016-09-07T01:59:37Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/davidgutierrez/'>davidgutierrez</a>'s block: <a href='http://bl.ocks.org/davidgutierrez/97aa40c07ec5a58ea72960a18ac0a632'>D3Tutorialv2</a>", "uid": "davidgutierrez_1080f243bf9d715df7953c56bc2ebca6"}, {"code": "<script>\n\nvar myData = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 1000 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\nvar wScale = d3.scaleLinear()\n\t.range([0, height]);\n\n\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar BAR_WIDTH = 20;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  \nvar yAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis y--axis\")\n  .attr(\"transform\", \"translate(0,\"+height+\")\");;  \n  \nfunction update(myData) {\n  \n \tmyData = myData.sort(function (d) {\n  \treturn d3.descending(d);\n  });\n  \n\twScale.domain([0, d3.max(myData, function(d){\n  \treturn d.grade;\n  }) ]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(myData);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", function(d, i ) { return i * (BAR_WIDTH+1);})\n    .attr(\"y\", 0)\n    .attr(\"width\", BAR_WIDTH)\n    .style(\"fill\", function(d,i) { \n    \tif(d.grade>=3) return \"green\";\n      else return \"red\";\n    })\n    .transition().duration(1000)\n    .attr(\"height\", function(d) { return wScale(d.grade); });\n  myData = myData.sort(function (d) {\n  \treturn d3.descending(d.grade);\n  });\n  \n  /**\n  yAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisTop()\n  \t.scale(wScale)\n    .ticks(3));\n    */\n}\n\nupdate(myData);\n    \n  </script>", "description": "VA", "created_at": "2016-09-07T01:26:31Z", "updated_at": "2016-09-07T02:27:45Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.descending", "d3.max", "d3.axisTop"], "readme": "================================================\n\nDiclaimer: This homework is not yet finished but due to bad time management I must have turn it in like this, it will be completed in the future.\n\nWhat do we have?\n================================================\nIn this exercise we will need to show the grades of a Visual Analytics course. The grades to be visualized are stored in the variable 'grades' in the following format:\nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\n================================================\nAnalysis and decisions made\n================================================\nIt is common for grades in the academic environment to show the typical stadistics of a data group. Average, mean, deviation and mode. Besides it is also helpful to show wich is the higher and the lower grade.\n\nAs this dataset is a register for each student for a single exam, it is necessary to be able to visualize each register, which implies an instance of the channel and mark used for each grade as well as group statistics as a whole.\n\nThe best diagram for this case could be an interactive bar graph that allows to rearrange students by code, so it's easier for them to find themselves, and by grade to make group analysis. There are no significant categories of the entities, although a limit marker could be useful to show which students passed the exam and which failed.\n\n\nforked from <a href='http://bl.ocks.org/jcamilort/'>jcamilort</a>'s block: <a href='http://bl.ocks.org/jcamilort/414002d5491797af4cccfdc4740f456e'>VA</a>", "uid": "jcamilort_954faf8e73fa80a079146480b321d28e"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleMagma()\n    .domain([-4, 4]);\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .paddingOuter(3)\n    .paddingTop(19)\n    .paddingInner(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  var cell = svg\n    .selectAll(\".node\")\n    .data(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; })\n      .attr(\"class\", \"node\")\n      .each(function(d) { d.node = this; })\n      .on(\"mouseover\", hovered(true))\n      .on(\"mouseout\", hovered(false));\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) { return \"rect-\" + d.id; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .attr(\"height\", function(d) { return d.y1 - d.y0; })\n      .style(\"fill\", function(d) { return color(d.depth); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#rect-\" + d.id + \"\"; });\n\n  var label = cell.append(\"text\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; });\n\n  label\n    .filter(function(d) { return d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(\"\\xa0\" + format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", function(d, i) { return i ? null : 4; })\n      .attr(\"y\", 13)\n      .text(function(d) { return d; });\n\n  label\n    .filter(function(d) { return !d.children; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 4)\n      .attr(\"y\", function(d, i) { return 13 + i * 10; })\n      .text(function(d) { return d; });\n\n  cell.append(\"title\")\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\n});\n\nfunction hovered(hover) {\n  return function(d) {\n    d3.selectAll(d.ancestors().map(function(d) { return d.node; }))\n        .classed(\"node--hover\", hover)\n      .select(\"rect\")\n        .attr(\"width\", function(d) { return d.x1 - d.x0 - hover; })\n        .attr(\"height\", function(d) { return d.y1 - d.y0 - hover; });\n  };\n}\n\n</script>", "description": "Nested Treemap", "created_at": "2016-09-07T01:15:08Z", "updated_at": "2016-09-07T01:15:08Z", "api": ["d3.select", "d3.format", "d3.scaleMagma", "d3.stratify", "d3.treemap", "d3.csv", "d3.selectAll"], "readme": "\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/911ad09bdead40ec0061'>Nested Treemap</a>", "uid": "atomiccc_8853e6d2ce880671782b432921fbf103"}, {"code": "<script>\nvar margin = { top: 30, right: 50, bottom: 40, left: 40 };\nvar width = 960 - margin.left - margin.right;\nvar height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar xscale = d3.scaleLog()\n  .range([0,width]);\n\nvar yscale = d3.scaleLinear()\n  .domain([0, 4])\n  .range([height,0]);\n\nvar radius = d3.scaleSqrt()\n  .range([1, 5]);\n\nvar xAxis = d3.axisBottom()\n  .scale(xscale)\n  .tickValues([1,10,100,1000,10000])\n  .tickFormat(d3.format(\",\"));\n\nvar yAxis = d3.axisLeft()\n  .scale(yscale)\n\nvar color = d3.scaleLinear()\n  .range([\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"])\n  .domain([0, 1, 2, 3, 4]);\n\nrawData = null;\nd3.csv(\"phl_hec_all_confirmed.csv\", function(error, gottenData) {\n  rawData = gottenData;\n  var data = rawData.map(function(d) {\n    return {\n      y: +d[\"Average\"],\n      x: +d[\"interview events\"],\n      r: +d[\"Rounded Average\"]\n    }\n  });\n\n  xscale.domain(d3.extent(data, function(d) {\n    return d.x;\n  })).nice()\n\n  radius.domain(d3.extent(data, function(d) {\n    return d.r;\n  })).nice()\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .attr(\"class\", \"x axis\")\n    .call(xAxis);\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,0)\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis);\n\n  var group = svg.selectAll(\"g.bubble\")\n    .data(data)\n    .enter().append(\"g\")\n    .attr(\"class\", \"bubble\")\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + xscale(d.x) + \",\" + yscale(d.y) + \")\"\n    });\n\n  group\n    .append(\"circle\")\n    .attr(\"r\", function(d) { return radius(d.r);  })\n    .style(\"fill\", function(d) {\n      return color(d.r);\n    })\n\n  group\n    .append(\"text\")\n    .attr(\"x\", function(d) { return radius(d.r); })\n    .attr(\"alignment-baseline\", \"middle\")\n    .text(function(d) {\n      return d[\"ID\"] + ' score ' + d.y;  \n    });\n\n  svg.append(\"text\")\n    .attr(\"x\", 10)\n    .attr(\"y\", 10)\n    .attr(\"class\", \"label\")\n    .text(\"Average score\");\n\n  svg.append(\"text\")\n    .attr(\"x\", width)\n    .attr(\"y\", height-10)\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"class\", \"label\")\n    .text(\"Interview events (count)\");\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 6)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  legend.on(\"mouseover\", function(type) {\n      d3.selectAll(\".bubble\")\n        .style(\"opacity\", 0.1)\n        .filter(function(d) { return d.r === type; })\n        .style(\"opacity\", 1);\n    })\n    .on(\"mouseout\", function(type) {\n      d3.selectAll(\".bubble\")\n        .style(\"opacity\", 1);\n    });\n});\n\ntoggle = function(){\n  var data = rawData.map(function(d) {\n    return {\n      y: +d[\"% +\"],\n      x: +d[\"interview events\"],\n      r: (Math.round(+d[\"% +\"] * 4) / 4),\n    }\n  });\n\n  xscale.domain(d3.extent(data, function(d) {\n    return d.x;\n  })).nice()\n\n  yscale.domain(d3.extent(data, function(d) {\n    return d.y;\n  })).nice()\n\n  yAxis\n    .tickFormat(function(d){return Math.round(d * 100) + '%';})\n    .scale(yscale)\n\n  d3.select('.y.axis').call(yAxis)\n  color.domain([0, 0.25, 0.5, 1]);\n\n  var group = svg.selectAll(\"g.bubble\")\n    .data(data)\n    .transition().duration(1000)\n    .attr(\"transform\", function(d) {\n      return \"translate(\" + xscale(d.x) + \",\" + yscale(d.y) + \")\"\n    })\n  group.selectAll('circle').transition().style(\"fill\", function(d) {\n      return color(d.r/4);\n    })\n\n  var legend = d3.selectAll(\".legend\")\n      .data(color.domain())\n\n  legend.transition() \n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.selectAll('rect')\n    .transition() \n      .style(\"fill\", color);\n \n  legend.selectAll(\"text\").remove()\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 6) \n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n  legend.on(\"mouseover\", function(type) {\n      d3.selectAll(\".bubble\")\n        .style(\"opacity\", 0.1)\n        .filter(function(d) { return d.r === type; })\n        .style(\"opacity\", 1);\n    })\n    .on(\"mouseout\", function(type) {\n      d3.selectAll(\".bubble\")\n        .style(\"opacity\", 1);\n    });\n\n  legend.exit().remove()\n}\n\n</script>", "description": "Interview event / score scatterplot", "created_at": "2016-09-07T01:02:19Z", "updated_at": "2016-09-07T19:59:25Z", "api": ["d3.select", "d3.scaleLog", "d3.scaleLinear", "d3.scaleSqrt", "d3.axisBottom", "d3.format", "d3.axisLeft", "d3.csv", "d3.extent", "d3.selectAll"], "readme": "\nforked from <a href='http://bl.ocks.org/syntagmatic/'>syntagmatic</a>'s block: <a href='http://bl.ocks.org/syntagmatic/1f48d7abcd8e4cb040bd9263cff10700'>Exoplanets Scatterplot</a>", "uid": "jonsadka_55b7080d6105c0643148d49f0ebc8856"}, {"code": "<script>\n\t\t\t\tvar i18n = 'omg please work';\n    \n        var dataset = [ \n            { label: 'red', count: 5},\n            { label: 'orange', count: 20 },\n            { label: 'yellow', count: 25 },\n            { label: 'blue', count: 74 },\n            { label: 'green', count: 5 }\n        ];\n\n        dataset.forEach(function(d) {\n            d.count = +d.count;\n            d.enabled = true;\n        });\n\n        var width = 240;\n        var height = 240;\n        var radius = Math.min(width, height) / 2;\n        var donutWidth = 45;\n\n        var color = d3.scaleOrdinal()\n            .range(['#FF4848', '#FF9C42', '#FFF06A', '#24E0FB', '#36F200']);\n\n        var svg = d3.select('#similarity-chart')\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('transform', 'translate(' + (width / 2) +  ',' + (height / 2) + ')');\n\n        var arc = d3.arc()\n            .innerRadius(radius - donutWidth)\n            .outerRadius(radius);\n\n        var tooltip = d3.select('#similarity-chart')\n            .append('div')\n            .attr('class', 'donut-tooltip');\n\n        tooltip.append('div')\n            .attr('class', 'label');\n\n        tooltip.append('div')\n            .attr('class', 'count');\n\n        tooltip.append('div')\n            .attr('class', 'percent');\n\n        var pie = d3.pie()\n            .value(function(d) { return d.count; })\n            .sort(null);\n\n        var path = svg.selectAll('path')\n            .data(pie(dataset))\n            .enter()\n            .append('path');\n\n        path.transition()\n            .attr('d', arc)\n            .attr('fill', function(d, i) {\n                return color(d.data.label);\n            })\n            .delay(function(d, i) {\n                return i * 100 + 100;\n            })\n            .duration(250)\n            .attrTween('d', function(d) {\n                var i = d3.interpolate(d.startAngle, d.endAngle);\n\n                return function(t) {\n                    d.endAngle = i(t);\n                    return arc(d);\n                };\n            })\n            .each(function(d) { \n                this._current = d; \n            });\n\n        // lifted from https://www.sitepoint.com/javascript-generate-lighter-darker-color/\n        function lighterOrDarker(hex, lum) {\n            // validate hex string\n            hex = String(hex).replace(/[^0-9a-f]/gi, '');\n            if (hex.length < 6) {\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            lum = lum || 0;\n\n            // convert to decimal and change luminosity\n            var rgb = \"#\", c, i;\n            for (i = 0; i < 3; i++) {\n                c = parseInt(hex.substr(i*2,2), 16);\n                c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n                rgb += (\"00\"+c).substr(c.length);\n            }\n\n            return rgb;\n        }\n\n\n        path.on('mouseenter', function(d, i, nodes, i18n) {\n\n            console.log('i18n mouseenter', i18n);\n            \n            var total = d3.sum(dataset.map(function(d) {\n                return (d.enabled) ? d.count : 0;\n            }));\n            var percent = Math.round(1000 * d.data.count / total) / 10;\n            tooltip.select('.label').html(d.data.label);\n            tooltip.select('.percent').html(percent + '%');\n          \t// why can I not access i18n from here?\n            tooltip.style('display', 'block');\n            d3.select(this)\n                .style('transition', 'fill 0.3s')\n                .style('fill', lighterOrDarker(color(d.data.label), -0.06));\n\n        });\n\n        path.on('mousemove', function(d) {\n            tooltip\n                .style('top', (d3.event.layerY + 10) + 'px')\n                .style('left', (d3.event.layerX + 10) + 'px');\n        });\n\n        path.on('mouseout', function(d) {\n            tooltip.style('display', 'none');\n\n            d3.select(this)\n                .style('fill', color(d.data.label));\n        });\n\n        var legendRectSize = 18;\n        var legendSpacing = 4;\n\n        var legend = svg.selectAll('.legend')\n            .data(color.domain())\n            .enter()\n            .append('g')\n            .attr('class', 'legend')\n            .attr('transform', function(d, i) {\n                var height = legendRectSize + legendSpacing;\n                var offset =  height * color.domain().length / 2;\n                var horz = -2 * legendRectSize;\n                var vert = i * height - offset;\n                return 'translate(' + horz + ',' + vert + ')';\n            });\n\n        legend.append('rect')\n            .attr('width', legendRectSize)\n            .attr('height', legendRectSize)\n            .style('fill', color)\n            .style('stroke', color)\n            .on('mouseenter', function(d) {\n                d3.select(this)\n                    .style('transition', 'all 0.3s')\n                    .style('fill', function(label) {\n                        return lighterOrDarker(color(label), -0.06);\n                    })\n                    .style('stroke', function(label) {\n                        return lighterOrDarker(color(label), -0.06);\n                    });\n            })\n            .on('mouseout', function() {\n               d3.select(this)\n                   .style('transition', 'all 0.3s')\n                   .style('fill', function(label) {\n                       return color(label);\n                   })\n                   .style('stroke', function(label) {\n                       return color(label);\n                   });\n            })\n            .on('click', function(label) {\n                var rect = d3.select(this);\n                var enabled = true;\n                var totalEnabled = d3.sum(dataset.map(function(d) {\n                    return (d.enabled) ? 1 : 0;\n                }));\n\n                if (rect.attr('class') === 'disabled') {\n                    rect.attr('class', '');\n                } \n                else {\n                    if (totalEnabled < 2) { return; }\n                    rect.attr('class', 'disabled');\n                    enabled = false;\n                }\n\n                pie.value(function(d) {\n                    if (d.label === label) { d.enabled = enabled; }\n                    return (d.enabled) ? d.count : 0;\n                });\n\n                // var i18nlessdataset = dataset.map(function(d) { delete d['i18n']; return d; });\n\n                debugger;\n\n                path = path.data(pie(i18nlessdataset));\n\n                path.transition()\n                    .duration(750)\n                    .attrTween('d', function(d) {\n                        var interpolate = d3.interpolate(this._current, d);\n                        this._current = interpolate(0);\n                        return function(t) {\n                            return arc(interpolate(t));\n                        };\n                    });\n            });\n\n        legend.append('text')\n          .attr('x', legendRectSize + legendSpacing)\n          .attr('y', legendRectSize - legendSpacing)\n          .text(function(d) { return d; });\n\n  </script>", "description": "fresh block", "created_at": "2016-09-07T00:35:38Z", "updated_at": "2016-09-07T00:35:38Z", "api": ["d3.scaleOrdinal", "d3.select", "d3.arc", "d3.pie", "d3.interpolate", "d3.sum"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "atomiccc_202496d0f83800ab01e0bb3d2d9ca955"}, {"code": "<script>\nvar myData=[12, 15, 45, 50, 45,56];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 100 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar wScale = d3.scaleLinear()\n\t.range([0, width]);\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar BAR_HEIGHT = 20;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\nfunction update(myData) {\n\n\twScale.domain([0, d3.max(myData)]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(myData);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", 0)\n    .attr(\"y\", function(d, i ) { return i * (BAR_HEIGHT+1);})\n    .attr(\"height\", BAR_HEIGHT)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .transition().duration(1000)\n    .attr(\"width\", function(d) { return wScale(d); });\n\n}\n\nupdate(myData);\n    \n  </script>", "description": "Tutorial D3 2", "created_at": "2016-09-07T00:21:15Z", "updated_at": "2016-09-07T00:56:59Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "JuanSMartinez_175ee2ad21d78b4575b42156bcdabc45"}, {"code": "<script>\n    \n  var myData=[12, 15, 20, 50];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 200 - margin.left - margin.right,\n    height = 200 - margin.top - margin.bottom;\n\nvar xScale = d3.scaleLinear()\n\t.range([0, width]);\nvar yScale = d3.scaleLinear()\n\t.range([0, height]);\n\n\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar CIRCLE_R = 5;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar xAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis x--axis\")\n  .attr(\"transform\", \"translate(0, \" + height + \")\");\nvar yAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis y--axis\");  \n  \n  \nfunction update(myData, attrX, attrY) {\n\n\tvar fnAccX = function(d) { return d[attrX]; };\n  var fnAccY = function(d) { return d[attrY]; };\n     \n\txScale.domain([0, d3.max(myData, fnAccX) ]);\n  yScale.domain([0, d3.max(myData, fnAccY) ]);\n  \n\tvar points = svg.selectAll(\".points\")\n  \t.data(myData);\n  \n  //Enter\n  var pointsEnter = points.enter()\n  \t.append(\"circle\")\n    .attr(\"class\", \"points\")\n    .attr(\"r\", 0);\n  \n  //Exit\n  points.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"r\", 0)\n  \t.remove();\n \n  //Update\n  points.merge(pointsEnter)\n  \t.attr(\"cx\", function(d) { return xScale(fnAccX(d)); })\n    .attr(\"cy\", function(d) { return yScale(fnAccY(d)); })\n    .attr(\"r\", CIRCLE_R)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n  \t\n  xAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisBottom()\n  \t.scale(xScale)\n    .ticks(3));\n    \n  yAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisLeft()\n  \t\t.scale(yScale)\n    \t.ticks(3)\n     );\n    \n}\n\nvar res=\"https://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=f11688d9fc777acfb94a22ddd0077381&extras=count_views%2C+count_faves%2C+count_comments&format=json&nojsoncallback=1&api_sig=db63d57735ecc57c074f4c962f21ae31\";\n\nd3.json(res, function(err, data) {\n\tif(err) {\n  \tconsole.err(err);\n    alert(err);\n    return;\n  }\n  \n  data.photos.photo.forEach(function (d) {\n  \td.count_views = +d.count_views;\n    d.count_faves = +d.count_faves;\n    d.count_comments = +d.count_comments;\n  })\n  console.log(data);\n  update(data.photos.photo, \"count_views\", \"count_faves\");\n});\n\n    \n  </script>", "description": "Tutorial2 step 1", "created_at": "2016-09-07T00:20:26Z", "updated_at": "2016-09-07T01:44:56Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.max", "d3.axisBottom", "d3.axisLeft", "d3.json"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Franramy_a92c9dcf7a75de2e8851f0c37c2add31"}, {"code": "<script>\n// The new data variable.\nvar data = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n//INIT\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  \nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\nvar y = d3.scale.linear().range([height, 0]);\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\nvar yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span><br><strong>Code:</strong><span style='color:red'>\" + d.code + \"</span>\";\n  })  \n  \n paint(data);\n  \n  \nfunction paint(data){\n    \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nsvg.call(tip);\n\n// The following code was contained in the callback function.\nx.domain(data.map(function(d) { return d.code; }));\ny.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\nsvg.append(\"g\")\n    //.attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    //.call(xAxis)\n\t\t  .append(\"text\")\n    .attr(\"transform\", \"rotate(0)\")\n    .attr(\"y\", 9)\n    .attr(\"x\", width)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n      .text(\"Estudiantes\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n  .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"grades\");\n\nsvg.selectAll(\".bar\")\n    .data(data)\n  .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) { return x(d.code); })\n    .attr(\"width\", x.rangeBand()-10)\n    .attr(\"y\", function(d) { return y(d.grade); })\n    .attr(\"height\", function(d) { return height - y(d.grade); })\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);\n  \n}\n\n  \nfunction organizarData() {\n\n  // The following code was contained in the callback function.\n  data.sort(function(a, b){\n    var gradeA=a.grade, gradeB=b.grade\n    if (gradeA < gradeB) //sort string ascending\n        return -1 \n    if (gradeA > gradeB)\n        return 1\n    return 0 //default return value (no sorting)\n\t});\n  \n  paint(data);\n}\n\n\n</script>", "description": "gradesBlock", "created_at": "2016-09-06T22:43:28Z", "updated_at": "2016-09-07T03:22:06Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.max"], "readme": "2.\n\n ***what***\n\n**Dataset Types:** Tables. La informaci\u00f3n de las notas est\u00e1 organizada en arreglo de objetos\n\n ***why***\n \n*Present - Discover - lookup - explore*\nEn la visualizaci\u00f3n soporta la organizaci\u00f3n de las notas para que de esa forma el usuario puede ver la tendencia de las calificaciones-  \n\n***how:***\n\n*Order - Look - navegate - embed* La visualizaci\u00f3n permite interactuar con el usuario que cuando quiere mayor detalle selecciona cada barra que simboliza las notas  \n \n\n3.\nDecid\u00ed tomar representar el problema con diagrama de barras debido a que por el tipo de variables como c\u00f3digo y promedio es la mejor manera para mostrar esta informaci\u00f3n. Las marcas en este caso usadas son las l\u00edneas y el canal el color de las l\u00edneas.\n\n\nforked from <a href='http://bl.ocks.org/apolan/'>apolan</a>'s block: <a href='http://bl.ocks.org/apolan/6e76364f5e232260e82bb0a2e3745f1e'>gradesBlock</a>", "uid": "apolan_0a6ca5ab0effa6ce36d90ea700f70dac"}, {"code": "<script>\nvar grades = [\t{\"code\":23802620, \"grade\":4.85},\t{\"code\":23802825, \"grade\":4.865},\t{\"code\":23801894, \"grade\":3.24},\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}];\n//Configuracion margenes\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n//variables de los ejes\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Nota:</strong> <span style='color:#feff32'>\" + d.grade + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\n\n  x.domain(grades.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(grades, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(10,\" + height + \")\")\n      .call(xAxis)\n       .selectAll(\"text\")\t\n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-.em\")\n            .attr(\"dy\", \".55em\")\n            .attr(\"transform\", function(d) {\n                return \"rotate(-20)\" \n                });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Nota\");\n\n  svg.selectAll(\".bar\")\n      .data(grades)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code)+10; })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n</script>", "description": "Tarea3-Notas", "created_at": "2016-09-06T22:29:01Z", "updated_at": "2016-09-06T22:29:01Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.max"], "readme": "What:\n\n\n\nWhy:\n\n\n\nHOW:\n\n\n\nArgumentation:\n \nThe grades of an exam are presented to the sdudents in class by the teacher. For the students is essential  to know their respective grades,because of this, the grades are presented with the student code and not only the grades by themselves. Therefor they are presented in two dimensions.\n\nBar chart diagram is the chosen based on the following reasons: it facilitates the visualization of the grades by code also the comparation with the other grades. It make use of marks as lines and  length as the channeles. In the horizontal axis are located the codes and in the vetical axis are the grades. To make it a little bit clear, it is used the iteractivity  to show the right note by passing the mouse by the bar. \n\n\n\nforked from <a href='http://bl.ocks.org/aiMojica10/'>aiMojica10</a>'s block: <a href='http://bl.ocks.org/aiMojica10/cb8b73e9ef7e1b58e775dae8512e7476'>Tarea3-Notas</a>", "uid": "aiMojica10_b745a9d70a0f581b3cea1dd957e82a6e"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], 0.05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\");\n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.code = d.code;\n        d.grade = +d.grade;\n    });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  // add axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 5)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"grade\");\n  \n\n\n  // Add bar chart\n  svg.selectAll(\"circle\")\n      .data(data)\n    .enter().append(\"circle\")\n  \t\t\t.attr(\"cx\", function (d) { return 10+x(d.code); })\n        .attr(\"cy\", function (d) { return y(d.grade); })\n        .attr(\"r\", function (d) { return 2+d.grade })\n        .style(\"fill\", \"red\")\n  \t\t\t.on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(\"Cod. \"+d.code + \"<br/> Grade(\" + d.grade + \")\")\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  \n  \n  /**svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });**/\n\n});\n\n</script>", "description": "fresh block", "created_at": "2016-09-06T22:19:21Z", "updated_at": "2016-09-07T02:29:53Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max"], "readme": "what: notas de los estudiantes de un materia, tabla con atributos ordenados cuantitativos<br>\nwhy: presentar de forma correcta las notas de los estudiantes, con objetivo de comparar y resumir los datos de las notas<br>\nhow:Alinear las notas, jnuto con el embebido de los datos particulares de las notas <br> <br>\nSe realiza un scatterplot debido a que los circulos ubicados en los respectivos puestos ayudan a mostrar correctamente las notas de todos los estudiantes. Adicionalmente el embeber las notas facilita al profesor ver los datos especificos de el estudiante al poner el mouse sobre el punto", "uid": "caev03_60a113c31e24ddfed238ca510cfd6246"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], 0.05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\");\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.code = d.code;\n        d.grade = +d.grade;\n    });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  // add axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 5)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"grade\");\n  \n\n\n  // Add bar chart\n  svg.selectAll(\"circle\")\n      .data(data)\n    .enter().append(\"circle\")\n  \t\t\t.attr(\"cx\", function (d) { return 10+x(d.code); })\n        .attr(\"cy\", function (d) { return y(d.grade); })\n        .attr(\"r\", function (d) { return 2+d.grade })\n        .style(\"fill\", \"red\")\n  \t\t\t.on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(\"Cod. \"+d.code + \"<br/> Grade(\" + d.grade + \")\")\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  \n  \n  /**svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });**/\n\n});\n\n</script>", "description": "fresh block", "created_at": "2016-09-06T22:16:31Z", "updated_at": "2016-09-06T22:16:39Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8de2fcaab0638872e6df90bb239a1bfd'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/0e489fc03eec8c8deb79aa99f67df4aa'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ff4720f4b1894a623ec4b2aebc22bc3b'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/85b458417843c571fdcff060bb0cd15e'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/475d4efc1edbbb1f1950b9840f8047e1'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/aaa015a89d8042d13ea522df55b1e63f'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/bbf0fd8a8fe6f31388d9c7546a0d6885'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/662e3a52e0992d4f284600cbcf1ba3db'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/86e62751d314dc31b812b66166fb772b'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ab51b5b0295296ed3c06c10fc7bd2623'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/4c8feee1311f672e7c7a9cc394b21d59'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/79beaa43e6df5a887456a286561efa0e'>fresh block</a>", "uid": "f94f_d37674701c4901e8c753f861443bf945"}, {"code": "<script>\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n\n// set the ranges\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], 0.05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\n// define the axis\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\n\n\n\n// add the SVG element\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar tooltip = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\");\n// load the data\nd3.json(\"data.json\", function(error, data) {\n\n    data.forEach(function(d) {\n        d.code = d.code;\n        d.grade = +d.grade;\n    });\n\t\n  // scale the range of the data\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  // add axis\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 5)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"grade\");\n  \n\n\n  // Add bar chart\n  svg.selectAll(\"circle\")\n      .data(data)\n    .enter().append(\"circle\")\n  \t\t\t.attr(\"cx\", function (d) { return 10+x(d.code); })\n        .attr(\"cy\", function (d) { return y(d.grade); })\n        .attr(\"r\", function (d) { return 2+d.grade })\n        .style(\"fill\", \"red\")\n  \t\t\t.on(\"mouseover\", function(d) {\n          tooltip.transition()\n               .duration(200)\n               .style(\"opacity\", .9);\n          tooltip.html(\"Cod. \"+d.code + \"<br/> Grade(\" + d.grade + \")\")\n               .style(\"left\", (d3.event.pageX + 5) + \"px\")\n               .style(\"top\", (d3.event.pageY - 28) + \"px\");\n      })\n      .on(\"mouseout\", function(d) {\n          tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n  \n  \n  /**svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });**/\n\n});\n\n</script>", "description": "fresh block", "created_at": "2016-09-06T22:16:11Z", "updated_at": "2016-09-06T22:16:18Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/8de2fcaab0638872e6df90bb239a1bfd'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/0e489fc03eec8c8deb79aa99f67df4aa'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ff4720f4b1894a623ec4b2aebc22bc3b'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/85b458417843c571fdcff060bb0cd15e'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/475d4efc1edbbb1f1950b9840f8047e1'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/aaa015a89d8042d13ea522df55b1e63f'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/bbf0fd8a8fe6f31388d9c7546a0d6885'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/662e3a52e0992d4f284600cbcf1ba3db'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/86e62751d314dc31b812b66166fb772b'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ab51b5b0295296ed3c06c10fc7bd2623'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/4c8feee1311f672e7c7a9cc394b21d59'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/79beaa43e6df5a887456a286561efa0e'>fresh block</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ad47a32cd877b51bb1853d5f4663284b'>fresh block</a>", "uid": "caev03_4e8fabd047681b19e455006a21251ccf"}, {"code": "<script>\n\nvar data = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];  \n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 55},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom; \n  \nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar y = d3.scale.ordinal()\n    .rangePoints([height,0]);\n\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n  \nvar tip = d3.tip()\n  \t.attr('class', 'd3-tip')\n  \t.offset([-10, 0])\n  \t.html(function(d) {\n      if(d.grade<3.0)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n      else if(d.grade>3.0 && d.grade <3.5)\n    \t\treturn \"<strong>Grade:</strong> <span style='color:yellow'>\" + d.grade + \"</span>\";\n      else\n        return \"<strong>Grade:</strong> <span style='color:lightgreen'>\" + d.grade + \"</span>\";\n  });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);  \n  \n\n  \n//d3.tsv(\"grades.tsv\", type, function(error, data) {\n // if (error) throw error;\n\n  x.domain([0, d3.max(data, function(d) { return d.grade; })]);\n  y.domain(data.map(function(d) { return d.code; }));\n \n  \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(0,\" + margin.top +  \")\")\n      .call(yAxis);\n  \t\t\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", 6)\n      .attr(\"dx\", \"0.71em\")\n      .style(\"text-anchor\", \"end\");\n        \n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n   \t\t.attr(\"x\", 0 )//function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return margin.top+y(d.code); })\n  \t\t.on('mouseover', tip.show)\n  \t\t.on('mouseout', tip.hide)\n      .attr(\"height\", 17)//x.rangeBand())\n  \t\t/*.attr(\"width\",0)\n    \t.transition()\n    \t.duration(2000)*/\n  \t\t.attr(\"width\", function(d) { return x(d.grade); })\n  \n  \nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n \n\n</script>", "description": "Tarea 3 - Grades Visualization horizontal", "created_at": "2016-09-06T21:32:34Z", "updated_at": "2016-09-07T04:04:37Z", "api": ["d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>\n\n<h2> What? </h2>\nTable with attributes \"code\" and \"grade\"\n\n<h2> Why? </h2>\n<h3> Tasks </h3>\nPresent and enjoy\n\nCompare and summarize all the course grades.\nIdentify a specific grade of a student.\n\n<h3> Targets </h3>\nGrades distribution\n\n<h2> How? </h2>\n\nAlign continous values and express them in a continous scale.\n\n<h3> Marks </h3>\nLines\n\n\n<h3> Channels </h3>\nLength for cuantitative grade\nHue for range grades\n\n<h2>Short review</h2>\n<p>De acuerdo a los datos, se tiene un atributo categ\u00f3rico y un cuantitativo. De acuerdo a los conceptos aprendidos, el mejor canal para representar \u00e9stos datos es la longitud en una escala alineada. Por ello se decidi\u00f3 realizar un diagrama de barras utilizando la longitud de la barra para representar la nota obtenida. Se decidi\u00f3 realizar horizontal para poder tener una mejor visualizaci\u00f3n sobre los c\u00f3digos de los usuarios.</p>\n<p>Por otro lado tambien es posible detallar la nota espec\u00edfica de cada usuario (\"Detail on demand\") y ver\u00edficar de acuerdo al matiz(hue) si aprob\u00f3, reprob\u00f3 o pas\u00f3 raspando.</p>\n", "uid": "damayor_3cd76524b53adcd478c1963fbf4f8264"}, {"code": "<script>\n    \n    // set the dimensions and margins of the graph\nvar margin = {top: 20, right: 13, bottom: 60, left: 90},\n    width = 960 - margin.left - margin.right,\n    height = 596 - margin.top - margin.bottom;\n    \n    // set the ranges\nvar y = d3.scaleBand()\n          .range([0, height])\n          .padding(0.1);\n    \nvar x = d3.scaleLinear()\n          .range([0, width]);\n    \n\t\t//The data    \nvar data = [\n    {\t \"code\": 23802620,  \"grade\": 4.85},\n    {  \"code\": 23802825,  \"grade\": 4.865},\n    {  \"code\": 23801894,  \"grade\": 3.24}, \n    {  \"code\": 23802926,  \"grade\": 5}, \n    {  \"code\": 23800661,  \"grade\": 3.19},\n    {  \"code\": 23800768,  \"grade\": 3.98},\n    {  \"code\": 23800972,  \"grade\": 4.89}, \n    {  \"code\": 23801922,  \"grade\": 3.73},\n    {  \"code\": 23805498,  \"grade\": 4.795},\n    {  \"code\": 23805913,  \"grade\": 4.85}, \n    {  \"code\": 23800311,  \"grade\": 2.81}, \n    {  \"code\": 23806395,  \"grade\": 4.72},\n    {  \"code\": 23808850,  \"grade\": 3.85},\n    {  \"code\": 23802872,  \"grade\": 2.16},\n    {  \"code\": 23802105,  \"grade\": 4.715},\n    {  \"code\": 23809880,  \"grade\": 4.92},\n    {  \"code\": 23802056,  \"grade\": 4.48}, \n    {  \"code\": 23807897,  \"grade\": 5.2},\n    {  \"code\": 23807916,  \"grade\": 5},\n    {  \"code\": 23801962,  \"grade\": 3.62},\n    {  \"code\": 23808246,  \"grade\": 4.61},\n    {  \"code\": 23802600,  \"grade\": 0.11},\n    {  \"code\": 23808311,  \"grade\": 4.7}];\n\n    //Sort the data in descending order\ndata.sort(function(a, b) {\n  return d3.descending(a.grade, b.grade)\n});\n    \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    \n  // Scale the range of the data in the domains\n  y.domain(data.map(function(d) { return d.code; }));\n  x.domain([0, d3.max(data, function(d) { return d.grade; })]);\n    \n\n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data)\n  \t  .enter()\n    \t.append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\",0 )\n      .attr(\"width\", function(d) { return  x(d.grade);})\n      .attr(\"y\", function(d) { return y(d.code); })\n      .attr(\"height\", y.bandwidth)\n  \t\t.style(\"fill\",function(d) {if((d.grade) >= 5){return \"green\"} if((d.grade) >= 4){return \"yellow\"} if((d.grade) >= 3){return \"blue\"} else{return \"red\"}; }) \n  \t\t\n  //mouse action, should probly be function\n\t\t\t.on(\"mouseover\", function(d){\n  \t \t\td3.select(this)\n        \t.style(\"fill\", \"black\")\n      \td3.select(\"#details\")\n        \t.text(\"Student: \" + d.code + \" got the grade: \" + d.grade)\n      \t \t.attr(\"text-anchor\", \"middle\")\n        \t.style(\"font\", \"23px times\");})\n  \n  //Change the colour back\n    \t.on(\"mouseout\", function(d){\n  \t  \td3.select(this)\n    \t\t\t .style(\"fill\",function(d) {if((d.grade) >= 5){return \"green\"} if((d.grade) >= 4){return \"yellow\"} if((d.grade) >= 3){return \"blue\"} else{return \"red\"}; }) \n      \td3.select(\"#details\")});\n  \t\t\t\n    \n    // add the x Axis  \n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n      // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n    \n\t\t\t   \n\n    // now add titles to the axes\n        svg.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")  \n        // this makes it easy to centre the text as the transform is applied to the anchor\n            .attr(\"transform\", \"translate(\"+ (-150/2) +\",\"+(height/2)+\")rotate(-90)\") \n            .text(\"Code\")\n      \t\t  .style(\"font\", \"23px times\");;\n\n        svg.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")  // this makes it easy to centre the text as the transform is applied to the anchor\n            .attr(\"transform\", \"translate(\"+ (width/2) +\",\"+(height-(-110/3))+\")\")  // centre below axis\n            .text(\"Grade\")\n\t\t\t\t\t\t.style(\"font\", \"23px times\");\n    \n  </script>", "description": "Students grades bar chart", "created_at": "2016-09-06T21:24:57Z", "updated_at": "2016-09-07T03:43:29Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.descending", "d3.select", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "## What, Why and How\n\n#### What:  \n* Table\n\n#### Why:\n\n* Actions: Present, Locate and Compare\n* Targets: Distibution.\n\n#### How:\n* Encode: Order\n* Mape: Size\n* Manipulate: Select\n\nI have students which is a categorical attribute and grades which is an ordinal attribute. That is why I can use vertical position as a channel for the grades and lines as marks for the students.\nThis should be enough but to make it easier for the users I colour coded the students depending on what grade they got or if they failed. This gives a good overview at a first look. It is also hard to see the exact value of the grades and that is why I added the details if you hover over the mouse over a bar. I also added a highlight so you can see for which bar you get the details.\n\n\nThis graph is made with the help of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.\n\nforked from <a href='http://bl.ocks.org/d3noob'>d3noob</a>'s block: <a href='http://bl.ocks.org/d3noob/bdf28027e0ce70bd132edc64f1dd7ea4'>Simple bar graph in v4</a>\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)", "uid": "elt12njo_d179d2ce3a7f1b61e8503b30e9cf245d"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 150, left: 40},\n    width = 700 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1, 1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);  \n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\".paint\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", function(error, data) {\n\n  data.forEach(function(d) {\n    d.grade = +d.grade;\n  });\n\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  \t\t.selectAll(\"text\")\n  \t\t.style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" )\n\n  \n \n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n\n   d3.select(\".SortGrade\").on(\"change\", changeSortGrade);\n   d3.select(\".SortCode\").on(\"change\", changeSortCode);\n\n  // after 2000ms\n  var sortTimeout = setTimeout(function() {\n    d3.select(\".SortGrade\").property(\"checked\", true).each(changeSortGrade);\n  }, 2000);\n\n  function changeSortGrade() {\n    d3.select(\".SortCode\").property(\"checked\", false)\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.grade - a.grade; }\n        : function(a, b) { return d3.ascending(a.code, b.code); })\n        .map(function(d) { return d.code; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.code) - x0(b.code); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.code); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      .selectAll(\"g\")\n        .delay(delay)\n    .selectAll(\"text\")\n  \t\t.style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n  }\n\n\nfunction changeSortCode() {\n    d3.select(\".SortGrade\").property(\"checked\", false)\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.code - a.code; }\n        : function(a, b) { return d3.ascending(a.code, b.code); })\n        .map(function(d) { return d.code; }))\n        .copy();\n\n    svg.selectAll(\".bar\") \n        .sort(function(a, b) { return x0(a.code) - x0(b.code); });\n\n    var transition = svg.transition().duration(750),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.code); });\n\n    transition.select(\".x.axis\")\n        .call(xAxis)\n      .selectAll(\"g\")\n        .delay(delay)\n    .selectAll(\"text\")\n  \t\t.style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n  }\n\n});\n\n</script>", "description": "Grades", "created_at": "2016-09-06T21:16:22Z", "updated_at": "2016-09-07T02:01:54Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nWhat\n\nclasificar la informacion de una tabla de estudiantes y notas\n\nWhy\n\npresentar los notas de los estudiantes para identificar la distribuccion de los datos y las caracteristicas de los mismos \n\nHow\n\nExprear los valores categoriocos(Code) y ordenados (grade) mediante la posicion de barras paralelas, permitiendo al usurio navegar facilmente el conjunto de datos\n\nArgumento\n\nMediante la visualizaci\u00f3n se permite observar las notas del curso, los datos entregadas son el c\u00f3digo del estudiante y el valor en hexadecimal de la nota. \nPara este grupo de datos limitados un diagrama de barras es suficiente para representar la nota de los estudiantes, la posici\u00f3n como marca para la variable permite visualizar f\u00e1cil mente los datos y identificar del grupo de datos quien es el menor y quien es el mayor.\nPara mejorar la interpretaci\u00f3n del usuario, se agregaron dos checkbox que permiten orden los datos por c\u00f3digo y por nota. Esto es \u00fatil si se desea clasificar a los estudiantes o si las notas se deban entregar por orden de c\u00f3digo.\nSi se tuviera una metada de la informaci\u00f3n podr\u00eda concluirse diferentes cosas sobre los datos, por ejemplo, si una nota fuera viable entre 0 y 5, existir\u00eda una incongruencia en el calcula de la nota de un estudiante ya que sobrepasa dicho valor.\n\n", "uid": "zubcarz_6d5f4ff7b37b2e2a562c02f9daf59a75"}, {"code": "<script>\n    var w = 940;\n    var h = 230;\n    var startsAxis = 30\n    \n    var leggend = d3.select(\"#leggend\");\n\n    var grades = [\n      {\"code\":23802620, \"grade\":4.85},\n      {\"code\":23802825, \"grade\":4.865},\n      {\"code\":23801894, \"grade\":3.24},\n      {\"code\":23802926, \"grade\":5},\n      {\"code\":23800661, \"grade\":3.19},\n      {\"code\":23800768, \"grade\":3.98},\n      {\"code\":23800972, \"grade\":4.89},\n      {\"code\":23801922, \"grade\":3.73},\n      {\"code\":23805498, \"grade\":4.795},\n      {\"code\":23805913, \"grade\":4.85},\n      {\"code\":23800311, \"grade\":2.81},\n      {\"code\":23806395, \"grade\":4.72},\n      {\"code\":23808850, \"grade\":3.85},\n      {\"code\":23802872, \"grade\":2.16},\n      {\"code\":23802105, \"grade\":4.715},\n      {\"code\":23809880, \"grade\":4.92},\n      {\"code\":23802056, \"grade\":4.48},\n      {\"code\":23807897, \"grade\":5.2},\n      {\"code\":23807916, \"grade\":5},\n      {\"code\":23801962, \"grade\":3.62},\n      {\"code\":23808246, \"grade\":4.61},\n      {\"code\":23802600, \"grade\":0.11},\n      {\"code\":23808311, \"grade\":4.7}\n    ];\n    \n    var margin = {\n        top: 30,\n        right: 20,\n        bottom: 70,\n        left: 50\n      },\n      width = 1200 - margin.left - margin.right,\n      height = 360 - margin.top - margin.bottom;\n\n    var xScale = d3.scale.ordinal()\n      .domain(grades.map(function(d) {\n        return d.code;\n      }))\n      .rangeRoundBands([0, w - startsAxis], 0.05);\n\n    var yScale = d3.scale.linear()\n      .domain([0, d3.max(grades, function(d) {\n        return d.grade;\n      })])\n      .range([h, 0]);\n\n    var xAxis = d3.svg.axis()\n      .scale(xScale)\n      .orient(\"top\");\n\n    var yAxis = d3.svg.axis()\n      .scale(yScale)\n      .orient(\"left\")\n      .ticks(5);\n\n    var code = function(d) {\n      return d.code;\n    };\n\n    //Create SVG element\n    var svg = d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right + startsAxis)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    //Create bars\n    svg.selectAll(\"rect\")\n      .data(grades, code)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", function(d, i) {\n        return xScale(d.code) + startsAxis;\n      })\n      .attr(\"y\", function(d) {\n        return yScale(d.grade) + 10;\n      })\n      .attr(\"width\", xScale.rangeBand())\n      .attr(\"height\", function(d) {\n        return h - yScale(d.grade);\n      })\n      .attr(\"fill\", function(d) {\n        if (d.grade >= 3) return \"#66bd63\";\n        return \"#f46d43\";\n      })\n\n    //Tooltip\n    .on(\"mouseover\", function(d) {\n        //Get this bar's x/y grades, then augment for the tooltip\n        var xPosition = parseFloat(d3.select(this).attr(\"x\")) + xScale.rangeBand() / 2;\n        var yPosition = parseFloat(d3.select(this).attr(\"y\")) + 14;\n        leggend.style(\"background-color\", \"orange\");\n        leggend.selectAll(\"h3\").remove()\n        leggend.selectAll(\"p\").remove()\n        leggend.append(\"h3\")\n          .attr(\"label\", \"pLabel\")\n          .text(\"Detail:\");\n        leggend.append(\"p\")\n          .attr(\"code\", \"pCode\")\n          .text(\"Code: \" + d.code);\n        leggend.append(\"p\")\n          .attr(\"grade\", \"pGrade\")\n          .text(\"Grade: \" + (d.grade).toFixed(2));\n        //Update Tooltip Position & grade\n        d3.select(\"#tooltip\")\n          .style(\"left\", xPosition + \"px\")\n          .style(\"top\", yPosition + \"px\")\n          .select(\"#grade\")\n          .text(d.grade);\n        d3.select(\"#tooltip\").classed(\"hidden\", false)\n      })\n      .on(\"mouseout\", function() {\n        //Remove the tooltip\n        d3.select(\"#tooltip\").classed(\"hidden\", true);\n        leggend.style(\"background-color\", \"transparent\");\n        leggend.selectAll(\"h3\").remove()\n        leggend.selectAll(\"p\").remove()\n      });\n\n    svg.append(\"g\") // Add the X Axis\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(\" + startsAxis + \",\" + (h + 10) + \")\")\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"2.5em\")\n      .attr(\"transform\",\"rotate(-65)\");\n    // yAxis\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"transform\", \"translate(\" + startsAxis + \",+10)\")\n      .call(yAxis);\n\n    svg.append(\"text\")\n      .attr(\"transform\", \"translate(\" + (w - startsAxis) + \",\" + (h + 3) + \")\")\n      .attr(\"font-family\",\"sans-serif\")\n      .attr(\"font-size\",\"12\")\n      .text(\"Code\");\n\n    svg.append(\"text\")\n      .attr(\"transform\",\"translate(\" + 0 + \",\" + (9) +\")\")\n      .attr(\"font-family\",\"sans-serif\")\n      .attr(\"font-size\",\"12\")\n      .text(\"Grade\");\n\n\n    function search() {\n    \t\tvar searchedCode = document.getElementById(\"searchedCode\").value;\n    \t\tgrades.forEach(function (d) {\n          if (d.code == searchedCode) {\n          \tleggend.style(\"background-color\", \"orange\");\n            leggend.append(\"h3\")\n              .attr(\"label\", \"pLabel\")\n              .text(\"Detail:\");\n            leggend.selectAll(\"p\").remove()\n            leggend.append(\"p\")\n              .attr(\"code\", \"pCode\")\n              .text(\"Code: \" + d.code);\n            leggend.append(\"p\")\n              .attr(\"grade\", \"pGrade\")\n              .text(\"Grade: \" + (d.grade).toFixed(2));\n            leggend.selectAll(\"p\").style(\"color\", \"black\");\n          }\n        })\n      }\n\n    d3.select(\"#search\").on(\"click\",search);\n  </script>", "description": "Bar chart", "created_at": "2016-09-06T21:04:50Z", "updated_at": "2016-09-07T21:00:47Z", "api": ["d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n# Bar chart\nThis bar chart was created using D3. The main purpose of this graph is to represent the grades from 23 different students.\n___\n\n## What, Why, How Analysis for the problem and the solution\n\n### WHAT\n\nThis visualization seeks to present the grades, in a range between ``0`` and ``5``, of ``23`` different students. The different variables considered in the problem are:\n\n* Student's code: *Categorical variable* The student's code. Despite it's a numeric value, the numeric value has no semantic value.\n\n* Grade: *Quantitative variable* The student's grade. It's a continuos value in a range between ``0`` and ``5``.\n\n### WHY\n\nThe purpose of this visualization is to present an overview of the grades of some students. In addition, it supports a filtering function that shows the grade of an specific student and locates it in the graph, in order to compare the individual results with the general performance. Lastly, the visualization allows to see the student's detail, which is implemented using a mouseover function.\n\n### HOW\n\nThe different functionalities offered in the visualization are developed accordingly to the primary visualization rules: expressiveness and effectiveness. In the first place, it needs to be made clear that there's a new variable proposal: a fail indicator. This is the result of data aggregation and fulfills the purpose of indicate which students failed. Taking this into account, there's a channel associated to each variable: aligned position in the vertical axis for the grades, aligned position in the horizontal axis for the students, and color for the new categorical value: the fail indicator.\n\n---\n\n## Why this visualization\n\nAs it is explained in the What, Why and How Analysis, the decisions took in order to choose this specific visualization are based taking into account the **visualization mantra** *overview first*, *zoom and filter* and *detail on demand* and the **rules of visualization** *effectiveness* and *expressiveness*.\n\n___\n\n#### Meili Vanegas Hern\u00e1ndez\n#### Visual Analytics 2016\n#### Universidad de los Andes\n#### Bogot\u00e1, Colombia", "uid": "mvanegas10_cbd2c955eb7aaf336b1223ed8334c1d0"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangePoints([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"grades.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.code; }));\n // data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", 30)//x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "Tarea 3 - Grades Visualization", "created_at": "2016-09-06T20:08:11Z", "updated_at": "2016-09-06T20:09:03Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/damayor/'>damayor</a>'s block: <a href='http://bl.ocks.org/damayor/f9af6617835cbb37e2c280703ce255ca'>Tarea 3 - Grades Visualization</a>", "uid": "damayor_7ca91d178f923a4b5683bc28476c104f"}, {"code": "<script>\nvar grades = [\t{\"code\":23802620, \"grade\":4.85},\t{\"code\":23802825, \"grade\":4.865},\t{\"code\":23801894, \"grade\":3.24},\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}];\n//Configuracion margenes\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n//variables de los ejes\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Nota:</strong> <span style='color:#feff32'>\" + d.grade + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\n\n  x.domain(grades.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(grades, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(10,\" + height + \")\")\n      .call(xAxis)\n       .selectAll(\"text\")\t\n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-.em\")\n            .attr(\"dy\", \".55em\")\n            .attr(\"transform\", function(d) {\n                return \"rotate(-20)\" \n                });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Nota\");\n\n  svg.selectAll(\".bar\")\n      .data(grades)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code)+10; })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n</script>", "description": "Tarea3-Notas", "created_at": "2016-09-06T19:06:20Z", "updated_at": "2016-09-07T03:24:56Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.max"], "readme": "<b>What: </b> <br>\nTable<br>\none categorical attribute : code <br>\none quiantitative attribute: grade\n\n<b>Why:</b>  <br>\nPresent-Distribution  <br>\nlookup-values  <br>\n\n<b>How:</b> <br>\nSeparate horizontally (code) <br>\nAligned vertically (grade) <br>\n\n<b>Argumentation </b>  <br>\n<p> For the students the essential is to know their grades, because of this, \nin the diagram are shown the grades with the student code and not only the grades. Considering this, the bar diagram is chosen for the representation. Line is chosen as the market, because it helps to represent with the help of the length of it a grade. In the horizontal axis are the codes and in the vertical axis are the grades, starting with 0 and finishing a little more than five. They are chosen in this oreder because it is easier to compare, vertically, the grades between students. </p>\n\n\n", "uid": "aiMojica10_cb8b73e9ef7e1b58e775dae8512e7476"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"grades.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "fresh block", "created_at": "2016-09-06T18:41:32Z", "updated_at": "2016-09-06T18:41:32Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "damayor_f9af6617835cbb37e2c280703ce255ca"}, {"code": "<script>\n//load data\n  var data = [\n    {\t \"code\": 23802620,  \"grade\": 4.85},\n    {  \"code\": 23802825,  \"grade\": 4.865},\n    {  \"code\": 23801894,  \"grade\": 3.24}, \n    {  \"code\": 23802926,  \"grade\": 5}, \n    {  \"code\": 23800661,  \"grade\": 3.19},\n    {  \"code\": 23800768,  \"grade\": 3.98},\n    {  \"code\": 23800972,  \"grade\": 4.89}, \n    {  \"code\": 23801922,  \"grade\": 3.73},\n    {  \"code\": 23805498,  \"grade\": 4.795},\n    {  \"code\": 23805913,  \"grade\": 4.85}, \n    {  \"code\": 23800311,  \"grade\": 2.81}, \n    {  \"code\": 23806395,  \"grade\": 4.72},\n    {  \"code\": 23808850,  \"grade\": 3.85},\n    {  \"code\": 23802872,  \"grade\": 2.16},\n    {  \"code\": 23802105,  \"grade\": 4.715},\n    {  \"code\": 23809880,  \"grade\": 4.92},\n    {  \"code\": 23802056,  \"grade\": 4.48}, \n    {  \"code\": 23807897,  \"grade\": 5.2},\n    {  \"code\": 23807916,  \"grade\": 5},\n    {  \"code\": 23801962,  \"grade\": 3.62},\n    {  \"code\": 23808246,  \"grade\": 4.61},\n    {  \"code\": 23802600,  \"grade\": 0.11},\n    {  \"code\": 23808311,  \"grade\": 4.7}];\n  \ndata.sort(function(a, b) {\n  return d3.descending(a.grade, b.grade)\n});\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 70},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scaleBand()\n    .range([0, height])\n\t\t.paddingInner(0.1);\n\nvar x = d3.scaleLinear()\n    .range([0, width]);\n  \nvar p = d3.scaleLinear()\n\t\t.range([0, 100]);\n\nvar yAxis = d3.axisLeft()\n    .scale(y);\n\nvar xAxis = d3.axisBottom()\n    .scale(x);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar defs = d3.select(\"body svg\").append(\"defs\");\n\n  \n\n  y.domain(data.map(function(d) { return d.code; }));\n  x.domain([0, d3.max(data, function(d) { return d.grade; })]);\n  p.domain(x.domain());\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", function(d) { return y(d.code); })\n      .attr(\"height\", y.bandwidth())\n      .attr(\"x\", 0)\n      .attr(\"width\", width)\n  \t\t.style(\"fill\", function(d, i) { return \"url(#gradient_\" + i + \")\"; }) \n  \t\t.on(\"mouseover\", function(d, i) {\n    \t\t\tdefs.select(\"#gradient_\" + i).selectAll(\".bar\")\n          \t\t.classed(\"hovered\", true)\n  \t\t\t})\n  \t\t.on(\"mouseout\", function(d, i) {\n    \t\t\tdefs.select(\"#gradient_\" + i).selectAll(\".bar\")\n          \t\t.classed(\"hovered\", false)\n  \t\t\t})\n  ;\n  defs.selectAll(\"linearGradient\")\n  \t\t.data(data)\n  \t.enter().append(\"linearGradient\")\n  \t\t.attr(\"id\", function(d, i) { return \"gradient_\" + i; })\n  \t\t.attr(\"x1\", 0)\n  \t\t.attr(\"x2\", 1)\n  \t\t.attr(\"y1\", 0)\n  \t\t.attr(\"y2\", 0)\n  \t\t.each(function(d) {\n   \t\t\t\tvar self = d3.select(this);\n    \t\t\tvar stops = [\"bar start\", \"bar end\", \"empty end\"];\n    \t\t\tself.selectAll(\"stop\")\n          \t\t.data(stops)\n          \t.enter().append(\"stop\")\n          \t\t.attr(\"class\", function(s, i) { return s; })\n          \t\t.attr(\"offset\", function(s, i) {\n            \t\t\treturn (i ? p(d.grade) : \"0\") + \"%\";\n          \t\t\t})\n         \t;\n  \t\t\t})\n \t;\n\n\n</script>", "description": "tarea2", "created_at": "2016-09-06T18:24:21Z", "updated_at": "2016-09-06T19:09:49Z", "api": ["d3.descending", "d3.scaleBand", "d3.scaleLinear", "d3.axisLeft", "d3.axisBottom", "d3.select", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>\n\nforked from <a href='http://bl.ocks.org/seemantk/'>seemantk</a>'s block: <a href='http://bl.ocks.org/seemantk/ec245e1f4e824e685982dd5d3fbb2fcc'>Bar Chart IV - d3v4</a>\n\nforked from <a href='http://bl.ocks.org/seemantk/'>seemantk</a>'s block: <a href='http://bl.ocks.org/seemantk/2f8ff2b168ec2c408603345d0203caea'>Bar Chart V - linearGradients</a>\n\nforked from <a href='http://bl.ocks.org/seemantk/'>seemantk</a>'s block: <a href='http://bl.ocks.org/seemantk/a99846555f4bc0487aab83186ad4f85c'>Bar Chart VI - horizontal linearGradients</a>", "uid": "elt12njo_83be676a05d1f07ba702cff8c62a405e"}, {"code": "<script>\n// The new data variable.\nvar data = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n//INIT\n  paint();\n  \nfunction paint(){\n    \nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\nvar y = d3.scale.linear().range([height, 0]);\nvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\nvar yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span><br><strong>Code:</strong><span style='color:red'>\" + d.code + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\nsvg.call(tip);\n\n// The following code was contained in the callback function.\nx.domain(data.map(function(d) { return d.code; }));\ny.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\nsvg.append(\"g\")\n    //.attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    //.call(xAxis)\n\t\t  .append(\"text\")\n    .attr(\"transform\", \"rotate(0)\")\n    .attr(\"y\", 9)\n    .attr(\"x\", width)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n      .text(\"Estudiantes\");\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n  .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"grades\");\n\nsvg.selectAll(\".bar\")\n    .data(data)\n  .enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) { return x(d.code); })\n    .attr(\"width\", x.rangeBand()-10)\n    .attr(\"y\", function(d) { return y(d.grade); })\n    .attr(\"height\", function(d) { return height - y(d.grade); })\n    .on('mouseover', tip.show)\n    .on('mouseout', tip.hide);\n  \n}\n  \n\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n  \nfunction organizarData() {\n  document.body.innerHTML = '';\n  // The following code was contained in the callback function.\n  data.sort(function(a, b){\n    var gradeA=a.grade, gradeB=b.grade\n    if (gradeA < gradeB) //sort string ascending\n        return -1 \n    if (gradeA > gradeB)\n        return 1\n    return 0 //default return value (no sorting)\n\t});\n  \n  paint();\n  console.log('Sorted');\n  \n  var element = document.createElement(\"input\");\n\n  element.type =button;\n  element.value = media;\n  element.name = btn; // And the name too?\n  element.onclick = function() { \n  };\n  \n  var foo = document.getElementById(\"fooBar\");\n  //Append the element in page (in span).  \n  foo.appendChild(element);\ndocument.getElementById(\"btnAdd\").onclick = function() {\n  add(\"text\");\n};\n}    \n</script>", "description": "gradesBlock", "created_at": "2016-09-06T18:22:45Z", "updated_at": "2016-09-06T22:42:11Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.max"], "readme": "2.\n\n ***what***\n\n**Dataset Types:** Tables. La informaci\u00f3n de las notas est\u00e1 organizada en arreglo de objetos\n\n ***why***\n \n*Present - Discover - lookup - explore*\nEn la visualizaci\u00f3n soporta la organizaci\u00f3n de las notas para que de esa forma el usuario puede ver la tendencia de las calificaciones-  \n\n***how:***\n\n*Order - Look - navegate - embed* La visualizaci\u00f3n permite interactuar con el usuario que cuando quiere mayor detalle selecciona cada barra que simboliza las notas  \n \n\n3.\nDecid\u00ed tomar representar el problema con diagrama de barras debido a que por el tipo de variables como c\u00f3digo y promedio es la mejor manera para mostrar esta informaci\u00f3n. Las marcas en este caso usadas son las l\u00edneas y el canal el color de las l\u00edneas.\n", "uid": "apolan_6e76364f5e232260e82bb0a2e3745f1e"}, {"code": "<script>\n\n// A formatter for counts.\nvar formatCount = d3.format(\",.0f\");\n\nvar margin = {top: 10, right: 30, bottom: 30, left: 30},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nd3.json(\"histo.json\", function(error, histodata) {\n\n       \n    // read in histogram data that was generated previously with python numpy\n    /*for (i=0; i<histodata.division.length; i++) {\n        d = [];\n        d['x'] = parseFloat(histodata.division[i]);\n        d['y'] = parseInt(histodata.count[i]);\n        data.push(d);\n    }*/\n  \tvar data1 =\t[[23802620, 4.85],\n                [23802825, 4.865],\n                [23801894, 3.24],\n                [23802926, 5],\n                [23800661, 3.19],\n                [23800768, 3.98],\n                [23800972, 4.89],\n                [23801922, 3.73],\n                [23805498, 4.795],\n                [23805913, 4.85],\n                [23800311, 2.81],\n                [23806395, 4.72],\n                [23808850, 3.85],\n                [23802872, 2.16],\n                [23802105, 4.715],\n                [23809880, 4.92],\n                [23802056, 4.48],\n                [23807897, 5.2],\n                [23807916, 5],\n                [23801962, 3.62],\n                [23808246, 4.61],\n                [23802600, 0.11],\n                [23808311, 4.7]];\n  \n  \tvar maxd = 0;\n    var mind = 0;\n    var d, dataRes=[0,0,0,0,0,0,0], data = [];\n  \n    for (i=0; i<data1.length; i++) {\n      \tif(parseFloat(data1[i][1])<mind)\n          {\n            mind = parseFloat(data1[i][1]);\n          }\n      \tif(parseFloat(data1[i][1])>maxd){\n          maxd = parseFloat(data1[i][1]);\n        }\n        d = [];\n        d['x'] = parseFloat(data1[i][1]);\n        d['y'] = parseInt(data1[i][0]);\n        data.push(d);\n      \t\n      \tif(parseFloat(data1[i][1])<=1){\n          dataRes[0]=dataRes[0]+1;          \n        }else if(parseFloat(data1[i][1])>1 && parseFloat(data1[i][1])<=2){\n          dataRes[1]=dataRes[1]+1;\n        }else if(parseFloat(data1[i][1])>2 && parseFloat(data1[i][1])<=3){\n          dataRes[2]=dataRes[2]+1;\n        }else if(parseFloat(data1[i][1])>3 && parseFloat(data1[i][1])<=4){\n          dataRes[3]=dataRes[3]+1;\n        }else if(parseFloat(data1[i][1])>4 && parseFloat(data1[i][1])<=5){\n          dataRes[4]=dataRes[4]+1;\n        }else if(parseFloat(data1[i][1])>5){\n          dataRes[5]=dataRes[5]+1;\n        }\n    }\n  \n\t\tvar dataH =[];\n  \tfor (i=0; i<dataRes.length; i++) {\n     \t\td = [];\n        d['x'] = i;\n        d['y'] = parseInt(dataRes[i]);\n        dataH.push(d);\n    }\n    \n    var w = (maxd-mind)/5.1;\n\n    var x = d3.scale.linear()\n        .domain([0, d3.max(dataH, function(d) { return d.x; })])\n        .range([0, width ]);\n  \n  \n    \n    var y = d3.scale.linear()\n        .domain([0, d3.max(dataH, function(d) { return d.y; })])\n        .range([height, 0]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\");\n\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var bar = svg.selectAll(\".bar\")\n        .data(dataH)\n      .enter().append(\"g\")\n        .attr(\"class\", \"bar\")\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.x) + \",\" + y(d.y) + \")\"; });\n\n    bar.append(\"rect\")\n        .attr(\"x\", 1)\n        .attr(\"width\", x(w) - 1)\n    \t\t.style(\"fill\", function(d) { if(d.x < 3.0){ return \"red\";} else{return \"blue\"}  })\n        .attr(\"height\", function(d) { return height - y(d.y); });\n\n    bar.append(\"text\")\n        .attr(\"dy\", \".75em\")\n        .attr(\"y\", 6)\n        .attr(\"x\", x(w) / 2)\n        .attr(\"text-anchor\", \"middle\")        \t\t\n        .text(function(d) { return formatCount(d.y); });\n  \n  \tbar.append(\"text\")\n        .attr(\"dy\", \".75em\")\n        .attr(\"y\", -15)\n        .attr(\"x\", x(w) / 2)\n        .attr(\"text-anchor\", \"middle\")\n    \t\t.style(\"fill\", \"Black\")\n    \t\t.text(function(d){if(d.x > 4.0){ return \"Aja y tu qu?\";}})\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n    \n    svg.append(\"text\")\n        .attr(\"class\", \"histogram-title\")\n        .attr(\"y\",  80)\n        .attr(\"x\", 300)\n        .attr(\"text-anchor\", \"end\")\n        .text(histodata.title);\n    });\n\n</script>", "description": "Ancient Histogram", "created_at": "2016-09-06T18:14:44Z", "updated_at": "2016-09-07T01:57:24Z", "api": ["d3.format", "d3.json", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.select"], "readme": "This example displays a histogram from data of studen's grades:\n\n\nOriginal code from Bostock's [Histogram](http://bl.ocks.org/mbostock/3048450) was modified for display data from a vector in the code.  \n\n\nWhat?\nThe type off dataset is Table.\nThe type of data is quantitative and categorical.\n\nWhy?\nAction: Present.\nTarget: \nAttributes: One (grades).  Distribution of the grades.\nPresent distribution of the grades.\n\nHow?\n\nMarks: Lines.\n\nChanels: Position (Vertical y horizontal), colors (hue).\n\nEncode: \nAlign and Map.\n\nExplanation:\nThe task of this display is to present the distribution of grouped notes. Why? This is done instead of comparing each of the notes, is to check a group of them.\n\nFor this a histogram showing the ranges of notes grouped by number of students is used. The order of the intervals ranging from the smallest to the largest.\n\nOne of the advantages is that it allows us to see, without thinking too that there are 3 students have notes below 3.0, and a student had a higher note to 5.0 (In this case a note was placed, as it is presumed that the note range is between 0 and 5.0).\n\ncolor channel is used because it is assumed that the person possessing notes below 3.0, have failed.\n\nAnother channel is used (vertical and horizontal) to indicate that the more to the right are higher and higher in the vertical is greater the number of students\n\n\n\n\n\nforked from <a href='http://bl.ocks.org/StewartNoyce/'>StewartNoyce</a>'s block: <a href='http://bl.ocks.org/StewartNoyce/9625726'>Ancient Histogram</a>\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/ae831003e201fa5acede76adf21a8b66'>Ancient Histogram</a>", "uid": "eduavencama_96fe335be6414888953f01c310832588"}, {"code": "<script>\n\n//load data\n  var data = [\n    {\t \"code\": 23802620,  \"grade\": 4.85},\n    {  \"code\": 23802825,  \"grade\": 4.865},\n    {  \"code\": 23801894,  \"grade\": 3.24}, \n    {  \"code\": 23802926,  \"grade\": 5}, \n    {  \"code\": 23800661,  \"grade\": 3.19},\n    {  \"code\": 23800768,  \"grade\": 3.98},\n    {  \"code\": 23800972,  \"grade\": 4.89}, \n    {  \"code\": 23801922,  \"grade\": 3.73},\n    {  \"code\": 23805498,  \"grade\": 4.795},\n    {  \"code\": 23805913,  \"grade\": 4.85}, \n    {  \"code\": 23800311,  \"grade\": 2.81}, \n    {  \"code\": 23806395,  \"grade\": 4.72},\n    {  \"code\": 23808850,  \"grade\": 3.85},\n    {  \"code\": 23802872,  \"grade\": 2.16},\n    {  \"code\": 23802105,  \"grade\": 4.715},\n    {  \"code\": 23809880,  \"grade\": 4.92},\n    {  \"code\": 23802056,  \"grade\": 4.48}, \n    {  \"code\": 23807897,  \"grade\": 5.2},\n    {  \"code\": 23807916,  \"grade\": 5},\n    {  \"code\": 23801962,  \"grade\": 3.62},\n    {  \"code\": 23808246,  \"grade\": 4.61},\n    {  \"code\": 23802600,  \"grade\": 0.11},\n    {  \"code\": 23808311,  \"grade\": 4.7}];\n  \n// Sort the data by grade\ndata.sort(function(a, b) {\n  return d3.descending(a.grade, b.grade)\n});  \n  \n//---- step 3: select svg and set width ---------------\n// 1. set variables \"width\" and \"barHeight\"\nvar margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 70\n  },\n  width = 960 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scaleBand()\n  .range([0, height])\n  .paddingInner(0.1);\n\nvar x = d3.scaleLinear()\n  .range([0, width]);\nvar p = d3.scaleLinear()\n  .range([0, 100]);\n  \n\n    barHeight = 20;\n  \n// 2. select SVG by className  \nvar chart = d3.select(\".chart\")\n// \t\t2.1 set width attr\n    .attr(\"width\", width);\n// check: Elements view \n\n//axis  \nvar yAxis = d3.axisLeft()\n  .scale(y);\n\nvar xAxis = d3.axisBottom()\n  .scale(x);  \n  \ny.domain(data.map(function(d) {\n  return d.code;\n}));\nx.domain([0, d3.max(data, function(d) {\n  return d.grade;\n})]);\np.domain(x.domain());\n\ny.domain(data.map(function(d) {\n  return d.code;\n}));\nx.domain([0, d3.max(data, function(d) {\n  return d.grade;\n})]);\np.domain(x.domain());\n\nchart.append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", \"translate(0,\" + height + \")\")\n  .call(xAxis);\n\nchart.append(\"g\")\n  .attr(\"class\", \"y axis\")\n  .call(yAxis)\n  .append(\"text\")\n  .attr(\"transform\", \"rotate(-90)\")\n  .attr(\"y\", 6)\n  .attr(\"dy\", \".71em\")\n  .style(\"text-anchor\", \"end\")\n  .text(\"Frequency\");\n\n \n  \n  \n//---- step 4: map data with px on x-axis ----------\n// 1. assign \"xScale\" a scaleLinear func  \nvar xScale = d3.scaleLinear()\n// 2. set px-range (data-range as default)\n    .range([0, width]);\n// 3. Console view: check data-range, px-range, map(0.5) to px\nconsole.log(\" data-range: \", xScale.domain(), \"\\n px-range: \", xScale.range(), \"\\n test map data(0.5) to px: \", xScale(0.5));\n\n  \n// ---- step 5.0 create row function ---------------\n//   1. for each d object \nfunction type(d) {\n//   2. assign numeric value back to d.value\n  d.grade = +d.grade; \n  return d;\n}    \n  \n\n  \n// \t 4. Console view: \n   \n//console.log(\" processed data: \", data);\n//console.log(\" length of data: \", data.length);\n//console.log(\" column names of data: \", data.columns);\n//console.log(\" check data.name: \", data.map(function(d){return d.name;}));\n//console.log(\" check data.value:  \", data.map(function(d){return d.value;}));\n\n  \n// ---- step 6: set data range for xScale func -----------------\n//   1. set data-range for xScale func\n//   2. calc max among all rows of data.value \n  xScale.domain([0, d3.max(data, function(d) { return d.grade; })]);\n  \n// ---- step 7: set height for SVG -----------------\n//   1. select SVG using svg variable\n//   2. calc SVG height using barHeight and data.length\n  chart.attr(\"height\", barHeight * data.length);\n  \n// ---- step 8: upon SVG, bind data with g placeholders ---------\n//   0. upon SVG\n//   1. select all existing g placeholders\n   var bar = chart.selectAll(\"g\")\n//    \t\t\t\t\t\t\t2. bind with data \n \t\t\t\t\t\t\t     .data(data)\n//    \t\t\t\t\t 3. select all entering NodeList elements \t\n\t\t\t\t\t\t     .enter()\n//    \t\t\t\t\t\t4. create a g placeholder upon each NodeList elements \n   \t\t\t\t\t\t\t\t.append(\"g\") \n//    \t\t\t\t\t\t 5. transform-translate each g at diff position by data row index\n                   .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * barHeight + \")\"; }); \n//   6. assign all g placeholders to var \"bar\"\n \n// Elements View: see all g placeholders\n  \n  \n  \n// ---- step 9: upon each g, create a rect  ------------\n//   1. create a rect upon each g placeholder\nvar rects = bar.append(\"rect\") \n//   2. set rect's width using each row's data.value\n      .attr(\"width\", function(d) { return xScale(d.grade); })\n//   3. set rect's height with 1px space\n\t\t\t.attr(\"height\", barHeight - 1);\n\n  // Elements View: see all rects \n  \n   \n// ---- step 10: upon each g, create a text \n//   0. upon each and all g, inherit g's x,y coord\n//   1. create a text \nvar texts =  bar.append(\"text\") \n// \t 2. set text x coord using each row's value - 3\n      .attr(\"x\", function(d) { return xScale(d.grade) - 3; })\n// \t 3. set text y coord \n\t\t\t.attr(\"y\", barHeight / 2)\n// \t 4. trial and error \"dy\"\n      .attr(\"dy\", \".35em\")\n//   5. set label content \n      .text(function(d) { return d.grade; });\n  \n  // Elements View: see all rects \n \n\n\n\n \n</script>", "description": "tarea 2 ", "created_at": "2016-09-06T17:56:14Z", "updated_at": "2016-09-06T18:23:56Z", "api": ["d3.descending", "d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.axisLeft", "d3.axisBottom", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/EmbraceLife/'>EmbraceLife</a>'s block: <a href='http://bl.ocks.org/EmbraceLife/9245dc644a9cdf8b02f7a93339fa4c75'>1. horizontal barChart</a>", "uid": "elt12njo_b44617b6288bc7bfa7a3eeb2c853c37c"}, {"code": "<script>\nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// Parse the date / time\nvar\tparseDate = d3.time.format(\"%Y-%m\").parse;\n\nvar x = d3.scale.ordinal().rangeRoundBands([0, width], .05);\n\nvar y = d3.scale.linear().range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n    .tickFormat(d3.time.format(\"%Y-%m\"));\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.data(grades);\n\t\n  x.domain(data.map(function(d) { return d.date; }));\n  y.domain([0, d3.max(data, function(d) { return d.value; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value ($)\");\n\n  svg.selectAll(\"bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .style(\"fill\", \"steelblue\")\n      .attr(\"x\", function(d) { return x(d.date); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.value); })\n      .attr(\"height\", function(d) { return height - y(d.value); });\n\n});\n\n</script>", "description": "fresh block", "created_at": "2016-09-06T17:45:46Z", "updated_at": "2016-09-06T17:46:08Z", "api": ["d3.time.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.data", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "jcamilort_eb99b8c1d5c55ddbce0519293501ba3f"}, {"code": "<script>\n  var myData=[12, 15, 20, 50];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 200 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar wScale = d3.scaleLinear()\n\t.range([0, width]);\n\n\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20);\n  \nvar BAR_HEIGHT = 20;\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar xAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis x--axis\");\n  \n  \nfunction update(myData, attr) {\n\n\tvar fnAcc = function(d) { return d[attr]; }\n  \n \tmyData = myData.sort(function (a, b) {\n  \treturn d3.descending(a[attr], b[attr]);\n  });\n  \n  \n\twScale.domain([0, d3.max(myData, fnAcc) ]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(myData);\n  \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", 0)\n    .attr(\"y\", function(d, i ) { return i * (BAR_HEIGHT+1);})\n    .attr(\"height\", BAR_HEIGHT)\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .transition().duration(1000)\n    .attr(\"width\", function(d) { return wScale(fnAcc(d)); });\n  \t\n  xAxis\n  \t.transition()\n    .duration(1000)\n  \t.call(d3.axisTop()\n  \t.scale(wScale)\n    .ticks(3));\n}\n\nvar res=\"https://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=f11688d9fc777acfb94a22ddd0077381&extras=count_views%2C+count_faves%2C+count_comments&format=json&nojsoncallback=1&api_sig=db63d57735ecc57c074f4c962f21ae31\";\n\nd3.json(res, function(err, data) {\n\tif(err) {\n  \tconsole.err(err);\n    alert(err);\n    return;\n  }\n  \n  data.photos.photo.forEach(function (d) {\n  \td.count_views = +d.count_views;\n    d.count_faves = +d.count_faves;\n    d.count_comments = +d.count_comments;\n  })\n  console.log(data);\n  update(data.photos.photo, \"count_views\");\n});\n\n    \n  </script>", "description": "VA", "created_at": "2016-09-06T17:25:06Z", "updated_at": "2016-09-07T01:26:19Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.descending", "d3.max", "d3.axisTop", "d3.json"], "readme": "================================================\nWhat do we have?\n================================================\nIn this exercise we will need to show the grades of a Visual Analytics course. The grades to be visualized are stored in the variable 'grades' in the following format:\nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\n================================================\nAnalysis and decisions made\n================================================\nIt is common for grades in the academic environment to show the typical stadistics of a data group. Average, mean, deviation and mode. Besides it is also helpful to show wich is the higher and the lower grade.\n\nAs this dataset is a register for each student for a single exam, it is necessary to be able to visualize each register, which implies an instance of the channel and mark used for each grade as well as group statistics as a whole.\n\nThe best diagram for this case could be an interactive bar graph that allows to rearrange students by code, so it's easier for them to find themselves, and by grade to make group analysis. There are no significant categories of the entities, although a limit marker could be useful to show which students passed the exam and which failed.\n", "uid": "jcamilort_414002d5491797af4cccfdc4740f456e"}, {"code": "<script>\n\n     grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n \ngrades.sort(function(a, b) {\n    return a.code - b.code;\n});\n\n  \n    var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n    var axisMargin = 10,\n            margin = 40,\n            valueMargin = 4,\n            width = parseInt(d3.select('body').style('width'), 10),\n            height = parseInt(d3.select('body').style('height'), 10),\n            barHeight = (height-axisMargin-margin*2)* 0.6/grades.length,\n            barPadding = (height-axisMargin-margin*2)*0.5/grades.length,\n            grades, bar, svg, scale, xAxis, labelWidth = 0;\n\n    max = d3.max(grades, function(d) { return d.grade; });\n\n    svg = d3.select('body')\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n\n    bar = svg.selectAll(\"g\")\n            .data(grades)\n            .enter()\n            .append(\"g\");\n\n    bar.attr(\"class\", \"bar\")\n            .attr(\"cx\",0)\n            .attr(\"transform\", function(d, i) {\n                return \"translate(\" + margin + \",\" + (i * (barHeight + barPadding) + barPadding) + \")\";\n            })\n    .attr(\"fill\", function(d) { return (d.grade <= 3.5 ? \"#bc0000\" : \"#009e00\"); });\n\n    bar.append(\"text\")\n            .attr(\"class\", \"code\")\n            .attr(\"y\", barHeight / 2)\n            .attr(\"dy\", \".35em\") //vertical align middle\n            .text(function(d){\n                return d.code;\n            }).each(function() {\n        labelWidth = Math.ceil(Math.max(labelWidth, this.getBBox().width));\n    });\n\n  var xScale = d3.scale.ordinal()\n    .domain(grades)\n    .rangeRoundBands([0, height], .1);\n  \n    scale = d3.scale.linear()\n            .domain([0, max])\n            .range([0, width - margin*2 - labelWidth]);\n\n    xAxis = d3.svg.axis()\n            .scale(scale)\n            .tickSize(-height + 2*margin + axisMargin)\n            .orient(\"bottom\");\n\n    bar.append(\"rect\")\n            .attr(\"transform\", \"translate(\"+labelWidth+\", 0)\")\n            .attr(\"height\", barHeight)\n            .attr(\"width\", function(d){\n                return scale(d.grade);\n            });\n\n    bar.append(\"text\")\n            .attr(\"class\", \"grade\")\n            .attr(\"y\", barHeight / 2)\n            .attr(\"dx\", -valueMargin + labelWidth) //margin right\n            .attr(\"dy\", \".35em\") //vertical align middle\n            .attr(\"text-anchor\", \"end\")\n            .text(function(d){\n                return (d.grade);\n            })\n            .attr(\"x\", function(d){\n                var width = this.getBBox().width;\n                return Math.max(width + valueMargin, scale(d.grade));\n            });\n\n    bar\n            .on(\"mousemove\", function(d){\n                div.style(\"left\", d3.event.pageX+10+\"px\");\n                div.style(\"top\", d3.event.pageY-25+\"px\");\n                div.style(\"display\", \"inline-block\");\n                div.html((d.code)+\"<br> grade:\"+(d.grade));\n            });\n    bar\n            .on(\"mouseout\", function(d){\n                div.style(\"display\", \"none\");\n            });\n\n    svg.insert(\"g\",\":first-child\")\n            .attr(\"class\", \"axisHorizontal\")\n            .attr(\"transform\", \"translate(\" + (margin + labelWidth) + \",\"+ (height - axisMargin - margin)+\")\")\n            .call(xAxis);\n    \n//Sorting logic\n\t\td3.select(\"#sortByGrade\")\n\t\t\t.on(\"click\", function() {\n\n\t\tbar.sort(function(a, b) {\n    \t\t\t\treturn a.grade - b.grade;\n\t\t\t\t\t})\n\t\t\t\t\t.transition()\n\t\t\t\t\t.delay(function(d, i) {\n\t\t\t\t\t\treturn i * 50;\n\t\t\t\t\t})\n\t\t\t\t\t.duration(1000)\n\t\t\t\t\t.attr(\"transform\", function(d, i) {\n                return \"translate(\" + margin + \",\" + (i * (barHeight + barPadding) + barPadding) + \")\";\n            });\n\t\t\t});\n\n      \n//Sorting logic\n\t\td3.select(\"#sortByCode\")\n\t\t\t.on(\"click\", function() {\n\n\t\tbar.sort(function(a, b) {\n    \t\t\t\treturn a.code - b.code;\n\t\t\t\t\t})\n\t\t\t\t\t.transition()\n\t\t\t\t\t.delay(function(d, i) {\n\t\t\t\t\t\treturn i * 50;\n\t\t\t\t\t})\n\t\t\t\t\t.duration(1000)\n\t\t\t\t\t.attr(\"transform\", function(d, i) {\n                return \"translate(\" + margin + \",\" + (i * (barHeight + barPadding) + barPadding) + \")\";\n            });\n\t\t\t});\n\n  \n        bar.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")  // this makes it easy to centre the text as the transform is applied to the anchor\n            .attr(\"transform\", \"translate(\"+ (width/2) +\",\"+(height-(barPadding/3))+\")\")  // centre below axis\n            .text(\"Grade\");\n</script>", "description": "Tarea3", "created_at": "2016-09-06T16:22:08Z", "updated_at": "2016-09-07T02:11:11Z", "api": ["d3.select", "d3.max", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis"], "readme": "# Tarea 3: Visual Analytics\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\n## What:\n\n### DataSet \n#### Type\nTable\n#### Avaliability \n Static \n\n### Attributes Types\n\n#### Categorical\n Code\n#### Ordered\n Grades\n\n### Ordering Direction\n Secuential\n\n## Why:\n\n### Actions\n\n#### Analyze\n Discover and Present\n\n#### Search\n Locate\n#### Query\nIdentify\n\n### Targets\nFeatures\n## How:\n\n### Encode\n#### Arrange\nOrder\nAlign\n#### Map\n##### Color\nHue\n\n### Manipulate\nSelect\n\nBars were used because the type of attributes (categorical and ordained ) have a better understanding, using this type of graph.\n\nBars in direction horizontally rather than vertical, because many of the codes are long and placing them horizontally allows to be read more clearly.\n\nA conditional color was added to indicate who are losing the course ( taking advantage of the relation \"green = good\", \"red = bad\").\n\nIt allows Order By Code and Grades, so if you wanna find a student you can do it for code and if you wanna know who are the best or wost grades, you can order it for code-\n\nAdded ", "uid": "davidgutierrez_5596b083b6e001758f97603a109a2794"}, {"code": "<script>\n \n\n  \nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(data.json, type, function(error, data) {\n \n  if (error) return console.warn(error);\n   data = json;\n  visualizeit();\n});\n\n  /* x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}*/\n\n</script>", "description": "fresh block", "created_at": "2016-09-06T16:02:05Z", "updated_at": "2016-09-06T16:27:58Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.json", "d3.max"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "mavaron_29cb51ddfc1e1263947a8b4b5ec58269"}, {"code": "<script>\n\t\tvar gauges=[];\n    var grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t//{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\tvar valmin;\n\tvar val40;\n\tvar val60;\n\tvar val90;\n\t  \n\n    function createGauge(name, label, min, max)\n    {\n      var config = \n          {\n            size: 300,\n            label: label,\n            min: undefined != min ? min : 0,\n            max: undefined != max ? max : 5.1,\n            minorTicks: 5,\n            majorTicks: 6\n          }\n\n      var range = config.max - config.min;\n\t  config.blueZones = [{ from: valmin, to: val40 }];\n\t  config.greenZones = [{ from: val40, to: val60 }];\n      config.yellowZones = [{ from: val60, to: val90 }];\n      config.redZones = [{ from: val90, to: config.max }];\n\t  \n\t\t\t\n      console.log(config.yellowZones);\n      console.log(config.redZones);\n      \n      gauges[name] = new Gauge(name + \"GaugeContainer\", config);\n      gauges[name].render();\n    }\n\n    function createGauges(min, max)\n    {\n      createGauge(\"memory\", \"\",min,max);\n    }\n\tfunction consultar(){\n\t\tvar codigo=document.getElementById('codigo').value;\n\t\tfor(var i=0;i<grades.length;i++){\n\t\t\tif(codigo==grades[i].code){\n\t\t\t\tgauges['memory'].redraw(grades[i].grade);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n    function initialize()\n    {\n      \n\t  var grad=[];\n\t  for(var i=0;i<grades.length;i++){\n\t\tgrad.push(grades[i].grade);\n\t  }\n\t  \n      for(var i=0;i<grad.length;i++){\n\t\tfor(var j=i+1;j<grad.length;j++){\n\t\t\tif(grad[i]>grad[j]){\n\t\t\t\tvar aux=grad[i];\n\t\t\t\tgrad[i]=grad[j];\n\t\t\t\tgrad[j]=aux;\n\t\t\t}\n\t\t}\n\t  }\n\t  valmin=grad[0];\n\t  val40=grad[Math.round(grad.length*0.3)];\n\t  val60=grad[Math.round(grad.length*0.6)];\n\t  val90=grad[Math.round(grad.length*0.9)];\n\t  var max=5;\n      if(grad[grad.length-1]>5){\n\t\tmax=grad[grad.length-1];\n\t  }\n\t  createGauges(0,max);\n\t  //setInterval(updateGauges, 5000);\n    }\n\t\t\t\n\t</script>", "description": "fresh block", "created_at": "2016-09-06T15:49:08Z", "updated_at": "2016-09-06T15:49:08Z", "api": ["d3.select", "d3.svg.line", "d3.svg.arc"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/deisydiazp/'>deisydiazp</a>'s block: <a href='http://bl.ocks.org/deisydiazp/cb96e9e269bb59effb60e37035cbe33b'>fresh block</a>", "uid": "deisydiazp_09447d7f697ab80b1c026fd296c83c9d"}, {"code": "<script>\n\t\tvar gauges=[];\n    var grades = [\n      {\"code\":23802620, \"grade\":4.85},\n      {\"code\":23802825, \"grade\":4.865},\n      {\"code\":23801894, \"grade\":3.24},\n      {\"code\":23802926, \"grade\":5},\n      {\"code\":23800661, \"grade\":3.19},\n      {\"code\":23800768, \"grade\":3.98},\n      {\"code\":23800972, \"grade\":4.89},\n      {\"code\":23801922, \"grade\":3.73},\n      {\"code\":23805498, \"grade\":4.795},\n      {\"code\":23805913, \"grade\":4.85},\n      {\"code\":23800311, \"grade\":2.81},\n      {\"code\":23806395, \"grade\":4.72},\n      {\"code\":23808850, \"grade\":3.85},\n      {\"code\":23802872, \"grade\":2.16},\n      {\"code\":23802105, \"grade\":4.715},\n      {\"code\":23809880, \"grade\":4.92},\n      {\"code\":23802056, \"grade\":4.48},\n      {\"code\":23807897, \"grade\":5.2},\n      {\"code\":23807916, \"grade\":5},\n      {\"code\":23801962, \"grade\":3.62},\n      {\"code\":23808246, \"grade\":4.61},\n      {\"code\":23802600, \"grade\":0.11},\n      {\"code\":23808311, \"grade\":4.7}\n   \t];\n\t\tvar valmin;\n\t\tvar val40;\n\t\tvar val60;\n\t\tvar val90;\n\t  \n    function createGauge(name, label, min, max)\n    {\n      var config = \n          {\n            size: 300,\n            label: label,\n            min: undefined != min ? min : 0,\n            max: undefined != max ? max : 5.1,\n            minorTicks: 5,\n            majorTicks: 6\n          }\n\n      var range = config.max - config.min;\n\t  \tconfig.redZones = [{ from: valmin, to: val40 }];\n\t  \tconfig.yellowZones = [{ from: val40, to: val60 }];\n      config.blueZones = [{ from: val60, to: val90 }];\n      config.greenZones = [{ from: val90, to: config.max }];\n\t  \n\t\t\t\n      console.log(config.yellowZones);\n      console.log(config.redZones);\n      \n      gauges[name] = new Gauge(name + \"GaugeContainer\", config);\n      gauges[name].render();\n    }\n\n    function createGauges(min, max)\n    {\n      createGauge(\"memory\", \"\",min,max);\n    }\n\t\n    function consultar(){\n\t\t\tvar codigo=document.getElementById('codigo').value;\n\t\t\tvar exist = 0;\n      for(var i=0;i<grades.length;i++){\n\t\t\t\tif(codigo==grades[i].code){\n          document.getElementById('lblMensaje').innerHTML = \"\";\n\t\t\t\t\tgauges['memory'].redraw(grades[i].grade);\n          exist = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n      \n      if(exist == 0)\n      {\t\n        document.getElementById('lblMensaje').innerHTML = \"No se encuentra el cdigo de estudiante\";\n        gauges['memory'].redraw(0);\n      }\n\t\t}\n\n    function initialize()\n    {\n      \n      var grad=[];\n      for(var i=0;i<grades.length;i++){\n      grad.push(grades[i].grade);\n      }\n\n      for(var i=0;i<grad.length;i++){\n        for(var j=i+1;j<grad.length;j++){\n          if(grad[i]>grad[j]){\n            var aux=grad[i];\n            grad[i]=grad[j];\n            grad[j]=aux;\n          }\n        }\n      }\n\n      valmin=grad[0];\n      val40=grad[Math.round(grad.length*0.3)];\n      val60=grad[Math.round(grad.length*0.6)];\n      val90=grad[Math.round(grad.length*0.9)];\n      var max=5;\n\n      if(grad[grad.length-1]>5){\n        max=grad[grad.length-1];\n      }\n      createGauges(0,max);\n\n    }\n\t\t\t\n\t</script>", "description": "Notas estudiantes", "created_at": "2016-09-06T15:48:29Z", "updated_at": "2016-09-06T18:36:02Z", "api": ["d3.select", "d3.svg.line", "d3.svg.arc"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nSuponiendo que somos los profesores de una clase de visual analytics, y con el fin de informar de manera interativa a los estudiantes las notas de un examen, se cre\u00f3 \u00e9sta aplicaci\u00f3n.\n\nLas notas a visualizar est\u00e1n almacenadas en una variable grades en el siguiente formato:\n\nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\nPara llegar a \u00e9sta soluci\u00f3n se tuvo en cuenta el siguiente an\u00e1lisis:\n\nWhat: \nEl data set es un vector con dos atributos: c\u00f3digo del estudiante (code) que es un dato categ\u00f3rico y nota(grade) que es un dato (cuantitativo).\n\nWhy: \n- Mostrar la calificaci\u00f3n obtenida por un estudiante \n- Verificar en que rango de la poblaci\u00f3n qued\u00f3 el estudiante con respecto a la nota obtenida\n\nHow:\n- Marcas usadas: lineas\n- Canales usados: posici\u00f3n, color\n\nEl resultado de la calificaci\u00f3n es mostrada usando el concepto de \"medidor\" las lineas alrededor del c\u00edrculo representan la escala de notas que va de 0 a 5.2 (entre los datos hay una nota de 5.2), el estudiante ingresa su c\u00f3digo y la aguja se mueve hasta la linea que representa su nota.\nEl vector de notas se orden\u00f3 de menor a mayor para obtener una distribucion porcentual de la poblaci\u00f3n que se recleja a tarves de los colores y ayudan a mostrar en que rango de la poblacion se encuentra el estudiante. \n\nSi por ejemplo la nota del estudiante es 1.5 la aguja se mueve hasta la linea correspondiente quedando en la franja de color rojo lo que indica que el estudiante se encuentra en el primer 30% de la poblaci\u00f3n con las notas mas bajas. \n\n\n\n\n", "uid": "deisydiazp_cb96e9e269bb59effb60e37035cbe33b"}, {"code": "<script>\n\nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\n\nvar margin = {top: 20, right: 100, bottom: 30, left: 100},\n    width = 800 - margin.left - margin.right,\n    height = 800 - margin.top - margin.bottom;\n\nvar wScale = d3.scaleLinear()\n\t.range([0, width]);\n  \nvar hScale = d3.scaleLinear()\n\t.range([0, height]);\n\n\n\nvar colScale = d3.scaleOrdinal(d3.schemeCategory20c);\n  \nvar BAR_HEIGHT = 20;\n  \n var tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"10\")\n    .style(\"visibility\", \"hidden\")\n    .text(\"a simple tooltip\")\n  \t.style(\"font-family\",\"'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica \t\t\t\tNeue', Helvetica, Arial, 'Lucida Grande', sans-serif\")\n  \t.style(\"font-size\",200+'%')\n \t\t.style(\"color\",\"#000000\");\n\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  \t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n \n\nvar xAxis = svg.append(\"g\")\n\t.attr(\"class\", \"axis x--axis\");\n  \n\twScale.domain([0, grades[11].grade]);\n  hScale.domain([0, grades[11].grade]);\n  \n\tvar bars = svg.selectAll(\".bars\")\n  \t.data(grades);\n  var textsGrade = svg.selectAll(\".texts.grades\")\n  \t.data(grades);\n \tvar textsCode = svg.selectAll(\".texts.codes\")\n  \t.data(grades);   \n \n  //Enter\n  var barsEnter = bars.enter()\n  \t.append(\"rect\")\n    .attr(\"class\", \"bars\")\n    .attr(\"width\", 0);\n  \n  var textGradeEnter = textsGrade.enter()\n  \t.append(\"text\")\n  \t.attr(\"x\", function(d) { return d.grade; })\n    .attr(\"y\", function(d,i){return i*(BAR_HEIGHT+1) +(BAR_HEIGHT / 2)})\n    .attr(\"dy\", \".35em\")\n \t\t.style(\"fill\", \"black\")\n    .attr(\"width\", function(d) { return wScale(d.grade); })\n    .attr(\"height\",function(d,i){return i*(BAR_HEIGHT+1)} )\n    .text(function(d) { return d.grade; });\n  \n    var textCodeEnter = textsGrade.enter()\n  \t.append(\"text\")\n  \t.attr(\"x\", function(d) { return d.grade; })\n    .attr(\"y\", function(d,i){return i*(BAR_HEIGHT+1) +(BAR_HEIGHT / 2)})\n    .attr(\"dy\", \".35em\")\n \t\t.style(\"fill\", \"black\")\n    .attr(\"width\", function(d) { return wScale(d.grade); })\n    .attr(\"height\",function(d,i){return i*(BAR_HEIGHT+1)} )\n    .text(function(d) { return d.code; })\n    .style(\"font-family\",\"sans-serif\");\n  \n  //Exit\n  bars.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n  \n  textsGrade.exit()\n  \t.transition()\n    .duration(1000)\n    .attr(\"width\", 0)\n  \t.remove();\n \n  //Update\n  bars.merge(barsEnter)\n  \t.attr(\"x\", 0)\n    .attr(\"y\", function(d, i ) { return i * (BAR_HEIGHT+1);})\n    .attr(\"height\", function(d) { return height })\n    .style(\"fill\", function(d,i) { return colScale(i); })\n    .on(\"mouseover\", onMouseOver)\n    .on(\"mouseout\", onMouseOut)\n    .transition().duration(1000)\n    .attr(\"width\", function(d) { return wScale(d.grade); });\n  \n  textsGrade.merge(textGradeEnter)\n \t \t.attr(\"x\", function(d) { return wScale(d.grade); })\n  \t.attr(\"y\", function(d,i){return i*(BAR_HEIGHT+1) +(BAR_HEIGHT / 2)})\n    .attr(\"dy\", \".35em\")\n \t\t.style(\"fill\", \"back\")\n    .attr(\"width\", function(d) { return wScale(d.grade); })\n    .attr(\"height\",function(d,i){return i*(BAR_HEIGHT+1)} )\n    .text(function(d) { return d.grade; })\n  \t.style(\"font-family\",\"'HelveticaNeue-Light', 'Helvetica Neue Light', \t\t\t\t\t\t\t'Helvetica Neue', Helvetica, Arial, 'Lucida Grande', sans-serif\");\n  \n  \n  textsCode.merge(textCodeEnter)\n \t \t.attr(\"x\", function(d) { return -80; })\n  \t.attr(\"y\", function(d,i){return i*(BAR_HEIGHT+1) +(BAR_HEIGHT / 2)})\n    .attr(\"dy\", \".35em\")\n \t\t.style(\"fill\", \"back\")\n    .attr(\"width\", function(d) { return wScale(d.grade); })\n    .attr(\"height\",function(d,i){return i*(BAR_HEIGHT+1)} )\n    .text(function(d) { return d.code; })\n  \t.style(\"font-family\",\"'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica \t\t\t\tNeue', Helvetica, Arial, 'Lucida Grande', sans-serif\");\n  \t\n  \t\n  xAxis\n  \t.transition()\n    .duration(3000)\n  \t.call(d3.axisTop()\n  \t.scale(wScale)\n    .ticks(3))\n  \n  function onMouseOver(d) {\n    \n    tooltip.style(\"visibility\", \"visible\");\n  \n\t\td3.selectAll(\".bars\")\n\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t.transition()\n\t\t\t.duration(500)\n\t\t\t.attr(\"stroke\", \"#fff\")\n      .attr(\"width\", function(d) { return wScale(d.grade); });\n\n\t\td3.select(this)\n\t\t\t.attr(\"width\", function(d) { return wScale(d.grade); })\n      .attr(\"height\", function(d) { return height-100 })\n\t\t\t.transition()\n\t\t\t.duration(500)\n\t\t\t.attr(\"width\", function(d) { return wScale(d.grade)+10; })    \n      .attr(\"height\", function(d) { return height })\n\t}\n  \n\tfunction onMouseOut(d) {\n    tooltip.style(\"visibility\", \"hidden\");\n\t}\n\n\n</script>", "description": "Tarea 3 Visual Analytics", "created_at": "2016-09-06T13:50:40Z", "updated_at": "2016-09-27T22:54:56Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.axisTop", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n\nI choosed present the data using a simple bar chart because it is the simplest way to do it, I drawed the bars one down of other, in order to make the visualization more interesting (not the ordinary simple bar chart) though, and also I have added a simple transition to animate the visualization. I have used the hue color to give intuitiveness to the visualization. \n\nAnalysis What, Why, How\n\nWhat\n\tDatasets\n\t\tdataType: item\n\t\tdataSet: table\n  Attributes\n  \tcuantitative\nWhy:\n\tActions\n  \tPresent\n  \tSummarize\n  Targets\n  \tDistribution \nHow:\n\tEncode\n  \tAlign\n  Marks\n  \tLines\n  Channels\n  \tverticial position\n    Color hue\n    \n    \n    \n\n    \n\n\t\n\n", "uid": "jorgeehernandez_0e90c70f509c3a91ed06196363411b82"}, {"code": "<script>\n\n      var outerWidth = 960;\n      var outerHeight = 500;\n      var margin = { left: 160, top: 0, right: 0, bottom: 80 };\n      var barPadding = 0.2;\n\n      var xColumn = \"population\";\n      var yColumn = \"name\";\n      var xAxisLabelText = \"Population\";\n      var xAxisLabelOffset = 70;\n\n      var innerWidth  = outerWidth  - margin.left - margin.right;\n      var innerHeight = outerHeight - margin.top  - margin.bottom;\n\n      var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",  outerWidth)\n        .attr(\"height\", outerHeight);\n      var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      var xAxisG = g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n      var xAxisLabel = xAxisG.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"x\", innerWidth / 2)\n        .attr(\"y\", xAxisLabelOffset)\n        .attr(\"class\", \"label\")\n        .text(xAxisLabelText);\n      var yAxisG = g.append(\"g\")\n        .attr(\"class\", \"y axis\");\n\n      var xScale = d3.scale.linear().range(      [0, innerWidth]);\n      var yScale = d3.scale.ordinal().rangeBands([0, innerHeight], barPadding);\n\n      var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\")\n        .ticks(5)                   // Use approximately 5 ticks marks.\n        .tickFormat(d3.format(\"s\")) // Use intelligent abbreviations, e.g. 5M for 5 Million\n        .outerTickSize(0);          // Turn off the marks at the end of the axis.\n      var yAxis = d3.svg.axis().scale(yScale).orient(\"left\")\n        .outerTickSize(0);          // Turn off the marks at the end of the axis.\n\n      function render(data){\n\n        xScale.domain([0, d3.max(data, function (d){ return d[xColumn]; })]);\n        yScale.domain(       data.map( function (d){ return d[yColumn]; }));\n\n        xAxisG.call(xAxis);\n        yAxisG.call(yAxis);\n\n        var bars = g.selectAll(\"rect\").data(data);\n        bars.enter().append(\"rect\")\n          .attr(\"height\", yScale.rangeBand());\n        bars\n          .attr(\"x\", 0)\n          .attr(\"y\",     function (d){ return yScale(d[yColumn]); })\n          .attr(\"width\", function (d){ return xScale(d[xColumn]); });\n        bars.exit().remove();\n      }\n\n      function type(d){\n        d.grade = +d.grade;\n        return d;\n      }\n      \n      var grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n\n      d3.csv(\"grades\", type, render);\n\n    </script>", "description": "Standalone Bar Chart", "created_at": "2016-09-06T13:36:40Z", "updated_at": "2016-09-06T13:36:40Z", "api": ["d3.select", "d3.scale.linear", "d3.scale.ordinal", "d3.svg.axis", "d3.format", "d3.max", "d3.csv"], "readme": "A standalone D3 horizontal bar chart.\n\nThis is [example 105](http://curran.github.io/screencasts/introToD3/examples/viewer/#/105) of the screencast [Introduction to D3](https://www.youtube.com/watch?v=8jvoTV54nXw)\n\n\nforked from <a href='http://bl.ocks.org/curran/'>curran</a>'s block: <a href='http://bl.ocks.org/curran/73afc2c83d28d05b3019'>Standalone Bar Chart</a>", "uid": "jorgeehernandez_d904788537ebd0f89da070b76db55a83"}, {"code": "<script>\n \n var grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n  \nvar margin = {top: 40, right: 50, bottom: 50, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\n  x.domain(grades.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(grades, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  .selectAll(\"text\")\n    .attr(\"y\", 0)\n    .attr(\"x\", 9)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", \"rotate(40)\")\n    .style(\"text-anchor\", \"start\");\n  \n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(90)\")\n      .attr(\"y\", y())\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.selectAll(\".bar\")\n      .data(grades)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n  var avg = d3.mean(grades,function(d){return (d.grade);});\n \nsvg.append(\"line\")\n    .style(\"stroke\", \"#DF013A\")\n    .style(\"stroke-width\", \"3px\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", y(avg))\n    .attr(\"x2\", width )\n  \t.attr(\"y2\", y(avg));\nsvg.append(\"text\")\n    .attr(\"x\", (width-margin.right)/2)\n    .attr(\"y\", y(avg) - 2*margin.top)\n    .attr(\"text-anchor\", \"middle\")\n\t\t.attr(\"font-size\", \"15px\")\n    .text(\"Average: \"+avg);\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n</script>", "description": "Tarea 3: Visualizaci\u00f3n calificaciones", "created_at": "2016-09-06T13:04:56Z", "updated_at": "2016-09-06T21:57:19Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.max", "d3.mean"], "readme": "forked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\n<font color=\"red\">What<br></font>\nEs una tabla donde las filas son los c\u00f3digos de los estudiantes y la \u00fanica columna es la calificaci\u00f3n. Por tanto es un atributo ordenado y cuantitativo, tiene un ordenamiento secuencial pues se sabe que las calificaciones pueden ir desde 0 hasta 5. Los datos son din\u00e1micos pues estos pueden cambiar si hay un reclamo. <br>\n<font color=\"yellow\">Why<br></font>\nSe quiere presentar las calificaciones, teniendo la ubicaci\u00f3n conocida, pues para el estudiante es su c\u00f3digo pero no sabe el objetivo pues la calificaci\u00f3n es desconocida. El estudiante va a querer identificar su calificaci\u00f3n y poder compararse respecto al desempe\u00f1o de los dem\u00e1s. Finalmente, se espera poder observar la distribuci\u00f3n de las calificaciones.<br>\n<font color=\"green\">How<br></font>\nPara poder analizar m\u00e1s r\u00e1pido los datos ser\u00eda interesante tenerlos ordenados por el atributo y alinearlos sobre el mismo eje. Para representar las calificaciones se va a utilizar el tama\u00f1o, por lo tanto la longitud en una gr\u00e1fica de barras. \nLo ideal ser\u00eda que el estudiante al pasar el mouse sobre su barra pudiera ver la calificaci\u00f3n exacta<br>\n\nI have made the decision to use a bar chart because it is the easiest way for people to compare themselves with their classmates, they can find how many students had a better grade and if they are over the average or below. \nOn the other hand, there is the opportunity to stand over their bar to see the exact grade, this way the students aren't loosing the accuracy. \n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/61be3dc65bb47d0a74fd820461802c7b'>Tarea 3: Visualizaci\u00f3n calificaciones</a>", "uid": "LauraCortes_35070b2fc794f76e1a5ff0fcbacc0818"}, {"code": "<script>\n\n// set the dimensions of the canvas\nvar margin = {top: 20, right: 20, bottom: 70, left: 40},\n    width = 600 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], 0.1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { \n    return d.code; }));\n  y.domain([0, d3.max(data, function(d) { \n    return d.grade; })]);\n  \n   data.sort(function(a, b) {\n    return a.code - b.code;\n  });\n  \n   svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \"-.55em\")\n      .attr(\"transform\", \"rotate(-90)\" );\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(0)\")\n      .attr(\"y\", -10)\n      .attr(\"dy\", \"0.71em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Grade Scale\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "Exam Grades - Vertical Bar Chart", "created_at": "2016-09-06T04:41:39Z", "updated_at": "2016-09-07T04:57:55Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the exam grades of students in an imaginary Visual Analytics class. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "emilioalvarado_6cc2d43b3fe2a8c8c16d8d523674e507"}, {"code": "<script>\n\n    \n var margin = {top: 100, right: 100, bottom: 50, left: 100},\n    w = 900 - margin.left - margin.right,\n    h = 500 - margin.top - margin.bottom,\n    z = 20,\n    x = w / z,\n    y = h / z,\n    radius = 4,\n    pos = 100,\n    posX = 0,\n    posY = 0;\nvar xScale, yScale;\nvar legend =\"\";\nvar estudiantes;\nvar i=0;\n                           \nd3.json('alumnos.json', function (error, estudiantesData) {\n    if (error) {\n      console.error(error);\n      return;\n    }\n    estudiantes = estudiantesData.map(function (d) {\n      return {\n        grade: d.grade,\n        code: d.code,\n      }\n    });\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"height\", h + margin.top + margin.bottom)\n    .attr(\"width\", w + margin.left + margin.right)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nxScale =  d3.scale.ordinal().rangeRoundBands([0, w]);\nxScale.domain(estudiantes.map(function(d) { return d.code; }));\n\nyScale = d3.scale.linear()\n    .domain([0, d3.max(estudiantes, function(d){ return d.grade; })])\n    .range([h, 0]);\n    \nvar rectClip = svg.append('clipPath')\n    .attr('id', 'rect-clip')\n    .append('rect')\n      .attr('width', 0)\n      .attr('height', h);\n      \n//--------------- ANIMACIONES ---------------//\nrectClip.transition()\n    .duration(250*estudiantes.length)\n    .attr('width', w);\n\nestudiantes.forEach(function (nota, i) {\n    setTimeout(function () {\n      puntos(nota, svg, h, xScale, yScale);\n    }, 1000 + 500*i);\n  });\n \n//------------------------------------------//\n \nvar legendWidth  = 210, legendHeight = 95;\n \n \nlegend = svg.append('g')\n    .attr('class', 'legend')\n    .attr('transform', 'translate(' + (w/2 - legendHeight) + ','+ (-legendHeight) +')');\n\nlegend.append('rect')\n    .attr('class', 'legend-bg')\n    .attr('width',  legendWidth)\n    .attr('height', legendHeight);\n\nlegend.append('text')\n    .attr('x', 5)\n    .attr('y', 25)\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", \"10px\")\n    .attr(\"font-weight\", \"bold\")\n    .text('Presione el nodo para mayor informacin');\n\n  // clipping to make sure nothing appears behind legend\n  svg.append('clipPath')\n    .attr('id', 'axes-clip')\n    .append('polygon')\n      .attr('points', (-margin.left)                 + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + (-margin.top)                 + ' ' +\n                      (w - legendWidth - 1) + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + legendHeight                  + ' ' +\n                      (w + margin.right)    + ',' + (h + margin.bottom) + ' ' +\n                      (-margin.left)                 + ',' + (h + margin.bottom));\n\n//---- PINTA LA LINEA CONTINUAS ----//\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .orient(\"bottom\")\n    .innerTickSize(-h)\n    .outerTickSize(0);\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .innerTickSize(-w)\n    .outerTickSize(0)\n    .tickPadding(10);\n    \nsvg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\n      .call(xAxis)\n        .append('text')\n  \t\t.attr('dx', w)  \n                .attr('x', 5)\n                .attr('y', 5)\t\n  \t\t.style('font-weight','bold')\n                .style('','')\n\t\t.text('Cdigo');\n\nsvg.append(\"g\")\n     .attr(\"class\", \"y axis\")\n     .call(yAxis)\n        .append('text')\n            .attr('x',40)\n            .attr('y', -15)\n            .attr('dy', '.71em')\n            .style('text-anchor', 'end')\n            .style('font-weight','bold')\n            .text('Calificacin');\n            \n   \n});\n\nfunction puntos(nota, svg, h, xScale, yScale) {\n    var colorF = \"rgb(202, 110, 35)\",\n        colorS = \"rgb(202, 50, 125)\",\n        xPos = xScale(nota.code)-10,\n        yPosStart = h,\n        yPosEnd = yScale(nota.grade);\n      \n    if(nota.grade >= 5 ){\n        colorF = \"rgb(54, 226, 30)\";\n        colorS = \"rgb(29, 150, 44)\";\n    }else if(nota.grade < 5 && nota.grade >= 4){\n        colorF = \"rgb(221, 239, 52\";\n        colorS = \"rgb(132, 189, 20)\";\n    }else if(nota.grade < 4 && nota.grade >= 3){\n        colorF = \"rgb(249, 249, 144)\";\n        colorS = \"rgb(222, 194, 57)\";\n    }else if(nota.grade < 3 && nota.grade >= 2){\n        colorS = \"rgb(255, 126, 35)\";\n        colorF = \"rgb(255, 171, 90)\";\n    }else{\n        colorS = \"rgb(245, 103, 103)\";\n        colorF = \"rgb(245, 0, 0)\";\n    }\n\n    \n    var circles = svg.append('g')\n        .attr('class', 'notas')\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosStart + ')')\n        .attr('opacity', 0);\n\n      circles.transition()\n        .duration(200)\n        .attr('transform', 'translate(' + xPos + ', ' + yPosEnd + ')')\n        .attr('opacity', 1);\n\n      circles.append('path')\n        .attr('d', 'M' + 24 + ',' + (h-yPosStart) + 'L' + 24 + ',' + (h-yPosStart))\n        .transition()\n          .duration(200)\n          .attr('d', 'M' + 24 + ',' + (h-yPosEnd) + 'L' + 24 + ',' + (radius));\n          \n      circles.append('circle')\n        .attr('class', 'marker-bg-'+i++)\n        .attr('data-grade', nota.grade)\n        .attr('data-code', nota.code)\n        .attr('cx', 24)\n        .attr('cy', 0)\n        .attr('r', radius)\n        .attr('transform', 'translate(' + 0 + ', ' + 0 + ')')\n        .style(\"cursor\", \"pointer\")\n        .style(\"fill\", colorF)\n        .style(\"stroke\", colorS)\n        .on(\"click\", imprimir);\n        \n \n}\n\nfunction translate(d) {\n    return \"translate(\"+posX+\",\"+ posY+\")\";\n}\n\nfunction imprimir(d) {\n    \n    var a = this.parentNode.appendChild(this);\n    \n    posX = d3.transform(d3.select(this).attr(\"transform\")).translate[0];\n    posY = d3.transform(d3.select(this).attr(\"transform\")).translate[1]; \n           \n    code_aux = d3.select(this).attr(\"data-code\");\n    grade_aux = d3.select(this).attr(\"data-grade\");\n    \n    d3.select(this)\n        .transition()\n          .duration(750)\n          .attr(\"r\", radius*2);\n      \n    d3.select(this)\n         .transition()\n          .delay(1000)\n          .attr(\"r\", radius);\n   \n   d3.select(\"#update\").remove();\n   d3.select(\"#update\").remove();\n   \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 55)\n        .text(\"Cdigo: 2800\"+code_aux);\n    \n   legend.append('text')\n        .attr('id', 'update')\n        .attr('x', 50)\n        .attr('y', 75)\n        .text(\"Calificacin: \"+grade_aux);\n   \n}\n\n</script>", "description": "visualizaci\u00f3n_notas", "created_at": "2016-09-06T04:00:47Z", "updated_at": "2016-09-22T05:31:09Z", "api": ["d3.json", "d3.select", "d3.scale.ordinal", "d3.scale.linear", "d3.max", "d3.svg.axis", "d3.transform"], "readme": "<b>What:</b>\n + <b>Ordered</b>: Quantitative-Grade, Ordinal-Code.\n + <b>Dataset Types</b>: Tables. \n + <b>Dataset Availability</b>: Static.\n + <b>Ordering Direction</b>: Sequential.\n \n<b>Why:</b>\n + Present student's note.\n + Lookup the grade, knowing the code.\n + Discover the number of student who win and lose.\n\n<b>How:</b>\n + <b>Arrange</b>: Order, Align.\n + <b>Map</b>: Color - Hue, Shape - circle.\n + <b>Manipulate</b>: Select.\n + <b>Facet</b>: Yuxtaponer.\n + <b>Reduce</b>: Embed.\n \nTo proper reading of the information in the first instance, the four number firsts in student's code are removed,  because have pattern 2800  and it is ordered the code the min to max on x axis, making more easy the lookup.\n\nMoreover, it was decided to use color hue to create better identification in the range of  the  student's note. I use hue that humans associated with alerts: green-good, yellow-regular and red-bad; thus help to identified the range.\n\nFinally it was decided to separate each student in order to facilitate identification of the student's note relative to the student's code and I use animation to generate expectative.\n\n--------\n\n<b>Marks:</b>\n + <b>Line</b>: Identifies student's code position.\n + <b>Point</b>: Identifies student's note relative to the student's code.\n \n<b>Channels:</b> \n + <b>Vertical position</b>: Identifies student's note low to high.\n + <b>Horizontal position</b>: Identifies student's code low to high.\n + <b>Color Hue</b>: Unlike the marks for range of notes.\n \n--------\n\n", "uid": "ragut_02b2faa2802a4f5d7f5c5576b2b89fcd"}, {"code": "<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// set the ranges\nvar x = d3.scaleBand()\n          .range([0, width])\n          .padding(0.1);\nvar y = d3.scaleLinear()\n          .range([height, 0]);\n          \n// append the svg object to the body of the page\n// append a 'group' element to 'svg'\n// moves the 'group' element to the top left margin\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n  \n// get the data\nd3.json(\"grades.json\", function(error, data) {\n  if (error) throw error;\n\n  // format the data\n  data.forEach(function(d) {\n    d.grade = +d.grade;\n  });\n\n  // Scale the range of the data in the domains\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  // append the rectangles for the bar chart\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"height\", function(d) { return height - y(d.grade); });\n\n  // add the x Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n});\n\n</script>", "description": "notasEstudiantes", "created_at": "2016-09-06T03:58:44Z", "updated_at": "2016-09-07T03:41:57Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.json", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nAn\u00e1lisis mediante el framework de Tamara\n\n* What : The source of data is a json file, which can be taken as a table with columns like  code and note; these data are static. The amount of data to display are few, exactly 25 rows.\n\n* Why : This grapich have as action present the exact information to estudents, this isn't interactive and the principal function is search fast of each grade by student and may be compare with the rest of course and see the trend of the all grades.\n\n* How : I try keep the graphic simple and show only the relevant information based in bar diagram with the size of bar how principal element to recognize the grades and obviously keep align all data of graphic ", "uid": "jhon0010_172294362415045014fe1e26f7f6ae1e"}, {"code": "<script>\n\nvar margin = {top: 40, right: 100, bottom: 40, left: 10},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal().rangePoints([0, width], 1),\n    y = {},\n    dragging = {};\n\nvar line = d3.svg.line(),\n    axis = d3.svg.axis().orient(\"left\"),\n    background,\n    foreground;\n  \nvar CountriesList =   ['Colombia','Germany','Dinamark','Rusia','Brazil','Canada','China','New Zeland','Congo'];\n  \nvar color = d3.scale.ordinal()\n .domain(CountriesList)\n  .range(['#b3bfc7','#a7a6ab','#ccc2bc','#8d9ca8','#9c9b94','#b7c7b5','#b4cacc','#d6d9c3','#bfb89f']);  \n  \n  \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n  \n\nd3.csv(\"date.csv\", function(error, data) {\n\n  // Extract the list of dimensions and create a scale for each.\n  x.domain(dimensions = d3.keys(data[0]).filter(function(d) {\n    return d != \"Countries\" && (y[d] = d3.scale.linear()\n        .domain(d3.extent(data, function(p) { return +p[d]; }))\n        .range([height, 0]));\n  }));\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\")\n    .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n    .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\")\n    .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n    .data(data)\n    .enter().append(\"path\")\n    .attr(\"d\", path)\n    .attr (\"stroke-width\", \"2\")\n    .attr('stroke', function(d) { return color(d.Countries); });\n  \n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n      .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; })\n      .call(d3.behavior.drag()\n      .origin(function(d) { return {x: x(d)}; })\n      .on(\"dragstart\", function(d) {\n          dragging[d] = x(d);\n          background.attr(\"visibility\", \"hidden\");\n        })\n       .on(\"drag\", function(d) {\n          dragging[d] = Math.min(width, Math.max(0, d3.event.x));\n          foreground.attr(\"d\", path);\n          dimensions.sort(function(a, b) { return position(a)           - position(b); });\n          x.domain(dimensions);\n          g.attr(\"transform\", function(d) { return       \"translate(\" + position(d) + \")\"; })\n        })\n        .on(\"dragend\", function(d) {\n          delete dragging[d];\n          transition(d3.select(this)).attr(\"transform\", \"translate(\" + x(d) + \")\");\n          transition(foreground).attr(\"d\", path);\n          background\n              .attr(\"d\", path)\n            .transition()\n              .delay(500)\n              .duration(0)\n              .attr(\"visibility\", null);\n        }));\n\n  // Add an axis and title.\n  g.append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); })\n    .append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(function(d) { return d; });\n\n  // Add and store a brush for each axis.\n  g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(d) {\n        d3.select(this).call(y[d].brush = d3.svg.brush().y(y[d]).on(\"brushstart\", brushstart).on(\"brush\", brush));\n      })\n    .selectAll(\"rect\")\n      .attr(\"x\", -8)\n      .attr(\"width\", 16);\n  \n    // draw legend\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n      .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return         \"translate(0,\" + i * 25 + \")\"; });\n\n  // draw legend colored rectangles\n  legend.append(\"rect\")\n      .attr(\"x\", width - 10)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .style(\"fill\", color);\n\n  // draw legend text\n  legend.append(\"text\")\n      .attr(\"x\", width + 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"start\")\n      .data(data)\n      .text(function(d) { return d.Countries;});\n \n});\n\nfunction position(d) {\n  var v = dragging[d];\n  return v == null ? x(d) : v;\n}\n\nfunction transition(g) {\n  return g.transition().duration(500);\n}\n\n// Returns the path for a given data point.\nfunction path(d) {\n  return line(dimensions.map(function(p) { return [position(p), y[p](d[p])]; }));\n}\n\nfunction brushstart() {\n  d3.event.sourceEvent.stopPropagation();\n}\n\n// Handles a brush event, toggling the display of foreground lines.\nfunction brush() {\n  var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),\n      extents = actives.map(function(p) { return y[p].brush.extent(); });\n  foreground.style(\"display\", function(d) {\n    return actives.every(function(p, i) {\n      return extents[i][0] <= d[p] && d[p] <= extents[i][1];\n    }) ? null : \"none\";\n  });\n}\n\n</script>", "description": "Feature Countries", "created_at": "2016-09-06T03:48:09Z", "updated_at": "2016-09-11T03:28:07Z", "api": ["d3.scale.ordinal", "d3.svg.line", "d3.svg.axis", "d3.select", "d3.csv", "d3.keys", "d3.scale.linear", "d3.extent", "d3.behavior.drag", "d3.svg.brush", "d3.event.sourceEvent.stopPropagation"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n-An\u00e1lisis Expresividad y Efectividad \n\n Para este tipo de grafico no se Justifica usar una visualizaci\u00f3n 3D, ya que no permite comparar las caracter\u00edsticas de cada pa\u00eds, las \u00e1reas se oclusionan entre si y de un vistazo el usuario no puede determinar que variable es m\u00e1s representativa. \n  \nOtro punto importante del an\u00e1lisis tiene que ver con el tipo de factores de an\u00e1lisis y su relaci\u00f3n entre si, si un analista quisiera saber la relaci\u00f3n de uno o dos par\u00e1metros con respecto a alguna variable, no es posible determinarlo de una manera r\u00e1pida y certera.\n  \n-Alternativa \n\nComo alternativa se plantea un diagrama de ejes paralelos en donde cada eje representa      cada variable num\u00e9rica, Con este grafico es posible comparar la relaci\u00f3n de causalidad entre variables y a su vez comparar tendencia de dichas variables entre pa\u00edses.\n  \nInteractivamente el grafico permite seleccionar el rango de valores de cada eje y a su vez   es posible cambiar el orden de cada eje con el fin de analisar la correlaccion entre cada   variable\n", "uid": "zubcarz_4384a27bb88b7393474703b64d19d9fe"}, {"code": "<script>\n\nvar margin = {top: 40, right: 40, bottom: 30, left: 60},\n    width = 940 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {if (d.grade > 3.5){\n    return \"<strong>Grade:</strong> <span style='color:Chartreuse '>\" + d.grade + \"</span>\";}\n   {return \"<strong>Grade:</strong> <span style='color:red'>\" + d.grade + \"</span>\";}\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  \n  data.sort(function(a,b) {return a.code - b.code;});\n  \n  y.domain(data.map(function(d) { return d.code; }));\n  x.domain([0, d3.max(data, function(d) { return d.grade; })]);\n  \n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"x\", width+32)\n      .attr(\"dx\", \".1em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"dy\", \".5em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Code\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n      .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(function(d) { return width - x(d.grade); })\n      .attr(\"width\", function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return y(d.code); })\n      .attr(\"height\", y.rangeBand())\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n  \n\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "Grades Vis", "created_at": "2016-09-06T02:33:47Z", "updated_at": "2016-09-07T04:07:03Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "What\nDataset Type: Table\n\nWhy\nAction: Present\nTarget: Distribution\n\nHow\nArrange: Order and Align\n\nThis Vis has lines like marks because it is the best way to present cuantitative and ordered values. This mark allow us to easily compare different values with just a look. The horizontal bars let us to see the categorical values without problem on the y axis. In addition, the codes are shown ordered to avoid extra work to the user.", "uid": "willroj_77e180e3099997cfff2fc72545580439"}, {"code": "<script>\n    //Data:\n    var grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n    \n   \n    \n    //Width and height of workspace\n    var width = 960;\n    var height = 500;\n    \n    //Margins for the graph\n    var margin = {top: 30, right: 20, bottom: 30, left: 100}\n    var effWidth = width - margin.right - margin.left;\n    var effHeight = height - margin.top - margin.bottom;\n        \n    //codes as strings and ranges for Y scale\n    var codes = [];\n    var ranges = [];\n    var space = effHeight/grades.length;\n    for(i in grades){\n      ranges.push(space*(i));\n      codes.push(grades[i].code.toString());\n    }    \n    \n    //Compute average grade\n    var average = 0;\n    for (i in grades){\n     average += grades[i].grade;\n   }\n    average = average/grades.length\n    \n    //Compute the standard deviation\n    var variance = 0;\n    for (i in grades){\n     variance += (grades[i].grade - average)^2\n   }\n    var sigma = Math.sqrt(variance/grades.length);\n    \n    //Create scales\n    var x = d3.scaleLinear().domain([0, 6]).range([0, effWidth]);\n    var y = d3.scaleOrdinal().domain(codes).range(ranges);\n    \n    //SVG object\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\",width)\n        .attr(\"height\", height).append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var xAxis = d3.axisBottom(x);\n    var yAxis = d3.axisLeft(y);\n    \n    \n    // Add the X Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + effHeight + \")\")\n        .call(xAxis);\n\n    // Add the Y Axis\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n    \n    // Draw the y Grid lines\n    svg.append(\"g\")            \n        .attr(\"class\", \"grid\")\n        .call(make_y_axis()\n            .tickSize(-effWidth, 0, 0)\n            .tickFormat(\"\")\n        );\n    \n    //Draw grades\n    svg.selectAll(\".dot\").data(grades).enter().append(\"text\")\n      .attr(\"x\",function(d){return x(d.grade) + 10;})\n      .attr(\"y\",function(d){return y(d.code.toString())-2;})\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", \"11px\")\n      .attr(\"fill\",\"black\")\n      .text(function(d){return d.grade.toString()})\n    \t.transition()\n    \t.duration(1000)\n    \t.delay(1000)\n    \t.each(positionText);\n   \n    //Draw circles\n    svg.selectAll(\".dot\")\n      .data(grades)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 10)\n      .attr(\"cx\", function(d) { return x(d.grade); })\n      .attr(\"cy\", function(d) { return y(d.code.toString()); })\n      .style(\"fill\", function(d) {\n        if(d.grade == d3.max(grades, function(d){return d.grade}))\n          return \"#5be948\";\n        else if(d.grade == d3.min(grades, function(d){return d.grade}))\n          return \"#e41f25\";\n        else{\n          if(Math.abs(d.grade-average) <= sigma)\n            return \"#51aeff\";\n          else if (Math.abs(d.grade-average) <= 2*sigma)\n            return \"#feb943\";\n          else\n            return \"#d14dfe\";\n      \n        }\n      })\n     \t.on(\"mouseover\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", .9);\t\t\n            div\t.html(\"Student: \"+ d.code + \" Grade: \" +d.grade)\t\n                .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n        })\n      .transition()\n    \t.duration(1000)\n    \t.delay(1000)\n    \t.each(positionCircles);\n    \n    //Position the circles relative to the grade\n    function positionCircles()\n    {\n      var circle = d3.select(this);\n      circle = circle.attr(\"cx\",0)\n      .transition()\n      .duration(1000)\n      .attr(\"cx\",function(d){return x(d.grade)});\n    }\n    \n    //Position text relative to the grade\n    function positionText()\n    {\n      var text = d3.select(this);\n      text = text.attr(\"x\",0)\n      .transition()\n      .duration(1000)\n      .attr(\"x\",function(d){return x(d.grade) + 10});\n    }\n\n\t\t// function for the y grid lines\n      function make_y_axis() {\n        return d3.axisLeft(y)\n            .ticks(5)\n      }\n    \n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);\n \n  </script>", "description": "Homework #3 Visual Analytics", "created_at": "2016-09-05T21:29:32Z", "updated_at": "2016-09-06T22:20:18Z", "api": ["d3.scaleLinear", "d3.scaleOrdinal", "d3.select", "d3.axisBottom", "d3.axisLeft", "d3.max", "d3.min"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\n# Homework #3\n## Juan Sebastian Martinez. Cod: 201125846\n\n## What, Why and How Analysis:\n\n### What?\n\nIn this case, data is presented as a **set** of tuples with the structure *{code:[code] , grade:[grade]}* where every grade is identified by it's corresponding student code. We can think of this structure in a more abstract form as if it was a **table**, with rows that represent student codes and one single column that contains the grade obtained.  \n\n### Why?\n\nFor this visualization, the main task to accomplish is to **present** the student grades. In addition, we can propose the task of **discovering** the **extreme values** of the set of grades and **discover** other **features**, like identifying the distribution of distances between students and the average grade of the class, by dividing them in categories that represent how far away from the average are their grades, in terms of standard deviations.\n\n### How?\n\nFor the tasks described above, we need to **separate** data to compare and discover the extreme values of the set, later, we need to **map** data into **colors** to represent the grade obtained for each student and to identify if the grade is close to the average value.\n\n## Decisions for visualization\n\nFor this visualization, the tasks deal with numerical or ordered data, as we are trying to present the grades for all the students. With this purpose, it is known that positioning the grades on their common scale is a very effective magnitude channel to present the data. For this purpose, the X axis is used as the common scale from 0 to 5 for all the grades, and the Y axis is used to locate the student codes.\n\nTo compare the grades, color is used as another channel for visualization. As we know, color hue is a very effective channel for categorical attributes. In this case, we want to identify the extreme values and group data in categories divided by standard deviations from the average grade. To accomplish this, all points have different colors according to the scale that follows: \n\n* The green point represents the maximum grade\n\n* The red point relates to the minimum grade\n\n* The blue points are the grades that fit within one standard deviation of the average grade\n\n* The orange points are the grades that fit within two standard deviations from the average grade.\n ", "uid": "JuanSMartinez_1625387015a32ef6ed3c0340d07965c8"}, {"code": "<script>\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 30, left: 50},\n    width = svg.attr(\"width\") - margin.left - margin.right,\n    height = svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar parseTime = d3.timeParse(\"%H:%M:%S\");\n\nvar x = d3.scaleTime().range([0, width]),\n    y = d3.scaleLinear().range([height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.Count); });\n\nd3.tsv(\"twitch_data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  var cities = data.columns.slice(1).map(function(id) {\n    return {\n      id: id,\n      values: data.map(function(d) {\n        return {date: d.date, Count: d[id]};\n      })\n    };\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    d3.min(cities, function(c) { return d3.min(c.values, function(d) { return d.Count; }); }),\n    d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.Count; }); })\n  ]);\n\n  z.domain(cities.map(function(c) { return c.id; }));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Count\");\n\n  var city = g.selectAll(\".city\")\n    .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n  city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });\n\n  city.append(\"text\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.Count) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function(d) { return d.id; });\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n\n</script>", "description": "Multi-Series Line Chart", "created_at": "2016-09-05T19:26:20Z", "updated_at": "2016-09-06T18:42:55Z", "api": ["d3.select", "d3.timeParse", "d3.scaleTime", "d3.scaleLinear", "d3.scaleOrdinal", "d3.line", "d3.tsv", "d3.extent", "d3.min", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "This line chart is constructed from a TSV file storing the Emoji and Chat counts for the following DOTA 2 [previously Recorded Broadcast]('https://www.twitch.tv/dota2ti/v/82681239')\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3884955'>Multi-Series Line Chart</a>", "uid": "floofydugong_b4397a66748674b347fe9d2c71f72284"}, {"code": "<script>\n\t\t// [-20,-20][20,20], 0 iterations\n    var datan\t\t// [-20,-20][20,20], 100 iterations\n    var datan\n   \tvar l = 10, gap = 1;\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", (data0[0].length+data100[0].length+3)*(l+gap))\n      .attr(\"height\", (data0.length+2) * (l+gap));\n    \n    function render(data, ox, oy) {\n      var min = 0, max = 0;\n      data.map(function(row) {row.map(function(v) {\n        min = Math.min(min, v); max = Math.max(max, v);\n      })});\n      var scale = d3.scaleSequential(d3.interpolateInferno).domain([min, max]);\n\n      svg.selectAll().data(data).enter()\n      .append('g')\n      .each(function(g, y) {\n        d3.select(this).selectAll()\n        .data(function(d) {return d;})\n        .enter()\n          .append('rect')\n          .attr('fill', function(v) {return v ? scale(v) : 'white'})\n          .attr('x', function(v, x) {return x * l + l + x*gap + ox})\n          .attr('y', (y+gap) * l + y*gap + oy)\n          .attr('width', l)\n          .attr('height', l);\n      });\n    }\n    \n    render(data0, gap, gap);\n    render(data100, (data0[0].length+1) * (l+gap), gap);\n\n\n  </script>", "description": "edges slicing", "created_at": "2016-09-05T10:04:33Z", "updated_at": "2016-09-06T19:24:30Z", "api": ["d3.select", "d3.scaleSequential"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "mootari_387c84e7991517d93c914cf804aade37"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// format variables\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scaleOrdinal(d3.schemeCategory20);\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey-names.json\", function(error, graph) {\n\n  var nodeMap = {};\n  graph.nodes.forEach(function(x) { nodeMap[x.name] = x; });\n  graph.links = graph.links.map(function(x) {\n    return {\n      source: nodeMap[x.source],\n      target: nodeMap[x.target],\n      value: x.value\n    };\n  });\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .call(d3.drag()\n        .subject(function(d) {\n          return d;\n        })\n        .on(\"start\", function() {\n          this.parentNode.appendChild(this);\n        })\n        .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this)\n      .attr(\"transform\", \n            \"translate(\" \n               + d.x + \",\" \n               + (d.y = Math.max(\n                  0, Math.min(height - d.dy, d3.event.y))\n                 ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey using named nodes in v4", "created_at": "2016-09-05T09:35:13Z", "updated_at": "2016-09-05T09:36:30Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.select", "d3.sankey", "d3.json", "d3.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "The above example is intended to demonstrate drawing a simple Sankey diagram using JSON with names for the nodes instead of relying on d3 to index them. It uses  [Jason Davies'](https://github.com/d3/d3-plugins/tree/master/sankey) version of the Sankey plugin.\n\nThis is one of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_d7800f34062b116f9ec0588f2e85e549"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// format variables\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scaleOrdinal(d3.schemeCategory20);\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey.json\", function(error, graph) {\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .call(d3.drag()\n        .subject(function(d) {\n          return d;\n        })\n        .on(\"start\", function() {\n          this.parentNode.appendChild(this);\n        })\n        .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + (\n            d.x = Math.max(0, Math.min(width - d.dx, d3.event.x))\n        )\n        + \",\" + (\n            d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n        ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey diagram with full motion nodes in v4", "created_at": "2016-09-05T06:36:44Z", "updated_at": "2016-09-05T09:16:26Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.select", "d3.sankey", "d3.json", "d3.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "The above example is intended to demonstrate drawing a simple Sankey diagram using v4 of d3.js. It uses  [Jason Davies'](https://github.com/d3/d3-plugins/tree/master/sankey) version of the Sankey plugin.\n\nThis particular version allows the dragging of nodes in the x and y direction. Have a play!\n\nThis is one of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_3337957c360d55c245f6057ab0866c05"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// format variables\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scaleOrdinal(d3.schemeCategory20);\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey.json\", function(error, graph) {\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n      .call(d3.drag()\n        .subject(function(d) {\n          return d;\n        })\n        .on(\"start\", function() {\n          this.parentNode.appendChild(this);\n        })\n        .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this)\n      .attr(\"transform\", \n            \"translate(\" \n               + d.x + \",\" \n               + (d.y = Math.max(\n                  0, Math.min(height - d.dy, d3.event.y))\n                 ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey Diagram with v4", "created_at": "2016-09-05T06:17:24Z", "updated_at": "2016-09-05T09:16:51Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.select", "d3.sankey", "d3.json", "d3.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "The above example is intended to demonstrate drawing a simple Sankey diagram using v4 of d3.js. It uses  [Jason Davies'](https://github.com/d3/d3-plugins/tree/master/sankey) version of the Sankey plugin.\n\nThis is one of the code samples for the update to the book [D3 Tips and Tricks](https://leanpub.com/d3-t-and-t-v4) to version 4 of d3.js.", "uid": "d3noob_013054e8d7807dff76247b81b0e29030"}, {"code": "<script>\nvar grades = [\n  {\"code\":23802620, \"grade\":4.85},\n  {\"code\":23802825, \"grade\":4.865},\n  {\"code\":23801894, \"grade\":3.24},\n  {\"code\":23802926, \"grade\":5},\n  {\"code\":23800661, \"grade\":3.19},\n  {\"code\":23800768, \"grade\":3.98},\n  {\"code\":23800972, \"grade\":4.89},\n  {\"code\":23801922, \"grade\":3.73},\n  {\"code\":23805498, \"grade\":4.795},\n  {\"code\":23805913, \"grade\":4.85},\n  {\"code\":23800311, \"grade\":2.81},\n  {\"code\":23806395, \"grade\":4.72},\n  {\"code\":23808850, \"grade\":3.85},\n  {\"code\":23802872, \"grade\":2.16},\n  {\"code\":23802105, \"grade\":4.715},\n  {\"code\":23809880, \"grade\":4.92},\n  {\"code\":23802056, \"grade\":4.48},\n  {\"code\":23807897, \"grade\":5.2},\n  {\"code\":23807916, \"grade\":5},\n  {\"code\":23801962, \"grade\":3.62},\n  {\"code\":23808246, \"grade\":4.61},\n  {\"code\":23802600, \"grade\":0.11},\n  {\"code\":23808311, \"grade\":4.7}\n];\n   \n    var margin = {top: 20, right: 15, bottom: 60, left: 60}\n      , width = 960 - margin.left - margin.right\n      , height = 500 - margin.top - margin.bottom;\n    \n    var x = d3.scale.linear()\n              .domain([0, d3.max(grades, function(d) { return d.grade; })])\n              .range([ 0, width ]);\n    \n \n    var chart = d3.select('body')\n  .append('svg:svg')\n  .attr('width', width + margin.right + margin.left)\n  .attr('height', height + margin.top + margin.bottom)\n  .attr('class', 'chart')\n\n    var main = chart.append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n  .attr('width', width)\n  .attr('height', height)\n  .attr('class', 'main')   \n        \n    // draw the x axis\n    var xAxis = d3.svg.axis()\n  .scale(x);\n\n    main.append('g')\n  .attr('transform', 'translate(0,15)')\n  .attr('class', 'main axis date')\n  .call(xAxis);\n  \n    main.append('g')\n  .attr('transform', 'translate(0,0)')\n  .attr('class', 'main axis date')\n;\n    \n      var tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:slateGray'>\" + d.grade + \"</span><br>\";\n  });\n    var g = main.append(\"svg:g\"); \n      g.call(tip);\n    g.selectAll(\"scatter-dots\")\n      .data(grades)\n      .enter().append(\"svg:circle\")\n          .attr(\"cx\", function (d,i) { return x(d.grade); } )\n    \t\t\t.attr(\"grade\", function (d,i) { return d.grade; } )\n          .attr(\"id\",function (d) { return d.code; })\n          .attr(\"r\", 8)\n    \t\t\t.on('mouseover', tip.show)\n      \t\t.on('mouseout', tip.hide);\n   \nd3.select(\"#btnCode\").on(\"click\", function() {\n  var userText=document.getElementById(\"txtCode\").value;\n  if(userText!=\"\")\n  \tupdate(userText);\n});\n   \n\n\n\n    \nfunction update(code) {\n\n  var userGrade=document.getElementById(code).getAttribute('grade');\n  d3.select(\"[id='\" + code + \"']\").attr('class','red');\n  \n  var mean = d3.mean(grades,function(d) { return +d.grade});\n  d3.select(\"#txtAvg\").property(\"value\", mean);\n  \n    var max = d3.max(grades,function(d) { return +d.grade});\n  d3.select(\"#txtMax\").property(\"value\", max);\n  \n    var min = d3.min(grades,function(d) { return +d.grade});\n  d3.select(\"#txtMin\").property(\"value\", min);\n  d3.select(\"#result\").remove(\"p\");\n  d3.select(\"#result\").append(\"p\").text(\"v\");\n  \n}\n    \n  </script>", "description": "Homework 3 Grades", "created_at": "2016-09-05T04:53:43Z", "updated_at": "2016-09-06T13:50:10Z", "api": ["d3.scale.linear", "d3.max", "d3.select", "d3.svg.axis", "d3.tip", "d3.mean", "d3.min"], "readme": "<h3>Analysis about this visualization</h3>\n<ul>\n  <li><b style=\"color: #FF7F50;\">What:</b> Data is a table, information about each student: code and grade.</li>\n  <li><b style=\"color: #FFD700;\">Why:</b>\n  <ul>\n  \t\t<li>Actions</li>\n      <ul><li>Analyze:<b>Present</b> grades about one course (communicate).\n</li>\n      \t<li style blue >Search:<b>Locate</b> his own grade. Student knows his code but not where is it point associated to this.\n</li>\n      \t<li>Query:<b>Identify</b> A particular grade: his own grade.</li></ul>\n  \t\t<li>Targets</li>\n      <ul>\n      <li><b>Distribution</b> of grades ( just one atribute).</li>\n      <li><b>Extremes</b>: students interest in knowing the best and worst grade.\n</li>\n      </ul>\n  </ul>  \n  </li>\n  <li><b style=\"color: #4169E1;\">How:</b> Arrange-Express\n  <ul>\n  <li>Marks: Points.</li>\n  <li>Channel:Horizontal position and color.</li>\n  <li>Manipulate: <b>Select</b> student can select each point to identify grade associated (not code,because there are certain privacity level).\n</li>\n  \n  </ul>\n  </li>\n</ul>\n\n\n\n<h3>WHY I DECIDED THAT</h3>\n\nI thought, as student what is I want to know when I receive my grades and my conclusion was: \n<ul>\n<li>See a general perspective about all course while preserving privacity about my classmates' grades.</li>\n<li>Identify my note.</li>\n<li>Know average, maximum and minimum grade.</li>\n</ul>\n\n\nBy other hand, keeping in mind marks ranking I thought points were the best option , not only because it is first, I thought in other marks and don't support very well my tasks,  e.g.  lines, 23 bar didn\u2019t sound well and they aren't practical for this case. As a channel, horizontal position to visualize differents grades (just one atributte so I didn't need another axis) and color to highlight user's grade, from other.\n\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/anonymous/'>anonymous</a>'s block: <a href='http://bl.ocks.org/anonymous/2a71c943724dc86e9b51d79c91c3e9cc'>fresh block</a>\n\n\n", "uid": "nychi713_ebf98b4448c4565c8bc82d3691713ebc"}, {"code": "<script>\n\nvar margin = {top: 80, right: 180, bottom: 80, left: 180},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar svg = d3.select(\"body\").append(\"svg\")\n\t.attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"YearsVsEntities.tsv\", function(error, dataG){\n\n  \n\t// filter year\n\tvar data = dataG.filter(function(d){return d.Year == '2004';});\n \n\t// Get every column value\n\tvar elements = Object.keys(data[0])\n\t\t.filter(function(d){\n\t\t\treturn ((d != \"Year\") & (d != \"Entity\"));\n\t\t});\n  \n\n\tvar y = d3.scaleLinear()\n\t\t\t.domain([0, d3.max(data, function(d){\n\t\t\t\treturn +d.Records;\n\t\t\t})])\n\t\t\t.range([height, 0]);\n\n\tvar x = d3.scaleBand()\n\t\t\t.domain(data.map(function(d){ return d.Entity;}))\n\t\t\t.range([0, width]);\n\n\n\tvar xAxis = d3.axisBottom()\n\t\t.scale(x);\n\n\tvar yAxis = d3.axisLeft()\n\t\t.scale(y);\n\n\tsvg.append(\"g\")\n    \t.attr(\"class\", \"x axis\")\n    \t.attr(\"transform\", \"translate(0,\" + height + \")\")\n    \t.call(xAxis)\n    \t.selectAll(\"text\")\n    \t.style(\"font-size\", \"8px\")\n      \t.style(\"text-anchor\", \"end\")\n      \t.attr(\"dx\", \"-.8em\")\n      \t.attr(\"dy\", \"-.55em\")\n      \t.attr(\"transform\", \"rotate(-90)\" );\n\n\n \tsvg.append(\"g\")\n    \t.attr(\"class\", \"y axis\")\n    \t.call(yAxis);\n\n\tsvg.selectAll(\"rectangle\")\n\t\t.data(data)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/data.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d.Records);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / data.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d.Records);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Entity + \" : \" + d.Records;\n\t\t});\n\n\n\t\n  var selector = d3.select(\"#drop\")\n    \t.append(\"select\")\n    \t.attr(\"id\",\"dropdown\")\n    \t.on(\"change\", function(d){\n        \tselection = document.getElementById(\"dropdown\");\n        \n\t\t\tvar dataS = dataG.filter(function(d){return d.Year == selection.value;});\n\t\t      \n        \ty.domain([0, d3.max(dataS, function(d){\n\t\t\t\treturn +d.Records;})]);\n        \tx.domain(dataS.map(function(d){ return d.Entity;}))\n\t\t\t.range([0, width]);\n\n        \tyAxis.scale(y);\n        \txAxis.scale(x);\n  svg.selectAll(\".rectangle\").remove();\n\n        \n\n        \n    svg.selectAll(\"rectangle\")\n\t\t.data(dataS)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.attr(\"class\",\"rectangle\")\n\t\t.attr(\"width\", width/dataS.length)\n\t\t.attr(\"height\", function(d){\n\t\t\treturn height - y(+d.Records);\n\t\t})\n\t\t.attr(\"x\", function(d, i){\n\t\t\treturn (width / dataS.length) * i ;\n\t\t})\n\t\t.attr(\"y\", function(d){\n\t\t\treturn y(+d.Records);\n\t\t})\n\t\t.append(\"title\")\n\t\t.text(function(d){\n\t\t\treturn d.Entity + \" : \" + d.Records;\n\t\t});\n\n      \n        d3.selectAll(\"g.y.axis\")\n           \t\t.transition()\n           \t\t.call(yAxis);\n d3.selectAll(\"g.x.axis\")\n           .attr(\"transform\", \"translate(0,\" + height + \")\")\n           .call(xAxis)\n        \t .selectAll(\"text\")\n    \t\t\t .style(\"font-size\", \"8px\")\n      \t   .style(\"text-anchor\", \"end\")\n      \t   .attr(\"dx\", \"-.8em\")\n      \t   .attr(\"dy\", \"-.55em\")\n      \t   .attr(\"transform\", \"rotate(-90)\" );\n\n         });\n\n  var elementosSelector=[\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\"];\n    selector.selectAll(\"option\")\n      .data(elementosSelector)\n      .enter().append(\"option\")\n      .attr(\"value\", function(d){\n        return d;\n      })\n      .text(function(d){\n        return d;\n      })\n\n});\n\n</script>", "description": "fresh block", "created_at": "2016-09-05T04:37:13Z", "updated_at": "2016-09-27T20:55:18Z", "api": ["d3.select", "d3.tsv", "d3.scaleLinear", "d3.max", "d3.scaleBand", "d3.axisBottom", "d3.axisLeft", "d3.selectAll"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "nychi713_3b17c5fded769dab6799fe54b2f85517"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10, \"%\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-09-05T02:56:24Z", "updated_at": "2016-09-05T04:30:29Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "tizon9804_5c144f83193eba0c2603e30f7ebdb3db"}, {"code": "<script>\n  \nvar grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}];\n   \nvar margin = { top: 50, right: 300, bottom: 50, left: 50 },\n    outerWidth = 1050,\n    outerHeight = 500,\n    width = outerWidth - margin.left - margin.right,\n    height = outerHeight - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]).nice();\n\nvar y = d3.scale.linear()\n    .range([height, 0]).nice();\nvar xMax = d3.max(grades, function(d) { return d.grade; }) * 1.05,\n      xMin = d3.min(grades, function(d) { return d.grade; }),\n      xMin = xMin > 0 ? 0 : xMin;\n\n  x.domain([xMin, xMax]);\n\n  var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\")\n      .tickSize(-height);\n\n  var color = d3.scale.category10();\n\n  var tip = d3.tip()\n      .attr(\"class\", \"d3-tip\")\n      .offset([-10, 0])\n      .html(function(d) {\n        return \"Cdigo: \" + d.code + \"<br>\" + \"Grade: \" + d.grade;\n      });\nvar zoomBeh = d3.behavior.zoom()\n      .x(x)\n      .y(y)\n      .scaleExtent([0, 500]);\n      .on(\"zoom\", zoom);\nvar svg = d3.select(\"#scatter\")\n    .append(\"svg\")\n      .attr(\"width\", outerWidth)\n      .attr(\"height\", outerHeight)\n    .append(\"g\")\n      .call(zoomBeh);\n \n  svg.call(tip);\n\n function zoom() {\n    svg.select(\".x.axis\").call(xAxis);\n\n\n    svg.selectAll(\".dot\")\n        .attr(\"transform\", transform);\n  }\n\n \n\n</script>", "description": "fresh block", "created_at": "2016-09-05T02:18:06Z", "updated_at": "2016-09-05T04:25:07Z", "api": ["d3.scale.linear", "d3.max", "d3.min", "d3.svg.axis", "d3.scale.category10", "d3.tip", "d3.behavior.zoom", "d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "nychi713_d33cf7df5ffbb757a142fab18b134653"}, {"code": "<script>\n\nvar margin = {top: 40, right: 40, bottom: 30, left: 60},\n    width = 940 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:blue'>\" + d.grade + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  \n  data.sort(function(a,b) {return a.code - b.code;});\n  \n  y.domain(data.map(function(d) { return d.code; }));\n  x.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"x\", width+32)\n      .attr(\"dx\", \".1em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"dy\", \".5em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Code\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(function(d) { return width - x(d.grade); })\n      .attr(\"width\", function(d) { return x(d.grade); })\n      .attr(\"y\", function(d) { return y(d.code); })\n      .attr(\"height\", y.rangeBand())\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.grade = +d.grade;\n  return d;\n}\n\n</script>", "description": "Grades Visualization V2", "created_at": "2016-09-05T02:16:09Z", "updated_at": "2016-09-06T02:33:41Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/willroj/'>willroj</a>'s block: <a href='http://bl.ocks.org/willroj/34fd56d0b126ead0d48fea27bff20f4f'>Grades Visualization</a>\n\nforked from <a href='http://bl.ocks.org/willroj/'>willroj</a>'s block: <a href='http://bl.ocks.org/willroj/70008b54362298d88e1f039b1b186d99'>Grades Visualization</a>", "uid": "willroj_6f0f1eb8b620d5ed3139d7e57dc801df"}, {"code": "<script>\n  \n var grades = [\n\t{\"code\":23802620, \"grade\":4.85},\n\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\n\t{\"code\":23802926, \"grade\":5},\n\t{\"code\":23800661, \"grade\":3.19},\n\t{\"code\":23800768, \"grade\":3.98},\n\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\n\t{\"code\":23805498, \"grade\":4.795},\n\t{\"code\":23805913, \"grade\":4.85},\n\t{\"code\":23800311, \"grade\":2.81},\n\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\n\t{\"code\":23802872, \"grade\":2.16},\n\t{\"code\":23802105, \"grade\":4.715},\n\t{\"code\":23809880, \"grade\":4.92},\n\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\n\t{\"code\":23807916, \"grade\":5},\n\t{\"code\":23801962, \"grade\":3.62},\n\t{\"code\":23808246, \"grade\":4.61},\n\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}\n];\n  \n \n\nvar margin = {top: 50, right: 20, bottom: 15, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1, 1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\n//var xAxis = d3.svg.axis()\n   // .scale(x)\n   // .orient(\"bottom\")\n\t//\t;\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n //#####################################################################\n //TIP\n //##################################################################### \nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, -7])\n  .html(function(d) {\n    return \"<div><strong>Code:</strong> <span style='color:red'>\" + d.code + \"</span></div><div><strong>Grade:</strong> <span style='color:forestgreen'>\" + d.grade + \"</span></div>\";\n  });\n \nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \nsvg.call(tip);\n\nfunction update(data) {\n\n  x.domain(data.map(function(d) { return d.code; }));\n  y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n  svg.append(\"g\")      \n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n     \n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  var barra=svg.selectAll(\".bar\").data(data);\n      barra.enter().append(\"rect\").attr(\"class\", \"bar\");\n  \n  \t\t//barra.exit().remove();\n  \n  \t\tbarra.on(\"mouseover\", tip.show)\n \t\t  .on(\"mouseout\",tip.hide)\n  \t\t.style(\"fill\",function(d){        \n    \t\t\tif(d.grade<3){ \n            return \"darkred\";\n          }\n  \t\t\t\telse if(d.grade<4){\n            return \"darkgoldenrod\"\n          }\n  \t\t\t\telse{\n            return \"forestgreen\"\n          }\n      })      \n      .attr(\"x\", function(d) { return x(d.code); })\n      .attr(\"y\", function(d) { return y(d.grade); })\n      .attr(\"width\", x.rangeBand())      \n      .attr(\"height\", function(d) { return height - y(d.grade); });\n\n  d3.select(\".order\").on(\"change\", change);\n  var searchinput = d3.select(\"input.search\");\n  \t\tsearchinput.on(\"keyup\",search);\n\n  var sortTimeout = setTimeout(function() {\n    d3.select(\"input\").property(\"checked\", true).each(change);\n  }, 5000);\n  //##############################################################\n  //search\n  //##############################################################\n  function search(){\n    var barr=svg.selectAll(\".bar\")      \n      barr.each(function(d,i){\n        var bari=d3.select(this); \n        //console.log(bari.select(\".rect\"));\n        var codeinput=searchinput.property(\"value\");      \n        if(d.code==codeinput){\n          bari.style(\"fill-opacity\",\"0.5\");\n          bari.append(tip.show).offset([20,0]);\n        }\n        else{\n          bari.style(\"fill-opacity\",\"0.9\"); \n        }\n    });\n  }\n\n  function change() {\n    clearTimeout(sortTimeout);\n\n    // Copy-on-write since tweens are evaluated after a delay.\n    var x0 = x.domain(data.sort(this.checked\n        ? function(a, b) { return b.grade - a.grade; }\n        : function(a, b) { return d3.ascending(a.code, b.code); })\n        .map(function(d) { return d.code; }))\n        .copy();\n\n    svg.selectAll(\".bar\")\n        .sort(function(a, b) { return x0(a.code) - x0(b.code); });\n\n    var transition = svg.transition().duration(2000),\n        delay = function(d, i) { return i * 50; };\n\n    transition.selectAll(\".bar\")\n        .delay(delay)\n        .attr(\"x\", function(d) { return x0(d.code); });\n\n    transition.select(\".x.axis\")       \n        .selectAll(\"g\")\n        .delay(delay);\n  }\n  \n  barra.exit().remove();\n};\n \nupdate(grades);\n\n</script>", "description": "Grades TZ", "created_at": "2016-09-05T02:08:20Z", "updated_at": "2016-09-11T02:05:55Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.max", "d3.ascending"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nWhat:\n\n    structure:Table    \n    A categorical attribute: code\n    A quantitive attribute: grade\n    \n\nWhy:\n\n\t\tDiscover distribution, compare values, look for\n\nHow:\n\n\t\tmark:\n    \n    \t\t\tlines\n          \n    channels:\n    \n    \t\t\tlenght: to express quant grade\n          color: to express if the grade was good, regular or bad\n          spatial regions:one per code, it has a transition that sort the marks by grade\n          embed: embed information like code and grade when mouse is over a bar\n          \n          \n   Development:\n   \n   The best form to show quantitive attributes like grades is with lines because the human      vision can compare the lenght in a frame undertanding the general information without \t\t think a lot.\n   \n   I also use embed information because it was showing the codes in x axis, so the lenght of \t\tthat label producedoverlaps. my solution is embed the code with the grade when you mouse \t\tover the a specific bar.\n   \n   To finish, The bars have color, it depends if the grade are very \t\t\t     good(green),normal(Yellow), bad(Red). the colors use the same as the traffic lights and if you want to look for a specific code, in the input text it is possible. \n          \n   ", "uid": "tizon9804_89d0aad8ad534420af82919773a7705d"}, {"code": "<script>\n\nvar margin = {top: 40, right: 40, bottom: 30, left: 60},\n    width = 940 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:blue'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  y.domain(data.map(function(d) { return d.letter; }));\n  x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"x\", width+32)\n      .attr(\"dx\", \".1em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"dy\", \".5em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Code\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(function(d) { return width - x(d.frequency); })\n      .attr(\"width\", function(d) { return x(d.frequency); })\n      .attr(\"y\", function(d) { return y(d.letter); })\n      .attr(\"height\", y.rangeBand())\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Grades Visualization", "created_at": "2016-09-05T02:07:36Z", "updated_at": "2016-09-05T02:07:40Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>\n\nforked from <a href='http://bl.ocks.org/willroj/'>willroj</a>'s block: <a href='http://bl.ocks.org/willroj/34fd56d0b126ead0d48fea27bff20f4f'>Grades Visualization</a>", "uid": "willroj_70008b54362298d88e1f039b1b186d99"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 100},\n    width = 600 - margin.left - margin.right,\n    height = 700 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar x = d3.scale.linear()\n    .range([0,width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\")\n\t\t.ticks(10);\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar grades = [{\"code\":23802620, \"grade\":4.85},\n                  {\"code\":23802825, \"grade\":4.865},\n                  {\"code\":23801894, \"grade\":3.24},\n                  {\"code\":23802926, \"grade\":5},\n                  {\"code\":23800661, \"grade\":3.19},\n                  {\"code\":23800768, \"grade\":3.98},\n                  {\"code\":23800972, \"grade\":4.89},\n                  {\"code\":23801922, \"grade\":3.73},\n                  {\"code\":23805498, \"grade\":4.795},\n                  {\"code\":23805913, \"grade\":4.85},\n                  {\"code\":23800311, \"grade\":2.81},\n                  {\"code\":23806395, \"grade\":4.72},\n                  {\"code\":23808850, \"grade\":3.85},\n                  {\"code\":23802872, \"grade\":2.16},\n                  {\"code\":23802105, \"grade\":4.715},\n                  {\"code\":23809880, \"grade\":4.92},\n                  {\"code\":23802056, \"grade\":4.48},\n                  {\"code\":23807897, \"grade\":5.2},\n                  {\"code\":23807916, \"grade\":5},\n                  {\"code\":23801962, \"grade\":3.62},\n                  {\"code\":23808246, \"grade\":4.61},\n                  {\"code\":23802600, \"grade\":0.11},\n                  {\"code\":23808311, \"grade\":4.7}\n\t\t];\n\n  y.domain(grades.map(function(d) { return d.code; }));\n  x.domain([0, d3.max(grades, function(d) { return d.grade; })]);\n\n/*  var tip = d3.tip()\n  .attr(\"class\", \"d3-tip\")\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:red'>\" + x(d.grade) + \"</span>\";\n  });*/\n\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n  \t\t.attr(\"x\", 6)\n      .attr(\"dx\", \".71em\")\n      .style(\"text-anchor\", \"end\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n svg.selectAll(\".bar\")\n      .data(grades)\n      .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", function(d) { return x(d.grade); })\n \t\t\t.attr(\"width\", function(d) { return x(d.grade); })\n \t\t\t.text(\"a\")\n \t\t\t.attr(\"y\", function(d) { return y(d.code); })\n      .attr(\"height\", y.rangeBand());\n  \n\n</script>", "description": "Task3", "created_at": "2016-09-05T00:59:42Z", "updated_at": "2016-09-05T06:09:22Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.max", "d3.tip"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "Franramy_a8c7971ed2a06e0a32610c7f937cbf7f"}, {"code": "<script>\n\nvar margin = {top: 40, right: 40, bottom: 30, left: 60},\n    width = 940 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .1);\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Grade:</strong> <span style='color:blue'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  y.domain(data.map(function(d) { return d.letter; }));\n  x.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"x\", width+32)\n      .attr(\"dx\", \".1em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Grade\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"y\", 0)\n      .attr(\"dy\", \".5em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Code\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(function(d) { return width - x(d.frequency); })\n      .attr(\"width\", function(d) { return x(d.frequency); })\n      .attr(\"y\", function(d) { return y(d.letter); })\n      .attr(\"height\", y.rangeBand())\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Grades Visualization", "created_at": "2016-09-04T23:07:02Z", "updated_at": "2016-09-05T02:07:33Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>", "uid": "willroj_34fd56d0b126ead0d48fea27bff20f4f"}, {"code": "<script>\n\nvar margin = {top: 40, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar formatPercent = d3.format(\".0%\");\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .tickFormat(formatPercent);\n\nvar tip = d3.tip()\n  .attr('class', 'd3-tip')\n  .offset([-10, 0])\n  .html(function(d) {\n    return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n  })\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg.call(tip);\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); })\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Using d3-tip to add tooltips to a d3 bar chart", "created_at": "2016-09-04T22:17:00Z", "updated_at": "2016-09-04T22:17:00Z", "api": ["d3.format", "d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.tip", "d3.select", "d3.tsv", "d3.max"], "readme": "How to use [d3-tip](https://github.com/caged/d3-tip) with d3's [simple bar chart example](http://bl.ocks.org/mbostock/3885304).\n\n\nforked from <a href='http://bl.ocks.org/Caged/'>Caged</a>'s block: <a href='http://bl.ocks.org/Caged/6476579'>Using d3-tip to add tooltips to a d3 bar chart</a>", "uid": "willroj_7b1610f824a258d36a1b3b554ebd2ea3"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.ordinal()\n    .rangeRoundBands([0, width], .1);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n    .ticks(10);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"data.tsv\", type, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.letter; }));\n  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Frequency\");\n\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function(d) { return x(d.letter); })\n      .attr(\"width\", x.rangeBand())\n      .attr(\"y\", function(d) { return y(d.frequency); })\n      .attr(\"height\", function(d) { return height - y(d.frequency); });\n});\n\nfunction type(d) {\n  d.frequency = +d.frequency;\n  return d;\n}\n\n</script>", "description": "Bar Chart", "created_at": "2016-09-04T17:14:48Z", "updated_at": "2016-09-04T19:19:09Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.tsv", "d3.max"], "readme": "This simple bar chart is constructed from a TSV file storing the frequency of letters in the English language. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.format](https://github.com/mbostock/d3/wiki/Formatting) - format percentages\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - *x*-position encoding\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *y*-position encoding\n* [d3.max](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_max) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3885304'>Bar Chart</a>", "uid": "willroj_d4e1979c371393e2840883f1c211eb19"}, {"code": "<script>\n    \n    var myData = [1,2,3,4];\n    \n    var grades = [{\"code\":23802620, \"grade\":4.85},\n                  {\"code\":23802825, \"grade\":4.865},\n                  {\"code\":23801894, \"grade\":3.24},\n                  {\"code\":23802926, \"grade\":5},\n                  {\"code\":23800661, \"grade\":3.19},\n                  {\"code\":23800768, \"grade\":3.98},\n                  {\"code\":23800972, \"grade\":4.89},\n                  {\"code\":23801922, \"grade\":3.73},\n                  {\"code\":23805498, \"grade\":4.795},\n                  {\"code\":23805913, \"grade\":4.85},\n                  {\"code\":23800311, \"grade\":2.81},\n                  {\"code\":23806395, \"grade\":4.72},\n                  {\"code\":23808850, \"grade\":3.85},\n                  {\"code\":23802872, \"grade\":2.16},\n                  {\"code\":23802105, \"grade\":4.715},\n                  {\"code\":23809880, \"grade\":4.92},\n                  {\"code\":23802056, \"grade\":4.48},\n                  {\"code\":23807897, \"grade\":5.2},\n                  {\"code\":23807916, \"grade\":5},\n                  {\"code\":23801962, \"grade\":3.62},\n                  {\"code\":23808246, \"grade\":4.61},\n                  {\"code\":23802600, \"grade\":0.11},\n                  {\"code\":23808311, \"grade\":4.7}\n\t\t];\n\t\tvar barHeight = 20;\n    var chart1 = d3.select( \"#chart\" )\n    \t\t\t\t\t\t\t .append( \"svg\" )\n    \t\t\t\t\t\t\t .attr( \"width\", 500 )\n    \t\t\t\t\t\t\t .attr( \"height\", 200 );\n    \n    var code = grades.map( function(d) { return d.code; });\n    var grade = grades.map( function(d) { return d.grade; });\n    var chart2 = d3.select( \"#chart2\" ).append(\"p\").text(grade).style(\"font-size\",\"20pt\");\n    \n    function update( myData )\n    {\n      var ps = chart1.selectAll(\"rect\").data( myData );\n      \n      //Enter\n      var psEnter = ps.enter()\n\t\t\t\t\t\t\t\t\t\t  .append( \"rect\" )\n      \t\t\t\t\t\t\t\t.attr( \"x\", 0 )\n      \t\t\t\t\t\t\t\t.attr( \"y\", function(d,i){ return i*(barHeight+1); } )\n      \t\t\t\t\t\t\t\t.attr( \"width\", 0 )\n      \t\t\t\t\t\t\t\t.attr( \"height\", barHeight )\n      \t\t\t\t\t\t\t\t.attr( \"fill\", \"green\" )\n      \t\t\t\t\t\t\t\t.merge( ps )\n      \t\t\t\t\t\t\t\t.transition()\n      \t\t\t\t\t\t\t\t.duration( 0 )\n      \t\t\t\t\t\t\t\t.attr( \"width\", function( x ){ return x;});\n      //Update\n      ps.attr( \"x\", 0)\n      \t.attr( \"y\", function( d , i ){ return i*(barHeight+1); } )\n      \t.attr( \"width\", 0 )\n      \t.attr( \"height\", barHeight )\n      \t.attr( \"fill\", \"green\" )\n        .transition()\n        .duration( 0 )\n        .attr( \"width\", function( x ){ return x;});\n      \n      //Remove\n      ps.exit().remove();\n    }\n    \n    update( grade );    \n  </script>", "description": "Tarea3_Jf.ramirez49", "created_at": "2016-09-04T04:42:07Z", "updated_at": "2016-09-04T05:21:23Z", "api": ["d3.select"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nWhat\n\nwhy\n\nhow", "uid": "Franramy_38617a1b277ccbfebfa9c6968c16b8a3"}, {"code": "<script>\n\n    // Elements\n\n    var noise = document.getElementById('noise')\n    var light = document.getElementById('specularPointLight')\n    var sat = document.getElementById('saturate')\n    var gamma = document.getElementById('gamma')\n    var container = document.getElementById('r')\n    var geom = document.getElementById('geom')\n    var meta = document.getElementById('meta')\n\n    // Elevation run colors\n\n    //wiki-schwarzwald-cont\n    //Copyright Jide and W-j-s (https://als.wikipedia.org/wiki/Benutzer:W-j-s)\n    // soliton.vm.bytemark.co.uk\n    //   /pub/cpt-city/wkp/schwarzwald/wiki-schwarzwald-cont.png.index.html\n    // Creative commons attribution share-alike 3.0 unported\n\n    function fromByte(d) { return d / 255}\n\n    var wikiSchwarzwald = {\n      name: \"wiki-schwarzwald-cont by Jide and W-j-s\",\n      r: [\n        174,175,176,176,177,176,176,178,181,186,192,198,204,210,217,224,231,\n        238,245,250,248,238,226,213,198,184,170,154,140,125,110,94,77,62,49,\n        39,30,24,18,14,9,7,12, 24,40,52,64,76,87,99,110,120,128,137,147,156,\n        166,176,187,197,207,218,228,238,246,248,244,238,232,226,220,216,211,\n        206,200,192,186,180,174,169,163,157,151,146,141,135,130,125,122,119,\n        118,117,117,117,116,116,114,114,112,111,110,110,109,108,108,108,107,\n        106,106,107,110,113,116,118,121,125,128,131,135,138,140,144,147,150,\n        152,156,158,160,163,166,167,170,172,174,178,181,184,188,192,196,200,\n        204,208,212,216,218,221,225,229,233,235\n      ].map(fromByte),\n      g: [\n        239,240,242,242,242,243,244,246,246,247,247,248,249,250,250,251,252,\n        252,252,252,249,244,240,235,228,222,216,211,205,199,194,188,182,176,\n        171,165,160,154,148,142,137,132,130,130,132,136,140,142,146,148,150,\n        154,156,160,162,164,166,170,173,176,177,179,180,182,182,176,166,155,\n        144,132,122,111,102,92,84,74,66,58,49,42,36,30,23,18,14,8,5,4,8,13,16,\n        18,20,21,22,24,26,29,31,33,35,36,38,40,40,42,44,44,46,48,52,57,62,66,\n        70,74,79,85,90,96,101,106,111,116,122,129,135,141,147,154,160,167,172,\n        174,178,181,184,188,192,196,200,204,206,210,214,216,219,223,227,231,233\n      ].map(fromByte),\n      b:  [\n        213,211,208,202,196,190,186,181,178,178,178,178,178,177,178,178,178,\n        179,179,178,172,162,151,140,128,118,108,98,89,82,74,66,57,50,44,42,43,\n        46,49,52,56,60,63,63, 61,60,59,59,56,54,52,50,48,46,43,41,39,36,34,30,\n        28,24,20,14,8,4,2,2,2,2,2,2,2,2, 2,2,2,2,2,2,2,2,2,1,1,0,0,0,2,2,2,4,\n        4,4,4,5,6,6,7,8,8,8,9,10,10,10,11,12,12,14,18,23,28,32,37,43,50,56,63,\n        69,76,84,90,96,104,112,120,130,139,147,156,164,171,174,178,181,184,\n        188,192,196,200,204,208,212,216,218,221,225,229,233,235\n      ].map(fromByte),\n      water: {r: 174/255, g: 213/255, b: 239/255},\n      gamma: {r: 1, g: 1, b: 1},\n      saturation: 0.8,\n      cut: 26 // start with greens\n    }\n\n\n    //tv-a\n    //Copyright Jim Mossman http://www.esri.com/news/arcuser/0101/shademax.html\n    // soliton.vm.bytemark.co.uk/pub/cpt-city/jm/tv/tn/tv-a.png.index.html\n    // http://soliton.vm.bytemark.co.uk/pub/cpt-city/jm/copying.html\n    var tva = {\n      name: \"tv-a by Jim Mossman\",\n      r: [115,115,115,115,140,140,148,148,155,155,163,163,171,171,178,178,186,\n        186,194,194,201,201,209,209,217,217,224,224,232,232,240,240,247,247,\n        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,\n        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,\n        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,\n        255,255,255,255,255,255,255\n      ].map(fromByte),\n      g: [255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,\n        255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,\n        255,255,255,247,247,240,240,232,232,225,225,218,218,211,211,204,204,\n        197,197,190,190,183,183,176,176,169,169,162,162,155,155,160,160,172,\n        172,183,183,189,189,195,195,201,201,210,210,218,218,226,226,232,232,\n        237,237,243,243,247,247,251,251,\n      ].map(fromByte),\n      b: [143,143,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,\n        115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,\n        115,115,119,119,123,123,127,127,127,127,127,127,127,127,127,127,127,\n        127,127,127,127,127,127,127,127,127,127,127,127,127,141,141,155,155,\n        168,168,176,176,183,183,190,190,200,200,210,210,220,220,227,227,233,\n        233,240,240,245,245,250,250\n      ].map(fromByte),\n      water: {r: 174/255, g: 213/255, b: 239/255},\n      gamma: {r: 4, g: 4, b: 4},\n      saturation: 0.8,\n      cut: 0\n    }\n\n    function runToPalette(name, d3Palette) {\n      var palette = {\n        name: name,\n        r: [],\n        g: [],\n        b: [],\n        water: {r: 90/255, g: 105/255, b: 120/255},\n        gamma: {r: 1, g: 1, b: 1},\n        saturation: 1,\n        cut: 0\n      }\n      var color, i\n      for(i = 0; i <= 1000; i ++) {\n        color = d3.color(d3Palette(i / 1000))\n        palette.r.push(color.r / 255)\n        palette.g.push(color.g / 255)\n        palette.b.push(color.b / 255)\n      }\n      return palette\n    }\n\n    var viridis = runToPalette(\"Viridis run from D3\", d3.interpolateViridis)\n    var magma = runToPalette(\"Magma run from D3\", d3.interpolateMagma)\n\n    // ice effect\n    var ice = {\n      name: \"grayscale/ice\",\n      r: [],\n      g: [],\n      b: [],\n      gamma: {r: 1.5, g: 1.3, b: 1},\n      saturation: 0.8,\n      cut: 0\n    }\n\n    var coal = {\n      name: \"text invisible anyway\",\n      r: [0, 0],\n      g: [0, 0],\n      b: [0, 0],\n      gamma: {r: 1, g: 1, b: 1},\n      saturation: 1,\n      cut: 0\n    }\n\n    var palettes = [tva, wikiSchwarzwald, ice, magma, viridis]\n    var paletteIndex = 0\n\n    function setPalette() {\n\n      var p = palettes[paletteIndex++ % palettes.length]\n\n      // add color for water bodies:\n      var geoR= (p.water ? [p.water.r] : []).concat(p.r.slice(p.cut)).join(' ')\n      var geoG= (p.water ? [p.water.g] : []).concat(p.g.slice(p.cut)).join(' ')\n      var geoB= (p.water ? [p.water.b] : []).concat(p.b.slice(p.cut)).join(' ')\n\n      // set the palette on the receiving SVG filter channels\n      document.getElementById('geoR').setAttribute('tableValues', geoR)\n      document.getElementById('geoG').setAttribute('tableValues', geoG)\n      document.getElementById('geoB').setAttribute('tableValues', geoB)\n\n      // set saturation\n      sat.setAttribute(\"values\", p.saturation)\n\n      // set gamma\n      document.getElementById('gammaR').setAttribute('exponent', p.gamma.r)\n      document.getElementById('gammaG').setAttribute('exponent', p.gamma.g)\n      document.getElementById('gammaB').setAttribute('exponent', p.gamma.b)\n\n      // set palette name\n      meta.innerHTML = p.name\n    }\n\n\n    //Interactions\n\n    function moveLight(e) {\n      light.setAttribute('x', 2 * e.x)\n      //sat.setAttribute('values', .4 + .6 * Math.round(3 * (1 - e.y/500)) / 3)\n    }\n\n    function newMap() {\n      setPalette()\n      var newSeed = Math.round(1e6 * Math.random())\n      noise.setAttribute('seed', newSeed)\n      console.log(\"Seed: \", newSeed)\n      // some good seeds: 453109 394778 221947 601567\n    }\n\n    container.addEventListener(\"mousemove\", moveLight)\n    container.addEventListener(\"click\", newMap)\n\n    // Initial palette\n    setPalette()\n\n\n  </script>", "description": "Generative elevation map with SVG filters", "created_at": "2016-09-03T22:55:50Z", "updated_at": "2016-09-16T17:53:42Z", "api": ["d3.color"], "readme": "Click for a new map and palette. Move the mouse sideways to change where the light source is.\n\n[There is also a pure SVG map with [elevation contours](http://bl.ocks.org/monfera/c774b8b7196b7e04a5487102b63a330b).]\n\nThis SVG filter generates elevation, flat waters and icy mesas. Also see my [previous filter](http://bl.ocks.org/monfera/19845caf6aa383abddaa248a3f0d2ae0) and twitter/[@monfera](https://twitter.com/monfera) for visualizations including glitchy shots from making this block. A couple of D3 color scales are added but otherwise there's no dependency, it's kept minimal.\n\nThis block has:\n\n- generative topographic map creation with SVG\n- use of a [D3](https://github.com/d3/d3-scale#interpolateViridis) or custom palette in an SVG filter, testing with pretty [topo](http://soliton.vm.bytemark.co.uk/pub/cpt-city/wkp/schwarzwald/tn/wiki-schwarzwald-cont.png.index.html) [palettes](http://www.esri.com/news/arcuser/0101/shademax.html)\n- bump mapping and lighting\n\nSometimes we lean on D3 for things that the underlying standards already provide, or miss opportunities. I'm impressed by Nadieh Bremer's [work with filters](http://www.visualcinnamon.com/2016/06/fun-data-visualizations-svg-gooey-effect.html) which shows how much can be done beyond the basics.\n\nPalette copyrights in the source. Palette authors:\n\n1. tv-a: [Jim Mossman](http://www.esri.com/news/arcuser/0101/shademax.html)\n2. wiki-schwarzwald-cont: [W-j-s](https://als.wikipedia.org/wiki/Benutzer:W-j-s) and Jide \n3. viridis, magma:  [St\u00e9fan van der Walt and Nathaniel Smith](https://www.youtube.com/watch?list=PLYx7XA2nY5Gcpabmu61kKcToLz0FapmHu&v=xAoljeRJ3lU), via D3 by Mike Bostock (not meant for topography) \n\nThis is what I wanted:\n\n- find out how a custom palette (e.g. from [d3-scale](https://github.com/d3/d3-scale#interpolateViridis) or [d3-scale-chromatic](https://github.com/d3/d3-scale-chromatic) can be applied via SVG filters, which have no direct notion of palettes or color scales\n- explore some promising [topographic](http://soliton.vm.bytemark.co.uk/pub/cpt-city/views/topo.html) and [topographic-bathymetric](http://soliton.vm.bytemark.co.uk/pub/cpt-city/views/topobath.html) color schemes for future D3 / WebGL tasks; I'm on the lookout for other open source topo or topo-bathy runs too\n- have a contour or shaded map backdrop for datavis or UI prototyping without the need to load an actual map \n- D3 works with Web standards like SVG, so most D3 learning is standards learning\n- SVG filters are a simple dataflow language, and as I'm working on declarative and data flow oriented WebGL visualization tools, I wanted to refresh my memory on how this graphics [DAG](https://en.wikipedia.org/wiki/Directed_acyclic_graph) works \n- try to make something pretty\n- relive the SVG filter creation fun I had when working on a geotemporal dashboard a few years ago\n\nI found that:\n\n- this technique can be equally applied to rendering real [DEMs](https://en.wikipedia.org/wiki/Digital_elevation_model) rather than just noise\n- my D3 and other work benefits from exploring corners of SVG that are lesser used with D3 or in general\n- SVG is very powerful, but it's not quite true to its name - it is scalable spatially, but is NOT scalable temporally (slow), all signs point to browser makers not investing too much in its performance (basic rendering such as CSS/SVG transform [isn't even hardare accelerated](http://codepen.io/monfera/pen/JKOqyY) as of Aug 2016, [unlike the HTML DOM](http://codepen.io/monfera/pen/BzmERz))\n- custom palettes could be passed on [fairly simply](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComponentTransfer) with SVG, a limitation being that the input domain is sliced to even intervals, I haven't found a way of passing on the percentage thresholds\n- it's easy to generate the basics such as the noise and the contours, but building the full data flow and tweaking the visuals took long hours\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n", "uid": "monfera_21be9bb116a8e5b2423b706155fdb718"}, {"code": "<script>\n\nvar margin = {top: 50, right: 20, bottom: 10, left: 65},\n    width = 800 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .3);\n\nvar x = d3.scale.linear()\n    .rangeRound([0, width]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#c7001e\", \"#f6a580\", \"#cccccc\", \"#92c6db\", \"#086fad\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"top\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\nvar svg = d3.select(\"#figure\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"id\", \"d3-plot\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  color.domain([\"Strongly disagree\", \"Disagree\", \"Neither agree nor disagree\", \"Agree\", \"Strongly agree\"]);\n\n  d3.csv(\"raw_data.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n    // calc percentages\n    d[\"Strongly disagree\"] = +d[1]*100/d.N;\n    d[\"Disagree\"] = +d[2]*100/d.N;\n    d[\"Neither agree nor disagree\"] = +d[3]*100/d.N;\n    d[\"Agree\"] = +d[4]*100/d.N;\n    d[\"Strongly agree\"] = +d[5]*100/d.N;\n    var x0 = -1*(d[\"Neither agree nor disagree\"]/2+d[\"Disagree\"]+d[\"Strongly disagree\"]);\n    var idx = 0;\n    d.boxes = color.domain().map(function(name) { return {name: name, x0: x0, x1: x0 += +d[name], N: +d.N, n: +d[idx += 1]}; });\n  });\n\n  var min_val = d3.min(data, function(d) {\n          return d.boxes[\"0\"].x0;\n          });\n\n  var max_val = d3.max(data, function(d) {\n          return d.boxes[\"4\"].x1;\n          });\n\n  x.domain([min_val, max_val]).nice();\n  y.domain(data.map(function(d) { return (d.Question); }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n\n  var vakken = svg.selectAll(\".question\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"bar\")\n      .attr(\"transform\", function(d) { return \"translate(0,\" + y(d.Question) + \")\"; });\n\n  var bars = vakken.selectAll(\"rect\")\n      .data(function(d) { return d.boxes; })\n    .enter().append(\"g\").attr(\"class\", \"subbar\");\n\n  bars.append(\"rect\")\n      .attr(\"height\", 20) //y.rangeBand()\n      .attr(\"x\", function(d) { return x(d.x0); })\n      .attr(\"width\", function(d) { return x(d.x1) - x(d.x0); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  bars.append(\"text\")\n      .attr(\"x\", function(d) { return x(d.x0); })\n      .attr(\"y\", 10)//y.rangeBand()/2\n      .attr(\"dy\", \"0.5em\")\n      .attr(\"dx\", \"0.5em\")\n      .style(\"font\" ,\"10px sans-serif\")\n      .style(\"text-anchor\", \"begin\")\n      .style(\"color\", function(d) { if (d.n<2) {return \"000\";} else {return \"black\";} })\n      .text(function(d) { return d.n !== 0 && (d.x1-d.x0)>3 ? d.n : \"\" });\n\n  vakken.insert(\"rect\",\":first-child\")\n      .attr(\"height\", 20)//y.rangeBand()\n      .attr(\"x\", \"1\")\n      .attr(\"width\", width)\n      .attr(\"fill-opacity\", \"0.5\")\n      .style(\"fill\", \"#F5F5F5\")\n      .attr(\"class\", function(d,index) { return index%2==0 ? \"even\" : \"uneven\"; });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n  .append(\"line\")\n      .attr(\"x1\", x(0))\n      .attr(\"x2\", x(0))\n      .attr(\"y2\", height);\n\n  var startp = svg.append(\"g\").attr(\"class\", \"legendbox\").attr(\"id\", \"mylegendbox\");\n  // this is not nice, we should calculate the bounding box and use that\n  var legend_tabs = [0, 120, 200, 375, 450];\n  var legend = startp.selectAll(\".legend\")\n      .data(color.domain().slice())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + legend_tabs[i] + \",-45)\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", 22)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"begin\")\n      .style(\"font\" ,\"10px sans-serif\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\".axis path\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"#000\")\n      .style(\"shape-rendering\", \"crispEdges\")\n\n  d3.selectAll(\".axis line\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"#000\")\n      .style(\"shape-rendering\", \"crispEdges\")\n\n  var movesize = width/2 - startp.node().getBBox().width/2;\n  d3.selectAll(\".legendbox\").attr(\"transform\", \"translate(\" + movesize  + \",0)\");\n\n});\n\nfunction prepareDownload() { \n\n  //get svg element.\nvar svgelt = document.getElementById(\"d3-plot\");\n//get svg source.\nvar serializer = new XMLSerializer();\nvar source = serializer.serializeToString(svgelt);\n\n//add name spaces.\nif(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n    source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n}\nif(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n    source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n}\n\n//add xml declaration\nsource = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n\n//convert svg source to URI data scheme.\nvar url = \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(source);\n\n//set url value to a element's href attribute.\ndocument.getElementById(\"link\").href = url;\n//you can download svg file by right click menu.\n}\n\n</script>", "description": "Diverging Stacked Bar Chart", "created_at": "2016-09-03T22:31:48Z", "updated_at": "2016-09-05T12:47:14Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.min", "d3.max", "d3.selectAll"], "readme": "Diverging Stacked Bar Chart\n===========================\n\nWe create a diverging stacked bar chart to plot a 5 point Likert scale. There a lots of ways to\nplot a Likert scale but according to [Robbins & Heiberger](https://www.amstat.org/sections/SRMS/Proceedings/y2011/Files/300784_64164.pdf), a diverging stacked bar chart is the best and I agree.\n\nI've used [D3.js](http://d3js.org). There is also an [R package](http://cran.r-project.org/web/packages/HH/index.html) by Robbins & Heiberger.\n\nThe original can be found at [github](https://github.com/wpoely86/D3.js-Diverging-Stacked-Bar-Chart)\n\nforked from <a href='http://bl.ocks.org/wpoely86/'>wpoely86</a>'s block: <a href='http://bl.ocks.org/wpoely86/e285b8e4c7b84710e463'>Diverging Stacked Bar Chart</a>", "uid": "aurelient_27ecb57c04bf42073312487720fb28d9"}, {"code": "<script>\n    \nvar grades = [\t{\"code\":23802620, \"grade\":4.85},\t{\"code\":23802825, \"grade\":4.865},\n\t{\"code\":23801894, \"grade\":3.24},\t{\"code\":23802926, \"grade\":5},\t{\"code\":23800661, \"grade\":3.19},\t{\"code\":23800768, \"grade\":3.98},\t{\"code\":23800972, \"grade\":4.89},\n\t{\"code\":23801922, \"grade\":3.73},\t{\"code\":23805498, \"grade\":4.795},\t{\"code\":23805913, \"grade\":4.85},\t{\"code\":23800311, \"grade\":2.81},\t{\"code\":23806395, \"grade\":4.72},\n\t{\"code\":23808850, \"grade\":3.85},\t{\"code\":23802872, \"grade\":2.16},\t{\"code\":23802105, \"grade\":4.715},\t{\"code\":23809880, \"grade\":4.92},\t{\"code\":23802056, \"grade\":4.48},\n\t{\"code\":23807897, \"grade\":5.2},\t{\"code\":23807916, \"grade\":5},\t{\"code\":23801962, \"grade\":3.62},\t{\"code\":23808246, \"grade\":4.61},\t{\"code\":23802600, \"grade\":0.11},\n\t{\"code\":23808311, \"grade\":4.7}]; // datos\n    \nvar margin = {top: 20, right: 20, bottom: 30, left: 40},// se establecen las margenes\n    width = 960 - margin.left - margin.right, // que tan ancho va a ser SVG\n    height = 500 - margin.top - margin.bottom; // que tan alto  va a ser SVG\n\nvar x = d3.scale.linear() // \n    .range([0, width]);\n        \n    // Feel free to change or delete any of the code you see in this editor!\nvar xAxis = d3.svg.axis(); // crear el eje en el que se va a trabajar\n    xAxis.scale(x) // con que escala se va a trabajar por defecto esta abajo\n    xAxis.orient(\"bottom\"); // donde van las letras\n    \n    // Todo lo anterior se puede resumir en \n    //var xAxis = d3.svg.axis()\n                  //.scale(xScale)\n                  //.orient(\"bottom\");\n    \nvar svg = d3.select(\"body\").append(\"svg\") // agregar componente svg\n    .attr(\"width\", width + margin.left + margin.right) // ancho del svg\n    .attr(\"height\", height + margin.top + margin.bottom) // altura del svg\n   .append(\"g\") // se utiliza para agrupar figuras SVG en un grupo\n\t\t\t\t\t\t\t\t//(se maneja como una unidad)\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); \n    // mueve el grupo svg las margenes necesarias\n\nx.domain(d3.extent(grades, function(d) { return d.grades; })).nice();\n \n    \n    //TEXTO ORIGINAL\nsvg.append(\"text\")\n      .text(\"Edit the code below to change me!\")\n      .attr(\"y\", 200)\n      .attr(\"x\", 120)\n      .style(\"font-size\", 36)\n      .style(\"font-family\", \"monospace\")\n\n  </script>", "description": "Tarea3", "created_at": "2016-09-03T17:43:41Z", "updated_at": "2016-09-06T13:00:13Z", "api": ["d3.scale.linear", "d3.svg.axis", "d3.select", "d3.extent"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "aiMojica10_2b9f00ac77b58d2d6d65a00666e5f60c"}, {"code": "<script>\n\nvar margin = {top: 50, right: 20, bottom: 10, left: 65},\n    width = 800 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar y = d3.scale.ordinal()\n    .rangeRoundBands([0, height], .3);\n\nvar x = d3.scale.linear()\n    .rangeRound([0, width]);\n\nvar color = d3.scale.ordinal()\n    .range([\"#c7001e\", \"#f6a580\", \"#cccccc\", \"#92c6db\", \"#086fad\"]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"top\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\")\n\nvar svg = d3.select(\"#figure\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"id\", \"d3-plot\")\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  color.domain([\"Strongly disagree\", \"Disagree\", \"Neither agree nor disagree\", \"Agree\", \"Strongly agree\"]);\n\n  d3.csv(\"raw_data.csv\", function(error, data) {\n\n  data.forEach(function(d) {\n    // calc percentages\n    d[\"Strongly disagree\"] = +d[1]*100/d.N;\n    d[\"Disagree\"] = +d[2]*100/d.N;\n    d[\"Neither agree nor disagree\"] = +d[3]*100/d.N;\n    d[\"Agree\"] = +d[4]*100/d.N;\n    d[\"Strongly agree\"] = +d[5]*100/d.N;\n    var x0 = -1*(d[\"Neither agree nor disagree\"]/2+d[\"Disagree\"]+d[\"Strongly disagree\"]);\n    var idx = 0;\n    d.boxes = color.domain().map(function(name) { return {name: name, x0: x0, x1: x0 += +d[name], N: +d.N, n: +d[idx += 1]}; });\n  });\n\n  var min_val = d3.min(data, function(d) {\n          return d.boxes[\"0\"].x0;\n          });\n\n  var max_val = d3.max(data, function(d) {\n          return d.boxes[\"4\"].x1;\n          });\n\n  x.domain([min_val, max_val]).nice();\n  y.domain(data.map(function(d) { return d.Question; }));\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n\n  var vakken = svg.selectAll(\".question\")\n      .data(data)\n    .enter().append(\"g\")\n      .attr(\"class\", \"bar\")\n      .attr(\"transform\", function(d) { return \"translate(0,\" + y(d.Question) + \")\"; });\n\n  var bars = vakken.selectAll(\"rect\")\n      .data(function(d) { return d.boxes; })\n    .enter().append(\"g\").attr(\"class\", \"subbar\");\n\n  bars.append(\"rect\")\n      .attr(\"height\", y.rangeBand())\n      .attr(\"x\", function(d) { return x(d.x0); })\n      .attr(\"width\", function(d) { return x(d.x1) - x(d.x0); })\n      .style(\"fill\", function(d) { return color(d.name); });\n\n  bars.append(\"text\")\n      .attr(\"x\", function(d) { return x(d.x0); })\n      .attr(\"y\", y.rangeBand()/2)\n      .attr(\"dy\", \"0.5em\")\n      .attr(\"dx\", \"0.5em\")\n      .style(\"font\" ,\"10px sans-serif\")\n      .style(\"text-anchor\", \"begin\")\n      .text(function(d) { return d.n !== 0 && (d.x1-d.x0)>3 ? d.n : \"\" });\n\n  vakken.insert(\"rect\",\":first-child\")\n      .attr(\"height\", y.rangeBand())\n      .attr(\"x\", \"1\")\n      .attr(\"width\", width)\n      .attr(\"fill-opacity\", \"0.5\")\n      .style(\"fill\", \"#F5F5F5\")\n      .attr(\"class\", function(d,index) { return index%2==0 ? \"even\" : \"uneven\"; });\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n  .append(\"line\")\n      .attr(\"x1\", x(0))\n      .attr(\"x2\", x(0))\n      .attr(\"y2\", height);\n\n  var startp = svg.append(\"g\").attr(\"class\", \"legendbox\").attr(\"id\", \"mylegendbox\");\n  // this is not nice, we should calculate the bounding box and use that\n  var legend_tabs = [0, 120, 200, 375, 450];\n  var legend = startp.selectAll(\".legend\")\n      .data(color.domain().slice())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + legend_tabs[i] + \",-45)\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", 22)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"begin\")\n      .style(\"font\" ,\"10px sans-serif\")\n      .text(function(d) { return d; });\n\n  d3.selectAll(\".axis path\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"#000\")\n      .style(\"shape-rendering\", \"crispEdges\")\n\n  d3.selectAll(\".axis line\")\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"#000\")\n      .style(\"shape-rendering\", \"crispEdges\")\n\n  var movesize = width/2 - startp.node().getBBox().width/2;\n  d3.selectAll(\".legendbox\").attr(\"transform\", \"translate(\" + movesize  + \",0)\");\n\n\n});\n</script>", "description": "Diverging Stacked Bar Chart", "created_at": "2016-09-03T16:33:09Z", "updated_at": "2016-09-03T17:50:34Z", "api": ["d3.scale.ordinal", "d3.scale.linear", "d3.svg.axis", "d3.select", "d3.csv", "d3.min", "d3.max", "d3.selectAll"], "readme": "Diverging Stacked Bar Chart\n===========================\n\nWe create a diverging stacked bar chart to plot a 5 point Likert scale. There a lots of ways to\nplot a Likert scale but according to [Robbins & Heiberger](https://www.amstat.org/sections/SRMS/Proceedings/y2011/Files/300784_64164.pdf), a diverging stacked bar chart is the best and I agree.\n\nI've used [D3.js](http://d3js.org). There is also an [R package](http://cran.r-project.org/web/packages/HH/index.html) by Robbins & Heiberger.\n\nThe original can be found at [github](https://github.com/wpoely86/D3.js-Diverging-Stacked-Bar-Chart)\n\nforked from <a href='http://bl.ocks.org/wpoely86/'>wpoely86</a>'s block: <a href='http://bl.ocks.org/wpoely86/e285b8e4c7b84710e463'>Diverging Stacked Bar Chart</a>", "uid": "aurelient_095d8de12fab4fa26e525a5da38c9d48"}, {"code": "<script>\n\n\n    function randomData(samples) {\n        var data = [],\n            random = d3.randomNormal();\n\n        for (i = 0; i < samples; i++) {\n            data.push({\n                id: i + 1,\n                y: d3.format(\".3\")(random()) \n            });\n        }\n        return data;\n    }\n\n    var data = randomData(200);\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 50},\n    width = 560 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar x = d3.scaleLinear()\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .range([height, 0]);\n\nvar line = d3.line()\n    .x(function(d) { return x(d.id); })\n    .y(function (d) { return y(d.y); });\n\nvar svg = d3.select(\"#g1\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  data.forEach(function (d) {\n      Object.keys(data[0]).forEach(function (k) {\n          d[k] = +d[k];\n      });\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.id; }));\n  y.domain(d3.extent(data, function (d) { return d.y; }));\n\n  var gX = svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  var gY = svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(y));\n\n  svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  svg.selectAll(\".dot\")\n                  .data(data)\n                .enter().append(\"circle\")\n                  .attr(\"class\", \"dot\")\n                  .attr(\"r\", 2.5)\n                  .attr(\"cx\", function (d) { return x(d.id); })\n                  .attr(\"cy\", function (d) { return y(d.y); })\n                  .attr(\"opacity\", 1)\n  .on(\"mouseover\", function (d) {\n      d3.selectAll(\".focus_circle\").transition()\n                    .duration(150).remove();\n      svg.append(\"circle\")\n         .attr(\"class\", \"focus_circle\")\n         .attr(\"cx\", x(d.id))\n         .attr(\"cy\", y(d.y))\n         .attr(\"r\", 5)\n         .style(\"opacity\", 1.0)\n         .style(\"fill\", \"#f46d43\");\n\n      d3.select(\"#point_info\").transition()\n                    .duration(700).style(\"visibility\", \"visible\");\n      d3.select(\"#point_id\").html(d.id);\n      d3.select(\"#point_value\").html(d.y);\n    \n  });\n</script>", "description": "Line chart with information box ", "created_at": "2016-09-03T09:37:39Z", "updated_at": "2016-09-03T09:50:14Z", "api": ["d3.randomNormal", "d3.format", "d3.scaleLinear", "d3.line", "d3.select", "d3.extent", "d3.axisBottom", "d3.axisLeft", "d3.selectAll"], "readme": "Line chart with points hoover triggering updates of information box on the right.", "uid": "EfratVil_33de6b2fc516af2f60742055ecf1ca9a"}, {"code": "<script>\n\t\nvar units = \"Widgets\";\n\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\nvar formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scale.category20();\n\n// append the svg canvas to the page\nvar svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.json(\"sankey-formatted.json\", function(error, graph) {\n\n  sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);\n\n// add in the links\n  var link = svg.append(\"g\").selectAll(\".link\")\n      .data(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });\n\n// add the link titles\n  link.append(\"title\")\n        .text(function(d) {\n    \t\treturn d.source.name + \"  \" + \n                d.target.name + \"\\n\" + format(d.value); });\n\n// add in the nodes\n  var node = svg.append(\"g\").selectAll(\".node\")\n      .data(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n    .call(d3.behavior.drag()\n      .origin(function(d) { return d; })\n      .on(\"dragstart\", function() { \n\t\t  this.parentNode.appendChild(this); })\n      .on(\"drag\", dragmove));\n\n// add the rectangles for the nodes\n  node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n\n// add in the title for the nodes\n  node.append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text(function(d) { return d.name; })\n    .filter(function(d) { return d.x < width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n\n// the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \n        \"translate(\" + d.x + \",\" + (\n                d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n            ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n\n</script>", "description": "Sankey diagram from formatted JSON", "created_at": "2016-09-03T09:01:06Z", "updated_at": "2016-09-03T09:53:28Z", "api": ["d3.format", "d3.scale.category20", "d3.select", "d3.sankey", "d3.json", "d3.behavior.drag", "d3.rgb", "d3.interpolateNumber", "d3.sum", "d3.min", "d3.nest"], "readme": "This is a simple sankey diagram used as an example in the book [D3 Tips and Tricks](https://leanpub.com/D3-Tips-and-Tricks).\n\nIt demonstrates the construction of a [sankey diagram](http://bost.ocks.org/mike/sankey/) using d3.js from external JSON data using the [sankey.js plugin](https://github.com/d3/d3-plugins/tree/master/sankey). It should be taken in context with the text of the [book](https://leanpub.com/D3-Tips-and-Tricks) which can be downloaded for free from Leanpub.", "uid": "steveharoz_f74e5549ccd2884a5f61f488876f0fa6"}, {"code": "<script>\n\n\n  \nvar svg = d3.select(\".container\")\n\t\t.append(\"svg\")\n\t\t.attr(\"width\", \"100%\")\n\nvar rateById = d3.map();\n\nvar quantize = d3.scaleQuantize()\n    .domain([0, 0.15])\n    .range(d3.range(9).map(function(i) { return \"q\" + i + \"-9\"; }));\n\nvar projection = d3.geoAlbersUsa()\n    .scale(900);\n\nvar path = d3.geoPath()\n    .projection(projection);\n\nd3.queue()\n    .defer(d3.json, \"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json\")\n    .defer(d3.tsv, \"unemployment.tsv\", function(d) { rateById.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return quantize(rateById.get(d.id)); })\n      .attr(\"d\", path);\n\n  svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n      .attr(\"class\", \"states\")\n      .attr(\"d\", path);\n}\n\n  function sizeChange() {\n\t    d3.select(\"g\").attr(\"transform\", \"scale(\" + $(\".container\").width()/900 + \")\");\n\t    $(\"svg\").height($(\".container\").width()*0.618);\n  \n\t}\n  \n  \n</script>", "description": "Choropleth", "created_at": "2016-09-02T18:31:08Z", "updated_at": "2016-09-02T19:16:39Z", "api": ["d3.select", "d3.map", "d3.scaleQuantize", "d3.range", "d3.geoAlbersUsa", "d3.geoPath", "d3.queue"], "readme": "This choropleth encodes unemployment rates from 2008 with a [quantize scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales#wiki-quantize) ranging from 0 to 15%. A [threshold scale](../3306362) is a useful alternative for coloring arbitrary ranges.\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/4060606'>Choropleth</a>", "uid": "EvertLagerberg_e5183b20ef9578bcce8f208686e77c30"}, {"code": "<script>\n    var data = [\n      {\"code\":23802620, \"grade\":4.85},\n      {\"code\":23802825, \"grade\":4.865},\n      {\"code\":23801894, \"grade\":3.24},\n      {\"code\":23802926, \"grade\":5},\n      {\"code\":23800661, \"grade\":3.19},\n      {\"code\":23800768, \"grade\":3.98},\n      {\"code\":23800972, \"grade\":4.89},\n      {\"code\":23801922, \"grade\":3.73},\n      {\"code\":23805498, \"grade\":4.795},\n      {\"code\":23805913, \"grade\":4.85},\n      {\"code\":23800311, \"grade\":2.81},\n      {\"code\":23806395, \"grade\":4.72},\n      {\"code\":23808850, \"grade\":3.85},\n      {\"code\":23802872, \"grade\":2.16},\n      {\"code\":23802105, \"grade\":4.715},\n      {\"code\":23809880, \"grade\":4.92},\n      {\"code\":23802056, \"grade\":4.48},\n      {\"code\":23807897, \"grade\":5.2},\n      {\"code\":23807916, \"grade\":5},\n      {\"code\":23801962, \"grade\":3.62},\n      {\"code\":23808246, \"grade\":4.61},\n      {\"code\":23802600, \"grade\":0.11},\n      {\"code\":23808311, \"grade\":4.7}\n    ];\n    \n    data = data.sort(function (a, b) {\n      if (a.grade < b.grade)\n        return -1;\n      if (a.grade > b.grade)\n        return 1;\n      return 0;\n\t\t});\n    \n     // set the dimensions and margins of the graph\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n          width = 1260 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom;\n\n    // set the ranges\n    var x = d3.scaleBand()\n              .range([0, width])\n              .padding(0.1);\n    var y = d3.scaleLinear()\n              .range([height, 0]);\n    \n    var tooltip = d3.select(\"body\")\n        .append(\"div\").append(\"div\").append(\"div\")\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", \"10\")\n        .style(\"visibility\", \"hidden\");\n          \n    // append the svg object to the body of the page\n    // append a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    // Scale the range of the data in the domains\n    x.domain(data.map(function(d) { return d.code; }));\n    y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n    // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return x(d.code); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", function(d) { return y(d.grade); })\n        .attr(\"height\", function(d) { return height - y(d.grade); })\n    \t\t\n    // add the x Axis\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // add the y Axis\n    svg.append(\"g\")\n        .call(d3.axisLeft(y));\n    \n    $('rect').tipsy({ \n      gravity: 's', \n      html: true, \n      title: function() {\n        var d = this.__data__;\n        return +d.grade; \n            }\n    });\n  </script>", "description": "Tarea3", "created_at": "2016-09-02T15:37:05Z", "updated_at": "2016-09-06T14:09:59Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.select", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/carlosfelipetorres/'>carlosfelipetorres</a>'s block: <a href='http://bl.ocks.org/carlosfelipetorres/f8e5b36812ae2cddacab5c8594117a31'>Tarea3</a>\n\n<b>What, why, and how analysis</b>\n\n<b>What?</b>\n\n<li>Dataset Type: Table (A bar chart)</li>\n<li>Data Types: Items & Attributes</li>\n<ol> <li>Codes of students (Categorical type)</li>\n<li> Grades (Ordered, quantitative, sequential)</li></ol>\n\n<b>Why?</b>\n\n<li> Actions:</li>\n<ol> <i>Analyze</i> <ol><li> Consume &#8594; Present</li></ol></ol>\n<ol> <i>Search</i> <ol><li> Lookup &#8594; Target & Location known</li></ol></ol>\n<ol> <i>Query</i> <ol><li> Compare</li></ol></ol>\n<li> Targets:</li>\n<ol> <i>All data</i> <ol><li> Trends</li></ol></ol>\n<ol> <i>Attributes</i> <ol><li> Distribution</li></ol></ol>\n\n<b>How?</b>\n\n<li> Encode</li>\n<ol>  <i>Arrange </i> <ol><li> Express & Align</li></ol></ol>\n<ol>  <i>Map </i> <ol><li> Size</li></ol></ol>\n<li> Manipulate </li>\n<ol> <i>Select </i> </ol>\n\n<b>Decisions made:</b>\n\n1. A bar chart was used because the main task was the comparison between the different grades of the students.\n\n2. It was ordered in an ascending way to have a more accurately comparison the order or ranking of their grades.\n\n3. On the Y axis it's set the grades, a continuous variable. And in the X axis it's set the codes of the students, a categorical, unordered variable.\n\n4. The code was made in De version 4 and its using a tools for visualizing tooltips named Tipsy.\n\n5. The diagram interaction is seen in the moment we pass the mouse over the bars (hover). In this interaction the user can \"ask\" the visualization \"what's going on\" with it and the visualization will tell him theexact grade of that code.\n\n6. For maintaining the best accuracy with the data, the tooltip was implemented as the number of students codes are kind of large and the user really can't tell what is the exact value of the bars just with a simple glance.\n\n7. The visualization is most of all for presenting and comparing grades, and the interaction is beyond that to show the exact grade.\n\n8. The channels used in the visualization were the lenght of the bars, and the bars were the marks.", "uid": "carlosfelipetorres_cfc57e8ed16d9d7f5727cb10fdf63e2f"}, {"code": "<script>\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 40, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// the different dimensions in the data\nvar dims = ['x', 'y', 'z'];\n\n// set x-range\nvar x = d3.scaleLinear().range([0, width]);\nvar x0 = d3.scaleLinear().range([0, width]);\n  \n// set the y-ranges\nvar Y = {}\ndims.forEach(dim => {\n  Y[dim] = d3.scaleLinear().range([height, 0]);\n});\n\n// define the line functions for each dimension\nvar lines = {}\ndims.forEach(dim => { \n  lines[dim] = d3.line()\n    .x(d => x(d.tick))\n    .y(d => Y[dim](d[dim]));\n});\n  \n// tooltip\n// var div = d3.select(\"body\").append(\"div\")\n//     .attr(\"class\", \"tooltip\")\n//     .style(\"opacity\", 0);\n  \nvar tip = d3.tip()\n\t.attr('class', 'd3-tip')\n\t.offset([-10, 0])\n\t.html(function(d) {\n    console.log('d', d)\n    return \"Hello World\";\n  });\n  \n// create the svg object\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create clip-path\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n   .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n  \n// process the data\nd3.csv(\"accel-data.csv\",(error, data) => {\n  if (error) throw error;\n  \n  // Parse the data\n  data.forEach(d => {\n      d.tick = +d.tick;\n      d.x = +d.x;\n      d.y = +d.y;\n      d.z = +d.z;\n  });\n  \n  // Set x-domain scales\n  x.domain(d3.extent(data, d => d.tick));\n  x0.domain(x.domain());\n  \n  // Set y-domain scales\n  for(var dim of dims) {\n    Y[dim].domain(d3.extent(data, d => d[dim]));\n  }\n\n  // setup zoom\n  var zoom = d3.zoom()\n      .scaleExtent([1, 50])\n      .translateExtent([[0, 0], [width, height]])\n      .extent([[0, 0], [width, height]])\n      .on(\"zoom\", zoomed);\n  \n  // create zoom portal in background\n  var rect = svg.append(\"rect\")\n      .attr(\"class\", \"zoom\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom); \n  \n  // Draw Paths\n  for (var dim of dims) {\n    svg.append(\"path\")\n    \t  .data([data])\n        .attr(\"class\", \"line line--\"+dim)\n    \t\t.attr(\"name\", dim)\n        .attr(\"d\", d => lines[dim](d))\n    \t\t.on(\"mouseover\", mouseover)\n    \t\t.on(\"mouseout\", mouseout);\n  }\n  \n  // Add the X Axis\n  svg.append(\"g\")\n  \t\t.attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // Add the Y Axis\n  svg.append(\"g\")\n  \t\t.attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(Y['x']));\n  \n  // Set initial zoom/position\n  zoom.scaleBy(rect, 2);\n  zoom.translateBy(rect, width);\n  \n  \n  // ===Functions===\n  function mouseover(d) {\n    var name = d3.select(this).attr(\"name\"); \n    \n    // highlight this line, fade other lines\n    d3.selectAll(\".line\").classed(\"line--hover\", (d, i) => {\n      return (name === dims[i]);\n    }).classed(\"line--fade\", (d, i) => {\n      return (name !== dims[i]);\n    });\n    \n    // display tooltip\n//     div.transition()\n//     \t.duration(200)\n//     \t.style(\"opacity\", 1);\n//     div.html(\"accelerometer - \" + name)\n//     \t.style(\"left\", (d3.event.pageX - 70) + \"px\")\n//       .style(\"top\", (d3.event.pageY - 40) + \"px\");\n  }\n  \n  \n  function mouseout(d) {\n    // turn off hover and fade effects\n    d3.selectAll(\".line\")\n      .classed(\"line--hover\", false)\n      .classed(\"line--fade\", false);\n    \n    // hide tooltip\n//     div.transition()\n//     \t.duration(500)\n//     \t.style(\"opacity\", 0);\n  }\n  \n  \n  function zoomed() {\n    var t = d3.event.transform;\n    x.domain(t.rescaleX(x0).domain());\n    dims.forEach(dim => {\n      var selector = \".line--\" + dim;\n      svg.select(selector)\n        .attr(\"d\", lines[dim]);\n    });\n    svg.select(\".axis--x\").call(d3.axisBottom(x));\n  }\n});\n \n</script>", "description": "Signal Plot IV (d3-tip)", "created_at": "2016-09-01T23:16:06Z", "updated_at": "2016-09-02T17:12:59Z", "api": ["d3.scaleLinear", "d3.line", "d3.select", "d3.tip", "d3.csv", "d3.extent", "d3.zoom", "d3.axisBottom", "d3.axisLeft", "d3.selectAll"], "readme": "## Signal Plot III\n\nLine chart that displays three dimensions of data taken from an accelerometer. This example is designed to implement zooming, while still maintaining the highlighting and tooltips from <a href='http://bl.ocks.org/lwthatcher/1ecdd35bdf2c96630bf98112ec0344a1'>Signal Plot II</a>.\n\n### Zooming\nThe chart uses [d3.zoom](https://github.com/d3/d3-zoom/blob/master/README.md) to implement zooming and panning for the x-axis. Adding the zoom can be done with relatively few steps:\n\n#### Create the Zoom Behavior:\n``` javascript\n  // setup zoom\n  var zoom = d3.zoom()\n      .scaleExtent([1, 50])\n      .translateExtent([[0, 0], [width, height]])\n      .extent([[0, 0], [width, height]])\n      .on(\"zoom\", zoomed);\n```\nThe callback function *zoomed* will also need to be defined. Below shows the callback for rescaling only in the x dimension, as well as redrawing the x-axis:\n``` javascript\n  function zoomed() {\n    var t = d3.event.transform;\n    x.domain(t.rescaleX(x0).domain());\n    dims.forEach(dim => {\n      var selector = \".line--\" + dim;\n      svg.select(selector)\n        .attr(\"d\", lines[dim]);\n    });\n    svg.select(\".axis--x\").call(d3.axisBottom(x));\n  }\n```\nNote how the x0 scale is also needed for a point of reference:\n`var x0 = d3.scaleLinear().range([0, width]);`\n...\n `x0.domain(x.domain());`\n\n#### Create the Zoom Portal:\n``` javascript\n  // create zoom portal in background\n  var rect = svg.append(\"rect\")\n      .attr(\"class\", \"zoom\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom); \n```\n**Note:** Make sure that this section goes *after* the zoom behavior definition, but *before* drawing any of the lines or axes. This will position the zoom portal in the back, allowing the highlighting and tooltip events to still propagate.\n\n#### Add the Clip-Path:\n``` javascript\n// Create clip-path\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n   .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n```\n\n#### Styling:\nMake sure that zoom portal accepts pointer-events, and that the lines use the clip-path.\n``` css\n.zoom {\n  fill: none;\n  cursor: move;\n  pointer-events: all;\n}\n\n.line {\n  fill: none;\n  opacity: 0.9;\n  stroke-width: 1.5px;\n  clip-path: url(#clip);\n}\n```\n\n#### Set initial zoom/position: (optional)\nThis little snippet sets the initial zoom to x2 and sets the position to the start of the data:\n``` javascript\n  // Set initial zoom/position\n  zoom.scaleBy(rect, 2);\n  zoom.translateBy(rect, width);\n```\n**Note:** The order matters here: scale *then* translate.\n\n### Highlighting:\nHighlighting follows a pattern inspired by <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block:  <a href='http://bl.ocks.org/lwthatcher/a6c886b1081857a7198807617f183283'>Multi y-axis with mouseover</a>, where when a line is moused-over the line is highlighted, while other lines are dimmed.\n\n### Tooltips:\nThe tooltips are implemented based off of <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block:  <a href='http://bl.ocks.org/d3noob/257c360b3650b9f0a52dd8257d7a2d73'>Simple tooltips in v4</a>, with some additional css styling changes.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block: <a href='http://bl.ocks.org/lwthatcher/94c246de1032f09b32742edfc30c54b1'>Signal Plot I</a>\n\n>forked from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block: <a href='http://bl.ocks.org/lwthatcher/1ecdd35bdf2c96630bf98112ec0344a1'>Signal Plot II (highlighting + tooltips)</a>\n\n> >forked from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block: <a href='http://bl.ocks.org/lwthatcher/d6eb019c470bf3c9ca6df94213a111a0'>Signal Plot III (zoom)</a>", "uid": "lwthatcher_3e61f97a6499ccfa77c85e8fe26bee19"}, {"code": "<script>\n    var data = [\n      {\"code\":23802620, \"grade\":4.85},\n      {\"code\":23802825, \"grade\":4.865},\n      {\"code\":23801894, \"grade\":3.24},\n      {\"code\":23802926, \"grade\":5},\n      {\"code\":23800661, \"grade\":3.19},\n      {\"code\":23800768, \"grade\":3.98},\n      {\"code\":23800972, \"grade\":4.89},\n      {\"code\":23801922, \"grade\":3.73},\n      {\"code\":23805498, \"grade\":4.795},\n      {\"code\":23805913, \"grade\":4.85},\n      {\"code\":23800311, \"grade\":2.81},\n      {\"code\":23806395, \"grade\":4.72},\n      {\"code\":23808850, \"grade\":3.85},\n      {\"code\":23802872, \"grade\":2.16},\n      {\"code\":23802105, \"grade\":4.715},\n      {\"code\":23809880, \"grade\":4.92},\n      {\"code\":23802056, \"grade\":4.48},\n      {\"code\":23807897, \"grade\":5.2},\n      {\"code\":23807916, \"grade\":5},\n      {\"code\":23801962, \"grade\":3.62},\n      {\"code\":23808246, \"grade\":4.61},\n      {\"code\":23802600, \"grade\":0.11},\n      {\"code\":23808311, \"grade\":4.7}\n    ];\n     // set the dimensions and margins of the graph\n    var margin = {top: 20, right: 20, bottom: 30, left: 40},\n          width = 960 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom;\n\n    // set the ranges\n    var x = d3.scaleBand()\n              .range([0, width])\n              .padding(0.1);\n    var y = d3.scaleLinear()\n              .range([height, 0]);\n    \n//     var tip = d3.tip()\n//     .attr('class', 'd3-tip')\n//     .offset([-10, 0])\n//     .html(function(d) {\n//       return \"<strong>Frequency:</strong> <span style='color:red'>\" + d.frequency + \"</span>\";\n//     })\n          \n    // append the svg object to the body of the page\n    // append a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    // Scale the range of the data in the domains\n    x.domain(data.map(function(d) { return d.code; }));\n    y.domain([0, d3.max(data, function(d) { return d.grade; })]);\n\n    // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .on(\"click\", function(d){ \n          console.log(d.grade);\n          })\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return x(d.code); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", function(d) { return y(d.grade); })\n        .attr(\"height\", function(d) { return height - y(d.grade); });\n\n    // add the x Axis\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // add the y Axis\n    svg.append(\"g\")\n        .call(d3.axisLeft(y));\n    \n\n  </script>", "description": "Tarea3", "created_at": "2016-09-01T22:39:19Z", "updated_at": "2016-09-02T04:33:44Z", "api": ["d3.scaleBand", "d3.scaleLinear", "d3.tip", "d3.select", "d3.max", "d3.axisBottom", "d3.axisLeft"], "readme": "Built with [blockbuilder.org](http://blockbuilder.org)", "uid": "carlosfelipetorres_f8e5b36812ae2cddacab5c8594117a31"}, {"code": "<script>\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 40, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// the different dimensions in the data\nvar dims = ['x', 'y', 'z'];\n\n// set x-range\nvar x = d3.scaleLinear().range([0, width]);\nvar x0 = d3.scaleLinear().range([0, width]);\n  \n// set the y-ranges\nvar Y = {}\ndims.forEach(dim => {\n  Y[dim] = d3.scaleLinear().range([height, 0]);\n});\n\n// define the line functions for each dimension\nvar lines = {}\ndims.forEach(dim => { \n  lines[dim] = d3.line()\n    .x(d => x(d.tick))\n    .y(d => Y[dim](d[dim]));\n});\n  \n// tooltip\nvar div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n  \n// create the svg object\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Create clip-path\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n   .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n  \n// process the data\nd3.csv(\"accel-data.csv\",(error, data) => {\n  if (error) throw error;\n  \n  // Parse the data\n  data.forEach(d => {\n      d.tick = +d.tick;\n      d.x = +d.x;\n      d.y = +d.y;\n      d.z = +d.z;\n  });\n  \n  // Set x-domain scales\n  x.domain(d3.extent(data, d => d.tick));\n  x0.domain(x.domain());\n  \n  // Set y-domain scales\n  for(var dim of dims) {\n    Y[dim].domain(d3.extent(data, d => d[dim]));\n  }\n\n  // setup zoom\n  var zoom = d3.zoom()\n      .scaleExtent([1, 50])\n      .translateExtent([[0, 0], [width, height]])\n      .extent([[0, 0], [width, height]])\n      .on(\"zoom\", zoomed);\n  \n  // create zoom portal in background\n  var rect = svg.append(\"rect\")\n      .attr(\"class\", \"zoom\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom); \n  \n  // Draw Paths\n  for (var dim of dims) {\n    svg.append(\"path\")\n    \t  .data([data])\n        .attr(\"class\", \"line line--\"+dim)\n    \t\t.attr(\"name\", dim)\n        .attr(\"d\", d => lines[dim](d))\n    \t\t.on(\"mouseover\", mouseover)\n    \t\t.on(\"mouseout\", mouseout);\n  }\n  \n  // Add the X Axis\n  svg.append(\"g\")\n  \t\t.attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // Add the Y Axis\n  svg.append(\"g\")\n  \t\t.attr(\"class\", \"axis axis--y\")\n      .call(d3.axisLeft(Y['x']));\n  \n  // Set initial zoom/position\n  zoom.scaleBy(rect, 2);\n  zoom.translateBy(rect, width);\n  \n  \n  // ===Functions===\n  function mouseover(d) {\n    var name = d3.select(this).attr(\"name\"); \n    \n    // highlight this line, fade other lines\n    d3.selectAll(\".line\").classed(\"line--hover\", (d, i) => {\n      return (name === dims[i]);\n    }).classed(\"line--fade\", (d, i) => {\n      return (name !== dims[i]);\n    });\n    \n    // display tooltip\n    div.transition()\n    \t.duration(200)\n    \t.style(\"opacity\", 1);\n    div.html(\"accelerometer - \" + name)\n    \t.style(\"left\", (d3.event.pageX - 70) + \"px\")\n      .style(\"top\", (d3.event.pageY - 40) + \"px\");\n  }\n  \n  \n  function mouseout(d) {\n    // turn off hover and fade effects\n    d3.selectAll(\".line\")\n      .classed(\"line--hover\", false)\n      .classed(\"line--fade\", false);\n    \n    // hide tooltip\n    div.transition()\n    \t.duration(500)\n    \t.style(\"opacity\", 0);\n  }\n  \n  \n  function zoomed() {\n    var t = d3.event.transform;\n    x.domain(t.rescaleX(x0).domain());\n    dims.forEach(dim => {\n      var selector = \".line--\" + dim;\n      svg.select(selector)\n        .attr(\"d\", lines[dim]);\n    });\n    svg.select(\".axis--x\").call(d3.axisBottom(x));\n  }\n});\n \n</script>", "description": "Signal Plot III (zoom)", "created_at": "2016-08-31T18:33:06Z", "updated_at": "2016-09-02T19:26:33Z", "api": ["d3.scaleLinear", "d3.line", "d3.select", "d3.csv", "d3.extent", "d3.zoom", "d3.axisBottom", "d3.axisLeft", "d3.selectAll"], "readme": "## Signal Plot III\n\nLine chart that displays three dimensions of data taken from an accelerometer. This example is designed to implement zooming, while still maintaining the highlighting and tooltips from <a href='http://bl.ocks.org/lwthatcher/1ecdd35bdf2c96630bf98112ec0344a1'>Signal Plot II</a>.\n\n### Zooming\nThe chart uses [d3.zoom](https://github.com/d3/d3-zoom/blob/master/README.md) to implement zooming and panning for the x-axis. Adding the zoom can be done with relatively few steps:\n\n#### Create the Zoom Behavior:\n``` javascript\n  // setup zoom\n  var zoom = d3.zoom()\n      .scaleExtent([1, 50])\n      .translateExtent([[0, 0], [width, height]])\n      .extent([[0, 0], [width, height]])\n      .on(\"zoom\", zoomed);\n```\nThe callback function *zoomed* will also need to be defined. Below shows the callback for rescaling only in the x dimension, as well as redrawing the x-axis:\n``` javascript\n  function zoomed() {\n    var t = d3.event.transform;\n    x.domain(t.rescaleX(x0).domain());\n    dims.forEach(dim => {\n      var selector = \".line--\" + dim;\n      svg.select(selector)\n        .attr(\"d\", lines[dim]);\n    });\n    svg.select(\".axis--x\").call(d3.axisBottom(x));\n  }\n```\nNote how the x0 scale is also needed for a point of reference:\n`var x0 = d3.scaleLinear().range([0, width]);`\n...\n `x0.domain(x.domain());`\n\n#### Create the Zoom Portal:\n``` javascript\n  // create zoom portal in background\n  var rect = svg.append(\"rect\")\n      .attr(\"class\", \"zoom\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom); \n```\n**Note:** Make sure that this section goes *after* the zoom behavior definition, but *before* drawing any of the lines or axes. This will position the zoom portal in the back, allowing the highlighting and tooltip events to still propagate.\n\n#### Add the Clip-Path:\n``` javascript\n// Create clip-path\nsvg.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n   .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n```\n\n#### Styling:\nMake sure that zoom portal accepts pointer-events, and that the lines use the clip-path.\n``` css\n.zoom {\n  fill: none;\n  cursor: move;\n  pointer-events: all;\n}\n\n.line {\n  fill: none;\n  opacity: 0.9;\n  stroke-width: 1.5px;\n  clip-path: url(#clip);\n}\n```\n\n#### Set initial zoom/position: (optional)\nThis little snippet sets the initial zoom to x2 and sets the position to the start of the data:\n``` javascript\n  // Set initial zoom/position\n  zoom.scaleBy(rect, 2);\n  zoom.translateBy(rect, width);\n```\n**Note:** The order matters here: scale *then* translate.\n\n### Highlighting:\nHighlighting follows a pattern inspired by <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block:  <a href='http://bl.ocks.org/lwthatcher/a6c886b1081857a7198807617f183283'>Multi y-axis with mouseover</a>, where when a line is moused-over the line is highlighted, while other lines are dimmed.\n\n### Tooltips:\nThe tooltips are implemented based off of <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block:  <a href='http://bl.ocks.org/d3noob/257c360b3650b9f0a52dd8257d7a2d73'>Simple tooltips in v4</a>, with some additional css styling changes.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block: <a href='http://bl.ocks.org/lwthatcher/94c246de1032f09b32742edfc30c54b1'>Signal Plot I</a>\n\n>forked from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block: <a href='http://bl.ocks.org/lwthatcher/1ecdd35bdf2c96630bf98112ec0344a1'>Signal Plot II (highlighting + tooltips)</a>", "uid": "lwthatcher_d6eb019c470bf3c9ca6df94213a111a0"}, {"code": "<script>\n\nvar width = 960,\n    height = 1060;\n\nvar format = d3.format(\",d\");\n\nvar color = d3.scaleOrdinal()\n    .range(d3.schemeCategory10\n        .map(function(c) { c = d3.rgb(c); c.opacity = 0.6; return c; }));\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\nvar treemap = d3.treemap()\n    .size([width, height])\n    .padding(1)\n    .round(true);\n\nd3.csv(\"flare.csv\", type, function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sum(function(d) { return d.value ? 1 : 0; })\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });\n\n  treemap(root);\n\n  d3.select(\"body\")\n    .selectAll(\".node\")\n    .data(root.leaves())\n    .enter().append(\"div\")\n      .attr(\"class\", \"node\")\n      .attr(\"title\", function(d) { return d.id; })\n      .style(\"left\", function(d) { return d.x0 + \"px\"; })\n      .style(\"top\", function(d) { return d.y0 + \"px\"; })\n      .style(\"width\", function(d) { return d.x1 - d.x0 + \"px\"; })\n      .style(\"height\", function(d) { return d.y1 - d.y0 + \"px\"; })\n      .style(\"background\", function(d) { while (d.depth > 1) d = d.parent; return color(d.id); })\n    .append(\"div\")\n      .attr(\"class\", \"node-label\")\n      .text(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\n\"); });\n});\n\nfunction type(d) {\n  d.value = +d.value;\n  return d;\n}\n\n</script>", "description": "Treemap by Count", "created_at": "2016-08-31T14:25:55Z", "updated_at": "2016-08-31T14:26:19Z", "api": ["d3.format", "d3.scaleOrdinal", "d3.rgb", "d3.stratify", "d3.treemap", "d3.csv", "d3.select"], "readme": "Forked\nThis example demonstrates how to create a treemap where each leaf node is treated as having equal value, rather than being [sized according to a quantitative property](/mbostock/6bbb0a7ff7686b124d80).\n\nIn the flare.csv file, leaf nodes (representing class source files) have a non-zero value, while internal nodes (representing packages) have a zero value. Thus, when calling [*node*.sum](https://github.com/d3/d3-hierarchy#node_sum), any non-zero value can be treated as one:\n\n```js\nroot.sum(function(d) { return d.value ? 1 : 0; });\n```\n\nIf you instead give *all* nodes a value of one, then one unit of additional space will be reserved for the parent.\n", "uid": "dcleao_3375965cda4cf705ce0203c970cc0779"}, {"code": "<script>\n// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 40, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n// the different dimensions in the data\nvar dims = ['x', 'y', 'z'];\n\n// set x-range\nvar x = d3.scaleLinear().range([0, width]);\n  \n// set the y-ranges\nvar Y = {}\ndims.forEach(dim => {\n  Y[dim] = d3.scaleLinear().range([height, 0]);\n});\n\n// define the line functions for each dimension\nvar lines = {}\ndims.forEach(dim => { \n  lines[dim] = d3.line()\n    .x(d => x(d.tick))\n    .y(d => Y[dim](d[dim]));\n});\n\n// tooltip\nvar div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n\n// create the svg object\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// process the data\nd3.csv(\"accel-data.csv\",(error, data) => {\n  if (error) throw error;\n  \n  // Parse the data\n  data.forEach(d => {\n      d.tick = +d.tick;\n      d.x = +d.x;\n      d.y = +d.y;\n      d.z = +d.z;\n  });\n  // Set domain scales\n  x.domain(d3.extent(data, d => d.tick));\n  for(var dim of dims) {\n    Y[dim].domain(d3.extent(data, d => d[dim]));\n  }\n  \n  // Draw Paths\n  for (var dim of dims) {\n    svg.append(\"path\")\n    \t  .data([data])\n        .attr(\"class\", \"line line--\"+dim)\n    \t\t.attr(\"name\", dim)\n        .attr(\"d\", d => lines[dim](d))\n    \t\t.on(\"mouseover\", mouseover)\n    \t\t.on(\"mouseout\", mouseout)\n  }\n  \n  // Add the X Axis\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n  \n  // Add the Y Axis (Note how we only need one axis)\n  svg.append(\"g\")\n      .attr(\"class\", \"axisSteelBlue\")\n      .call(d3.axisLeft(Y['x']));\n  \n  // mouseover function\n  function mouseover(d) {\n    var name = d3.select(this).attr(\"name\");\n    \n    // highlight this line, fade other lines\n    d3.selectAll(\".line\").classed(\"line--hover\", (d, i) => {\n      return (name === dims[i]);\n    }).classed(\"line--fade\", (d, i) => {\n      return (name !== dims[i]);\n    });\n    \n    // display tooltip\n    div.transition()\n    \t.duration(200)\n    \t.style(\"opacity\", 1);\n    div.html(\"accelerometer - \" + name)\n    \t.style(\"left\", (d3.event.pageX - 70) + \"px\")\n      .style(\"top\", (d3.event.pageY - 40) + \"px\");\n  }\n  \n  // mouseout function\n  function mouseout(d) {\n    // turn off hover and fade effects\n    d3.selectAll(\".line\")\n      .classed(\"line--hover\", false)\n      .classed(\"line--fade\", false);\n    \n    // hide tooltip\n    div.transition()\n    \t.duration(500)\n    \t.style(\"opacity\", 0);\n  }\n});\n    \n</script>", "description": "Signal Plot II (highlighting + tooltips)", "created_at": "2016-08-30T22:41:34Z", "updated_at": "2016-08-31T18:40:58Z", "api": ["d3.scaleLinear", "d3.line", "d3.select", "d3.csv", "d3.extent", "d3.axisBottom", "d3.axisLeft", "d3.selectAll"], "readme": "## Signal Plot II (with highlighting and tooltips)\n\nSimple line chart that displays three dimensions of data taken from an accelerometer. This chart also supports line highlighting when mousing over, inspired from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block:  <a href='http://bl.ocks.org/lwthatcher/a6c886b1081857a7198807617f183283'>Multi y-axis with mouseover</a>, as well as displaying tooltips inspired from <a href='http://bl.ocks.org/d3noob/'>d3noob</a>'s block:  <a href='http://bl.ocks.org/d3noob/257c360b3650b9f0a52dd8257d7a2d73'>Simple tooltips in v4</a>.\n\nThis is a very  basic expansion from <a href='http://bl.ocks.org/lwthatcher/94c246de1032f09b32742edfc30c54b1'>Signal Plot I</a> designed to illustrate adding highlighting and tooltips to a line chart.\n\nBuilt with [blockbuilder.org](http://blockbuilder.org)\n\nforked from <a href='http://bl.ocks.org/lwthatcher/'>lwthatcher</a>'s block: <a href='http://bl.ocks.org/lwthatcher/94c246de1032f09b32742edfc30c54b1'>Signal Plot I</a>", "uid": "lwthatcher_1ecdd35bdf2c96630bf98112ec0344a1"}, {"code": "<script>\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar color = d3.scale.category10();\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.tsv(\"https://cdn.rawgit.com/john-guerra/221cb4c7fb676bcb58a25d4982114de3/raw/5d6e47127d109d961404fc8f3abd3b4b1191e6c5/data.tsv\", function(error, data) {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.sepalLength = +d.sepalLength;\n    d.sepalWidth = +d.sepalWidth;\n  });\n\n  x.domain(d3.extent(data, function(d) { return d.sepalWidth; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.sepalLength; })).nice();\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Width (cm)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Length (cm)\")\n\n  svg.selectAll(\".dot\")\n      .data(data)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.sepalWidth); })\n      .attr(\"cy\", function(d) { return y(d.sepalLength); })\n      .style(\"fill\", function(d) { return color(d.species); });\n\n  var legend = svg.selectAll(\".legend\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  legend.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });\n\n});\n\n</script>", "description": "Scatterplot", "created_at": "2016-08-30T21:49:05Z", "updated_at": "2016-09-15T18:21:14Z", "api": ["d3.scale.linear", "d3.scale.category10", "d3.svg.axis", "d3.select", "d3.tsv", "d3.extent"], "readme": "This scatterplot is constructed from a TSV file storing the dimensions of sepals and petals of various iris flowers. The chart employs [conventional margins](http://bl.ocks.org/3019563) and a number of D3 features:\n\n* [d3.tsv](https://github.com/mbostock/d3/wiki/CSV) - load and parse data\n* [d3.scale.linear](https://github.com/mbostock/d3/wiki/Quantitative-Scales) - *x*- and *y*-position encoding\n* [d3.scale.ordinal](https://github.com/mbostock/d3/wiki/Ordinal-Scales) - color encoding\n* [d3.extent](https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_extent) - compute domains\n* [d3.svg.axis](https://github.com/mbostock/d3/wiki/SVG-Axes) - display axes\n\nforked from <a href='http://bl.ocks.org/mbostock/'>mbostock</a>'s block: <a href='http://bl.ocks.org/mbostock/3887118'>Scatterplot</a>", "uid": "john-guerra_221cb4c7fb676bcb58a25d4982114de3"}], "links": [{"source": "dhoboy_116056d5a74c478c49058952fc14b98c", "value": 25, "target": "miguelvb_2f65e501776381af5b3b0fe6715697bc", "links": [{"target_end_line": 185, "source_start_line": 103, "source_end_line": 110, "source_confidence": 22, "target_start_line": 180, "target_confidence": 6}, {"target_end_line": 75, "source_start_line": 17, "source_end_line": 20, "source_confidence": 22, "target_start_line": 72, "target_confidence": 6}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 28, "source_confidence": 22, "target_start_line": 20, "target_confidence": 6}, {"target_end_line": 284, "source_start_line": 83, "source_end_line": 89, "source_confidence": 22, "target_start_line": 282, "target_confidence": 6}, {"target_end_line": 185, "source_start_line": 103, "source_end_line": 110, "source_confidence": 22, "target_start_line": 180, "target_confidence": 6}, {"target_end_line": 75, "source_start_line": 17, "source_end_line": 20, "source_confidence": 22, "target_start_line": 72, "target_confidence": 6}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 28, "source_confidence": 22, "target_start_line": 20, "target_confidence": 6}, {"target_end_line": 284, "source_start_line": 83, "source_end_line": 89, "source_confidence": 22, "target_start_line": 282, "target_confidence": 6}, {"target_end_line": 185, "source_start_line": 103, "source_end_line": 110, "source_confidence": 22, "target_start_line": 180, "target_confidence": 6}, {"target_end_line": 75, "source_start_line": 17, "source_end_line": 20, "source_confidence": 22, "target_start_line": 72, "target_confidence": 6}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 28, "source_confidence": 22, "target_start_line": 20, "target_confidence": 6}, {"target_end_line": 284, "source_start_line": 83, "source_end_line": 89, "source_confidence": 22, "target_start_line": 282, "target_confidence": 6}, {"target_end_line": 185, "source_start_line": 103, "source_end_line": 110, "source_confidence": 22, "target_start_line": 180, "target_confidence": 6}, {"target_end_line": 75, "source_start_line": 17, "source_end_line": 20, "source_confidence": 22, "target_start_line": 72, "target_confidence": 6}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 28, "source_confidence": 22, "target_start_line": 20, "target_confidence": 6}, {"target_end_line": 284, "source_start_line": 83, "source_end_line": 89, "source_confidence": 22, "target_start_line": 282, "target_confidence": 6}]}, {"source": "lorenzopub_cefd53c7fc67018efba0fe0460cdfd2a", "value": 41, "target": "SpaceActuary_b91f25d80a103736b14477dc8a3a7c76", "links": [{"target_end_line": 20, "source_start_line": 21, "source_end_line": 25, "source_confidence": 26, "target_start_line": 15, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 108, "source_start_line": 83, "source_end_line": 89, "source_confidence": 26, "target_start_line": 104, "target_confidence": 22}, {"target_end_line": 123, "source_start_line": 99, "source_end_line": 107, "source_confidence": 26, "target_start_line": 117, "target_confidence": 22}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 64, "source_confidence": 26, "target_start_line": 70, "target_confidence": 22}, {"target_end_line": 92, "source_start_line": 77, "source_end_line": 80, "source_confidence": 26, "target_start_line": 89, "target_confidence": 22}, {"target_end_line": 20, "source_start_line": 21, "source_end_line": 25, "source_confidence": 26, "target_start_line": 15, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 108, "source_start_line": 83, "source_end_line": 89, "source_confidence": 26, "target_start_line": 104, "target_confidence": 22}, {"target_end_line": 123, "source_start_line": 99, "source_end_line": 107, "source_confidence": 26, "target_start_line": 117, "target_confidence": 22}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 64, "source_confidence": 26, "target_start_line": 70, "target_confidence": 22}, {"target_end_line": 92, "source_start_line": 77, "source_end_line": 80, "source_confidence": 26, "target_start_line": 89, "target_confidence": 22}, {"target_end_line": 20, "source_start_line": 21, "source_end_line": 25, "source_confidence": 26, "target_start_line": 15, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 108, "source_start_line": 83, "source_end_line": 89, "source_confidence": 26, "target_start_line": 104, "target_confidence": 22}, {"target_end_line": 123, "source_start_line": 99, "source_end_line": 107, "source_confidence": 26, "target_start_line": 117, "target_confidence": 22}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 64, "source_confidence": 26, "target_start_line": 70, "target_confidence": 22}, {"target_end_line": 92, "source_start_line": 77, "source_end_line": 80, "source_confidence": 26, "target_start_line": 89, "target_confidence": 22}, {"target_end_line": 20, "source_start_line": 21, "source_end_line": 25, "source_confidence": 26, "target_start_line": 15, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 108, "source_start_line": 83, "source_end_line": 89, "source_confidence": 26, "target_start_line": 104, "target_confidence": 22}, {"target_end_line": 123, "source_start_line": 99, "source_end_line": 107, "source_confidence": 26, "target_start_line": 117, "target_confidence": 22}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 64, "source_confidence": 26, "target_start_line": 70, "target_confidence": 22}, {"target_end_line": 92, "source_start_line": 77, "source_end_line": 80, "source_confidence": 26, "target_start_line": 89, "target_confidence": 22}, {"target_end_line": 20, "source_start_line": 21, "source_end_line": 25, "source_confidence": 26, "target_start_line": 15, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 108, "source_start_line": 83, "source_end_line": 89, "source_confidence": 26, "target_start_line": 104, "target_confidence": 22}, {"target_end_line": 123, "source_start_line": 99, "source_end_line": 107, "source_confidence": 26, "target_start_line": 117, "target_confidence": 22}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 64, "source_confidence": 26, "target_start_line": 70, "target_confidence": 22}, {"target_end_line": 92, "source_start_line": 77, "source_end_line": 80, "source_confidence": 26, "target_start_line": 89, "target_confidence": 22}, {"target_end_line": 20, "source_start_line": 21, "source_end_line": 25, "source_confidence": 26, "target_start_line": 15, "target_confidence": 22}, {"target_end_line": 10, "source_start_line": 3, "source_end_line": 12, "source_confidence": 26, "target_start_line": 6, "target_confidence": 22}, {"target_end_line": 108, "source_start_line": 83, "source_end_line": 89, "source_confidence": 26, "target_start_line": 104, "target_confidence": 22}, {"target_end_line": 123, "source_start_line": 99, "source_end_line": 107, "source_confidence": 26, "target_start_line": 117, "target_confidence": 22}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 64, "source_confidence": 26, "target_start_line": 70, "target_confidence": 22}, {"target_end_line": 92, "source_start_line": 77, "source_end_line": 80, "source_confidence": 26, "target_start_line": 89, "target_confidence": 22}]}, {"source": "lorenzopub_4b8609d749cd9759a03b74f889a579f0", "value": 39, "target": "juanprq_42d34c2ebefd1be5d173b802f38bb98a", "links": [{"target_end_line": 9, "source_start_line": 3, "source_end_line": 8, "source_confidence": 15, "target_start_line": 4, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 66, "source_confidence": 15, "target_start_line": 73, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 41, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 52, "source_confidence": 15, "target_start_line": 55, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 70, "source_confidence": 15, "target_start_line": 80, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 15, "target_start_line": 11, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 8, "source_confidence": 15, "target_start_line": 4, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 66, "source_confidence": 15, "target_start_line": 73, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 41, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 52, "source_confidence": 15, "target_start_line": 55, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 70, "source_confidence": 15, "target_start_line": 80, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 15, "target_start_line": 11, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 8, "source_confidence": 15, "target_start_line": 4, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 66, "source_confidence": 15, "target_start_line": 73, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 41, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 52, "source_confidence": 15, "target_start_line": 55, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 70, "source_confidence": 15, "target_start_line": 80, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 15, "target_start_line": 11, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 8, "source_confidence": 15, "target_start_line": 4, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 66, "source_confidence": 15, "target_start_line": 73, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 41, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 52, "source_confidence": 15, "target_start_line": 55, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 70, "source_confidence": 15, "target_start_line": 80, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 15, "target_start_line": 11, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 8, "source_confidence": 15, "target_start_line": 4, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 66, "source_confidence": 15, "target_start_line": 73, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 41, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 52, "source_confidence": 15, "target_start_line": 55, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 70, "source_confidence": 15, "target_start_line": 80, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 15, "target_start_line": 11, "target_confidence": 41}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 8, "source_confidence": 15, "target_start_line": 4, "target_confidence": 41}, {"target_end_line": 80, "source_start_line": 59, "source_end_line": 66, "source_confidence": 15, "target_start_line": 73, "target_confidence": 41}, {"target_end_line": 43, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 41, "target_confidence": 41}, {"target_end_line": 64, "source_start_line": 42, "source_end_line": 52, "source_confidence": 15, "target_start_line": 55, "target_confidence": 41}, {"target_end_line": 84, "source_start_line": 66, "source_end_line": 70, "source_confidence": 15, "target_start_line": 80, "target_confidence": 41}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 16, "source_confidence": 15, "target_start_line": 11, "target_confidence": 41}]}, {"source": "mashehu_281584920c26e2d617625270b75818a1", "value": 22, "target": "lorenzopub_898a0e5a9877d47303a57d12e50720fd", "links": [{"target_end_line": 109, "source_start_line": 151, "source_end_line": 166, "source_confidence": 19, "target_start_line": 94, "target_confidence": 28}, {"target_end_line": 8, "source_start_line": 7, "source_end_line": 12, "source_confidence": 19, "target_start_line": 3, "target_confidence": 28}, {"target_end_line": 109, "source_start_line": 151, "source_end_line": 166, "source_confidence": 19, "target_start_line": 94, "target_confidence": 28}, {"target_end_line": 8, "source_start_line": 7, "source_end_line": 12, "source_confidence": 19, "target_start_line": 3, "target_confidence": 28}]}, {"source": "mashehu_281584920c26e2d617625270b75818a1", "value": 185, "target": "lorenzopub_2c63ce8f3a4d535dd0e65d658f6c80d6", "links": [{"target_end_line": 185, "source_start_line": 1, "source_end_line": 185, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c", "value": 31, "target": "lorenzopub_4b8609d749cd9759a03b74f889a579f0", "links": [{"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 9, "target_start_line": 3, "target_confidence": 12}, {"target_end_line": 37, "source_start_line": 44, "source_end_line": 51, "source_confidence": 9, "target_start_line": 31, "target_confidence": 12}, {"target_end_line": 61, "source_start_line": 79, "source_end_line": 86, "source_confidence": 9, "target_start_line": 54, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 91, "source_end_line": 92, "source_confidence": 9, "target_start_line": 65, "target_confidence": 12}, {"target_end_line": 42, "source_start_line": 51, "source_end_line": 56, "source_confidence": 9, "target_start_line": 37, "target_confidence": 12}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 9, "target_start_line": 3, "target_confidence": 12}, {"target_end_line": 37, "source_start_line": 44, "source_end_line": 51, "source_confidence": 9, "target_start_line": 31, "target_confidence": 12}, {"target_end_line": 61, "source_start_line": 79, "source_end_line": 86, "source_confidence": 9, "target_start_line": 54, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 91, "source_end_line": 92, "source_confidence": 9, "target_start_line": 65, "target_confidence": 12}, {"target_end_line": 42, "source_start_line": 51, "source_end_line": 56, "source_confidence": 9, "target_start_line": 37, "target_confidence": 12}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 9, "target_start_line": 3, "target_confidence": 12}, {"target_end_line": 37, "source_start_line": 44, "source_end_line": 51, "source_confidence": 9, "target_start_line": 31, "target_confidence": 12}, {"target_end_line": 61, "source_start_line": 79, "source_end_line": 86, "source_confidence": 9, "target_start_line": 54, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 91, "source_end_line": 92, "source_confidence": 9, "target_start_line": 65, "target_confidence": 12}, {"target_end_line": 42, "source_start_line": 51, "source_end_line": 56, "source_confidence": 9, "target_start_line": 37, "target_confidence": 12}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 9, "target_start_line": 3, "target_confidence": 12}, {"target_end_line": 37, "source_start_line": 44, "source_end_line": 51, "source_confidence": 9, "target_start_line": 31, "target_confidence": 12}, {"target_end_line": 61, "source_start_line": 79, "source_end_line": 86, "source_confidence": 9, "target_start_line": 54, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 91, "source_end_line": 92, "source_confidence": 9, "target_start_line": 65, "target_confidence": 12}, {"target_end_line": 42, "source_start_line": 51, "source_end_line": 56, "source_confidence": 9, "target_start_line": 37, "target_confidence": 12}, {"target_end_line": 9, "source_start_line": 6, "source_end_line": 12, "source_confidence": 9, "target_start_line": 3, "target_confidence": 12}, {"target_end_line": 37, "source_start_line": 44, "source_end_line": 51, "source_confidence": 9, "target_start_line": 31, "target_confidence": 12}, {"target_end_line": 61, "source_start_line": 79, "source_end_line": 86, "source_confidence": 9, "target_start_line": 54, "target_confidence": 12}, {"target_end_line": 66, "source_start_line": 91, "source_end_line": 92, "source_confidence": 9, "target_start_line": 65, "target_confidence": 12}, {"target_end_line": 42, "source_start_line": 51, "source_end_line": 56, "source_confidence": 9, "target_start_line": 37, "target_confidence": 12}]}, {"source": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4", "value": 16, "target": "seemantk_5eba869f4aa06353d8c9ce6f8d88c714", "links": [{"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 31, "source_confidence": 16, "target_start_line": 28, "target_confidence": 17}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 16, "target_start_line": 3, "target_confidence": 17}, {"target_end_line": 13, "source_start_line": 12, "source_end_line": 16, "source_confidence": 16, "target_start_line": 12, "target_confidence": 17}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 25, "source_confidence": 16, "target_start_line": 23, "target_confidence": 17}]}, {"source": "kenpenn_02163b2968906ad90857cdf681c0304b", "value": 64, "target": "ptvans_cd5c6e033b4a4b1c7ef8861c82319493", "links": [{"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 41, "source_start_line": 43, "source_end_line": 75, "source_confidence": 40, "target_start_line": 9, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 10, "source_end_line": 10, "source_confidence": 40, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 124, "source_end_line": 141, "source_confidence": 40, "target_start_line": 70, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 78, "source_end_line": 85, "source_confidence": 40, "target_start_line": 42, "target_confidence": 37}, {"target_end_line": 3, "source_start_line": 8, "source_end_line": 8, "source_confidence": 40, "target_start_line": 3, "target_confidence": 37}]}, {"source": "Fil_07f00f90524c4c2b99c944780c2f4e7c", "value": 60, "target": "ptvans_a05a937fccacdc3275d80e697648ca88", "links": [{"target_end_line": 60, "source_start_line": 1, "source_end_line": 60, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4", "value": 42, "target": "Fil_425346f63abddee5fea3fdcb76904820", "links": [{"target_end_line": 37, "source_start_line": 33, "source_end_line": 40, "source_confidence": 27, "target_start_line": 29, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 23, "source_confidence": 27, "target_start_line": 20, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 74, "source_confidence": 27, "target_start_line": 56, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 138, "source_confidence": 27, "target_start_line": 112, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 61, "source_confidence": 27, "target_start_line": 47, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 40, "source_confidence": 27, "target_start_line": 29, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 23, "source_confidence": 27, "target_start_line": 20, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 74, "source_confidence": 27, "target_start_line": 56, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 138, "source_confidence": 27, "target_start_line": 112, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 61, "source_confidence": 27, "target_start_line": 47, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 40, "source_confidence": 27, "target_start_line": 29, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 23, "source_confidence": 27, "target_start_line": 20, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 74, "source_confidence": 27, "target_start_line": 56, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 138, "source_confidence": 27, "target_start_line": 112, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 61, "source_confidence": 27, "target_start_line": 47, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 40, "source_confidence": 27, "target_start_line": 29, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 23, "source_confidence": 27, "target_start_line": 20, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 74, "source_confidence": 27, "target_start_line": 56, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 138, "source_confidence": 27, "target_start_line": 112, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 61, "source_confidence": 27, "target_start_line": 47, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 40, "source_confidence": 27, "target_start_line": 29, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 19, "source_end_line": 23, "source_confidence": 27, "target_start_line": 20, "target_confidence": 31}, {"target_end_line": 68, "source_start_line": 62, "source_end_line": 74, "source_confidence": 27, "target_start_line": 56, "target_confidence": 31}, {"target_end_line": 114, "source_start_line": 133, "source_end_line": 138, "source_confidence": 27, "target_start_line": 112, "target_confidence": 31}, {"target_end_line": 56, "source_start_line": 52, "source_end_line": 61, "source_confidence": 27, "target_start_line": 47, "target_confidence": 31}]}, {"source": "pbellon_0c2447557cde990871e32f8cf517e8e2", "value": 22, "target": "lorenzopub_bd743979d44ebb58868a3b7ee0f74db4", "links": [{"target_end_line": 18, "source_start_line": 3, "source_end_line": 13, "source_confidence": 32, "target_start_line": 8, "target_confidence": 18}, {"target_end_line": 31, "source_start_line": 15, "source_end_line": 19, "source_confidence": 32, "target_start_line": 27, "target_confidence": 18}, {"target_end_line": 42, "source_start_line": 56, "source_end_line": 59, "source_confidence": 32, "target_start_line": 37, "target_confidence": 18}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 13, "source_confidence": 32, "target_start_line": 8, "target_confidence": 18}, {"target_end_line": 31, "source_start_line": 15, "source_end_line": 19, "source_confidence": 32, "target_start_line": 27, "target_confidence": 18}, {"target_end_line": 42, "source_start_line": 56, "source_end_line": 59, "source_confidence": 32, "target_start_line": 37, "target_confidence": 18}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 13, "source_confidence": 32, "target_start_line": 8, "target_confidence": 18}, {"target_end_line": 31, "source_start_line": 15, "source_end_line": 19, "source_confidence": 32, "target_start_line": 27, "target_confidence": 18}, {"target_end_line": 42, "source_start_line": 56, "source_end_line": 59, "source_confidence": 32, "target_start_line": 37, "target_confidence": 18}]}, {"source": "SioKCronin_3920aabb6f5a7528d7b00d7fcb872369", "value": 124, "target": "lorenzopub_8501a1752dbdda8db80b1a3cb0afb7d7", "links": [{"target_end_line": 124, "source_start_line": 1, "source_end_line": 124, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "juanprq_07cc5a33514c56f4bf253d62066ee3f0", "value": 35, "target": "lorenzopub_66fee1bf5611f0cc2085ce8f2a60bfe3", "links": [{"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 28, "target_confidence": 44}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 72, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 60, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 44}]}, {"source": "cehsu_fa7324f633d7f99cf3d2c68e027ec1da", "value": 45, "target": "lorenzopub_1dca7b205cfe5b9733afe831c7719a9d", "links": [{"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}, {"target_end_line": 104, "source_start_line": 200, "source_end_line": 224, "source_confidence": 24, "target_start_line": 80, "target_confidence": 48}, {"target_end_line": 63, "source_start_line": 180, "source_end_line": 186, "source_confidence": 24, "target_start_line": 57, "target_confidence": 48}, {"target_end_line": 68, "source_start_line": 187, "source_end_line": 191, "source_confidence": 24, "target_start_line": 64, "target_confidence": 48}, {"target_end_line": 24, "source_start_line": 32, "source_end_line": 33, "source_confidence": 24, "target_start_line": 23, "target_confidence": 48}, {"target_end_line": 30, "source_start_line": 41, "source_end_line": 46, "source_confidence": 24, "target_start_line": 25, "target_confidence": 48}]}, {"source": "jorgeehernandez_c19d6eb6085cab208f56e79f22c39e35", "value": 23, "target": "lorenzopub_526f5145c24c0a1c9f0b237102b23cd1", "links": [{"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 37, "source_start_line": 43, "source_end_line": 47, "source_confidence": 29, "target_start_line": 33, "target_confidence": 30}, {"target_end_line": 18, "source_start_line": 13, "source_end_line": 17, "source_confidence": 29, "target_start_line": 14, "target_confidence": 30}, {"target_end_line": 26, "source_start_line": 29, "source_end_line": 35, "source_confidence": 29, "target_start_line": 20, "target_confidence": 30}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 29, "target_start_line": 1, "target_confidence": 30}]}, {"source": "jorgeehernandez_c19d6eb6085cab208f56e79f22c39e35", "value": 29, "target": "lorenzopub_edb3d59d8a1a5d5524a6a3efb98fb27d", "links": [{"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 10, "source_end_line": 17, "source_confidence": 45, "target_start_line": 14, "target_confidence": 44}, {"target_end_line": 35, "source_start_line": 43, "source_end_line": 47, "source_confidence": 45, "target_start_line": 31, "target_confidence": 44}, {"target_end_line": 43, "source_start_line": 62, "source_end_line": 65, "source_confidence": 45, "target_start_line": 40, "target_confidence": 44}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 45, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 28, "source_start_line": 29, "source_end_line": 34, "source_confidence": 45, "target_start_line": 23, "target_confidence": 44}]}, {"source": "juanprq_07cc5a33514c56f4bf253d62066ee3f0", "value": 35, "target": "lorenzopub_fca46894abbf8c1180f041ecc087505a", "links": [{"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 27, "source_end_line": 34, "source_confidence": 34, "target_start_line": 33, "target_confidence": 38}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 34, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 93, "source_start_line": 46, "source_end_line": 58, "source_confidence": 34, "target_start_line": 81, "target_confidence": 38}, {"target_end_line": 21, "source_start_line": 18, "source_end_line": 24, "source_confidence": 34, "target_start_line": 15, "target_confidence": 38}]}, {"source": "walkerjeffd_f106208f55304c0b18d7bbe68a18a591", "value": 19, "target": "lorenzopub_35c309fc1c476f756ccc569584432b60", "links": [{"target_end_line": 39, "source_start_line": 41, "source_end_line": 45, "source_confidence": 28, "target_start_line": 35, "target_confidence": 30}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 5, "source_confidence": 28, "target_start_line": 19, "target_confidence": 30}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 69, "source_confidence": 28, "target_start_line": 64, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 45, "source_confidence": 28, "target_start_line": 35, "target_confidence": 30}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 5, "source_confidence": 28, "target_start_line": 19, "target_confidence": 30}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 69, "source_confidence": 28, "target_start_line": 64, "target_confidence": 30}, {"target_end_line": 39, "source_start_line": 41, "source_end_line": 45, "source_confidence": 28, "target_start_line": 35, "target_confidence": 30}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 5, "source_confidence": 28, "target_start_line": 19, "target_confidence": 30}, {"target_end_line": 74, "source_start_line": 59, "source_end_line": 69, "source_confidence": 28, "target_start_line": 64, "target_confidence": 30}]}, {"source": "john-guerra_7770baa3383ab777f8ac211deeb66fbc", "value": 41, "target": "lorenzopub_892f7d8055010b3e537d9ac3b178ed2c", "links": [{"target_end_line": 237, "source_start_line": 4, "source_end_line": 44, "source_confidence": 95, "target_start_line": 198, "target_confidence": 20}]}, {"source": "Fil_6a1ed09f6e5648a5451cb130f2b13d20", "value": 219, "target": "lorenzopub_3cd429b7c660163030e9abfcefd3159a", "links": [{"target_end_line": 219, "source_start_line": 1, "source_end_line": 219, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "rschuman_354103739605441177d7a0c3f5047222", "value": 50, "target": "lorenzopub_cefd53c7fc67018efba0fe0460cdfd2a", "links": [{"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 31, "target_start_line": 21, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 94, "source_end_line": 100, "source_confidence": 31, "target_start_line": 83, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 31, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 107, "source_start_line": 106, "source_end_line": 112, "source_confidence": 31, "target_start_line": 99, "target_confidence": 31}, {"target_end_line": 64, "source_start_line": 67, "source_end_line": 71, "source_confidence": 31, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 72, "source_start_line": 74, "source_end_line": 78, "source_confidence": 31, "target_start_line": 67, "target_confidence": 31}, {"target_end_line": 80, "source_start_line": 83, "source_end_line": 86, "source_confidence": 31, "target_start_line": 77, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 31, "target_start_line": 21, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 94, "source_end_line": 100, "source_confidence": 31, "target_start_line": 83, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 31, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 107, "source_start_line": 106, "source_end_line": 112, "source_confidence": 31, "target_start_line": 99, "target_confidence": 31}, {"target_end_line": 64, "source_start_line": 67, "source_end_line": 71, "source_confidence": 31, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 72, "source_start_line": 74, "source_end_line": 78, "source_confidence": 31, "target_start_line": 67, "target_confidence": 31}, {"target_end_line": 80, "source_start_line": 83, "source_end_line": 86, "source_confidence": 31, "target_start_line": 77, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 31, "target_start_line": 21, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 94, "source_end_line": 100, "source_confidence": 31, "target_start_line": 83, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 31, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 107, "source_start_line": 106, "source_end_line": 112, "source_confidence": 31, "target_start_line": 99, "target_confidence": 31}, {"target_end_line": 64, "source_start_line": 67, "source_end_line": 71, "source_confidence": 31, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 72, "source_start_line": 74, "source_end_line": 78, "source_confidence": 31, "target_start_line": 67, "target_confidence": 31}, {"target_end_line": 80, "source_start_line": 83, "source_end_line": 86, "source_confidence": 31, "target_start_line": 77, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 31, "target_start_line": 21, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 94, "source_end_line": 100, "source_confidence": 31, "target_start_line": 83, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 31, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 107, "source_start_line": 106, "source_end_line": 112, "source_confidence": 31, "target_start_line": 99, "target_confidence": 31}, {"target_end_line": 64, "source_start_line": 67, "source_end_line": 71, "source_confidence": 31, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 72, "source_start_line": 74, "source_end_line": 78, "source_confidence": 31, "target_start_line": 67, "target_confidence": 31}, {"target_end_line": 80, "source_start_line": 83, "source_end_line": 86, "source_confidence": 31, "target_start_line": 77, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 31, "target_start_line": 21, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 94, "source_end_line": 100, "source_confidence": 31, "target_start_line": 83, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 31, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 107, "source_start_line": 106, "source_end_line": 112, "source_confidence": 31, "target_start_line": 99, "target_confidence": 31}, {"target_end_line": 64, "source_start_line": 67, "source_end_line": 71, "source_confidence": 31, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 72, "source_start_line": 74, "source_end_line": 78, "source_confidence": 31, "target_start_line": 67, "target_confidence": 31}, {"target_end_line": 80, "source_start_line": 83, "source_end_line": 86, "source_confidence": 31, "target_start_line": 77, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 31, "target_start_line": 21, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 94, "source_end_line": 100, "source_confidence": 31, "target_start_line": 83, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 31, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 107, "source_start_line": 106, "source_end_line": 112, "source_confidence": 31, "target_start_line": 99, "target_confidence": 31}, {"target_end_line": 64, "source_start_line": 67, "source_end_line": 71, "source_confidence": 31, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 72, "source_start_line": 74, "source_end_line": 78, "source_confidence": 31, "target_start_line": 67, "target_confidence": 31}, {"target_end_line": 80, "source_start_line": 83, "source_end_line": 86, "source_confidence": 31, "target_start_line": 77, "target_confidence": 31}, {"target_end_line": 25, "source_start_line": 14, "source_end_line": 19, "source_confidence": 31, "target_start_line": 21, "target_confidence": 31}, {"target_end_line": 92, "source_start_line": 94, "source_end_line": 100, "source_confidence": 31, "target_start_line": 83, "target_confidence": 31}, {"target_end_line": 12, "source_start_line": 5, "source_end_line": 9, "source_confidence": 31, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 107, "source_start_line": 106, "source_end_line": 112, "source_confidence": 31, "target_start_line": 99, "target_confidence": 31}, {"target_end_line": 64, "source_start_line": 67, "source_end_line": 71, "source_confidence": 31, "target_start_line": 59, "target_confidence": 31}, {"target_end_line": 72, "source_start_line": 74, "source_end_line": 78, "source_confidence": 31, "target_start_line": 67, "target_confidence": 31}, {"target_end_line": 80, "source_start_line": 83, "source_end_line": 86, "source_confidence": 31, "target_start_line": 77, "target_confidence": 31}]}, {"source": "domhorvath_9de3007d51bbee999b6923b44ec2eb22", "value": 64, "target": "lorenzopub_4155479307b8821c910dab05576d421e", "links": [{"target_end_line": 64, "source_start_line": 1, "source_end_line": 64, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "domhorvath_ba3aa4bdb0652fcd8b98c59a33fcea1d", "value": 146, "target": "lorenzopub_8634242329da4dfb101c8732d73927ad", "links": [{"target_end_line": 146, "source_start_line": 1, "source_end_line": 146, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "curran_66449dd909dfff72f6b1820e9558444c", "value": 16, "target": "pbellon_0c2447557cde990871e32f8cf517e8e2", "links": [{"target_end_line": 13, "source_start_line": 19, "source_end_line": 29, "source_confidence": 34, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 45, "source_confidence": 34, "target_start_line": 15, "target_confidence": 26}, {"target_end_line": 13, "source_start_line": 19, "source_end_line": 29, "source_confidence": 34, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 19, "source_start_line": 41, "source_end_line": 45, "source_confidence": 34, "target_start_line": 15, "target_confidence": 26}]}, {"source": "curran_66449dd909dfff72f6b1820e9558444c", "value": 31, "target": "juanprq_07cc5a33514c56f4bf253d62066ee3f0", "links": [{"target_end_line": 31, "source_start_line": 41, "source_end_line": 45, "source_confidence": 48, "target_start_line": 27, "target_confidence": 31}, {"target_end_line": 8, "source_start_line": 19, "source_end_line": 24, "source_confidence": 48, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 50, "source_end_line": 62, "source_confidence": 48, "target_start_line": 46, "target_confidence": 31}, {"target_end_line": 24, "source_start_line": 29, "source_end_line": 35, "source_confidence": 48, "target_start_line": 18, "target_confidence": 31}, {"target_end_line": 31, "source_start_line": 41, "source_end_line": 45, "source_confidence": 48, "target_start_line": 27, "target_confidence": 31}, {"target_end_line": 8, "source_start_line": 19, "source_end_line": 24, "source_confidence": 48, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 50, "source_end_line": 62, "source_confidence": 48, "target_start_line": 46, "target_confidence": 31}, {"target_end_line": 24, "source_start_line": 29, "source_end_line": 35, "source_confidence": 48, "target_start_line": 18, "target_confidence": 31}, {"target_end_line": 31, "source_start_line": 41, "source_end_line": 45, "source_confidence": 48, "target_start_line": 27, "target_confidence": 31}, {"target_end_line": 8, "source_start_line": 19, "source_end_line": 24, "source_confidence": 48, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 50, "source_end_line": 62, "source_confidence": 48, "target_start_line": 46, "target_confidence": 31}, {"target_end_line": 24, "source_start_line": 29, "source_end_line": 35, "source_confidence": 48, "target_start_line": 18, "target_confidence": 31}, {"target_end_line": 31, "source_start_line": 41, "source_end_line": 45, "source_confidence": 48, "target_start_line": 27, "target_confidence": 31}, {"target_end_line": 8, "source_start_line": 19, "source_end_line": 24, "source_confidence": 48, "target_start_line": 3, "target_confidence": 31}, {"target_end_line": 58, "source_start_line": 50, "source_end_line": 62, "source_confidence": 48, "target_start_line": 46, "target_confidence": 31}, {"target_end_line": 24, "source_start_line": 29, "source_end_line": 35, "source_confidence": 48, "target_start_line": 18, "target_confidence": 31}]}, {"source": "jermspeaks_25f4772e1b65b5d12997c351ffa491ea", "value": 73, "target": "Sokrates86_be74ebd338f422474528859b2742ef7a", "links": [{"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}, {"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}, {"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}, {"target_end_line": 71, "source_start_line": 16, "source_end_line": 71, "source_confidence": 89, "target_start_line": 16, "target_confidence": 94}, {"target_end_line": 16, "source_start_line": 9, "source_end_line": 13, "source_confidence": 89, "target_start_line": 12, "target_confidence": 94}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 6, "source_confidence": 89, "target_start_line": 5, "target_confidence": 94}, {"target_end_line": 78, "source_start_line": 73, "source_end_line": 78, "source_confidence": 89, "target_start_line": 73, "target_confidence": 94}]}, {"source": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693", "value": 32, "target": "TomStanczyk_8cd26aabc37de17d837a85eeb3b420d5", "links": [{"target_end_line": 130, "source_start_line": 92, "source_end_line": 110, "source_confidence": 30, "target_start_line": 113, "target_confidence": 27}, {"target_end_line": 97, "source_start_line": 77, "source_end_line": 83, "source_confidence": 30, "target_start_line": 92, "target_confidence": 27}, {"target_end_line": 36, "source_start_line": 63, "source_end_line": 68, "source_confidence": 30, "target_start_line": 30, "target_confidence": 27}, {"target_end_line": 130, "source_start_line": 92, "source_end_line": 110, "source_confidence": 30, "target_start_line": 113, "target_confidence": 27}, {"target_end_line": 97, "source_start_line": 77, "source_end_line": 83, "source_confidence": 30, "target_start_line": 92, "target_confidence": 27}, {"target_end_line": 36, "source_start_line": 63, "source_end_line": 68, "source_confidence": 30, "target_start_line": 30, "target_confidence": 27}, {"target_end_line": 130, "source_start_line": 92, "source_end_line": 110, "source_confidence": 30, "target_start_line": 113, "target_confidence": 27}, {"target_end_line": 97, "source_start_line": 77, "source_end_line": 83, "source_confidence": 30, "target_start_line": 92, "target_confidence": 27}, {"target_end_line": 36, "source_start_line": 63, "source_end_line": 68, "source_confidence": 30, "target_start_line": 30, "target_confidence": 27}]}, {"source": "cehsu_fa7324f633d7f99cf3d2c68e027ec1da", "value": 29, "target": "Thanaporn-sk_9e4b66a26b9ffb649511ba89ac71ead7", "links": [{"target_end_line": 110, "source_start_line": 92, "source_end_line": 104, "source_confidence": 10, "target_start_line": 98, "target_confidence": 17}, {"target_end_line": 128, "source_start_line": 115, "source_end_line": 122, "source_confidence": 10, "target_start_line": 121, "target_confidence": 17}, {"target_end_line": 119, "source_start_line": 106, "source_end_line": 113, "source_confidence": 10, "target_start_line": 112, "target_confidence": 17}, {"target_end_line": 110, "source_start_line": 92, "source_end_line": 104, "source_confidence": 10, "target_start_line": 98, "target_confidence": 17}, {"target_end_line": 128, "source_start_line": 115, "source_end_line": 122, "source_confidence": 10, "target_start_line": 121, "target_confidence": 17}, {"target_end_line": 119, "source_start_line": 106, "source_end_line": 113, "source_confidence": 10, "target_start_line": 112, "target_confidence": 17}, {"target_end_line": 110, "source_start_line": 92, "source_end_line": 104, "source_confidence": 10, "target_start_line": 98, "target_confidence": 17}, {"target_end_line": 128, "source_start_line": 115, "source_end_line": 122, "source_confidence": 10, "target_start_line": 121, "target_confidence": 17}, {"target_end_line": 119, "source_start_line": 106, "source_end_line": 113, "source_confidence": 10, "target_start_line": 112, "target_confidence": 17}]}, {"source": "fotisz_0ae06752972bffb47639d576f8ec1c96", "value": 16, "target": "rschuman_354103739605441177d7a0c3f5047222", "links": [{"target_end_line": 19, "source_start_line": 18, "source_end_line": 22, "source_confidence": 15, "target_start_line": 14, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 8, "source_confidence": 15, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 87, "source_start_line": 59, "source_end_line": 62, "source_confidence": 15, "target_start_line": 83, "target_confidence": 15}, {"target_end_line": 19, "source_start_line": 18, "source_end_line": 22, "source_confidence": 15, "target_start_line": 14, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 8, "source_confidence": 15, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 87, "source_start_line": 59, "source_end_line": 62, "source_confidence": 15, "target_start_line": 83, "target_confidence": 15}, {"target_end_line": 19, "source_start_line": 18, "source_end_line": 22, "source_confidence": 15, "target_start_line": 14, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 8, "source_confidence": 15, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 87, "source_start_line": 59, "source_end_line": 62, "source_confidence": 15, "target_start_line": 83, "target_confidence": 15}]}, {"source": "fotisz_0ae06752972bffb47639d576f8ec1c96", "value": 16, "target": "rschuman_916d1e5469e5d4729d4547ebf4dad8b1", "links": [{"target_end_line": 19, "source_start_line": 18, "source_end_line": 22, "source_confidence": 15, "target_start_line": 14, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 8, "source_confidence": 15, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 87, "source_start_line": 59, "source_end_line": 62, "source_confidence": 15, "target_start_line": 83, "target_confidence": 15}, {"target_end_line": 19, "source_start_line": 18, "source_end_line": 22, "source_confidence": 15, "target_start_line": 14, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 8, "source_confidence": 15, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 87, "source_start_line": 59, "source_end_line": 62, "source_confidence": 15, "target_start_line": 83, "target_confidence": 15}, {"target_end_line": 19, "source_start_line": 18, "source_end_line": 22, "source_confidence": 15, "target_start_line": 14, "target_confidence": 15}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 8, "source_confidence": 15, "target_start_line": 5, "target_confidence": 15}, {"target_end_line": 87, "source_start_line": 59, "source_end_line": 62, "source_confidence": 15, "target_start_line": 83, "target_confidence": 15}]}, {"source": "nbremer_4258eb64322c55156097c21f384715a7", "value": 13, "target": "mukhtyar_1104e58a0b17e1c2c11335d9260b4248", "links": [{"target_end_line": 11, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 10, "target_confidence": 29}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 29}, {"target_end_line": 14, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 12, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 11, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 10, "target_confidence": 29}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 29}, {"target_end_line": 14, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 12, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 11, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 10, "target_confidence": 29}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 29}, {"target_end_line": 14, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 12, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 11, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 10, "target_confidence": 29}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 29}, {"target_end_line": 14, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 12, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 11, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 10, "target_confidence": 29}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 29}, {"target_end_line": 14, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 12, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 11, "source_start_line": 35, "source_end_line": 35, "source_confidence": 4, "target_start_line": 10, "target_confidence": 29}, {"target_end_line": 2, "source_start_line": 1, "source_end_line": 3, "source_confidence": 4, "target_start_line": 1, "target_confidence": 29}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 6, "source_confidence": 4, "target_start_line": 4, "target_confidence": 29}, {"target_end_line": 14, "source_start_line": 36, "source_end_line": 38, "source_confidence": 4, "target_start_line": 12, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 3, "source_start_line": 4, "source_end_line": 4, "source_confidence": 4, "target_start_line": 3, "target_confidence": 29}]}, {"source": "alexmacy_3986db72dc4b81db8e788dd837ee6e3b", "value": 146, "target": "Fil_8a0d9f3c727608e236d65e7bc50dd015", "links": [{"target_end_line": 109, "source_start_line": 1, "source_end_line": 109, "source_confidence": 97, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 152, "source_start_line": 113, "source_end_line": 149, "source_confidence": 97, "target_start_line": 116, "target_confidence": 93}, {"target_end_line": 109, "source_start_line": 1, "source_end_line": 109, "source_confidence": 97, "target_start_line": 1, "target_confidence": 93}, {"target_end_line": 152, "source_start_line": 113, "source_end_line": 149, "source_confidence": 97, "target_start_line": 116, "target_confidence": 93}]}, {"source": "walkerjeffd_f106208f55304c0b18d7bbe68a18a591", "value": 21, "target": "curran_66449dd909dfff72f6b1820e9558444c", "links": [{"target_end_line": 47, "source_start_line": 41, "source_end_line": 48, "source_confidence": 29, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 19, "target_confidence": 35}, {"target_end_line": 68, "source_start_line": 61, "source_end_line": 70, "source_confidence": 29, "target_start_line": 59, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 41, "source_end_line": 48, "source_confidence": 29, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 19, "target_confidence": 35}, {"target_end_line": 68, "source_start_line": 61, "source_end_line": 70, "source_confidence": 29, "target_start_line": 59, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 41, "source_end_line": 48, "source_confidence": 29, "target_start_line": 41, "target_confidence": 35}, {"target_end_line": 21, "source_start_line": 3, "source_end_line": 5, "source_confidence": 29, "target_start_line": 19, "target_confidence": 35}, {"target_end_line": 68, "source_start_line": 61, "source_end_line": 70, "source_confidence": 29, "target_start_line": 59, "target_confidence": 35}]}, {"source": "lgoerl_8cd5584d81953601ef1d90ba6a7821b6", "value": 20, "target": "walkerjeffd_f106208f55304c0b18d7bbe68a18a591", "links": [{"target_end_line": 45, "source_start_line": 30, "source_end_line": 34, "source_confidence": 22, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 22, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 70, "source_start_line": 60, "source_end_line": 69, "source_confidence": 22, "target_start_line": 61, "target_confidence": 28}, {"target_end_line": 45, "source_start_line": 30, "source_end_line": 34, "source_confidence": 22, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 22, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 70, "source_start_line": 60, "source_end_line": 69, "source_confidence": 22, "target_start_line": 61, "target_confidence": 28}, {"target_end_line": 45, "source_start_line": 30, "source_end_line": 34, "source_confidence": 22, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 22, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 70, "source_start_line": 60, "source_end_line": 69, "source_confidence": 22, "target_start_line": 61, "target_confidence": 28}]}, {"source": "markvital_89be160315aca0c92569aa93e883f4a1", "value": 54, "target": "jcamilort_1af13c226335fe8547c8d89cbd69097b", "links": [{"target_end_line": 106, "source_start_line": 662, "source_end_line": 668, "source_confidence": 1, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 99, "source_start_line": 654, "source_end_line": 662, "source_confidence": 1, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 61, "source_start_line": 571, "source_end_line": 575, "source_confidence": 1, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 649, "source_end_line": 652, "source_confidence": 1, "target_start_line": 81, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 697, "source_end_line": 702, "source_confidence": 1, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 575, "source_end_line": 580, "source_confidence": 1, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 138, "source_start_line": 523, "source_end_line": 528, "source_confidence": 1, "target_start_line": 133, "target_confidence": 37}, {"target_end_line": 106, "source_start_line": 662, "source_end_line": 668, "source_confidence": 1, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 99, "source_start_line": 654, "source_end_line": 662, "source_confidence": 1, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 61, "source_start_line": 571, "source_end_line": 575, "source_confidence": 1, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 649, "source_end_line": 652, "source_confidence": 1, "target_start_line": 81, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 697, "source_end_line": 702, "source_confidence": 1, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 575, "source_end_line": 580, "source_confidence": 1, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 138, "source_start_line": 523, "source_end_line": 528, "source_confidence": 1, "target_start_line": 133, "target_confidence": 37}, {"target_end_line": 106, "source_start_line": 662, "source_end_line": 668, "source_confidence": 1, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 99, "source_start_line": 654, "source_end_line": 662, "source_confidence": 1, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 61, "source_start_line": 571, "source_end_line": 575, "source_confidence": 1, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 649, "source_end_line": 652, "source_confidence": 1, "target_start_line": 81, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 697, "source_end_line": 702, "source_confidence": 1, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 575, "source_end_line": 580, "source_confidence": 1, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 138, "source_start_line": 523, "source_end_line": 528, "source_confidence": 1, "target_start_line": 133, "target_confidence": 37}, {"target_end_line": 106, "source_start_line": 662, "source_end_line": 668, "source_confidence": 1, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 99, "source_start_line": 654, "source_end_line": 662, "source_confidence": 1, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 61, "source_start_line": 571, "source_end_line": 575, "source_confidence": 1, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 649, "source_end_line": 652, "source_confidence": 1, "target_start_line": 81, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 697, "source_end_line": 702, "source_confidence": 1, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 575, "source_end_line": 580, "source_confidence": 1, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 138, "source_start_line": 523, "source_end_line": 528, "source_confidence": 1, "target_start_line": 133, "target_confidence": 37}, {"target_end_line": 106, "source_start_line": 662, "source_end_line": 668, "source_confidence": 1, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 99, "source_start_line": 654, "source_end_line": 662, "source_confidence": 1, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 61, "source_start_line": 571, "source_end_line": 575, "source_confidence": 1, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 649, "source_end_line": 652, "source_confidence": 1, "target_start_line": 81, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 697, "source_end_line": 702, "source_confidence": 1, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 575, "source_end_line": 580, "source_confidence": 1, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 138, "source_start_line": 523, "source_end_line": 528, "source_confidence": 1, "target_start_line": 133, "target_confidence": 37}, {"target_end_line": 106, "source_start_line": 662, "source_end_line": 668, "source_confidence": 1, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 99, "source_start_line": 654, "source_end_line": 662, "source_confidence": 1, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 61, "source_start_line": 571, "source_end_line": 575, "source_confidence": 1, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 649, "source_end_line": 652, "source_confidence": 1, "target_start_line": 81, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 697, "source_end_line": 702, "source_confidence": 1, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 575, "source_end_line": 580, "source_confidence": 1, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 138, "source_start_line": 523, "source_end_line": 528, "source_confidence": 1, "target_start_line": 133, "target_confidence": 37}, {"target_end_line": 106, "source_start_line": 662, "source_end_line": 668, "source_confidence": 1, "target_start_line": 99, "target_confidence": 37}, {"target_end_line": 99, "source_start_line": 654, "source_end_line": 662, "source_confidence": 1, "target_start_line": 88, "target_confidence": 37}, {"target_end_line": 61, "source_start_line": 571, "source_end_line": 575, "source_confidence": 1, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 87, "source_start_line": 649, "source_end_line": 652, "source_confidence": 1, "target_start_line": 81, "target_confidence": 37}, {"target_end_line": 127, "source_start_line": 697, "source_end_line": 702, "source_confidence": 1, "target_start_line": 120, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 575, "source_end_line": 580, "source_confidence": 1, "target_start_line": 61, "target_confidence": 37}, {"target_end_line": 138, "source_start_line": 523, "source_end_line": 528, "source_confidence": 1, "target_start_line": 133, "target_confidence": 37}]}, {"source": "dcleao_3375965cda4cf705ce0203c970cc0779", "value": 31, "target": "LayneSmith_7c65581a759b5f4f301fdf27a3a2fa8b", "links": [{"target_end_line": 332, "source_start_line": 35, "source_end_line": 42, "source_confidence": 72, "target_start_line": 325, "target_confidence": 9}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 72, "target_start_line": 1, "target_confidence": 9}, {"target_end_line": 300, "source_start_line": 13, "source_end_line": 17, "source_confidence": 72, "target_start_line": 296, "target_confidence": 9}, {"target_end_line": 324, "source_start_line": 29, "source_end_line": 34, "source_confidence": 72, "target_start_line": 319, "target_confidence": 9}, {"target_end_line": 332, "source_start_line": 35, "source_end_line": 42, "source_confidence": 72, "target_start_line": 325, "target_confidence": 9}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 72, "target_start_line": 1, "target_confidence": 9}, {"target_end_line": 300, "source_start_line": 13, "source_end_line": 17, "source_confidence": 72, "target_start_line": 296, "target_confidence": 9}, {"target_end_line": 324, "source_start_line": 29, "source_end_line": 34, "source_confidence": 72, "target_start_line": 319, "target_confidence": 9}, {"target_end_line": 332, "source_start_line": 35, "source_end_line": 42, "source_confidence": 72, "target_start_line": 325, "target_confidence": 9}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 72, "target_start_line": 1, "target_confidence": 9}, {"target_end_line": 300, "source_start_line": 13, "source_end_line": 17, "source_confidence": 72, "target_start_line": 296, "target_confidence": 9}, {"target_end_line": 324, "source_start_line": 29, "source_end_line": 34, "source_confidence": 72, "target_start_line": 319, "target_confidence": 9}, {"target_end_line": 332, "source_start_line": 35, "source_end_line": 42, "source_confidence": 72, "target_start_line": 325, "target_confidence": 9}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 72, "target_start_line": 1, "target_confidence": 9}, {"target_end_line": 300, "source_start_line": 13, "source_end_line": 17, "source_confidence": 72, "target_start_line": 296, "target_confidence": 9}, {"target_end_line": 324, "source_start_line": 29, "source_end_line": 34, "source_confidence": 72, "target_start_line": 319, "target_confidence": 9}]}, {"source": "kerryrodden_1272d31a85475acdc059bafd2fb4e36b", "value": 32, "target": "enjalot_5fb88c1beadbb93a029cd3797d195c6f", "links": [{"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 98, "target_start_line": 1, "target_confidence": 98}]}, {"source": "kerryrodden_1272d31a85475acdc059bafd2fb4e36b", "value": 32, "target": "enjalot_fe2bc0193873d4a1026e1bd15353878f", "links": [{"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 85, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 33, "source_start_line": 23, "source_end_line": 32, "source_confidence": 85, "target_start_line": 24, "target_confidence": 77}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 85, "target_start_line": 1, "target_confidence": 77}, {"target_end_line": 33, "source_start_line": 23, "source_end_line": 32, "source_confidence": 85, "target_start_line": 24, "target_confidence": 77}]}, {"source": "riyazshaikh_2a2ad9a6eed7f21c66b10f11155d9bac", "value": 36, "target": "domhorvath_58de10fe06d7f26e47a6e0c900cf1693", "links": [{"target_end_line": 110, "source_start_line": 55, "source_end_line": 73, "source_confidence": 54, "target_start_line": 92, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 55, "source_confidence": 54, "target_start_line": 77, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 22, "source_confidence": 54, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 11, "source_confidence": 54, "target_start_line": 47, "target_confidence": 37}, {"target_end_line": 110, "source_start_line": 55, "source_end_line": 73, "source_confidence": 54, "target_start_line": 92, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 55, "source_confidence": 54, "target_start_line": 77, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 22, "source_confidence": 54, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 11, "source_confidence": 54, "target_start_line": 47, "target_confidence": 37}, {"target_end_line": 110, "source_start_line": 55, "source_end_line": 73, "source_confidence": 54, "target_start_line": 92, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 55, "source_confidence": 54, "target_start_line": 77, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 22, "source_confidence": 54, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 11, "source_confidence": 54, "target_start_line": 47, "target_confidence": 37}, {"target_end_line": 110, "source_start_line": 55, "source_end_line": 73, "source_confidence": 54, "target_start_line": 92, "target_confidence": 37}, {"target_end_line": 84, "source_start_line": 48, "source_end_line": 55, "source_confidence": 54, "target_start_line": 77, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 17, "source_end_line": 22, "source_confidence": 54, "target_start_line": 63, "target_confidence": 37}, {"target_end_line": 49, "source_start_line": 9, "source_end_line": 11, "source_confidence": 54, "target_start_line": 47, "target_confidence": 37}]}, {"source": "Fil_007e6492155fc18906fb184cc486913b", "value": 56, "target": "jermspeaks_135b6e0db7d35aa4bfed34c9e946e751", "links": [{"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}, {"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}, {"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}, {"target_end_line": 73, "source_start_line": 68, "source_end_line": 100, "source_confidence": 42, "target_start_line": 41, "target_confidence": 80}, {"target_end_line": 34, "source_start_line": 51, "source_end_line": 58, "source_confidence": 42, "target_start_line": 27, "target_confidence": 80}, {"target_end_line": 14, "source_start_line": 27, "source_end_line": 35, "source_confidence": 42, "target_start_line": 7, "target_confidence": 80}, {"target_end_line": 20, "source_start_line": 39, "source_end_line": 44, "source_confidence": 42, "target_start_line": 15, "target_confidence": 80}]}, {"source": "elt12njo_129a27ac621a35a44ab8a68a99b6a508", "value": 83, "target": "john-guerra_95c69d114b7d59f934c282fc643d2234", "links": [{"target_end_line": 86, "source_start_line": 33, "source_end_line": 84, "source_confidence": 95, "target_start_line": 35, "target_confidence": 95}, {"target_end_line": 31, "source_start_line": 1, "source_end_line": 31, "source_confidence": 95, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 86, "source_start_line": 33, "source_end_line": 84, "source_confidence": 95, "target_start_line": 35, "target_confidence": 95}, {"target_end_line": 31, "source_start_line": 1, "source_end_line": 31, "source_confidence": 95, "target_start_line": 1, "target_confidence": 95}]}, {"source": "codementum_c82471c137b3744ed8c28006fc1da41d", "value": 74, "target": "ivanempire_b6a1d0d2c5bc40a1e3f85b8980f189ef", "links": [{"target_end_line": 78, "source_start_line": 54, "source_end_line": 98, "source_confidence": 58, "target_start_line": 35, "target_confidence": 88}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 58, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 83, "source_start_line": 98, "source_end_line": 103, "source_confidence": 58, "target_start_line": 79, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 54, "source_end_line": 98, "source_confidence": 58, "target_start_line": 35, "target_confidence": 88}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 58, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 83, "source_start_line": 98, "source_end_line": 103, "source_confidence": 58, "target_start_line": 79, "target_confidence": 88}, {"target_end_line": 78, "source_start_line": 54, "source_end_line": 98, "source_confidence": 58, "target_start_line": 35, "target_confidence": 88}, {"target_end_line": 23, "source_start_line": 1, "source_end_line": 23, "source_confidence": 58, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 83, "source_start_line": 98, "source_end_line": 103, "source_confidence": 58, "target_start_line": 79, "target_confidence": 88}]}, {"source": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8", "value": 48, "target": "codementum_c82471c137b3744ed8c28006fc1da41d", "links": [{"target_end_line": 47, "source_start_line": 2, "source_end_line": 15, "source_confidence": 88, "target_start_line": 34, "target_confidence": 63}, {"target_end_line": 73, "source_start_line": 18, "source_end_line": 36, "source_confidence": 88, "target_start_line": 55, "target_confidence": 63}, {"target_end_line": 95, "source_start_line": 41, "source_end_line": 55, "source_confidence": 88, "target_start_line": 81, "target_confidence": 63}, {"target_end_line": 47, "source_start_line": 2, "source_end_line": 15, "source_confidence": 88, "target_start_line": 34, "target_confidence": 63}, {"target_end_line": 73, "source_start_line": 18, "source_end_line": 36, "source_confidence": 88, "target_start_line": 55, "target_confidence": 63}, {"target_end_line": 95, "source_start_line": 41, "source_end_line": 55, "source_confidence": 88, "target_start_line": 81, "target_confidence": 63}, {"target_end_line": 47, "source_start_line": 2, "source_end_line": 15, "source_confidence": 88, "target_start_line": 34, "target_confidence": 63}, {"target_end_line": 73, "source_start_line": 18, "source_end_line": 36, "source_confidence": 88, "target_start_line": 55, "target_confidence": 63}, {"target_end_line": 95, "source_start_line": 41, "source_end_line": 55, "source_confidence": 88, "target_start_line": 81, "target_confidence": 63}]}, {"source": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8", "value": 61, "target": "codementum_2ee76715d716e59efab283ce915de740", "links": [{"target_end_line": 61, "source_start_line": 1, "source_end_line": 61, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "ivanempire_0e4e400b7f56a59e59719c7b01bc2cd8", "value": 61, "target": "codementum_ae610a1e44e562afcaa327982629a37c", "links": [{"target_end_line": 61, "source_start_line": 1, "source_end_line": 61, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "Ananda90_fe3056ca5c47fd949cdb4a4df6513e9a", "value": 22, "target": "sadbumblebee_cf960bdddd53ae832d980f5c70c48e5c", "links": [{"target_end_line": 132, "source_start_line": 83, "source_end_line": 87, "source_confidence": 22, "target_start_line": 128, "target_confidence": 5}, {"target_end_line": 123, "source_start_line": 75, "source_end_line": 80, "source_confidence": 22, "target_start_line": 118, "target_confidence": 5}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 22, "target_start_line": 1, "target_confidence": 5}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 29, "source_confidence": 22, "target_start_line": 44, "target_confidence": 5}, {"target_end_line": 132, "source_start_line": 83, "source_end_line": 87, "source_confidence": 22, "target_start_line": 128, "target_confidence": 5}, {"target_end_line": 123, "source_start_line": 75, "source_end_line": 80, "source_confidence": 22, "target_start_line": 118, "target_confidence": 5}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 22, "target_start_line": 1, "target_confidence": 5}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 29, "source_confidence": 22, "target_start_line": 44, "target_confidence": 5}, {"target_end_line": 132, "source_start_line": 83, "source_end_line": 87, "source_confidence": 22, "target_start_line": 128, "target_confidence": 5}, {"target_end_line": 123, "source_start_line": 75, "source_end_line": 80, "source_confidence": 22, "target_start_line": 118, "target_confidence": 5}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 22, "target_start_line": 1, "target_confidence": 5}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 29, "source_confidence": 22, "target_start_line": 44, "target_confidence": 5}, {"target_end_line": 132, "source_start_line": 83, "source_end_line": 87, "source_confidence": 22, "target_start_line": 128, "target_confidence": 5}, {"target_end_line": 123, "source_start_line": 75, "source_end_line": 80, "source_confidence": 22, "target_start_line": 118, "target_confidence": 5}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 4, "source_confidence": 22, "target_start_line": 1, "target_confidence": 5}, {"target_end_line": 47, "source_start_line": 28, "source_end_line": 29, "source_confidence": 22, "target_start_line": 44, "target_confidence": 5}]}, {"source": "mukhtyar_0919114dceb85d70c24d4003aa84681d", "value": 28, "target": "scresawn_af4615e705cf683d4a68e0968c9701d1", "links": [{"target_end_line": 24, "source_start_line": 15, "source_end_line": 32, "source_confidence": 17, "target_start_line": 7, "target_confidence": 36}, {"target_end_line": 47, "source_start_line": 77, "source_end_line": 83, "source_confidence": 17, "target_start_line": 41, "target_confidence": 36}, {"target_end_line": 90, "source_start_line": 116, "source_end_line": 118, "source_confidence": 17, "target_start_line": 88, "target_confidence": 36}, {"target_end_line": 24, "source_start_line": 15, "source_end_line": 32, "source_confidence": 17, "target_start_line": 7, "target_confidence": 36}, {"target_end_line": 47, "source_start_line": 77, "source_end_line": 83, "source_confidence": 17, "target_start_line": 41, "target_confidence": 36}, {"target_end_line": 90, "source_start_line": 116, "source_end_line": 118, "source_confidence": 17, "target_start_line": 88, "target_confidence": 36}, {"target_end_line": 24, "source_start_line": 15, "source_end_line": 32, "source_confidence": 17, "target_start_line": 7, "target_confidence": 36}, {"target_end_line": 47, "source_start_line": 77, "source_end_line": 83, "source_confidence": 17, "target_start_line": 41, "target_confidence": 36}, {"target_end_line": 90, "source_start_line": 116, "source_end_line": 118, "source_confidence": 17, "target_start_line": 88, "target_confidence": 36}]}, {"source": "fotisz_d75dd147aa99fce499902801919d41ba", "value": 83, "target": "matt1306_5ef518ec9d7153f9624e46c7ca97b77d", "links": [{"target_end_line": 84, "source_start_line": 47, "source_end_line": 101, "source_confidence": 64, "target_start_line": 30, "target_confidence": 97}, {"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 64, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 84, "source_start_line": 47, "source_end_line": 101, "source_confidence": 64, "target_start_line": 30, "target_confidence": 97}, {"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 64, "target_start_line": 1, "target_confidence": 97}]}, {"source": "iansinnott_d25e6ebe9526b3cc0b82344e13727309", "value": 22, "target": "cehsu_fa7324f633d7f99cf3d2c68e027ec1da", "links": [{"target_end_line": 210, "source_start_line": 56, "source_end_line": 61, "source_confidence": 33, "target_start_line": 205, "target_confidence": 10}, {"target_end_line": 224, "source_start_line": 64, "source_end_line": 74, "source_confidence": 33, "target_start_line": 213, "target_confidence": 10}, {"target_end_line": 204, "source_start_line": 52, "source_end_line": 55, "source_confidence": 33, "target_start_line": 201, "target_confidence": 10}, {"target_end_line": 210, "source_start_line": 56, "source_end_line": 61, "source_confidence": 33, "target_start_line": 205, "target_confidence": 10}, {"target_end_line": 224, "source_start_line": 64, "source_end_line": 74, "source_confidence": 33, "target_start_line": 213, "target_confidence": 10}, {"target_end_line": 204, "source_start_line": 52, "source_end_line": 55, "source_confidence": 33, "target_start_line": 201, "target_confidence": 10}, {"target_end_line": 210, "source_start_line": 56, "source_end_line": 61, "source_confidence": 33, "target_start_line": 205, "target_confidence": 10}, {"target_end_line": 224, "source_start_line": 64, "source_end_line": 74, "source_confidence": 33, "target_start_line": 213, "target_confidence": 10}, {"target_end_line": 204, "source_start_line": 52, "source_end_line": 55, "source_confidence": 33, "target_start_line": 201, "target_confidence": 10}]}, {"source": "lgoerl_8cd5584d81953601ef1d90ba6a7821b6", "value": 98, "target": "BBischof_75ed4879d155c31412f58840480ae1d6", "links": [{"target_end_line": 98, "source_start_line": 27, "source_end_line": 99, "source_confidence": 97, "target_start_line": 26, "target_confidence": 97}, {"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 97, "target_start_line": 1, "target_confidence": 97}, {"target_end_line": 98, "source_start_line": 27, "source_end_line": 99, "source_confidence": 97, "target_start_line": 26, "target_confidence": 97}, {"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 97, "target_start_line": 1, "target_confidence": 97}]}, {"source": "Ananda90_fe3056ca5c47fd949cdb4a4df6513e9a", "value": 40, "target": "lgoerl_8cd5584d81953601ef1d90ba6a7821b6", "links": [{"target_end_line": 97, "source_start_line": 75, "source_end_line": 89, "source_confidence": 36, "target_start_line": 83, "target_confidence": 38}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 56, "source_confidence": 36, "target_start_line": 60, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 17, "source_end_line": 24, "source_confidence": 36, "target_start_line": 32, "target_confidence": 38}, {"target_end_line": 97, "source_start_line": 75, "source_end_line": 89, "source_confidence": 36, "target_start_line": 83, "target_confidence": 38}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 56, "source_confidence": 36, "target_start_line": 60, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 17, "source_end_line": 24, "source_confidence": 36, "target_start_line": 32, "target_confidence": 38}, {"target_end_line": 97, "source_start_line": 75, "source_end_line": 89, "source_confidence": 36, "target_start_line": 83, "target_confidence": 38}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 56, "source_confidence": 36, "target_start_line": 60, "target_confidence": 38}, {"target_end_line": 40, "source_start_line": 17, "source_end_line": 24, "source_confidence": 36, "target_start_line": 32, "target_confidence": 38}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_b450cdd26523642c1286a8f850a536b9", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 524, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 523, "target_confidence": 34}, {"target_end_line": 526, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 525, "target_confidence": 34}, {"target_end_line": 528, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 527, "target_confidence": 34}, {"target_end_line": 530, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 529, "target_confidence": 34}, {"target_end_line": 532, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 531, "target_confidence": 34}, {"target_end_line": 534, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 533, "target_confidence": 34}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_42e11366b38e106c8ad071b011d41861", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_3845b2a1ebddd45ea0bd8dd0a360845a", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 34}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 34}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 34}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 34}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 34}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 34}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 512, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 511, "target_confidence": 34}, {"target_end_line": 514, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 513, "target_confidence": 34}, {"target_end_line": 516, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 515, "target_confidence": 34}, {"target_end_line": 518, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 517, "target_confidence": 34}, {"target_end_line": 520, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 519, "target_confidence": 34}, {"target_end_line": 522, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 521, "target_confidence": 34}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_f5b1cc1c6a98bf5e00b9b4cb92bbf261", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 33}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 33}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 33}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 33}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 33}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 33}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 518, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 517, "target_confidence": 33}, {"target_end_line": 520, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 519, "target_confidence": 33}, {"target_end_line": 522, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 521, "target_confidence": 33}, {"target_end_line": 524, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 523, "target_confidence": 33}, {"target_end_line": 526, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 525, "target_confidence": 33}, {"target_end_line": 528, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 527, "target_confidence": 33}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_eefbf8a634c47a355133a1c9ef7626ec", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_8a3bca89ab69d0c7f18999c49cd07bb0", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_dd366a46fdf36a20c13d1b9feb4bf360", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_e7b8bb30c2824dac837743397ac120e7", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_f544e6f2a795c4d080d1096b2811d874", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_d333b5f5e38c55d4914df30bdcd7bdf9", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_16c60f32c2cbc187689546b0228cc9cf", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_ff1d445a5f258d15642c2db9a3a350d4", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_8e147b3a6df133f8382d62456fb5a195", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_ad60c13c34ec6b9f5e24704ed044670f", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_0d2b2dc43fbdc1d30c4fb1aab3c5ea0a", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_a2e4a101c3e40087233129ac543b8898", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_5894e4fe188966b8e48bd23e4b7b66fb", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_9ccd1766410275a223944f7782308669", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_1b05b8274792a54d35d9f78afe2c6e5b", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_82eb96fb0b4bc0c2561f9ae460125b17", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_f1d01b567b46dea43a5703963466781b", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "value": 163, "target": "apolan_9dd1ec5c7529a419db0336bb906fd192", "links": [{"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}, {"target_end_line": 212, "source_start_line": 183, "source_end_line": 232, "source_confidence": 36, "target_start_line": 163, "target_confidence": 37}, {"target_end_line": 100, "source_start_line": 50, "source_end_line": 89, "source_confidence": 36, "target_start_line": 62, "target_confidence": 37}, {"target_end_line": 24, "source_start_line": 7, "source_end_line": 23, "source_confidence": 36, "target_start_line": 7, "target_confidence": 37}, {"target_end_line": 51, "source_start_line": 32, "source_end_line": 50, "source_confidence": 36, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 217, "source_start_line": 233, "source_end_line": 238, "source_confidence": 36, "target_start_line": 213, "target_confidence": 37}, {"target_end_line": 120, "source_start_line": 89, "source_end_line": 99, "source_confidence": 36, "target_start_line": 110, "target_confidence": 37}, {"target_end_line": 30, "source_start_line": 26, "source_end_line": 29, "source_confidence": 36, "target_start_line": 27, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 36, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 433, "source_start_line": 507, "source_end_line": 508, "source_confidence": 36, "target_start_line": 432, "target_confidence": 37}, {"target_end_line": 435, "source_start_line": 509, "source_end_line": 510, "source_confidence": 36, "target_start_line": 434, "target_confidence": 37}, {"target_end_line": 437, "source_start_line": 511, "source_end_line": 512, "source_confidence": 36, "target_start_line": 436, "target_confidence": 37}, {"target_end_line": 439, "source_start_line": 513, "source_end_line": 514, "source_confidence": 36, "target_start_line": 438, "target_confidence": 37}, {"target_end_line": 441, "source_start_line": 515, "source_end_line": 516, "source_confidence": 36, "target_start_line": 440, "target_confidence": 37}, {"target_end_line": 443, "source_start_line": 517, "source_end_line": 518, "source_confidence": 36, "target_start_line": 442, "target_confidence": 37}]}, {"source": "jcnesci_abdda0bcf5206b3be3e6853e677eb0a8", "value": 29, "target": "iansinnott_d25e6ebe9526b3cc0b82344e13727309", "links": [{"target_end_line": 70, "source_start_line": 94, "source_end_line": 116, "source_confidence": 14, "target_start_line": 47, "target_confidence": 48}, {"target_end_line": 40, "source_start_line": 91, "source_end_line": 94, "source_confidence": 14, "target_start_line": 36, "target_confidence": 48}, {"target_end_line": 70, "source_start_line": 94, "source_end_line": 116, "source_confidence": 14, "target_start_line": 47, "target_confidence": 48}, {"target_end_line": 40, "source_start_line": 91, "source_end_line": 94, "source_confidence": 14, "target_start_line": 36, "target_confidence": 48}]}, {"source": "alandunning_7008d0332cc28a826b37b3cf6e7bd998", "value": 23, "target": "Ananda90_45cb6fc5500665cb3bddb12a4a1c9345", "links": [{"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 50, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 53, "source_start_line": 39, "source_end_line": 45, "source_confidence": 50, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 18, "source_confidence": 50, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 50, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 53, "source_start_line": 39, "source_end_line": 45, "source_confidence": 50, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 18, "source_confidence": 50, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 50, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 53, "source_start_line": 39, "source_end_line": 45, "source_confidence": 50, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 18, "source_confidence": 50, "target_start_line": 15, "target_confidence": 44}]}, {"source": "alandunning_7008d0332cc28a826b37b3cf6e7bd998", "value": 23, "target": "Ananda90_d4e8bbacefa42f1bc74caf82f971eea4", "links": [{"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 50, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 53, "source_start_line": 39, "source_end_line": 45, "source_confidence": 50, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 18, "source_confidence": 50, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 50, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 53, "source_start_line": 39, "source_end_line": 45, "source_confidence": 50, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 18, "source_confidence": 50, "target_start_line": 15, "target_confidence": 44}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 50, "target_start_line": 1, "target_confidence": 44}, {"target_end_line": 53, "source_start_line": 39, "source_end_line": 45, "source_confidence": 50, "target_start_line": 47, "target_confidence": 44}, {"target_end_line": 21, "source_start_line": 12, "source_end_line": 18, "source_confidence": 50, "target_start_line": 15, "target_confidence": 44}]}, {"source": "RicCheng_73aa51d457d0125e314260cbd6842153", "value": 21, "target": "Ananda90_fe3056ca5c47fd949cdb4a4df6513e9a", "links": [{"target_end_line": 89, "source_start_line": 179, "source_end_line": 186, "source_confidence": 6, "target_start_line": 83, "target_confidence": 23}, {"target_end_line": 20, "source_start_line": 82, "source_end_line": 88, "source_confidence": 6, "target_start_line": 17, "target_confidence": 23}, {"target_end_line": 28, "source_start_line": 90, "source_end_line": 95, "source_confidence": 6, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 89, "source_start_line": 179, "source_end_line": 186, "source_confidence": 6, "target_start_line": 83, "target_confidence": 23}, {"target_end_line": 20, "source_start_line": 82, "source_end_line": 88, "source_confidence": 6, "target_start_line": 17, "target_confidence": 23}, {"target_end_line": 28, "source_start_line": 90, "source_end_line": 95, "source_confidence": 6, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 89, "source_start_line": 179, "source_end_line": 186, "source_confidence": 6, "target_start_line": 83, "target_confidence": 23}, {"target_end_line": 20, "source_start_line": 82, "source_end_line": 88, "source_confidence": 6, "target_start_line": 17, "target_confidence": 23}, {"target_end_line": 28, "source_start_line": 90, "source_end_line": 95, "source_confidence": 6, "target_start_line": 23, "target_confidence": 23}]}, {"source": "alandunning_7008d0332cc28a826b37b3cf6e7bd998", "value": 45, "target": "Ananda90_c181d1fc7b6e5acd63f2155319387412", "links": [{"target_end_line": 40, "source_start_line": 1, "source_end_line": 40, "source_confidence": 94, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 41, "source_end_line": 45, "source_confidence": 94, "target_start_line": 42, "target_confidence": 88}, {"target_end_line": 40, "source_start_line": 1, "source_end_line": 40, "source_confidence": 94, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 46, "source_start_line": 41, "source_end_line": 45, "source_confidence": 94, "target_start_line": 42, "target_confidence": 88}]}, {"source": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "value": 22, "target": "dhoboy_116056d5a74c478c49058952fc14b98c", "links": [{"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 52, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 44, "target_confidence": 22}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 52, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 44, "target_confidence": 22}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 52, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 44, "target_confidence": 22}]}, {"source": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "value": 22, "target": "dhoboy_8136f9742eac4dfa09643ee0d40fc1f9", "links": [{"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 15}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 15}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 15}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 15}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 15}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 15}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 15}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 15}]}, {"source": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "value": 22, "target": "dhoboy_16e9d71cec3b05b4da60b977e44e5d25", "links": [{"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 22}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 22}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 22}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 22}]}, {"source": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "value": 22, "target": "dhoboy_3b60a1892ecad3d5b28f71ab40ad5886", "links": [{"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 24}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 24}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 24}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 24}, {"target_end_line": 23, "source_start_line": 12, "source_end_line": 18, "source_confidence": 40, "target_start_line": 17, "target_confidence": 24}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 11, "source_confidence": 40, "target_start_line": 1, "target_confidence": 24}, {"target_end_line": 56, "source_start_line": 59, "source_end_line": 62, "source_confidence": 40, "target_start_line": 48, "target_confidence": 24}]}, {"source": "syntagmatic_1dd1acd35f77c1fc64863e42f4a405bb", "value": 28, "target": "dhoboy_1178601925731459c224bd4d69a1791d", "links": [{"target_end_line": 57, "source_start_line": 63, "source_end_line": 69, "source_confidence": 21, "target_start_line": 45, "target_confidence": 27}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 14, "source_confidence": 21, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 22, "source_confidence": 21, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 57, "source_start_line": 63, "source_end_line": 69, "source_confidence": 21, "target_start_line": 45, "target_confidence": 27}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 14, "source_confidence": 21, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 22, "source_confidence": 21, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 57, "source_start_line": 63, "source_end_line": 69, "source_confidence": 21, "target_start_line": 45, "target_confidence": 27}, {"target_end_line": 14, "source_start_line": 5, "source_end_line": 14, "source_confidence": 21, "target_start_line": 5, "target_confidence": 27}, {"target_end_line": 23, "source_start_line": 19, "source_end_line": 22, "source_confidence": 21, "target_start_line": 19, "target_confidence": 27}]}, {"source": "eric-bunch_9b313af64c04c1574681316282cd1ad1", "value": 27, "target": "davidgutierrez_858fa2687bc3067c6f1a58c944050709", "links": [{"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 6, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 42, "source_start_line": 72, "source_end_line": 84, "source_confidence": 6, "target_start_line": 29, "target_confidence": 22}, {"target_end_line": 127, "source_start_line": 263, "source_end_line": 267, "source_confidence": 6, "target_start_line": 125, "target_confidence": 22}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 6, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 42, "source_start_line": 72, "source_end_line": 84, "source_confidence": 6, "target_start_line": 29, "target_confidence": 22}, {"target_end_line": 127, "source_start_line": 263, "source_end_line": 267, "source_confidence": 6, "target_start_line": 125, "target_confidence": 22}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 9, "source_confidence": 6, "target_start_line": 1, "target_confidence": 22}, {"target_end_line": 42, "source_start_line": 72, "source_end_line": 84, "source_confidence": 6, "target_start_line": 29, "target_confidence": 22}, {"target_end_line": 127, "source_start_line": 263, "source_end_line": 267, "source_confidence": 6, "target_start_line": 125, "target_confidence": 22}]}, {"source": "emilioalvarado_0d14fd5ef94ef8629a6a63e1a43e8fb2", "value": 22, "target": "Franramy_5e7efcb2c53be893f3c1be6f456cce30", "links": [{"target_end_line": 50, "source_start_line": 7, "source_end_line": 13, "source_confidence": 16, "target_start_line": 44, "target_confidence": 19}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 16, "target_start_line": 1, "target_confidence": 19}, {"target_end_line": 35, "source_start_line": 38, "source_end_line": 46, "source_confidence": 16, "target_start_line": 28, "target_confidence": 19}, {"target_end_line": 50, "source_start_line": 7, "source_end_line": 13, "source_confidence": 16, "target_start_line": 44, "target_confidence": 19}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 16, "target_start_line": 1, "target_confidence": 19}, {"target_end_line": 35, "source_start_line": 38, "source_end_line": 46, "source_confidence": 16, "target_start_line": 28, "target_confidence": 19}, {"target_end_line": 50, "source_start_line": 7, "source_end_line": 13, "source_confidence": 16, "target_start_line": 44, "target_confidence": 19}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 16, "target_start_line": 1, "target_confidence": 19}, {"target_end_line": 35, "source_start_line": 38, "source_end_line": 46, "source_confidence": 16, "target_start_line": 28, "target_confidence": 19}]}, {"source": "cmpolis_f9805a98b8a455aaccb56e5ee59964f8", "value": 19, "target": "nychi713_23d300d92301d0ba57bd5f155c30cb9a", "links": [{"target_end_line": 364, "source_start_line": 21, "source_end_line": 27, "source_confidence": 21, "target_start_line": 358, "target_confidence": 3}, {"target_end_line": 357, "source_start_line": 3, "source_end_line": 6, "source_confidence": 21, "target_start_line": 354, "target_confidence": 3}, {"target_end_line": 399, "source_start_line": 36, "source_end_line": 43, "source_confidence": 21, "target_start_line": 392, "target_confidence": 3}, {"target_end_line": 364, "source_start_line": 21, "source_end_line": 27, "source_confidence": 21, "target_start_line": 358, "target_confidence": 3}, {"target_end_line": 357, "source_start_line": 3, "source_end_line": 6, "source_confidence": 21, "target_start_line": 354, "target_confidence": 3}, {"target_end_line": 399, "source_start_line": 36, "source_end_line": 43, "source_confidence": 21, "target_start_line": 392, "target_confidence": 3}, {"target_end_line": 364, "source_start_line": 21, "source_end_line": 27, "source_confidence": 21, "target_start_line": 358, "target_confidence": 3}, {"target_end_line": 357, "source_start_line": 3, "source_end_line": 6, "source_confidence": 21, "target_start_line": 354, "target_confidence": 3}, {"target_end_line": 399, "source_start_line": 36, "source_end_line": 43, "source_confidence": 21, "target_start_line": 392, "target_confidence": 3}]}, {"source": "syntagmatic_75c5ca501200b0cf7a5958b4e404f777", "value": 21, "target": "ericsoco_f378d8a1fc9ba25ba9253b5ebf16b457", "links": [{"target_end_line": 107, "source_start_line": 93, "source_end_line": 101, "source_confidence": 22, "target_start_line": 99, "target_confidence": 23}, {"target_end_line": 114, "source_start_line": 105, "source_end_line": 107, "source_confidence": 22, "target_start_line": 112, "target_confidence": 23}, {"target_end_line": 30, "source_start_line": 69, "source_end_line": 77, "source_confidence": 22, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 107, "source_start_line": 93, "source_end_line": 101, "source_confidence": 22, "target_start_line": 99, "target_confidence": 23}, {"target_end_line": 114, "source_start_line": 105, "source_end_line": 107, "source_confidence": 22, "target_start_line": 112, "target_confidence": 23}, {"target_end_line": 30, "source_start_line": 69, "source_end_line": 77, "source_confidence": 22, "target_start_line": 23, "target_confidence": 23}, {"target_end_line": 107, "source_start_line": 93, "source_end_line": 101, "source_confidence": 22, "target_start_line": 99, "target_confidence": 23}, {"target_end_line": 114, "source_start_line": 105, "source_end_line": 107, "source_confidence": 22, "target_start_line": 112, "target_confidence": 23}, {"target_end_line": 30, "source_start_line": 69, "source_end_line": 77, "source_confidence": 22, "target_start_line": 23, "target_confidence": 23}]}, {"source": "mashehu_de923d763a53d523596ba81c6d1f3233", "value": 23, "target": "carlosfelipetorres_ddf6bfd96d1bdf9a90c1888c207b9318", "links": [{"target_end_line": 27, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 20, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 62, "source_end_line": 67, "source_confidence": 12, "target_start_line": 2, "target_confidence": 21}, {"target_end_line": 93, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 86, "target_confidence": 21}, {"target_end_line": 27, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 20, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 62, "source_end_line": 67, "source_confidence": 12, "target_start_line": 2, "target_confidence": 21}, {"target_end_line": 93, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 86, "target_confidence": 21}, {"target_end_line": 27, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 20, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 62, "source_end_line": 67, "source_confidence": 12, "target_start_line": 2, "target_confidence": 21}, {"target_end_line": 93, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 86, "target_confidence": 21}]}, {"source": "mashehu_de923d763a53d523596ba81c6d1f3233", "value": 21, "target": "carlosfelipetorres_1e477d3c4bca8daedbd6cce0af1e3567", "links": [{"target_end_line": 30, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 23, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 62, "source_end_line": 66, "source_confidence": 12, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 94, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 87, "target_confidence": 18}, {"target_end_line": 30, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 23, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 62, "source_end_line": 66, "source_confidence": 12, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 94, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 87, "target_confidence": 18}, {"target_end_line": 30, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 23, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 62, "source_end_line": 66, "source_confidence": 12, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 94, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 87, "target_confidence": 18}]}, {"source": "mashehu_de923d763a53d523596ba81c6d1f3233", "value": 21, "target": "carlosfelipetorres_658b04db6bcc17c65fe8050ecde99261", "links": [{"target_end_line": 30, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 23, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 62, "source_end_line": 66, "source_confidence": 12, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 94, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 87, "target_confidence": 18}, {"target_end_line": 30, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 23, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 62, "source_end_line": 66, "source_confidence": 12, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 94, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 87, "target_confidence": 18}, {"target_end_line": 30, "source_start_line": 78, "source_end_line": 85, "source_confidence": 12, "target_start_line": 23, "target_confidence": 18}, {"target_end_line": 7, "source_start_line": 62, "source_end_line": 66, "source_confidence": 12, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 94, "source_start_line": 134, "source_end_line": 141, "source_confidence": 12, "target_start_line": 87, "target_confidence": 18}]}, {"source": "fotisz_0ae06752972bffb47639d576f8ec1c96", "value": 54, "target": "markvital_89be160315aca0c92569aa93e883f4a1", "links": [{"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}]}, {"source": "fotisz_0ae06752972bffb47639d576f8ec1c96", "value": 54, "target": "markvital_d45fb2d9324dc785136b72f21b5e68b4", "links": [{"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}, {"target_end_line": 668, "source_start_line": 100, "source_end_line": 107, "source_confidence": 37, "target_start_line": 662, "target_confidence": 1}, {"target_end_line": 662, "source_start_line": 89, "source_end_line": 100, "source_confidence": 37, "target_start_line": 654, "target_confidence": 1}, {"target_end_line": 575, "source_start_line": 58, "source_end_line": 62, "source_confidence": 37, "target_start_line": 571, "target_confidence": 1}, {"target_end_line": 652, "source_start_line": 82, "source_end_line": 88, "source_confidence": 37, "target_start_line": 649, "target_confidence": 1}, {"target_end_line": 702, "source_start_line": 121, "source_end_line": 128, "source_confidence": 37, "target_start_line": 697, "target_confidence": 1}, {"target_end_line": 580, "source_start_line": 62, "source_end_line": 69, "source_confidence": 37, "target_start_line": 575, "target_confidence": 1}, {"target_end_line": 528, "source_start_line": 134, "source_end_line": 139, "source_confidence": 37, "target_start_line": 523, "target_confidence": 1}]}, {"source": "eric-bunch_9b313af64c04c1574681316282cd1ad1", "value": 30, "target": "RicCheng_b467b5b6536dac8b215d22bbb2bb3662", "links": [{"target_end_line": 54, "source_start_line": 72, "source_end_line": 80, "source_confidence": 5, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 111, "source_start_line": 243, "source_end_line": 253, "source_confidence": 5, "target_start_line": 102, "target_confidence": 6}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 5, "target_start_line": 4, "target_confidence": 6}, {"target_end_line": 99, "source_start_line": 165, "source_end_line": 171, "source_confidence": 5, "target_start_line": 95, "target_confidence": 6}, {"target_end_line": 54, "source_start_line": 72, "source_end_line": 80, "source_confidence": 5, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 111, "source_start_line": 243, "source_end_line": 253, "source_confidence": 5, "target_start_line": 102, "target_confidence": 6}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 5, "target_start_line": 4, "target_confidence": 6}, {"target_end_line": 99, "source_start_line": 165, "source_end_line": 171, "source_confidence": 5, "target_start_line": 95, "target_confidence": 6}, {"target_end_line": 54, "source_start_line": 72, "source_end_line": 80, "source_confidence": 5, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 111, "source_start_line": 243, "source_end_line": 253, "source_confidence": 5, "target_start_line": 102, "target_confidence": 6}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 5, "target_start_line": 4, "target_confidence": 6}, {"target_end_line": 99, "source_start_line": 165, "source_end_line": 171, "source_confidence": 5, "target_start_line": 95, "target_confidence": 6}, {"target_end_line": 54, "source_start_line": 72, "source_end_line": 80, "source_confidence": 5, "target_start_line": 46, "target_confidence": 6}, {"target_end_line": 111, "source_start_line": 243, "source_end_line": 253, "source_confidence": 5, "target_start_line": 102, "target_confidence": 6}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 7, "source_confidence": 5, "target_start_line": 4, "target_confidence": 6}, {"target_end_line": 99, "source_start_line": 165, "source_end_line": 171, "source_confidence": 5, "target_start_line": 95, "target_confidence": 6}]}, {"source": "alandunning_cfb7dcd7951826b9eacd54f0647f48d3", "value": 21, "target": "RicCheng_73aa51d457d0125e314260cbd6842153", "links": [{"target_end_line": 186, "source_start_line": 84, "source_end_line": 90, "source_confidence": 23, "target_start_line": 179, "target_confidence": 6}, {"target_end_line": 88, "source_start_line": 17, "source_end_line": 20, "source_confidence": 23, "target_start_line": 82, "target_confidence": 6}, {"target_end_line": 95, "source_start_line": 23, "source_end_line": 28, "source_confidence": 23, "target_start_line": 90, "target_confidence": 6}, {"target_end_line": 186, "source_start_line": 84, "source_end_line": 90, "source_confidence": 23, "target_start_line": 179, "target_confidence": 6}, {"target_end_line": 88, "source_start_line": 17, "source_end_line": 20, "source_confidence": 23, "target_start_line": 82, "target_confidence": 6}, {"target_end_line": 95, "source_start_line": 23, "source_end_line": 28, "source_confidence": 23, "target_start_line": 90, "target_confidence": 6}, {"target_end_line": 186, "source_start_line": 84, "source_end_line": 90, "source_confidence": 23, "target_start_line": 179, "target_confidence": 6}, {"target_end_line": 88, "source_start_line": 17, "source_end_line": 20, "source_confidence": 23, "target_start_line": 82, "target_confidence": 6}, {"target_end_line": 95, "source_start_line": 23, "source_end_line": 28, "source_confidence": 23, "target_start_line": 90, "target_confidence": 6}]}, {"source": "cmpolis_f9805a98b8a455aaccb56e5ee59964f8", "value": 27, "target": "mashehu_de923d763a53d523596ba81c6d1f3233", "links": [{"target_end_line": 82, "source_start_line": 21, "source_end_line": 25, "source_confidence": 29, "target_start_line": 78, "target_confidence": 16}, {"target_end_line": 125, "source_start_line": 70, "source_end_line": 79, "source_confidence": 29, "target_start_line": 116, "target_confidence": 16}, {"target_end_line": 67, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 62, "target_confidence": 16}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 86, "source_confidence": 29, "target_start_line": 127, "target_confidence": 16}, {"target_end_line": 82, "source_start_line": 21, "source_end_line": 25, "source_confidence": 29, "target_start_line": 78, "target_confidence": 16}, {"target_end_line": 125, "source_start_line": 70, "source_end_line": 79, "source_confidence": 29, "target_start_line": 116, "target_confidence": 16}, {"target_end_line": 67, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 62, "target_confidence": 16}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 86, "source_confidence": 29, "target_start_line": 127, "target_confidence": 16}, {"target_end_line": 82, "source_start_line": 21, "source_end_line": 25, "source_confidence": 29, "target_start_line": 78, "target_confidence": 16}, {"target_end_line": 125, "source_start_line": 70, "source_end_line": 79, "source_confidence": 29, "target_start_line": 116, "target_confidence": 16}, {"target_end_line": 67, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 62, "target_confidence": 16}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 86, "source_confidence": 29, "target_start_line": 127, "target_confidence": 16}, {"target_end_line": 82, "source_start_line": 21, "source_end_line": 25, "source_confidence": 29, "target_start_line": 78, "target_confidence": 16}, {"target_end_line": 125, "source_start_line": 70, "source_end_line": 79, "source_confidence": 29, "target_start_line": 116, "target_confidence": 16}, {"target_end_line": 67, "source_start_line": 3, "source_end_line": 8, "source_confidence": 29, "target_start_line": 62, "target_confidence": 16}, {"target_end_line": 132, "source_start_line": 81, "source_end_line": 86, "source_confidence": 29, "target_start_line": 127, "target_confidence": 16}]}, {"source": "emeeks_7669aa65a172bf69688ace5f6041223d", "value": 31, "target": "timelyportfolio_3cc50e732e46c2f275181c939d899234", "links": [{"target_end_line": 75, "source_start_line": 19, "source_end_line": 47, "source_confidence": 50, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 83, "source_start_line": 53, "source_end_line": 54, "source_confidence": 50, "target_start_line": 82, "target_confidence": 38}, {"target_end_line": 75, "source_start_line": 19, "source_end_line": 47, "source_confidence": 50, "target_start_line": 47, "target_confidence": 38}, {"target_end_line": 83, "source_start_line": 53, "source_end_line": 54, "source_confidence": 50, "target_start_line": 82, "target_confidence": 38}]}, {"source": "KaitoKid_adc477bc68e8d95e6517bf2767f4fadb", "value": 29, "target": "alandunning_7008d0332cc28a826b37b3cf6e7bd998", "links": [{"target_end_line": 25, "source_start_line": 36, "source_end_line": 47, "source_confidence": 46, "target_start_line": 18, "target_confidence": 40}, {"target_end_line": 39, "source_start_line": 53, "source_end_line": 62, "source_confidence": 46, "target_start_line": 30, "target_confidence": 40}, {"target_end_line": 12, "source_start_line": 18, "source_end_line": 24, "source_confidence": 46, "target_start_line": 9, "target_confidence": 40}, {"target_end_line": 25, "source_start_line": 36, "source_end_line": 47, "source_confidence": 46, "target_start_line": 18, "target_confidence": 40}, {"target_end_line": 39, "source_start_line": 53, "source_end_line": 62, "source_confidence": 46, "target_start_line": 30, "target_confidence": 40}, {"target_end_line": 12, "source_start_line": 18, "source_end_line": 24, "source_confidence": 46, "target_start_line": 9, "target_confidence": 40}, {"target_end_line": 25, "source_start_line": 36, "source_end_line": 47, "source_confidence": 46, "target_start_line": 18, "target_confidence": 40}, {"target_end_line": 39, "source_start_line": 53, "source_end_line": 62, "source_confidence": 46, "target_start_line": 30, "target_confidence": 40}, {"target_end_line": 12, "source_start_line": 18, "source_end_line": 24, "source_confidence": 46, "target_start_line": 9, "target_confidence": 40}]}, {"source": "atomiccc_8853e6d2ce880671782b432921fbf103", "value": 87, "target": "geraldarthur_bbae629dc63f0b170184eb8d20615275", "links": [{"target_end_line": 87, "source_start_line": 10, "source_end_line": 87, "source_confidence": 98, "target_start_line": 10, "target_confidence": 99}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 98, "target_start_line": 1, "target_confidence": 99}, {"target_end_line": 87, "source_start_line": 10, "source_end_line": 87, "source_confidence": 98, "target_start_line": 10, "target_confidence": 99}, {"target_end_line": 9, "source_start_line": 1, "source_end_line": 9, "source_confidence": 98, "target_start_line": 1, "target_confidence": 99}]}, {"source": "sjesupaul_e04542b022e737661701837a471e5dbf", "value": 20, "target": "alandunning_274bf248fd0f362d64674920e85c1eb7", "links": [{"target_end_line": 7, "source_start_line": 4, "source_end_line": 9, "source_confidence": 36, "target_start_line": 2, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 25, "source_end_line": 33, "source_confidence": 36, "target_start_line": 18, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 54, "source_end_line": 58, "source_confidence": 36, "target_start_line": 43, "target_confidence": 37}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 9, "source_confidence": 36, "target_start_line": 2, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 25, "source_end_line": 33, "source_confidence": 36, "target_start_line": 18, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 54, "source_end_line": 58, "source_confidence": 36, "target_start_line": 43, "target_confidence": 37}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 9, "source_confidence": 36, "target_start_line": 2, "target_confidence": 37}, {"target_end_line": 26, "source_start_line": 25, "source_end_line": 33, "source_confidence": 36, "target_start_line": 18, "target_confidence": 37}, {"target_end_line": 47, "source_start_line": 54, "source_end_line": 58, "source_confidence": 36, "target_start_line": 43, "target_confidence": 37}]}, {"source": "denjn5_1a3f8e44cdcb3054121dfd991f59fbc2", "value": 11, "target": "fotisz_d75dd147aa99fce499902801919d41ba", "links": [{"target_end_line": 96, "source_start_line": 102, "source_end_line": 107, "source_confidence": 9, "target_start_line": 91, "target_confidence": 13}, {"target_end_line": 26, "source_start_line": 24, "source_end_line": 26, "source_confidence": 9, "target_start_line": 24, "target_confidence": 13}, {"target_end_line": 28, "source_start_line": 27, "source_end_line": 28, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 96, "source_start_line": 102, "source_end_line": 107, "source_confidence": 9, "target_start_line": 91, "target_confidence": 13}, {"target_end_line": 26, "source_start_line": 24, "source_end_line": 26, "source_confidence": 9, "target_start_line": 24, "target_confidence": 13}, {"target_end_line": 28, "source_start_line": 27, "source_end_line": 28, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}, {"target_end_line": 96, "source_start_line": 102, "source_end_line": 107, "source_confidence": 9, "target_start_line": 91, "target_confidence": 13}, {"target_end_line": 26, "source_start_line": 24, "source_end_line": 26, "source_confidence": 9, "target_start_line": 24, "target_confidence": 13}, {"target_end_line": 28, "source_start_line": 27, "source_end_line": 28, "source_confidence": 9, "target_start_line": 27, "target_confidence": 13}]}, {"source": "denjn5_1a3f8e44cdcb3054121dfd991f59fbc2", "value": 11, "target": "fotisz_584aef7c050604d35bdfec8ede7844e5", "links": [{"target_end_line": 82, "source_start_line": 102, "source_end_line": 107, "source_confidence": 9, "target_start_line": 77, "target_confidence": 19}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 26, "source_confidence": 9, "target_start_line": 27, "target_confidence": 19}, {"target_end_line": 31, "source_start_line": 27, "source_end_line": 28, "source_confidence": 9, "target_start_line": 30, "target_confidence": 19}, {"target_end_line": 82, "source_start_line": 102, "source_end_line": 107, "source_confidence": 9, "target_start_line": 77, "target_confidence": 19}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 26, "source_confidence": 9, "target_start_line": 27, "target_confidence": 19}, {"target_end_line": 31, "source_start_line": 27, "source_end_line": 28, "source_confidence": 9, "target_start_line": 30, "target_confidence": 19}, {"target_end_line": 82, "source_start_line": 102, "source_end_line": 107, "source_confidence": 9, "target_start_line": 77, "target_confidence": 19}, {"target_end_line": 29, "source_start_line": 24, "source_end_line": 26, "source_confidence": 9, "target_start_line": 27, "target_confidence": 19}, {"target_end_line": 31, "source_start_line": 27, "source_end_line": 28, "source_confidence": 9, "target_start_line": 30, "target_confidence": 19}]}, {"source": "aldrejota_5134ffe02cd512940bb3b9e300c28acb", "value": 124, "target": "fotisz_0ae06752972bffb47639d576f8ec1c96", "links": [{"target_end_line": 144, "source_start_line": 210, "source_end_line": 272, "source_confidence": 70, "target_start_line": 82, "target_confidence": 90}, {"target_end_line": 81, "source_start_line": 169, "source_end_line": 209, "source_confidence": 70, "target_start_line": 40, "target_confidence": 90}, {"target_end_line": 22, "source_start_line": 145, "source_end_line": 163, "source_confidence": 70, "target_start_line": 4, "target_confidence": 90}, {"target_end_line": 144, "source_start_line": 210, "source_end_line": 272, "source_confidence": 70, "target_start_line": 82, "target_confidence": 90}, {"target_end_line": 81, "source_start_line": 169, "source_end_line": 209, "source_confidence": 70, "target_start_line": 40, "target_confidence": 90}, {"target_end_line": 22, "source_start_line": 145, "source_end_line": 163, "source_confidence": 70, "target_start_line": 4, "target_confidence": 90}, {"target_end_line": 144, "source_start_line": 210, "source_end_line": 272, "source_confidence": 70, "target_start_line": 82, "target_confidence": 90}, {"target_end_line": 81, "source_start_line": 169, "source_end_line": 209, "source_confidence": 70, "target_start_line": 40, "target_confidence": 90}, {"target_end_line": 22, "source_start_line": 145, "source_end_line": 163, "source_confidence": 70, "target_start_line": 4, "target_confidence": 90}]}, {"source": "veltman_3d1fb70e6993d4eb2eff7112c9e7bcf4", "value": 85, "target": "wcjohnson11_de5b2c2fb198591cfbba46c8d0d52c03", "links": [{"target_end_line": 85, "source_start_line": 1, "source_end_line": 85, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "alexmacy_055217b55a7e152790895c006f6693d1", "value": 99, "target": "wcjohnson11_6e633206def68e656f801b07a0f88187", "links": [{"target_end_line": 99, "source_start_line": 1, "source_end_line": 99, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "sxywu_aaffb3bbe54a6c232d3944487f47a5f3", "value": 55, "target": "wcjohnson11_07f007b3562a956428ff4ed48c1acdf2", "links": [{"target_end_line": 48, "source_start_line": 11, "source_end_line": 45, "source_confidence": 34, "target_start_line": 14, "target_confidence": 69}, {"target_end_line": 12, "source_start_line": 2, "source_end_line": 9, "source_confidence": 34, "target_start_line": 5, "target_confidence": 69}, {"target_end_line": 66, "source_start_line": 118, "source_end_line": 129, "source_confidence": 34, "target_start_line": 59, "target_confidence": 69}, {"target_end_line": 48, "source_start_line": 11, "source_end_line": 45, "source_confidence": 34, "target_start_line": 14, "target_confidence": 69}, {"target_end_line": 12, "source_start_line": 2, "source_end_line": 9, "source_confidence": 34, "target_start_line": 5, "target_confidence": 69}, {"target_end_line": 66, "source_start_line": 118, "source_end_line": 129, "source_confidence": 34, "target_start_line": 59, "target_confidence": 69}, {"target_end_line": 48, "source_start_line": 11, "source_end_line": 45, "source_confidence": 34, "target_start_line": 14, "target_confidence": 69}, {"target_end_line": 12, "source_start_line": 2, "source_end_line": 9, "source_confidence": 34, "target_start_line": 5, "target_confidence": 69}, {"target_end_line": 66, "source_start_line": 118, "source_end_line": 129, "source_confidence": 34, "target_start_line": 59, "target_confidence": 69}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 124, "target": "aldrejota_5134ffe02cd512940bb3b9e300c28acb", "links": [{"target_end_line": 272, "source_start_line": 81, "source_end_line": 143, "source_confidence": 90, "target_start_line": 210, "target_confidence": 70}, {"target_end_line": 209, "source_start_line": 39, "source_end_line": 80, "source_confidence": 90, "target_start_line": 169, "target_confidence": 70}, {"target_end_line": 163, "source_start_line": 3, "source_end_line": 21, "source_confidence": 90, "target_start_line": 145, "target_confidence": 70}, {"target_end_line": 272, "source_start_line": 81, "source_end_line": 143, "source_confidence": 90, "target_start_line": 210, "target_confidence": 70}, {"target_end_line": 209, "source_start_line": 39, "source_end_line": 80, "source_confidence": 90, "target_start_line": 169, "target_confidence": 70}, {"target_end_line": 163, "source_start_line": 3, "source_end_line": 21, "source_confidence": 90, "target_start_line": 145, "target_confidence": 70}, {"target_end_line": 272, "source_start_line": 81, "source_end_line": 143, "source_confidence": 90, "target_start_line": 210, "target_confidence": 70}, {"target_end_line": 209, "source_start_line": 39, "source_end_line": 80, "source_confidence": 90, "target_start_line": 169, "target_confidence": 70}, {"target_end_line": 163, "source_start_line": 3, "source_end_line": 21, "source_confidence": 90, "target_start_line": 145, "target_confidence": 70}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 142, "target": "aldrejota_64de9fbf541f1e87580c2d07d4eae908", "links": [{"target_end_line": 523, "source_start_line": 23, "source_end_line": 143, "source_confidence": 98, "target_start_line": 403, "target_confidence": 32}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 98, "target_start_line": 1, "target_confidence": 32}, {"target_end_line": 523, "source_start_line": 23, "source_end_line": 143, "source_confidence": 98, "target_start_line": 403, "target_confidence": 32}, {"target_end_line": 21, "source_start_line": 1, "source_end_line": 21, "source_confidence": 98, "target_start_line": 1, "target_confidence": 32}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 143, "target": "aldrejota_aced8f7034616f7c4800a62e1db14cd4", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "john-guerra_32be58cf91f613d45c687095bad39432", "value": 143, "target": "aldrejota_4022387132063d889f82956c6c18223c", "links": [{"target_end_line": 143, "source_start_line": 1, "source_end_line": 143, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "value": 62, "target": "KaitoKid_adc477bc68e8d95e6517bf2767f4fadb", "links": [{"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 91, "target_start_line": 1, "target_confidence": 96}, {"target_end_line": 59, "source_start_line": 35, "source_end_line": 58, "source_confidence": 91, "target_start_line": 33, "target_confidence": 96}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 61, "source_confidence": 91, "target_start_line": 60, "target_confidence": 96}, {"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 91, "target_start_line": 1, "target_confidence": 96}, {"target_end_line": 59, "source_start_line": 35, "source_end_line": 58, "source_confidence": 91, "target_start_line": 33, "target_confidence": 96}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 61, "source_confidence": 91, "target_start_line": 60, "target_confidence": 96}, {"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 91, "target_start_line": 1, "target_confidence": 96}, {"target_end_line": 59, "source_start_line": 35, "source_end_line": 58, "source_confidence": 91, "target_start_line": 33, "target_confidence": 96}, {"target_end_line": 62, "source_start_line": 59, "source_end_line": 61, "source_confidence": 91, "target_start_line": 60, "target_confidence": 96}]}, {"source": "christopherni_42951cb434a66e3eff916e66961a8ec0", "value": 43, "target": "ShantanuPhadke_fb435b1f08580450be0ae461b66358d8", "links": [{"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 95, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 43, "source_confidence": 95, "target_start_line": 35, "target_confidence": 66}, {"target_end_line": 32, "source_start_line": 1, "source_end_line": 32, "source_confidence": 95, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 43, "source_confidence": 95, "target_start_line": 35, "target_confidence": 66}]}, {"source": "allenwko_4ff3e1e268f0945e6ee4d88f6d74d520", "value": 31, "target": "eric-bunch_9b313af64c04c1574681316282cd1ad1", "links": [{"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}, {"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}, {"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}, {"target_end_line": 268, "source_start_line": 56, "source_end_line": 68, "source_confidence": 38, "target_start_line": 256, "target_confidence": 7}, {"target_end_line": 167, "source_start_line": 32, "source_end_line": 39, "source_confidence": 38, "target_start_line": 162, "target_confidence": 7}, {"target_end_line": 272, "source_start_line": 68, "source_end_line": 72, "source_confidence": 38, "target_start_line": 268, "target_confidence": 7}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 5, "source_confidence": 38, "target_start_line": 1, "target_confidence": 7}]}, {"source": "rcrocker13_173c06a6c4ec262005a9872ff9dbdfeb", "value": 33, "target": "christopherni_42951cb434a66e3eff916e66961a8ec0", "links": [{"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 41, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 43, "source_start_line": 33, "source_end_line": 40, "source_confidence": 41, "target_start_line": 36, "target_confidence": 80}, {"target_end_line": 25, "source_start_line": 1, "source_end_line": 25, "source_confidence": 41, "target_start_line": 1, "target_confidence": 80}, {"target_end_line": 43, "source_start_line": 33, "source_end_line": 40, "source_confidence": 41, "target_start_line": 36, "target_confidence": 80}]}, {"source": "steveharoz_f74e5549ccd2884a5f61f488876f0fa6", "value": 16, "target": "john-guerra_32be58cf91f613d45c687095bad39432", "links": [{"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 20, "target_start_line": 17, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 5, "source_end_line": 9, "source_confidence": 20, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 61, "source_start_line": 55, "source_end_line": 59, "source_confidence": 20, "target_start_line": 58, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 20, "target_start_line": 17, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 5, "source_end_line": 9, "source_confidence": 20, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 61, "source_start_line": 55, "source_end_line": 59, "source_confidence": 20, "target_start_line": 58, "target_confidence": 15}, {"target_end_line": 21, "source_start_line": 14, "source_end_line": 19, "source_confidence": 20, "target_start_line": 17, "target_confidence": 15}, {"target_end_line": 7, "source_start_line": 5, "source_end_line": 9, "source_confidence": 20, "target_start_line": 3, "target_confidence": 15}, {"target_end_line": 61, "source_start_line": 55, "source_end_line": 59, "source_confidence": 20, "target_start_line": 58, "target_confidence": 15}]}, {"source": "tarekrached_30700ff04941b39d3d57d38a7e91cd5b", "value": 39, "target": "eric-bunch_56537c84511bf604b8044bcbf32cddbc", "links": [{"target_end_line": 39, "source_start_line": 1, "source_end_line": 39, "source_confidence": 96, "target_start_line": 1, "target_confidence": 54}]}, {"source": "sampathweb_842d0945d9002ade5fd62457357318e3", "value": 106, "target": "ssaleh2_7a1d58467409a9eb011be8bd6aec7866", "links": [{"target_end_line": 106, "source_start_line": 1, "source_end_line": 105, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "john-guerra_0d81ccfd24578d5d563c55e785b3b40a", "value": 46, "target": "scresawn_3364c4347d4059ac28b439cb234e6951", "links": [{"target_end_line": 56, "source_start_line": 21, "source_end_line": 55, "source_confidence": 83, "target_start_line": 22, "target_confidence": 81}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 18, "source_confidence": 83, "target_start_line": 8, "target_confidence": 81}, {"target_end_line": 56, "source_start_line": 21, "source_end_line": 55, "source_confidence": 83, "target_start_line": 22, "target_confidence": 81}, {"target_end_line": 18, "source_start_line": 8, "source_end_line": 18, "source_confidence": 83, "target_start_line": 8, "target_confidence": 81}]}, {"source": "eric-bunch_9d8ef276379194afc8ff57a3b91d9814", "value": 25, "target": "allenwko_e4e7af8e140d693da724b66170c8012d", "links": [{"target_end_line": 13, "source_start_line": 3, "source_end_line": 8, "source_confidence": 18, "target_start_line": 8, "target_confidence": 20}, {"target_end_line": 41, "source_start_line": 33, "source_end_line": 42, "source_confidence": 18, "target_start_line": 32, "target_confidence": 20}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 23, "source_confidence": 18, "target_start_line": 24, "target_confidence": 20}, {"target_end_line": 13, "source_start_line": 3, "source_end_line": 8, "source_confidence": 18, "target_start_line": 8, "target_confidence": 20}, {"target_end_line": 41, "source_start_line": 33, "source_end_line": 42, "source_confidence": 18, "target_start_line": 32, "target_confidence": 20}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 23, "source_confidence": 18, "target_start_line": 24, "target_confidence": 20}, {"target_end_line": 13, "source_start_line": 3, "source_end_line": 8, "source_confidence": 18, "target_start_line": 8, "target_confidence": 20}, {"target_end_line": 41, "source_start_line": 33, "source_end_line": 42, "source_confidence": 18, "target_start_line": 32, "target_confidence": 20}, {"target_end_line": 28, "source_start_line": 15, "source_end_line": 23, "source_confidence": 18, "target_start_line": 24, "target_confidence": 20}]}, {"source": "eric-bunch_8551a58b746bb5673d5fdf7d723b765b", "value": 31, "target": "allenwko_4ff3e1e268f0945e6ee4d88f6d74d520", "links": [{"target_end_line": 68, "source_start_line": 133, "source_end_line": 145, "source_confidence": 10, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 39, "source_start_line": 93, "source_end_line": 98, "source_confidence": 10, "target_start_line": 32, "target_confidence": 38}, {"target_end_line": 72, "source_start_line": 145, "source_end_line": 149, "source_confidence": 10, "target_start_line": 68, "target_confidence": 38}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 10, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 68, "source_start_line": 133, "source_end_line": 145, "source_confidence": 10, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 39, "source_start_line": 93, "source_end_line": 98, "source_confidence": 10, "target_start_line": 32, "target_confidence": 38}, {"target_end_line": 72, "source_start_line": 145, "source_end_line": 149, "source_confidence": 10, "target_start_line": 68, "target_confidence": 38}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 10, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 68, "source_start_line": 133, "source_end_line": 145, "source_confidence": 10, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 39, "source_start_line": 93, "source_end_line": 98, "source_confidence": 10, "target_start_line": 32, "target_confidence": 38}, {"target_end_line": 72, "source_start_line": 145, "source_end_line": 149, "source_confidence": 10, "target_start_line": 68, "target_confidence": 38}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 10, "target_start_line": 1, "target_confidence": 38}, {"target_end_line": 68, "source_start_line": 133, "source_end_line": 145, "source_confidence": 10, "target_start_line": 56, "target_confidence": 38}, {"target_end_line": 39, "source_start_line": 93, "source_end_line": 98, "source_confidence": 10, "target_start_line": 32, "target_confidence": 38}, {"target_end_line": 72, "source_start_line": 145, "source_end_line": 149, "source_confidence": 10, "target_start_line": 68, "target_confidence": 38}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 10, "target_start_line": 1, "target_confidence": 38}]}, {"source": "RicCheng_64a4ffccbf7233b290b350cbce87d0dc", "value": 354, "target": "allenwko_ca7e19e3979787a607747861b9b7d48a", "links": [{"target_end_line": 354, "source_start_line": 1, "source_end_line": 354, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "sampathweb_842d0945d9002ade5fd62457357318e3", "value": 62, "target": "ssaleh2_3db31932ef72d3c4ae5bc3c982daa8e1", "links": [{"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 52, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 148, "source_start_line": 90, "source_end_line": 97, "source_confidence": 52, "target_start_line": 139, "target_confidence": 34}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 63, "source_confidence": 52, "target_start_line": 60, "target_confidence": 34}, {"target_end_line": 91, "source_start_line": 63, "source_end_line": 74, "source_confidence": 52, "target_start_line": 77, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 30, "source_confidence": 52, "target_start_line": 26, "target_confidence": 34}, {"target_end_line": 47, "source_start_line": 39, "source_end_line": 42, "source_confidence": 52, "target_start_line": 44, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 52, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 148, "source_start_line": 90, "source_end_line": 97, "source_confidence": 52, "target_start_line": 139, "target_confidence": 34}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 63, "source_confidence": 52, "target_start_line": 60, "target_confidence": 34}, {"target_end_line": 91, "source_start_line": 63, "source_end_line": 74, "source_confidence": 52, "target_start_line": 77, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 30, "source_confidence": 52, "target_start_line": 26, "target_confidence": 34}, {"target_end_line": 47, "source_start_line": 39, "source_end_line": 42, "source_confidence": 52, "target_start_line": 44, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 52, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 148, "source_start_line": 90, "source_end_line": 97, "source_confidence": 52, "target_start_line": 139, "target_confidence": 34}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 63, "source_confidence": 52, "target_start_line": 60, "target_confidence": 34}, {"target_end_line": 91, "source_start_line": 63, "source_end_line": 74, "source_confidence": 52, "target_start_line": 77, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 30, "source_confidence": 52, "target_start_line": 26, "target_confidence": 34}, {"target_end_line": 47, "source_start_line": 39, "source_end_line": 42, "source_confidence": 52, "target_start_line": 44, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 52, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 148, "source_start_line": 90, "source_end_line": 97, "source_confidence": 52, "target_start_line": 139, "target_confidence": 34}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 63, "source_confidence": 52, "target_start_line": 60, "target_confidence": 34}, {"target_end_line": 91, "source_start_line": 63, "source_end_line": 74, "source_confidence": 52, "target_start_line": 77, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 30, "source_confidence": 52, "target_start_line": 26, "target_confidence": 34}, {"target_end_line": 47, "source_start_line": 39, "source_end_line": 42, "source_confidence": 52, "target_start_line": 44, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 52, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 148, "source_start_line": 90, "source_end_line": 97, "source_confidence": 52, "target_start_line": 139, "target_confidence": 34}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 63, "source_confidence": 52, "target_start_line": 60, "target_confidence": 34}, {"target_end_line": 91, "source_start_line": 63, "source_end_line": 74, "source_confidence": 52, "target_start_line": 77, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 30, "source_confidence": 52, "target_start_line": 26, "target_confidence": 34}, {"target_end_line": 47, "source_start_line": 39, "source_end_line": 42, "source_confidence": 52, "target_start_line": 44, "target_confidence": 34}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 52, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 148, "source_start_line": 90, "source_end_line": 97, "source_confidence": 52, "target_start_line": 139, "target_confidence": 34}, {"target_end_line": 74, "source_start_line": 51, "source_end_line": 63, "source_confidence": 52, "target_start_line": 60, "target_confidence": 34}, {"target_end_line": 91, "source_start_line": 63, "source_end_line": 74, "source_confidence": 52, "target_start_line": 77, "target_confidence": 34}, {"target_end_line": 31, "source_start_line": 25, "source_end_line": 30, "source_confidence": 52, "target_start_line": 26, "target_confidence": 34}, {"target_end_line": 47, "source_start_line": 39, "source_end_line": 42, "source_confidence": 52, "target_start_line": 44, "target_confidence": 34}]}, {"source": "ssaleh2_e1305c6421fe03112422fbef76a10106", "value": 60, "target": "sampathweb_842d0945d9002ade5fd62457357318e3", "links": [{"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 30, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 72, "source_confidence": 30, "target_start_line": 51, "target_confidence": 51}, {"target_end_line": 97, "source_start_line": 161, "source_end_line": 169, "source_confidence": 30, "target_start_line": 90, "target_confidence": 51}, {"target_end_line": 74, "source_start_line": 101, "source_end_line": 114, "source_confidence": 30, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 30, "source_start_line": 25, "source_end_line": 30, "source_confidence": 30, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 42, "source_end_line": 45, "source_confidence": 30, "target_start_line": 39, "target_confidence": 51}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 30, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 72, "source_confidence": 30, "target_start_line": 51, "target_confidence": 51}, {"target_end_line": 97, "source_start_line": 161, "source_end_line": 169, "source_confidence": 30, "target_start_line": 90, "target_confidence": 51}, {"target_end_line": 74, "source_start_line": 101, "source_end_line": 114, "source_confidence": 30, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 30, "source_start_line": 25, "source_end_line": 30, "source_confidence": 30, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 42, "source_end_line": 45, "source_confidence": 30, "target_start_line": 39, "target_confidence": 51}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 30, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 72, "source_confidence": 30, "target_start_line": 51, "target_confidence": 51}, {"target_end_line": 97, "source_start_line": 161, "source_end_line": 169, "source_confidence": 30, "target_start_line": 90, "target_confidence": 51}, {"target_end_line": 74, "source_start_line": 101, "source_end_line": 114, "source_confidence": 30, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 30, "source_start_line": 25, "source_end_line": 30, "source_confidence": 30, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 42, "source_end_line": 45, "source_confidence": 30, "target_start_line": 39, "target_confidence": 51}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 30, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 72, "source_confidence": 30, "target_start_line": 51, "target_confidence": 51}, {"target_end_line": 97, "source_start_line": 161, "source_end_line": 169, "source_confidence": 30, "target_start_line": 90, "target_confidence": 51}, {"target_end_line": 74, "source_start_line": 101, "source_end_line": 114, "source_confidence": 30, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 30, "source_start_line": 25, "source_end_line": 30, "source_confidence": 30, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 42, "source_end_line": 45, "source_confidence": 30, "target_start_line": 39, "target_confidence": 51}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 30, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 72, "source_confidence": 30, "target_start_line": 51, "target_confidence": 51}, {"target_end_line": 97, "source_start_line": 161, "source_end_line": 169, "source_confidence": 30, "target_start_line": 90, "target_confidence": 51}, {"target_end_line": 74, "source_start_line": 101, "source_end_line": 114, "source_confidence": 30, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 30, "source_start_line": 25, "source_end_line": 30, "source_confidence": 30, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 42, "source_end_line": 45, "source_confidence": 30, "target_start_line": 39, "target_confidence": 51}, {"target_end_line": 12, "source_start_line": 1, "source_end_line": 12, "source_confidence": 30, "target_start_line": 1, "target_confidence": 51}, {"target_end_line": 63, "source_start_line": 58, "source_end_line": 72, "source_confidence": 30, "target_start_line": 51, "target_confidence": 51}, {"target_end_line": 97, "source_start_line": 161, "source_end_line": 169, "source_confidence": 30, "target_start_line": 90, "target_confidence": 51}, {"target_end_line": 74, "source_start_line": 101, "source_end_line": 114, "source_confidence": 30, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 30, "source_start_line": 25, "source_end_line": 30, "source_confidence": 30, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 42, "source_end_line": 45, "source_confidence": 30, "target_start_line": 39, "target_confidence": 51}]}, {"source": "cmpolis_f9805a98b8a455aaccb56e5ee59964f8", "value": 22, "target": "Yonet_bda57674c399deca81981f1b03c5e7cf", "links": [{"target_end_line": 45, "source_start_line": 21, "source_end_line": 31, "source_confidence": 25, "target_start_line": 35, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 25, "target_start_line": 1, "target_confidence": 25}, {"target_end_line": 74, "source_start_line": 65, "source_end_line": 67, "source_confidence": 25, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 21, "source_end_line": 31, "source_confidence": 25, "target_start_line": 35, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 25, "target_start_line": 1, "target_confidence": 25}, {"target_end_line": 74, "source_start_line": 65, "source_end_line": 67, "source_confidence": 25, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 21, "source_end_line": 31, "source_confidence": 25, "target_start_line": 35, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 25, "target_start_line": 1, "target_confidence": 25}, {"target_end_line": 74, "source_start_line": 65, "source_end_line": 67, "source_confidence": 25, "target_start_line": 72, "target_confidence": 25}]}, {"source": "cmpolis_f9805a98b8a455aaccb56e5ee59964f8", "value": 22, "target": "Yonet_63bc13eec44dd1ca63e4fb5227341a52", "links": [{"target_end_line": 45, "source_start_line": 21, "source_end_line": 31, "source_confidence": 25, "target_start_line": 35, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 25, "target_start_line": 1, "target_confidence": 25}, {"target_end_line": 74, "source_start_line": 65, "source_end_line": 67, "source_confidence": 25, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 21, "source_end_line": 31, "source_confidence": 25, "target_start_line": 35, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 25, "target_start_line": 1, "target_confidence": 25}, {"target_end_line": 74, "source_start_line": 65, "source_end_line": 67, "source_confidence": 25, "target_start_line": 72, "target_confidence": 25}, {"target_end_line": 45, "source_start_line": 21, "source_end_line": 31, "source_confidence": 25, "target_start_line": 35, "target_confidence": 25}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 25, "target_start_line": 1, "target_confidence": 25}, {"target_end_line": 74, "source_start_line": 65, "source_end_line": 67, "source_confidence": 25, "target_start_line": 72, "target_confidence": 25}]}, {"source": "cmpolis_f9805a98b8a455aaccb56e5ee59964f8", "value": 21, "target": "EfratVil_0e542f5fc426065dd1d4b6daaa345a9f", "links": [{"target_end_line": 27, "source_start_line": 3, "source_end_line": 13, "source_confidence": 25, "target_start_line": 17, "target_confidence": 28}, {"target_end_line": 39, "source_start_line": 22, "source_end_line": 25, "source_confidence": 25, "target_start_line": 36, "target_confidence": 28}, {"target_end_line": 46, "source_start_line": 35, "source_end_line": 40, "source_confidence": 25, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 27, "source_start_line": 3, "source_end_line": 13, "source_confidence": 25, "target_start_line": 17, "target_confidence": 28}, {"target_end_line": 39, "source_start_line": 22, "source_end_line": 25, "source_confidence": 25, "target_start_line": 36, "target_confidence": 28}, {"target_end_line": 46, "source_start_line": 35, "source_end_line": 40, "source_confidence": 25, "target_start_line": 41, "target_confidence": 28}, {"target_end_line": 27, "source_start_line": 3, "source_end_line": 13, "source_confidence": 25, "target_start_line": 17, "target_confidence": 28}, {"target_end_line": 39, "source_start_line": 22, "source_end_line": 25, "source_confidence": 25, "target_start_line": 36, "target_confidence": 28}, {"target_end_line": 46, "source_start_line": 35, "source_end_line": 40, "source_confidence": 25, "target_start_line": 41, "target_confidence": 28}]}, {"source": "mbostock_431a331294d2b5ddd33f947cf4c81319", "value": 40, "target": "eric-bunch_8551a58b746bb5673d5fdf7d723b765b", "links": [{"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}, {"target_end_line": 38, "source_start_line": 18, "source_end_line": 26, "source_confidence": 43, "target_start_line": 30, "target_confidence": 10}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 43, "target_start_line": 5, "target_confidence": 10}, {"target_end_line": 78, "source_start_line": 27, "source_end_line": 35, "source_confidence": 43, "target_start_line": 69, "target_confidence": 10}, {"target_end_line": 130, "source_start_line": 48, "source_end_line": 55, "source_confidence": 43, "target_start_line": 123, "target_confidence": 10}, {"target_end_line": 298, "source_start_line": 71, "source_end_line": 80, "source_confidence": 43, "target_start_line": 289, "target_confidence": 10}]}, {"source": "pandafulmanda_c6b5b66116c955328d29effb7101c809", "value": 22, "target": "cmpolis_f9805a98b8a455aaccb56e5ee59964f8", "links": [{"target_end_line": 25, "source_start_line": 37, "source_end_line": 41, "source_confidence": 27, "target_start_line": 21, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 7, "source_confidence": 27, "target_start_line": 1, "target_confidence": 21}, {"target_end_line": 62, "source_start_line": 63, "source_end_line": 71, "source_confidence": 27, "target_start_line": 54, "target_confidence": 21}, {"target_end_line": 25, "source_start_line": 37, "source_end_line": 41, "source_confidence": 27, "target_start_line": 21, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 7, "source_confidence": 27, "target_start_line": 1, "target_confidence": 21}, {"target_end_line": 62, "source_start_line": 63, "source_end_line": 71, "source_confidence": 27, "target_start_line": 54, "target_confidence": 21}, {"target_end_line": 25, "source_start_line": 37, "source_end_line": 41, "source_confidence": 27, "target_start_line": 21, "target_confidence": 21}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 7, "source_confidence": 27, "target_start_line": 1, "target_confidence": 21}, {"target_end_line": 62, "source_start_line": 63, "source_end_line": 71, "source_confidence": 27, "target_start_line": 54, "target_confidence": 21}]}, {"source": "ragut_978ea05ed096071b9931e82543196ee3", "value": 28, "target": "RicCheng_043e4ddf2013fec658ff9905fadf5985", "links": [{"target_end_line": 56, "source_start_line": 27, "source_end_line": 35, "source_confidence": 11, "target_start_line": 50, "target_confidence": 39}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 11, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 44, "source_confidence": 11, "target_start_line": 30, "target_confidence": 39}, {"target_end_line": 46, "source_start_line": 100, "source_end_line": 107, "source_confidence": 11, "target_start_line": 39, "target_confidence": 39}, {"target_end_line": 56, "source_start_line": 27, "source_end_line": 35, "source_confidence": 11, "target_start_line": 50, "target_confidence": 39}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 11, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 44, "source_confidence": 11, "target_start_line": 30, "target_confidence": 39}, {"target_end_line": 46, "source_start_line": 100, "source_end_line": 107, "source_confidence": 11, "target_start_line": 39, "target_confidence": 39}, {"target_end_line": 56, "source_start_line": 27, "source_end_line": 35, "source_confidence": 11, "target_start_line": 50, "target_confidence": 39}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 11, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 44, "source_confidence": 11, "target_start_line": 30, "target_confidence": 39}, {"target_end_line": 46, "source_start_line": 100, "source_end_line": 107, "source_confidence": 11, "target_start_line": 39, "target_confidence": 39}, {"target_end_line": 56, "source_start_line": 27, "source_end_line": 35, "source_confidence": 11, "target_start_line": 50, "target_confidence": 39}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 11, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 40, "source_end_line": 44, "source_confidence": 11, "target_start_line": 30, "target_confidence": 39}, {"target_end_line": 46, "source_start_line": 100, "source_end_line": 107, "source_confidence": 11, "target_start_line": 39, "target_confidence": 39}]}, {"source": "tonyhschu_067d977d6d4ae7224dcebdf3775d9e7e", "value": 42, "target": "lookoutjames_c7b8d5053c25ad1b3744509dd957caee", "links": [{"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}, {"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}, {"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}, {"target_end_line": 50, "source_start_line": 158, "source_end_line": 172, "source_confidence": 12, "target_start_line": 36, "target_confidence": 23}, {"target_end_line": 19, "source_start_line": 26, "source_end_line": 39, "source_confidence": 12, "target_start_line": 6, "target_confidence": 23}, {"target_end_line": 145, "source_start_line": 324, "source_end_line": 333, "source_confidence": 12, "target_start_line": 137, "target_confidence": 23}, {"target_end_line": 22, "source_start_line": 42, "source_end_line": 44, "source_confidence": 12, "target_start_line": 20, "target_confidence": 23}]}, {"source": "curran_306a51423662f3a787dd99b4bbc62723", "value": 65, "target": "LuisSevillano_d57b5c1cb3a4dcd72e52a29ceea340eb", "links": [{"target_end_line": 61, "source_start_line": 1, "source_end_line": 65, "source_confidence": 91, "target_start_line": 1, "target_confidence": 89}]}, {"source": "nbremer_4258eb64322c55156097c21f384715a7", "value": 52, "target": "RicCheng_b052a92ccd0d07379b57b1d6f838c62a", "links": [{"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}, {"target_end_line": 144, "source_start_line": 195, "source_end_line": 195, "source_confidence": 15, "target_start_line": 143, "target_confidence": 13}, {"target_end_line": 135, "source_start_line": 35, "source_end_line": 35, "source_confidence": 15, "target_start_line": 133, "target_confidence": 13}, {"target_end_line": 81, "source_start_line": 94, "source_end_line": 94, "source_confidence": 15, "target_start_line": 79, "target_confidence": 13}, {"target_end_line": 120, "source_start_line": 118, "source_end_line": 118, "source_confidence": 15, "target_start_line": 120, "target_confidence": 13}, {"target_end_line": 290, "source_start_line": 4, "source_end_line": 4, "source_confidence": 15, "target_start_line": 289, "target_confidence": 13}, {"target_end_line": 179, "source_start_line": 114, "source_end_line": 117, "source_confidence": 15, "target_start_line": 176, "target_confidence": 13}, {"target_end_line": 263, "source_start_line": 90, "source_end_line": 93, "source_confidence": 15, "target_start_line": 259, "target_confidence": 13}, {"target_end_line": 267, "source_start_line": 142, "source_end_line": 148, "source_confidence": 15, "target_start_line": 265, "target_confidence": 13}, {"target_end_line": 309, "source_start_line": 190, "source_end_line": 194, "source_confidence": 15, "target_start_line": 305, "target_confidence": 13}, {"target_end_line": 332, "source_start_line": 267, "source_end_line": 271, "source_confidence": 15, "target_start_line": 328, "target_confidence": 13}, {"target_end_line": 146, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 144, "target_confidence": 13}, {"target_end_line": 336, "source_start_line": 95, "source_end_line": 97, "source_confidence": 15, "target_start_line": 334, "target_confidence": 13}, {"target_end_line": 180, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 179, "target_confidence": 13}, {"target_end_line": 34, "source_start_line": 32, "source_end_line": 34, "source_confidence": 15, "target_start_line": 33, "target_confidence": 13}, {"target_end_line": 181, "source_start_line": 72, "source_end_line": 74, "source_confidence": 15, "target_start_line": 180, "target_confidence": 13}, {"target_end_line": 133, "source_start_line": 75, "source_end_line": 75, "source_confidence": 15, "target_start_line": 131, "target_confidence": 13}, {"target_end_line": 83, "source_start_line": 76, "source_end_line": 78, "source_confidence": 15, "target_start_line": 81, "target_confidence": 13}, {"target_end_line": 277, "source_start_line": 141, "source_end_line": 141, "source_confidence": 15, "target_start_line": 277, "target_confidence": 13}]}, {"source": "seemantk_b9fa57629c87f0e3e78338fc6f62fa02", "value": 66, "target": "atomiccc_e559012fa66e51a025eac647aaf1c0fe", "links": [{"target_end_line": 42, "source_start_line": 36, "source_end_line": 58, "source_confidence": 25, "target_start_line": 21, "target_confidence": 27}, {"target_end_line": 64, "source_start_line": 59, "source_end_line": 77, "source_confidence": 25, "target_start_line": 45, "target_confidence": 27}, {"target_end_line": 100, "source_start_line": 82, "source_end_line": 97, "source_confidence": 25, "target_start_line": 84, "target_confidence": 27}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 27}, {"target_end_line": 42, "source_start_line": 36, "source_end_line": 58, "source_confidence": 25, "target_start_line": 21, "target_confidence": 27}, {"target_end_line": 64, "source_start_line": 59, "source_end_line": 77, "source_confidence": 25, "target_start_line": 45, "target_confidence": 27}, {"target_end_line": 100, "source_start_line": 82, "source_end_line": 97, "source_confidence": 25, "target_start_line": 84, "target_confidence": 27}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 27}, {"target_end_line": 42, "source_start_line": 36, "source_end_line": 58, "source_confidence": 25, "target_start_line": 21, "target_confidence": 27}, {"target_end_line": 64, "source_start_line": 59, "source_end_line": 77, "source_confidence": 25, "target_start_line": 45, "target_confidence": 27}, {"target_end_line": 100, "source_start_line": 82, "source_end_line": 97, "source_confidence": 25, "target_start_line": 84, "target_confidence": 27}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 27}, {"target_end_line": 42, "source_start_line": 36, "source_end_line": 58, "source_confidence": 25, "target_start_line": 21, "target_confidence": 27}, {"target_end_line": 64, "source_start_line": 59, "source_end_line": 77, "source_confidence": 25, "target_start_line": 45, "target_confidence": 27}, {"target_end_line": 100, "source_start_line": 82, "source_end_line": 97, "source_confidence": 25, "target_start_line": 84, "target_confidence": 27}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 27}]}, {"source": "kjudd_d88a57b003a75e494e8d8acae761543e", "value": 25, "target": "logancarter_455b7240181eb3bdbf3f6b4987afd2d6", "links": [{"target_end_line": 30, "source_start_line": 18, "source_end_line": 26, "source_confidence": 53, "target_start_line": 22, "target_confidence": 23}, {"target_end_line": 58, "source_start_line": 37, "source_end_line": 47, "source_confidence": 53, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 9, "source_confidence": 53, "target_start_line": 2, "target_confidence": 23}, {"target_end_line": 30, "source_start_line": 18, "source_end_line": 26, "source_confidence": 53, "target_start_line": 22, "target_confidence": 23}, {"target_end_line": 58, "source_start_line": 37, "source_end_line": 47, "source_confidence": 53, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 9, "source_confidence": 53, "target_start_line": 2, "target_confidence": 23}, {"target_end_line": 30, "source_start_line": 18, "source_end_line": 26, "source_confidence": 53, "target_start_line": 22, "target_confidence": 23}, {"target_end_line": 58, "source_start_line": 37, "source_end_line": 47, "source_confidence": 53, "target_start_line": 50, "target_confidence": 23}, {"target_end_line": 6, "source_start_line": 5, "source_end_line": 9, "source_confidence": 53, "target_start_line": 2, "target_confidence": 23}]}, {"source": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "value": 23, "target": "sadbumblebee_89d9cc90e17eca55e880405404690d91", "links": [{"target_end_line": 45, "source_start_line": 23, "source_end_line": 27, "source_confidence": 14, "target_start_line": 41, "target_confidence": 10}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 14, "target_start_line": 4, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 90, "source_end_line": 97, "source_confidence": 14, "target_start_line": 140, "target_confidence": 10}, {"target_end_line": 13, "source_start_line": 8, "source_end_line": 12, "source_confidence": 14, "target_start_line": 9, "target_confidence": 10}, {"target_end_line": 45, "source_start_line": 23, "source_end_line": 27, "source_confidence": 14, "target_start_line": 41, "target_confidence": 10}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 14, "target_start_line": 4, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 90, "source_end_line": 97, "source_confidence": 14, "target_start_line": 140, "target_confidence": 10}, {"target_end_line": 13, "source_start_line": 8, "source_end_line": 12, "source_confidence": 14, "target_start_line": 9, "target_confidence": 10}, {"target_end_line": 45, "source_start_line": 23, "source_end_line": 27, "source_confidence": 14, "target_start_line": 41, "target_confidence": 10}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 14, "target_start_line": 4, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 90, "source_end_line": 97, "source_confidence": 14, "target_start_line": 140, "target_confidence": 10}, {"target_end_line": 13, "source_start_line": 8, "source_end_line": 12, "source_confidence": 14, "target_start_line": 9, "target_confidence": 10}, {"target_end_line": 45, "source_start_line": 23, "source_end_line": 27, "source_confidence": 14, "target_start_line": 41, "target_confidence": 10}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 8, "source_confidence": 14, "target_start_line": 4, "target_confidence": 10}, {"target_end_line": 147, "source_start_line": 90, "source_end_line": 97, "source_confidence": 14, "target_start_line": 140, "target_confidence": 10}, {"target_end_line": 13, "source_start_line": 8, "source_end_line": 12, "source_confidence": 14, "target_start_line": 9, "target_confidence": 10}]}, {"source": "ocarneiro_e6a7363396747725af58433c56f673d7", "value": 34, "target": "jcnesci_abdda0bcf5206b3be3e6853e677eb0a8", "links": [{"target_end_line": 116, "source_start_line": 59, "source_end_line": 82, "source_confidence": 38, "target_start_line": 94, "target_confidence": 16}, {"target_end_line": 94, "source_start_line": 39, "source_end_line": 48, "source_confidence": 38, "target_start_line": 87, "target_confidence": 16}, {"target_end_line": 116, "source_start_line": 59, "source_end_line": 82, "source_confidence": 38, "target_start_line": 94, "target_confidence": 16}, {"target_end_line": 94, "source_start_line": 39, "source_end_line": 48, "source_confidence": 38, "target_start_line": 87, "target_confidence": 16}]}, {"source": "eduavencama_8fd325ade497f7c2d28c4eefb4dda13e", "value": 23, "target": "tim-hyon_bc8dda1c54d6232824f5c92327348225", "links": [{"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 21, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 37, "source_start_line": 31, "source_end_line": 34, "source_confidence": 21, "target_start_line": 34, "target_confidence": 23}, {"target_end_line": 70, "source_start_line": 90, "source_end_line": 97, "source_confidence": 21, "target_start_line": 64, "target_confidence": 23}, {"target_end_line": 90, "source_start_line": 64, "source_end_line": 69, "source_confidence": 21, "target_start_line": 85, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 21, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 37, "source_start_line": 31, "source_end_line": 34, "source_confidence": 21, "target_start_line": 34, "target_confidence": 23}, {"target_end_line": 70, "source_start_line": 90, "source_end_line": 97, "source_confidence": 21, "target_start_line": 64, "target_confidence": 23}, {"target_end_line": 90, "source_start_line": 64, "source_end_line": 69, "source_confidence": 21, "target_start_line": 85, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 21, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 37, "source_start_line": 31, "source_end_line": 34, "source_confidence": 21, "target_start_line": 34, "target_confidence": 23}, {"target_end_line": 70, "source_start_line": 90, "source_end_line": 97, "source_confidence": 21, "target_start_line": 64, "target_confidence": 23}, {"target_end_line": 90, "source_start_line": 64, "source_end_line": 69, "source_confidence": 21, "target_start_line": 85, "target_confidence": 23}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 5, "source_confidence": 21, "target_start_line": 1, "target_confidence": 23}, {"target_end_line": 37, "source_start_line": 31, "source_end_line": 34, "source_confidence": 21, "target_start_line": 34, "target_confidence": 23}, {"target_end_line": 70, "source_start_line": 90, "source_end_line": 97, "source_confidence": 21, "target_start_line": 64, "target_confidence": 23}, {"target_end_line": 90, "source_start_line": 64, "source_end_line": 69, "source_confidence": 21, "target_start_line": 85, "target_confidence": 23}]}, {"source": "atomiccc_c34999ea59ed1ea8a24956395874764b", "value": 142, "target": "seemantk_b9fa57629c87f0e3e78338fc6f62fa02", "links": [{"target_end_line": 142, "source_start_line": 1, "source_end_line": 142, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "john-guerra_75f04c33b7870c3566a546e8f1afd687", "value": 113, "target": "jorgeehernandez_39a74654bac03f7f6eeb94cc7a42cf6b", "links": [{"target_end_line": 113, "source_start_line": 1, "source_end_line": 113, "source_confidence": 99, "target_start_line": 1, "target_confidence": 99}]}, {"source": "john-guerra_75f04c33b7870c3566a546e8f1afd687", "value": 104, "target": "jorgeehernandez_079836284d434e3365bf5ef4be017bf4", "links": [{"target_end_line": 104, "source_start_line": 1, "source_end_line": 104, "source_confidence": 87, "target_start_line": 1, "target_confidence": 96}]}, {"source": "floofydugong_b4397a66748674b347fe9d2c71f72284", "value": 53, "target": "eric-bunch_9d8ef276379194afc8ff57a3b91d9814", "links": [{"target_end_line": 66, "source_start_line": 39, "source_end_line": 72, "source_confidence": 67, "target_start_line": 33, "target_confidence": 48}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 67, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 33, "source_start_line": 32, "source_end_line": 39, "source_confidence": 67, "target_start_line": 27, "target_confidence": 48}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 67, "target_start_line": 10, "target_confidence": 48}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 72, "source_confidence": 67, "target_start_line": 33, "target_confidence": 48}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 67, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 33, "source_start_line": 32, "source_end_line": 39, "source_confidence": 67, "target_start_line": 27, "target_confidence": 48}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 67, "target_start_line": 10, "target_confidence": 48}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 72, "source_confidence": 67, "target_start_line": 33, "target_confidence": 48}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 67, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 33, "source_start_line": 32, "source_end_line": 39, "source_confidence": 67, "target_start_line": 27, "target_confidence": 48}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 67, "target_start_line": 10, "target_confidence": 48}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 72, "source_confidence": 67, "target_start_line": 33, "target_confidence": 48}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 67, "target_start_line": 3, "target_confidence": 48}, {"target_end_line": 33, "source_start_line": 32, "source_end_line": 39, "source_confidence": 67, "target_start_line": 27, "target_confidence": 48}, {"target_end_line": 15, "source_start_line": 11, "source_end_line": 15, "source_confidence": 67, "target_start_line": 10, "target_confidence": 48}]}, {"source": "jorgeehernandez_e2c36a269cf5d1ac0606c1e9bc587f39", "value": 53, "target": "ocarneiro_e6a7363396747725af58433c56f673d7", "links": [{"target_end_line": 82, "source_start_line": 62, "source_end_line": 89, "source_confidence": 46, "target_start_line": 55, "target_confidence": 54}, {"target_end_line": 48, "source_start_line": 46, "source_end_line": 55, "source_confidence": 46, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 25, "source_start_line": 22, "source_end_line": 30, "source_confidence": 46, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 17, "source_end_line": 22, "source_confidence": 46, "target_start_line": 12, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 62, "source_end_line": 89, "source_confidence": 46, "target_start_line": 55, "target_confidence": 54}, {"target_end_line": 48, "source_start_line": 46, "source_end_line": 55, "source_confidence": 46, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 25, "source_start_line": 22, "source_end_line": 30, "source_confidence": 46, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 17, "source_end_line": 22, "source_confidence": 46, "target_start_line": 12, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 62, "source_end_line": 89, "source_confidence": 46, "target_start_line": 55, "target_confidence": 54}, {"target_end_line": 48, "source_start_line": 46, "source_end_line": 55, "source_confidence": 46, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 25, "source_start_line": 22, "source_end_line": 30, "source_confidence": 46, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 17, "source_end_line": 22, "source_confidence": 46, "target_start_line": 12, "target_confidence": 54}, {"target_end_line": 82, "source_start_line": 62, "source_end_line": 89, "source_confidence": 46, "target_start_line": 55, "target_confidence": 54}, {"target_end_line": 48, "source_start_line": 46, "source_end_line": 55, "source_confidence": 46, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 25, "source_start_line": 22, "source_end_line": 30, "source_confidence": 46, "target_start_line": 17, "target_confidence": 54}, {"target_end_line": 17, "source_start_line": 17, "source_end_line": 22, "source_confidence": 46, "target_start_line": 12, "target_confidence": 54}]}, {"source": "mavaron_13f43b1782e5eceef6e45c155eab2256", "value": 29, "target": "john-guerra_0d81ccfd24578d5d563c55e785b3b40a", "links": [{"target_end_line": 37, "source_start_line": 22, "source_end_line": 40, "source_confidence": 71, "target_start_line": 21, "target_confidence": 49}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 17, "source_confidence": 71, "target_start_line": 8, "target_confidence": 49}, {"target_end_line": 37, "source_start_line": 22, "source_end_line": 40, "source_confidence": 71, "target_start_line": 21, "target_confidence": 49}, {"target_end_line": 17, "source_start_line": 8, "source_end_line": 17, "source_confidence": 71, "target_start_line": 8, "target_confidence": 49}]}, {"source": "floofydugong_b4397a66748674b347fe9d2c71f72284", "value": 54, "target": "eric-bunch_0bdef4942ac085a93fa6bd31452cd55c", "links": [{"target_end_line": 66, "source_start_line": 39, "source_end_line": 68, "source_confidence": 66, "target_start_line": 37, "target_confidence": 19}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 66, "target_start_line": 3, "target_confidence": 19}, {"target_end_line": 37, "source_start_line": 32, "source_end_line": 39, "source_confidence": 66, "target_start_line": 31, "target_confidence": 19}, {"target_end_line": 70, "source_start_line": 68, "source_end_line": 72, "source_confidence": 66, "target_start_line": 66, "target_confidence": 19}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 15, "source_confidence": 66, "target_start_line": 11, "target_confidence": 19}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 68, "source_confidence": 66, "target_start_line": 37, "target_confidence": 19}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 66, "target_start_line": 3, "target_confidence": 19}, {"target_end_line": 37, "source_start_line": 32, "source_end_line": 39, "source_confidence": 66, "target_start_line": 31, "target_confidence": 19}, {"target_end_line": 70, "source_start_line": 68, "source_end_line": 72, "source_confidence": 66, "target_start_line": 66, "target_confidence": 19}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 15, "source_confidence": 66, "target_start_line": 11, "target_confidence": 19}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 68, "source_confidence": 66, "target_start_line": 37, "target_confidence": 19}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 66, "target_start_line": 3, "target_confidence": 19}, {"target_end_line": 37, "source_start_line": 32, "source_end_line": 39, "source_confidence": 66, "target_start_line": 31, "target_confidence": 19}, {"target_end_line": 70, "source_start_line": 68, "source_end_line": 72, "source_confidence": 66, "target_start_line": 66, "target_confidence": 19}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 15, "source_confidence": 66, "target_start_line": 11, "target_confidence": 19}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 68, "source_confidence": 66, "target_start_line": 37, "target_confidence": 19}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 66, "target_start_line": 3, "target_confidence": 19}, {"target_end_line": 37, "source_start_line": 32, "source_end_line": 39, "source_confidence": 66, "target_start_line": 31, "target_confidence": 19}, {"target_end_line": 70, "source_start_line": 68, "source_end_line": 72, "source_confidence": 66, "target_start_line": 66, "target_confidence": 19}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 15, "source_confidence": 66, "target_start_line": 11, "target_confidence": 19}, {"target_end_line": 66, "source_start_line": 39, "source_end_line": 68, "source_confidence": 66, "target_start_line": 37, "target_confidence": 19}, {"target_end_line": 8, "source_start_line": 4, "source_end_line": 9, "source_confidence": 66, "target_start_line": 3, "target_confidence": 19}, {"target_end_line": 37, "source_start_line": 32, "source_end_line": 39, "source_confidence": 66, "target_start_line": 31, "target_confidence": 19}, {"target_end_line": 70, "source_start_line": 68, "source_end_line": 72, "source_confidence": 66, "target_start_line": 66, "target_confidence": 19}, {"target_end_line": 16, "source_start_line": 11, "source_end_line": 15, "source_confidence": 66, "target_start_line": 11, "target_confidence": 19}]}, {"source": "donmccurdy_da0e3b4bdb538a18dceb476042325ce2", "value": 22, "target": "mcgovey_d2ac4c336d0b358e09710c7f2de9c402", "links": [{"target_end_line": 29, "source_start_line": 18, "source_end_line": 36, "source_confidence": 44, "target_start_line": 15, "target_confidence": 37}, {"target_end_line": 34, "source_start_line": 49, "source_end_line": 51, "source_confidence": 44, "target_start_line": 32, "target_confidence": 37}, {"target_end_line": 29, "source_start_line": 18, "source_end_line": 36, "source_confidence": 44, "target_start_line": 15, "target_confidence": 37}, {"target_end_line": 34, "source_start_line": 49, "source_end_line": 51, "source_confidence": 44, "target_start_line": 32, "target_confidence": 37}]}, {"source": "emilioalvarado_63f8f6fe240b0e9f495992e967f13d7c", "value": 59, "target": "nbremer_4258eb64322c55156097c21f384715a7", "links": [{"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 195, "source_start_line": 157, "source_end_line": 158, "source_confidence": 13, "target_start_line": 195, "target_confidence": 15}, {"target_end_line": 94, "source_start_line": 93, "source_end_line": 95, "source_confidence": 13, "target_start_line": 94, "target_confidence": 15}, {"target_end_line": 118, "source_start_line": 135, "source_end_line": 135, "source_confidence": 13, "target_start_line": 118, "target_confidence": 15}, {"target_end_line": 35, "source_start_line": 147, "source_end_line": 149, "source_confidence": 13, "target_start_line": 35, "target_confidence": 15}, {"target_end_line": 117, "source_start_line": 190, "source_end_line": 193, "source_confidence": 13, "target_start_line": 114, "target_confidence": 15}, {"target_end_line": 93, "source_start_line": 275, "source_end_line": 279, "source_confidence": 13, "target_start_line": 90, "target_confidence": 15}, {"target_end_line": 148, "source_start_line": 281, "source_end_line": 283, "source_confidence": 13, "target_start_line": 142, "target_confidence": 15}, {"target_end_line": 194, "source_start_line": 327, "source_end_line": 331, "source_confidence": 13, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 271, "source_start_line": 350, "source_end_line": 354, "source_confidence": 13, "target_start_line": 267, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 136, "source_end_line": 139, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 158, "source_end_line": 160, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 193, "source_end_line": 194, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}, {"target_end_line": 97, "source_start_line": 356, "source_end_line": 358, "source_confidence": 13, "target_start_line": 95, "target_confidence": 15}, {"target_end_line": 4, "source_start_line": 44, "source_end_line": 46, "source_confidence": 13, "target_start_line": 4, "target_confidence": 15}, {"target_end_line": 34, "source_start_line": 47, "source_end_line": 48, "source_confidence": 13, "target_start_line": 32, "target_confidence": 15}, {"target_end_line": 78, "source_start_line": 95, "source_end_line": 97, "source_confidence": 13, "target_start_line": 76, "target_confidence": 15}, {"target_end_line": 75, "source_start_line": 145, "source_end_line": 147, "source_confidence": 13, "target_start_line": 75, "target_confidence": 15}, {"target_end_line": 74, "source_start_line": 194, "source_end_line": 195, "source_confidence": 13, "target_start_line": 72, "target_confidence": 15}, {"target_end_line": 141, "source_start_line": 209, "source_end_line": 211, "source_confidence": 13, "target_start_line": 141, "target_confidence": 15}]}, {"source": "jonsadka_55b7080d6105c0643148d49f0ebc8856", "value": 27, "target": "rcrocker13_173c06a6c4ec262005a9872ff9dbdfeb", "links": [{"target_end_line": 22, "source_start_line": 1, "source_end_line": 17, "source_confidence": 15, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 52, "source_start_line": 74, "source_end_line": 81, "source_confidence": 15, "target_start_line": 48, "target_confidence": 33}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 17, "source_confidence": 15, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 52, "source_start_line": 74, "source_end_line": 81, "source_confidence": 15, "target_start_line": 48, "target_confidence": 33}]}, {"source": "owenr_3f8133b8edf99731d54104ca1b622d30", "value": 41, "target": "john-guerra_7770baa3383ab777f8ac211deeb66fbc", "links": [{"target_end_line": 44, "source_start_line": 198, "source_end_line": 237, "source_confidence": 20, "target_start_line": 4, "target_confidence": 95}]}, {"source": "pandafulmanda_c6b5b66116c955328d29effb7101c809", "value": 28, "target": "RicCheng_64a4ffccbf7233b290b350cbce87d0dc", "links": [{"target_end_line": 151, "source_start_line": 52, "source_end_line": 65, "source_confidence": 30, "target_start_line": 139, "target_confidence": 4}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 30, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 37, "source_end_line": 39, "source_confidence": 30, "target_start_line": 45, "target_confidence": 4}, {"target_end_line": 37, "source_start_line": 18, "source_end_line": 25, "source_confidence": 30, "target_start_line": 30, "target_confidence": 4}, {"target_end_line": 151, "source_start_line": 52, "source_end_line": 65, "source_confidence": 30, "target_start_line": 139, "target_confidence": 4}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 30, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 37, "source_end_line": 39, "source_confidence": 30, "target_start_line": 45, "target_confidence": 4}, {"target_end_line": 37, "source_start_line": 18, "source_end_line": 25, "source_confidence": 30, "target_start_line": 30, "target_confidence": 4}, {"target_end_line": 151, "source_start_line": 52, "source_end_line": 65, "source_confidence": 30, "target_start_line": 139, "target_confidence": 4}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 30, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 37, "source_end_line": 39, "source_confidence": 30, "target_start_line": 45, "target_confidence": 4}, {"target_end_line": 37, "source_start_line": 18, "source_end_line": 25, "source_confidence": 30, "target_start_line": 30, "target_confidence": 4}, {"target_end_line": 151, "source_start_line": 52, "source_end_line": 65, "source_confidence": 30, "target_start_line": 139, "target_confidence": 4}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 30, "target_start_line": 4, "target_confidence": 4}, {"target_end_line": 47, "source_start_line": 37, "source_end_line": 39, "source_confidence": 30, "target_start_line": 45, "target_confidence": 4}, {"target_end_line": 37, "source_start_line": 18, "source_end_line": 25, "source_confidence": 30, "target_start_line": 30, "target_confidence": 4}]}, {"source": "Fil_1c2f954201523af16280db018ddd90cc", "value": 71, "target": "clhenrick_e23406d334093e9fe205991d04cfe8be", "links": [{"target_end_line": 53, "source_start_line": 15, "source_end_line": 61, "source_confidence": 25, "target_start_line": 6, "target_confidence": 70}, {"target_end_line": 84, "source_start_line": 146, "source_end_line": 159, "source_confidence": 25, "target_start_line": 71, "target_confidence": 70}, {"target_end_line": 108, "source_start_line": 283, "source_end_line": 288, "source_confidence": 25, "target_start_line": 100, "target_confidence": 70}, {"target_end_line": 53, "source_start_line": 15, "source_end_line": 61, "source_confidence": 25, "target_start_line": 6, "target_confidence": 70}, {"target_end_line": 84, "source_start_line": 146, "source_end_line": 159, "source_confidence": 25, "target_start_line": 71, "target_confidence": 70}, {"target_end_line": 108, "source_start_line": 283, "source_end_line": 288, "source_confidence": 25, "target_start_line": 100, "target_confidence": 70}, {"target_end_line": 53, "source_start_line": 15, "source_end_line": 61, "source_confidence": 25, "target_start_line": 6, "target_confidence": 70}, {"target_end_line": 84, "source_start_line": 146, "source_end_line": 159, "source_confidence": 25, "target_start_line": 71, "target_confidence": 70}, {"target_end_line": 108, "source_start_line": 283, "source_end_line": 288, "source_confidence": 25, "target_start_line": 100, "target_confidence": 70}]}, {"source": "emilioalvarado_0d14fd5ef94ef8629a6a63e1a43e8fb2", "value": 20, "target": "pandafulmanda_c6b5b66116c955328d29effb7101c809", "links": [{"target_end_line": 41, "source_start_line": 5, "source_end_line": 11, "source_confidence": 15, "target_start_line": 35, "target_confidence": 28}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 15, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 45, "source_end_line": 53, "source_confidence": 15, "target_start_line": 17, "target_confidence": 28}, {"target_end_line": 41, "source_start_line": 5, "source_end_line": 11, "source_confidence": 15, "target_start_line": 35, "target_confidence": 28}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 15, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 45, "source_end_line": 53, "source_confidence": 15, "target_start_line": 17, "target_confidence": 28}, {"target_end_line": 41, "source_start_line": 5, "source_end_line": 11, "source_confidence": 15, "target_start_line": 35, "target_confidence": 28}, {"target_end_line": 4, "source_start_line": 1, "source_end_line": 4, "source_confidence": 15, "target_start_line": 1, "target_confidence": 28}, {"target_end_line": 25, "source_start_line": 45, "source_end_line": 53, "source_confidence": 15, "target_start_line": 17, "target_confidence": 28}]}, {"source": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd", "value": 124, "target": "jcamilort_e8d50f58313f1c0f87df9fe2d143b857", "links": [{"target_end_line": 106, "source_start_line": 1, "source_end_line": 107, "source_confidence": 93, "target_start_line": 1, "target_confidence": 91}, {"target_end_line": 139, "source_start_line": 118, "source_end_line": 134, "source_confidence": 93, "target_start_line": 123, "target_confidence": 91}, {"target_end_line": 106, "source_start_line": 1, "source_end_line": 107, "source_confidence": 93, "target_start_line": 1, "target_confidence": 91}, {"target_end_line": 139, "source_start_line": 118, "source_end_line": 134, "source_confidence": 93, "target_start_line": 123, "target_confidence": 91}]}, {"source": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd", "value": 131, "target": "jcamilort_fc698a90abc87dc2d645a564cbc35a91", "links": [{"target_end_line": 107, "source_start_line": 37, "source_end_line": 107, "source_confidence": 91, "target_start_line": 36, "target_confidence": 92}, {"target_end_line": 36, "source_start_line": 1, "source_end_line": 36, "source_confidence": 91, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 130, "source_start_line": 112, "source_end_line": 128, "source_confidence": 91, "target_start_line": 114, "target_confidence": 92}, {"target_end_line": 137, "source_start_line": 129, "source_end_line": 134, "source_confidence": 91, "target_start_line": 132, "target_confidence": 92}, {"target_end_line": 107, "source_start_line": 37, "source_end_line": 107, "source_confidence": 91, "target_start_line": 36, "target_confidence": 92}, {"target_end_line": 36, "source_start_line": 1, "source_end_line": 36, "source_confidence": 91, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 130, "source_start_line": 112, "source_end_line": 128, "source_confidence": 91, "target_start_line": 114, "target_confidence": 92}, {"target_end_line": 137, "source_start_line": 129, "source_end_line": 134, "source_confidence": 91, "target_start_line": 132, "target_confidence": 92}, {"target_end_line": 107, "source_start_line": 37, "source_end_line": 107, "source_confidence": 91, "target_start_line": 36, "target_confidence": 92}, {"target_end_line": 36, "source_start_line": 1, "source_end_line": 36, "source_confidence": 91, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 130, "source_start_line": 112, "source_end_line": 128, "source_confidence": 91, "target_start_line": 114, "target_confidence": 92}, {"target_end_line": 137, "source_start_line": 129, "source_end_line": 134, "source_confidence": 91, "target_start_line": 132, "target_confidence": 92}, {"target_end_line": 107, "source_start_line": 37, "source_end_line": 107, "source_confidence": 91, "target_start_line": 36, "target_confidence": 92}, {"target_end_line": 36, "source_start_line": 1, "source_end_line": 36, "source_confidence": 91, "target_start_line": 1, "target_confidence": 92}, {"target_end_line": 130, "source_start_line": 112, "source_end_line": 128, "source_confidence": 91, "target_start_line": 114, "target_confidence": 92}, {"target_end_line": 137, "source_start_line": 129, "source_end_line": 134, "source_confidence": 91, "target_start_line": 132, "target_confidence": 92}]}, {"source": "elt12njo_76b484f5187c7ecfc83070dd81897327", "value": 20, "target": "eduavencama_8fd325ade497f7c2d28c4eefb4dda13e", "links": [{"target_end_line": 34, "source_start_line": 18, "source_end_line": 23, "source_confidence": 41, "target_start_line": 30, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 42, "source_end_line": 49, "source_confidence": 41, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 61, "source_start_line": 37, "source_end_line": 39, "source_confidence": 41, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 41, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 34, "source_start_line": 18, "source_end_line": 23, "source_confidence": 41, "target_start_line": 30, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 42, "source_end_line": 49, "source_confidence": 41, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 61, "source_start_line": 37, "source_end_line": 39, "source_confidence": 41, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 41, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 34, "source_start_line": 18, "source_end_line": 23, "source_confidence": 41, "target_start_line": 30, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 42, "source_end_line": 49, "source_confidence": 41, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 61, "source_start_line": 37, "source_end_line": 39, "source_confidence": 41, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 41, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 34, "source_start_line": 18, "source_end_line": 23, "source_confidence": 41, "target_start_line": 30, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 42, "source_end_line": 49, "source_confidence": 41, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 61, "source_start_line": 37, "source_end_line": 39, "source_confidence": 41, "target_start_line": 59, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 41, "target_start_line": 3, "target_confidence": 26}]}, {"source": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd", "value": 111, "target": "jcamilort_75949a078ffb954905569a4a972ea59d", "links": [{"target_end_line": 40, "source_start_line": 1, "source_end_line": 36, "source_confidence": 81, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 98, "source_start_line": 57, "source_end_line": 86, "source_confidence": 81, "target_start_line": 68, "target_confidence": 83}, {"target_end_line": 125, "source_start_line": 118, "source_end_line": 134, "source_confidence": 81, "target_start_line": 109, "target_confidence": 83}, {"target_end_line": 108, "source_start_line": 96, "source_end_line": 105, "source_confidence": 81, "target_start_line": 98, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 37, "source_end_line": 47, "source_confidence": 81, "target_start_line": 40, "target_confidence": 83}, {"target_end_line": 40, "source_start_line": 1, "source_end_line": 36, "source_confidence": 81, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 98, "source_start_line": 57, "source_end_line": 86, "source_confidence": 81, "target_start_line": 68, "target_confidence": 83}, {"target_end_line": 125, "source_start_line": 118, "source_end_line": 134, "source_confidence": 81, "target_start_line": 109, "target_confidence": 83}, {"target_end_line": 108, "source_start_line": 96, "source_end_line": 105, "source_confidence": 81, "target_start_line": 98, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 37, "source_end_line": 47, "source_confidence": 81, "target_start_line": 40, "target_confidence": 83}, {"target_end_line": 40, "source_start_line": 1, "source_end_line": 36, "source_confidence": 81, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 98, "source_start_line": 57, "source_end_line": 86, "source_confidence": 81, "target_start_line": 68, "target_confidence": 83}, {"target_end_line": 125, "source_start_line": 118, "source_end_line": 134, "source_confidence": 81, "target_start_line": 109, "target_confidence": 83}, {"target_end_line": 108, "source_start_line": 96, "source_end_line": 105, "source_confidence": 81, "target_start_line": 98, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 37, "source_end_line": 47, "source_confidence": 81, "target_start_line": 40, "target_confidence": 83}, {"target_end_line": 40, "source_start_line": 1, "source_end_line": 36, "source_confidence": 81, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 98, "source_start_line": 57, "source_end_line": 86, "source_confidence": 81, "target_start_line": 68, "target_confidence": 83}, {"target_end_line": 125, "source_start_line": 118, "source_end_line": 134, "source_confidence": 81, "target_start_line": 109, "target_confidence": 83}, {"target_end_line": 108, "source_start_line": 96, "source_end_line": 105, "source_confidence": 81, "target_start_line": 98, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 37, "source_end_line": 47, "source_confidence": 81, "target_start_line": 40, "target_confidence": 83}, {"target_end_line": 40, "source_start_line": 1, "source_end_line": 36, "source_confidence": 81, "target_start_line": 1, "target_confidence": 83}, {"target_end_line": 98, "source_start_line": 57, "source_end_line": 86, "source_confidence": 81, "target_start_line": 68, "target_confidence": 83}, {"target_end_line": 125, "source_start_line": 118, "source_end_line": 134, "source_confidence": 81, "target_start_line": 109, "target_confidence": 83}, {"target_end_line": 108, "source_start_line": 96, "source_end_line": 105, "source_confidence": 81, "target_start_line": 98, "target_confidence": 83}, {"target_end_line": 51, "source_start_line": 37, "source_end_line": 47, "source_confidence": 81, "target_start_line": 40, "target_confidence": 83}]}, {"source": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd", "value": 94, "target": "jcamilort_ef60fb4bad1dd29e0b82074805769856", "links": [{"target_end_line": 35, "source_start_line": 1, "source_end_line": 31, "source_confidence": 71, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 77, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 104, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 88, "target_confidence": 88}, {"target_end_line": 87, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 77, "target_confidence": 88}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 31, "source_confidence": 71, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 77, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 104, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 88, "target_confidence": 88}, {"target_end_line": 87, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 77, "target_confidence": 88}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 31, "source_confidence": 71, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 77, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 104, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 88, "target_confidence": 88}, {"target_end_line": 87, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 77, "target_confidence": 88}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 31, "source_confidence": 71, "target_start_line": 1, "target_confidence": 88}, {"target_end_line": 77, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 47, "target_confidence": 88}, {"target_end_line": 104, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 88, "target_confidence": 88}, {"target_end_line": 87, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 77, "target_confidence": 88}]}, {"source": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd", "value": 90, "target": "jcamilort_aeeb590a7ef54c971084bf46cc05f43d", "links": [{"target_end_line": 79, "source_start_line": 57, "source_end_line": 86, "source_confidence": 70, "target_start_line": 49, "target_confidence": 86}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 106, "source_start_line": 118, "source_end_line": 134, "source_confidence": 70, "target_start_line": 90, "target_confidence": 86}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 105, "source_confidence": 70, "target_start_line": 79, "target_confidence": 86}, {"target_end_line": 37, "source_start_line": 25, "source_end_line": 31, "source_confidence": 70, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 24, "source_confidence": 70, "target_start_line": 22, "target_confidence": 86}, {"target_end_line": 79, "source_start_line": 57, "source_end_line": 86, "source_confidence": 70, "target_start_line": 49, "target_confidence": 86}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 106, "source_start_line": 118, "source_end_line": 134, "source_confidence": 70, "target_start_line": 90, "target_confidence": 86}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 105, "source_confidence": 70, "target_start_line": 79, "target_confidence": 86}, {"target_end_line": 37, "source_start_line": 25, "source_end_line": 31, "source_confidence": 70, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 24, "source_confidence": 70, "target_start_line": 22, "target_confidence": 86}, {"target_end_line": 79, "source_start_line": 57, "source_end_line": 86, "source_confidence": 70, "target_start_line": 49, "target_confidence": 86}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 106, "source_start_line": 118, "source_end_line": 134, "source_confidence": 70, "target_start_line": 90, "target_confidence": 86}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 105, "source_confidence": 70, "target_start_line": 79, "target_confidence": 86}, {"target_end_line": 37, "source_start_line": 25, "source_end_line": 31, "source_confidence": 70, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 24, "source_confidence": 70, "target_start_line": 22, "target_confidence": 86}, {"target_end_line": 79, "source_start_line": 57, "source_end_line": 86, "source_confidence": 70, "target_start_line": 49, "target_confidence": 86}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 106, "source_start_line": 118, "source_end_line": 134, "source_confidence": 70, "target_start_line": 90, "target_confidence": 86}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 105, "source_confidence": 70, "target_start_line": 79, "target_confidence": 86}, {"target_end_line": 37, "source_start_line": 25, "source_end_line": 31, "source_confidence": 70, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 24, "source_confidence": 70, "target_start_line": 22, "target_confidence": 86}, {"target_end_line": 79, "source_start_line": 57, "source_end_line": 86, "source_confidence": 70, "target_start_line": 49, "target_confidence": 86}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 106, "source_start_line": 118, "source_end_line": 134, "source_confidence": 70, "target_start_line": 90, "target_confidence": 86}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 105, "source_confidence": 70, "target_start_line": 79, "target_confidence": 86}, {"target_end_line": 37, "source_start_line": 25, "source_end_line": 31, "source_confidence": 70, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 24, "source_confidence": 70, "target_start_line": 22, "target_confidence": 86}, {"target_end_line": 79, "source_start_line": 57, "source_end_line": 86, "source_confidence": 70, "target_start_line": 49, "target_confidence": 86}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 86}, {"target_end_line": 106, "source_start_line": 118, "source_end_line": 134, "source_confidence": 70, "target_start_line": 90, "target_confidence": 86}, {"target_end_line": 89, "source_start_line": 96, "source_end_line": 105, "source_confidence": 70, "target_start_line": 79, "target_confidence": 86}, {"target_end_line": 37, "source_start_line": 25, "source_end_line": 31, "source_confidence": 70, "target_start_line": 30, "target_confidence": 86}, {"target_end_line": 25, "source_start_line": 21, "source_end_line": 24, "source_confidence": 70, "target_start_line": 22, "target_confidence": 86}]}, {"source": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd", "value": 85, "target": "jcamilort_39e64e6b6e098c72a9eda3a21a4e4f72", "links": [{"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 71, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 61, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 31, "target_confidence": 95}, {"target_end_line": 94, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 78, "target_confidence": 95}, {"target_end_line": 69, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 61, "target_confidence": 95}, {"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 71, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 61, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 31, "target_confidence": 95}, {"target_end_line": 94, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 78, "target_confidence": 95}, {"target_end_line": 69, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 61, "target_confidence": 95}, {"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 71, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 61, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 31, "target_confidence": 95}, {"target_end_line": 94, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 78, "target_confidence": 95}, {"target_end_line": 69, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 61, "target_confidence": 95}, {"target_end_line": 28, "source_start_line": 1, "source_end_line": 28, "source_confidence": 71, "target_start_line": 1, "target_confidence": 95}, {"target_end_line": 61, "source_start_line": 57, "source_end_line": 86, "source_confidence": 71, "target_start_line": 31, "target_confidence": 95}, {"target_end_line": 94, "source_start_line": 118, "source_end_line": 134, "source_confidence": 71, "target_start_line": 78, "target_confidence": 95}, {"target_end_line": 69, "source_start_line": 96, "source_end_line": 105, "source_confidence": 71, "target_start_line": 61, "target_confidence": 95}]}, {"source": "trinary_976ea89cbcddde3027c41c6f228427be", "value": 96, "target": "syntagmatic_75c5ca501200b0cf7a5958b4e404f777", "links": [{"target_end_line": 78, "source_start_line": 28, "source_end_line": 73, "source_confidence": 65, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 110, "source_start_line": 77, "source_end_line": 102, "source_confidence": 65, "target_start_line": 85, "target_confidence": 66}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 65, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 19, "source_end_line": 27, "source_confidence": 65, "target_start_line": 22, "target_confidence": 66}, {"target_end_line": 78, "source_start_line": 28, "source_end_line": 73, "source_confidence": 65, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 110, "source_start_line": 77, "source_end_line": 102, "source_confidence": 65, "target_start_line": 85, "target_confidence": 66}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 65, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 19, "source_end_line": 27, "source_confidence": 65, "target_start_line": 22, "target_confidence": 66}, {"target_end_line": 78, "source_start_line": 28, "source_end_line": 73, "source_confidence": 65, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 110, "source_start_line": 77, "source_end_line": 102, "source_confidence": 65, "target_start_line": 85, "target_confidence": 66}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 65, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 19, "source_end_line": 27, "source_confidence": 65, "target_start_line": 22, "target_confidence": 66}, {"target_end_line": 78, "source_start_line": 28, "source_end_line": 73, "source_confidence": 65, "target_start_line": 33, "target_confidence": 66}, {"target_end_line": 110, "source_start_line": 77, "source_end_line": 102, "source_confidence": 65, "target_start_line": 85, "target_confidence": 66}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 65, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 30, "source_start_line": 19, "source_end_line": 27, "source_confidence": 65, "target_start_line": 22, "target_confidence": 66}]}, {"source": "john-guerra_221cb4c7fb676bcb58a25d4982114de3", "value": 21, "target": "cis321_be52874656622cccaf3eddc30e175ea4", "links": [{"target_end_line": 22, "source_start_line": 23, "source_end_line": 32, "source_confidence": 28, "target_start_line": 13, "target_confidence": 37}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 28, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 22, "source_start_line": 23, "source_end_line": 32, "source_confidence": 28, "target_start_line": 13, "target_confidence": 37}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 28, "target_start_line": 1, "target_confidence": 37}]}, {"source": "syntagmatic_6f30a2d719871d041c6eace2193b9f33", "value": 99, "target": "trinary_976ea89cbcddde3027c41c6f228427be", "links": [{"target_end_line": 73, "source_start_line": 1, "source_end_line": 73, "source_confidence": 80, "target_start_line": 1, "target_confidence": 72}, {"target_end_line": 102, "source_start_line": 79, "source_end_line": 104, "source_confidence": 80, "target_start_line": 77, "target_confidence": 72}, {"target_end_line": 73, "source_start_line": 1, "source_end_line": 73, "source_confidence": 80, "target_start_line": 1, "target_confidence": 72}, {"target_end_line": 102, "source_start_line": 79, "source_end_line": 104, "source_confidence": 80, "target_start_line": 77, "target_confidence": 72}]}, {"source": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908", "value": 27, "target": "elt12njo_99ce0c2cee3a9bee3cbbab03109b4038", "links": [{"target_end_line": 14, "source_start_line": 4, "source_end_line": 14, "source_confidence": 34, "target_start_line": 3, "target_confidence": 38}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 28, "source_confidence": 34, "target_start_line": 21, "target_confidence": 38}, {"target_end_line": 68, "source_start_line": 50, "source_end_line": 55, "source_confidence": 34, "target_start_line": 63, "target_confidence": 38}, {"target_end_line": 77, "source_start_line": 41, "source_end_line": 43, "source_confidence": 34, "target_start_line": 75, "target_confidence": 38}, {"target_end_line": 14, "source_start_line": 4, "source_end_line": 14, "source_confidence": 34, "target_start_line": 3, "target_confidence": 38}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 28, "source_confidence": 34, "target_start_line": 21, "target_confidence": 38}, {"target_end_line": 68, "source_start_line": 50, "source_end_line": 55, "source_confidence": 34, "target_start_line": 63, "target_confidence": 38}, {"target_end_line": 77, "source_start_line": 41, "source_end_line": 43, "source_confidence": 34, "target_start_line": 75, "target_confidence": 38}, {"target_end_line": 14, "source_start_line": 4, "source_end_line": 14, "source_confidence": 34, "target_start_line": 3, "target_confidence": 38}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 28, "source_confidence": 34, "target_start_line": 21, "target_confidence": 38}, {"target_end_line": 68, "source_start_line": 50, "source_end_line": 55, "source_confidence": 34, "target_start_line": 63, "target_confidence": 38}, {"target_end_line": 77, "source_start_line": 41, "source_end_line": 43, "source_confidence": 34, "target_start_line": 75, "target_confidence": 38}, {"target_end_line": 14, "source_start_line": 4, "source_end_line": 14, "source_confidence": 34, "target_start_line": 3, "target_confidence": 38}, {"target_end_line": 26, "source_start_line": 23, "source_end_line": 28, "source_confidence": 34, "target_start_line": 21, "target_confidence": 38}, {"target_end_line": 68, "source_start_line": 50, "source_end_line": 55, "source_confidence": 34, "target_start_line": 63, "target_confidence": 38}, {"target_end_line": 77, "source_start_line": 41, "source_end_line": 43, "source_confidence": 34, "target_start_line": 75, "target_confidence": 38}]}, {"source": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908", "value": 23, "target": "elt12njo_38600ed46e9fb1f794fd39863c55f233", "links": [{"target_end_line": 13, "source_start_line": 4, "source_end_line": 14, "source_confidence": 30, "target_start_line": 3, "target_confidence": 47}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 30, "target_start_line": 18, "target_confidence": 47}, {"target_end_line": 61, "source_start_line": 50, "source_end_line": 55, "source_confidence": 30, "target_start_line": 56, "target_confidence": 47}, {"target_end_line": 13, "source_start_line": 4, "source_end_line": 14, "source_confidence": 30, "target_start_line": 3, "target_confidence": 47}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 30, "target_start_line": 18, "target_confidence": 47}, {"target_end_line": 61, "source_start_line": 50, "source_end_line": 55, "source_confidence": 30, "target_start_line": 56, "target_confidence": 47}, {"target_end_line": 13, "source_start_line": 4, "source_end_line": 14, "source_confidence": 30, "target_start_line": 3, "target_confidence": 47}, {"target_end_line": 23, "source_start_line": 23, "source_end_line": 28, "source_confidence": 30, "target_start_line": 18, "target_confidence": 47}, {"target_end_line": 61, "source_start_line": 50, "source_end_line": 55, "source_confidence": 30, "target_start_line": 56, "target_confidence": 47}]}, {"source": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "value": 18, "target": "elt12njo_76b484f5187c7ecfc83070dd81897327", "links": [{"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 33}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 39, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 37, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 33}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 39, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 37, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 33}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 33}, {"target_end_line": 39, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 37, "target_confidence": 33}]}, {"source": "emilioalvarado_0d14fd5ef94ef8629a6a63e1a43e8fb2", "value": 27, "target": "rcrocker13_106939b994bf8b80ccb3da0d544fc992", "links": [{"target_end_line": 18, "source_start_line": 5, "source_end_line": 13, "source_confidence": 15, "target_start_line": 10, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 81, "source_end_line": 92, "source_confidence": 15, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 44, "source_start_line": 72, "source_end_line": 77, "source_confidence": 15, "target_start_line": 39, "target_confidence": 39}, {"target_end_line": 18, "source_start_line": 5, "source_end_line": 13, "source_confidence": 15, "target_start_line": 10, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 81, "source_end_line": 92, "source_confidence": 15, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 44, "source_start_line": 72, "source_end_line": 77, "source_confidence": 15, "target_start_line": 39, "target_confidence": 39}, {"target_end_line": 18, "source_start_line": 5, "source_end_line": 13, "source_confidence": 15, "target_start_line": 10, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 81, "source_end_line": 92, "source_confidence": 15, "target_start_line": 48, "target_confidence": 39}, {"target_end_line": 44, "source_start_line": 72, "source_end_line": 77, "source_confidence": 15, "target_start_line": 39, "target_confidence": 39}]}, {"source": "damayor_7b07253b1e232131cced9247626a5b38", "value": 191, "target": "f94f_78faa9b93b7d92e3bc39cd258f4ec90b", "links": [{"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 230, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 210, "target_confidence": 50}, {"target_end_line": 189, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 158, "target_confidence": 50}, {"target_end_line": 204, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 191, "target_confidence": 50}, {"target_end_line": 140, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 136, "target_confidence": 50}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 230, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 210, "target_confidence": 50}, {"target_end_line": 189, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 158, "target_confidence": 50}, {"target_end_line": 204, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 191, "target_confidence": 50}, {"target_end_line": 140, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 136, "target_confidence": 50}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 230, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 210, "target_confidence": 50}, {"target_end_line": 189, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 158, "target_confidence": 50}, {"target_end_line": 204, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 191, "target_confidence": 50}, {"target_end_line": 140, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 136, "target_confidence": 50}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 230, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 210, "target_confidence": 50}, {"target_end_line": 189, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 158, "target_confidence": 50}, {"target_end_line": 204, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 191, "target_confidence": 50}, {"target_end_line": 140, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 136, "target_confidence": 50}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 50}, {"target_end_line": 230, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 210, "target_confidence": 50}, {"target_end_line": 189, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 158, "target_confidence": 50}, {"target_end_line": 204, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 191, "target_confidence": 50}, {"target_end_line": 140, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 136, "target_confidence": 50}]}, {"source": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "value": 24, "target": "emilioalvarado_0d14fd5ef94ef8629a6a63e1a43e8fb2", "links": [{"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 80, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 72, "target_confidence": 18}, {"target_end_line": 51, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 45, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 80, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 72, "target_confidence": 18}, {"target_end_line": 51, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 45, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 80, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 72, "target_confidence": 18}, {"target_end_line": 51, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 45, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 18}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 18}, {"target_end_line": 80, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 72, "target_confidence": 18}, {"target_end_line": 51, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 45, "target_confidence": 18}]}, {"source": "emilioalvarado_b314651b76f2e0d7f63ae7b32ccfcb2d", "value": 20, "target": "tizon9804_d4ab67d803079a49ab4ec4ecc158edfd", "links": [{"target_end_line": 21, "source_start_line": 27, "source_end_line": 33, "source_confidence": 22, "target_start_line": 15, "target_confidence": 17}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 22, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 78, "source_start_line": 62, "source_end_line": 66, "source_confidence": 22, "target_start_line": 74, "target_confidence": 17}, {"target_end_line": 21, "source_start_line": 27, "source_end_line": 33, "source_confidence": 22, "target_start_line": 15, "target_confidence": 17}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 22, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 78, "source_start_line": 62, "source_end_line": 66, "source_confidence": 22, "target_start_line": 74, "target_confidence": 17}, {"target_end_line": 21, "source_start_line": 27, "source_end_line": 33, "source_confidence": 22, "target_start_line": 15, "target_confidence": 17}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 22, "target_start_line": 1, "target_confidence": 17}, {"target_end_line": 78, "source_start_line": 62, "source_end_line": 66, "source_confidence": 22, "target_start_line": 74, "target_confidence": 17}]}, {"source": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "value": 24, "target": "emilioalvarado_ee634ac32c2c18af3f217616add4871c", "links": [{"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}]}, {"source": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "value": 24, "target": "emilioalvarado_a8a4914112719e4095a7116762b4dbe9", "links": [{"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}, {"target_end_line": 11, "source_start_line": 24, "source_end_line": 28, "source_confidence": 16, "target_start_line": 7, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 4, "source_end_line": 6, "source_confidence": 16, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 51, "source_start_line": 78, "source_end_line": 86, "source_confidence": 16, "target_start_line": 43, "target_confidence": 26}, {"target_end_line": 41, "source_start_line": 15, "source_end_line": 21, "source_confidence": 16, "target_start_line": 35, "target_confidence": 26}]}, {"source": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "value": 18, "target": "elt12njo_cd642695e6ce6a82b6d6d8afcced0275", "links": [{"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 34, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 34, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 34, "target_confidence": 36}]}, {"source": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "value": 18, "target": "elt12njo_55682835e5b13b56162eed186e61de08", "links": [{"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 34, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 34, "target_confidence": 36}, {"target_end_line": 25, "source_start_line": 23, "source_end_line": 30, "source_confidence": 15, "target_start_line": 17, "target_confidence": 36}, {"target_end_line": 9, "source_start_line": 4, "source_end_line": 9, "source_confidence": 15, "target_start_line": 4, "target_confidence": 36}, {"target_end_line": 36, "source_start_line": 61, "source_end_line": 63, "source_confidence": 15, "target_start_line": 34, "target_confidence": 36}]}, {"source": "damayor_7b07253b1e232131cced9247626a5b38", "value": 191, "target": "f94f_b95fc00044614dd0441317d94bdb968f", "links": [{"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}]}, {"source": "damayor_7b07253b1e232131cced9247626a5b38", "value": 191, "target": "f94f_27d6b22dd88a68588fdcf1dc198d06de", "links": [{"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}, {"target_end_line": 119, "source_start_line": 1, "source_end_line": 119, "source_confidence": 73, "target_start_line": 1, "target_confidence": 60}, {"target_end_line": 228, "source_start_line": 193, "source_end_line": 213, "source_confidence": 73, "target_start_line": 208, "target_confidence": 60}, {"target_end_line": 187, "source_start_line": 142, "source_end_line": 172, "source_confidence": 73, "target_start_line": 156, "target_confidence": 60}, {"target_end_line": 202, "source_start_line": 174, "source_end_line": 187, "source_confidence": 73, "target_start_line": 189, "target_confidence": 60}, {"target_end_line": 138, "source_start_line": 119, "source_end_line": 124, "source_confidence": 73, "target_start_line": 134, "target_confidence": 60}]}, {"source": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097", "value": 39, "target": "aiMojica10_8e5a528de0e530ab263ea282c8779677", "links": [{"target_end_line": 21, "source_start_line": 9, "source_end_line": 21, "source_confidence": 58, "target_start_line": 9, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 58, "target_start_line": 24, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 58, "target_start_line": 4, "target_confidence": 25}, {"target_end_line": 98, "source_start_line": 48, "source_end_line": 58, "source_confidence": 58, "target_start_line": 90, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 25, "source_end_line": 28, "source_confidence": 58, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 43, "source_confidence": 58, "target_start_line": 61, "target_confidence": 25}, {"target_end_line": 21, "source_start_line": 9, "source_end_line": 21, "source_confidence": 58, "target_start_line": 9, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 58, "target_start_line": 24, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 58, "target_start_line": 4, "target_confidence": 25}, {"target_end_line": 98, "source_start_line": 48, "source_end_line": 58, "source_confidence": 58, "target_start_line": 90, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 25, "source_end_line": 28, "source_confidence": 58, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 43, "source_confidence": 58, "target_start_line": 61, "target_confidence": 25}, {"target_end_line": 21, "source_start_line": 9, "source_end_line": 21, "source_confidence": 58, "target_start_line": 9, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 58, "target_start_line": 24, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 58, "target_start_line": 4, "target_confidence": 25}, {"target_end_line": 98, "source_start_line": 48, "source_end_line": 58, "source_confidence": 58, "target_start_line": 90, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 25, "source_end_line": 28, "source_confidence": 58, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 43, "source_confidence": 58, "target_start_line": 61, "target_confidence": 25}, {"target_end_line": 21, "source_start_line": 9, "source_end_line": 21, "source_confidence": 58, "target_start_line": 9, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 58, "target_start_line": 24, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 58, "target_start_line": 4, "target_confidence": 25}, {"target_end_line": 98, "source_start_line": 48, "source_end_line": 58, "source_confidence": 58, "target_start_line": 90, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 25, "source_end_line": 28, "source_confidence": 58, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 43, "source_confidence": 58, "target_start_line": 61, "target_confidence": 25}, {"target_end_line": 21, "source_start_line": 9, "source_end_line": 21, "source_confidence": 58, "target_start_line": 9, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 58, "target_start_line": 24, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 58, "target_start_line": 4, "target_confidence": 25}, {"target_end_line": 98, "source_start_line": 48, "source_end_line": 58, "source_confidence": 58, "target_start_line": 90, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 25, "source_end_line": 28, "source_confidence": 58, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 43, "source_confidence": 58, "target_start_line": 61, "target_confidence": 25}, {"target_end_line": 21, "source_start_line": 9, "source_end_line": 21, "source_confidence": 58, "target_start_line": 9, "target_confidence": 25}, {"target_end_line": 28, "source_start_line": 33, "source_end_line": 37, "source_confidence": 58, "target_start_line": 24, "target_confidence": 25}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 58, "target_start_line": 4, "target_confidence": 25}, {"target_end_line": 98, "source_start_line": 48, "source_end_line": 58, "source_confidence": 58, "target_start_line": 90, "target_confidence": 25}, {"target_end_line": 42, "source_start_line": 25, "source_end_line": 28, "source_confidence": 58, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 43, "source_confidence": 58, "target_start_line": 61, "target_confidence": 25}]}, {"source": "nstrayer_8e46c8f116614f628e3aaeec09167edb", "value": 407, "target": "emilioalvarado_63f8f6fe240b0e9f495992e967f13d7c", "links": [{"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}, {"target_end_line": 93, "source_start_line": 34, "source_end_line": 79, "source_confidence": 78, "target_start_line": 48, "target_confidence": 77}, {"target_end_line": 134, "source_start_line": 81, "source_end_line": 120, "source_confidence": 78, "target_start_line": 95, "target_confidence": 77}, {"target_end_line": 193, "source_start_line": 144, "source_end_line": 179, "source_confidence": 78, "target_start_line": 158, "target_confidence": 77}, {"target_end_line": 331, "source_start_line": 287, "source_end_line": 317, "source_confidence": 78, "target_start_line": 301, "target_confidence": 77}, {"target_end_line": 247, "source_start_line": 199, "source_end_line": 233, "source_confidence": 78, "target_start_line": 213, "target_confidence": 77}, {"target_end_line": 417, "source_start_line": 371, "source_end_line": 403, "source_confidence": 78, "target_start_line": 385, "target_confidence": 77}, {"target_end_line": 354, "source_start_line": 319, "source_end_line": 340, "source_confidence": 78, "target_start_line": 333, "target_confidence": 77}, {"target_end_line": 383, "source_start_line": 342, "source_end_line": 369, "source_confidence": 78, "target_start_line": 356, "target_confidence": 77}, {"target_end_line": 279, "source_start_line": 235, "source_end_line": 265, "source_confidence": 78, "target_start_line": 249, "target_confidence": 77}, {"target_end_line": 299, "source_start_line": 267, "source_end_line": 285, "source_confidence": 78, "target_start_line": 281, "target_confidence": 77}, {"target_end_line": 147, "source_start_line": 122, "source_end_line": 133, "source_confidence": 78, "target_start_line": 136, "target_confidence": 77}, {"target_end_line": 211, "source_start_line": 181, "source_end_line": 197, "source_confidence": 78, "target_start_line": 195, "target_confidence": 77}, {"target_end_line": 46, "source_start_line": 22, "source_end_line": 32, "source_confidence": 78, "target_start_line": 36, "target_confidence": 77}, {"target_end_line": 156, "source_start_line": 135, "source_end_line": 142, "source_confidence": 78, "target_start_line": 149, "target_confidence": 77}, {"target_end_line": 249, "source_start_line": 233, "source_end_line": 235, "source_confidence": 78, "target_start_line": 247, "target_confidence": 77}, {"target_end_line": 195, "source_start_line": 179, "source_end_line": 181, "source_confidence": 78, "target_start_line": 193, "target_confidence": 77}, {"target_end_line": 213, "source_start_line": 197, "source_end_line": 199, "source_confidence": 78, "target_start_line": 211, "target_confidence": 77}, {"target_end_line": 48, "source_start_line": 32, "source_end_line": 34, "source_confidence": 78, "target_start_line": 46, "target_confidence": 77}, {"target_end_line": 149, "source_start_line": 133, "source_end_line": 135, "source_confidence": 78, "target_start_line": 147, "target_confidence": 77}, {"target_end_line": 301, "source_start_line": 285, "source_end_line": 287, "source_confidence": 78, "target_start_line": 299, "target_confidence": 77}, {"target_end_line": 95, "source_start_line": 79, "source_end_line": 81, "source_confidence": 78, "target_start_line": 93, "target_confidence": 77}, {"target_end_line": 136, "source_start_line": 120, "source_end_line": 122, "source_confidence": 78, "target_start_line": 134, "target_confidence": 77}, {"target_end_line": 158, "source_start_line": 143, "source_end_line": 144, "source_confidence": 78, "target_start_line": 157, "target_confidence": 77}, {"target_end_line": 281, "source_start_line": 265, "source_end_line": 267, "source_confidence": 78, "target_start_line": 279, "target_confidence": 77}, {"target_end_line": 333, "source_start_line": 317, "source_end_line": 319, "source_confidence": 78, "target_start_line": 331, "target_confidence": 77}, {"target_end_line": 356, "source_start_line": 340, "source_end_line": 342, "source_confidence": 78, "target_start_line": 354, "target_confidence": 77}, {"target_end_line": 385, "source_start_line": 369, "source_end_line": 371, "source_confidence": 78, "target_start_line": 383, "target_confidence": 77}]}, {"source": "willroj_0a6368d923dea0776fc7a00ab3749f9d", "value": 17, "target": "aiMojica10_3aa0fe6aee566b13e246a00bf5c5b144", "links": [{"target_end_line": 28, "source_start_line": 26, "source_end_line": 34, "source_confidence": 9, "target_start_line": 19, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 9, "target_start_line": 4, "target_confidence": 14}, {"target_end_line": 47, "source_start_line": 18, "source_end_line": 21, "source_confidence": 9, "target_start_line": 44, "target_confidence": 14}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 34, "source_confidence": 9, "target_start_line": 19, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 9, "target_start_line": 4, "target_confidence": 14}, {"target_end_line": 47, "source_start_line": 18, "source_end_line": 21, "source_confidence": 9, "target_start_line": 44, "target_confidence": 14}, {"target_end_line": 28, "source_start_line": 26, "source_end_line": 34, "source_confidence": 9, "target_start_line": 19, "target_confidence": 14}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 9, "target_start_line": 4, "target_confidence": 14}, {"target_end_line": 47, "source_start_line": 18, "source_end_line": 21, "source_confidence": 9, "target_start_line": 44, "target_confidence": 14}]}, {"source": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097", "value": 20, "target": "willroj_0a6368d923dea0776fc7a00ab3749f9d", "links": [{"target_end_line": 34, "source_start_line": 33, "source_end_line": 37, "source_confidence": 33, "target_start_line": 30, "target_confidence": 9}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 33, "target_start_line": 1, "target_confidence": 9}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 32, "source_confidence": 33, "target_start_line": 18, "target_confidence": 9}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 37, "source_confidence": 33, "target_start_line": 30, "target_confidence": 9}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 33, "target_start_line": 1, "target_confidence": 9}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 32, "source_confidence": 33, "target_start_line": 18, "target_confidence": 9}, {"target_end_line": 34, "source_start_line": 33, "source_end_line": 37, "source_confidence": 33, "target_start_line": 30, "target_confidence": 9}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 33, "target_start_line": 1, "target_confidence": 9}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 32, "source_confidence": 33, "target_start_line": 18, "target_confidence": 9}]}, {"source": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097", "value": 26, "target": "damayor_7b07253b1e232131cced9247626a5b38", "links": [{"target_end_line": 163, "source_start_line": 33, "source_end_line": 37, "source_confidence": 40, "target_start_line": 159, "target_confidence": 18}, {"target_end_line": 123, "source_start_line": 3, "source_end_line": 7, "source_confidence": 40, "target_start_line": 119, "target_confidence": 18}, {"target_end_line": 179, "source_start_line": 42, "source_end_line": 47, "source_confidence": 40, "target_start_line": 174, "target_confidence": 18}, {"target_end_line": 188, "source_start_line": 47, "source_end_line": 56, "source_confidence": 40, "target_start_line": 179, "target_confidence": 18}, {"target_end_line": 163, "source_start_line": 33, "source_end_line": 37, "source_confidence": 40, "target_start_line": 159, "target_confidence": 18}, {"target_end_line": 123, "source_start_line": 3, "source_end_line": 7, "source_confidence": 40, "target_start_line": 119, "target_confidence": 18}, {"target_end_line": 179, "source_start_line": 42, "source_end_line": 47, "source_confidence": 40, "target_start_line": 174, "target_confidence": 18}, {"target_end_line": 188, "source_start_line": 47, "source_end_line": 56, "source_confidence": 40, "target_start_line": 179, "target_confidence": 18}, {"target_end_line": 163, "source_start_line": 33, "source_end_line": 37, "source_confidence": 40, "target_start_line": 159, "target_confidence": 18}, {"target_end_line": 123, "source_start_line": 3, "source_end_line": 7, "source_confidence": 40, "target_start_line": 119, "target_confidence": 18}, {"target_end_line": 179, "source_start_line": 42, "source_end_line": 47, "source_confidence": 40, "target_start_line": 174, "target_confidence": 18}, {"target_end_line": 188, "source_start_line": 47, "source_end_line": 56, "source_confidence": 40, "target_start_line": 179, "target_confidence": 18}, {"target_end_line": 163, "source_start_line": 33, "source_end_line": 37, "source_confidence": 40, "target_start_line": 159, "target_confidence": 18}, {"target_end_line": 123, "source_start_line": 3, "source_end_line": 7, "source_confidence": 40, "target_start_line": 119, "target_confidence": 18}, {"target_end_line": 179, "source_start_line": 42, "source_end_line": 47, "source_confidence": 40, "target_start_line": 174, "target_confidence": 18}, {"target_end_line": 188, "source_start_line": 47, "source_end_line": 56, "source_confidence": 40, "target_start_line": 179, "target_confidence": 18}]}, {"source": "eduavencama_e9155a6869c457c71fbc8978f776214d", "value": 34, "target": "gpenam92_8b0a8b7d625a4ba00bbad94b30535097", "links": [{"target_end_line": 37, "source_start_line": 28, "source_end_line": 32, "source_confidence": 37, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 45, "source_end_line": 57, "source_confidence": 37, "target_start_line": 45, "target_confidence": 53}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 37, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 67, "source_start_line": 61, "source_end_line": 67, "source_confidence": 37, "target_start_line": 61, "target_confidence": 53}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 42, "source_confidence": 37, "target_start_line": 41, "target_confidence": 53}, {"target_end_line": 37, "source_start_line": 28, "source_end_line": 32, "source_confidence": 37, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 45, "source_end_line": 57, "source_confidence": 37, "target_start_line": 45, "target_confidence": 53}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 37, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 67, "source_start_line": 61, "source_end_line": 67, "source_confidence": 37, "target_start_line": 61, "target_confidence": 53}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 42, "source_confidence": 37, "target_start_line": 41, "target_confidence": 53}, {"target_end_line": 37, "source_start_line": 28, "source_end_line": 32, "source_confidence": 37, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 45, "source_end_line": 57, "source_confidence": 37, "target_start_line": 45, "target_confidence": 53}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 37, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 67, "source_start_line": 61, "source_end_line": 67, "source_confidence": 37, "target_start_line": 61, "target_confidence": 53}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 42, "source_confidence": 37, "target_start_line": 41, "target_confidence": 53}, {"target_end_line": 37, "source_start_line": 28, "source_end_line": 32, "source_confidence": 37, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 45, "source_end_line": 57, "source_confidence": 37, "target_start_line": 45, "target_confidence": 53}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 37, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 67, "source_start_line": 61, "source_end_line": 67, "source_confidence": 37, "target_start_line": 61, "target_confidence": 53}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 42, "source_confidence": 37, "target_start_line": 41, "target_confidence": 53}, {"target_end_line": 37, "source_start_line": 28, "source_end_line": 32, "source_confidence": 37, "target_start_line": 33, "target_confidence": 53}, {"target_end_line": 58, "source_start_line": 45, "source_end_line": 57, "source_confidence": 37, "target_start_line": 45, "target_confidence": 53}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 4, "source_confidence": 37, "target_start_line": 1, "target_confidence": 53}, {"target_end_line": 67, "source_start_line": 61, "source_end_line": 67, "source_confidence": 37, "target_start_line": 61, "target_confidence": 53}, {"target_end_line": 43, "source_start_line": 39, "source_end_line": 42, "source_confidence": 37, "target_start_line": 41, "target_confidence": 53}]}, {"source": "davidgutierrez_473d7579c839fe90735dcba659f8171b", "value": 72, "target": "eduavencama_e9155a6869c457c71fbc8978f776214d", "links": [{"target_end_line": 39, "source_start_line": 8, "source_end_line": 41, "source_confidence": 57, "target_start_line": 6, "target_confidence": 67}, {"target_end_line": 48, "source_start_line": 59, "source_end_line": 67, "source_confidence": 57, "target_start_line": 39, "target_confidence": 67}, {"target_end_line": 74, "source_start_line": 100, "source_end_line": 104, "source_confidence": 57, "target_start_line": 70, "target_confidence": 67}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 57, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 59, "source_start_line": 77, "source_end_line": 86, "source_confidence": 57, "target_start_line": 51, "target_confidence": 67}, {"target_end_line": 67, "source_start_line": 90, "source_end_line": 97, "source_confidence": 57, "target_start_line": 61, "target_confidence": 67}, {"target_end_line": 39, "source_start_line": 8, "source_end_line": 41, "source_confidence": 57, "target_start_line": 6, "target_confidence": 67}, {"target_end_line": 48, "source_start_line": 59, "source_end_line": 67, "source_confidence": 57, "target_start_line": 39, "target_confidence": 67}, {"target_end_line": 74, "source_start_line": 100, "source_end_line": 104, "source_confidence": 57, "target_start_line": 70, "target_confidence": 67}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 57, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 59, "source_start_line": 77, "source_end_line": 86, "source_confidence": 57, "target_start_line": 51, "target_confidence": 67}, {"target_end_line": 67, "source_start_line": 90, "source_end_line": 97, "source_confidence": 57, "target_start_line": 61, "target_confidence": 67}, {"target_end_line": 39, "source_start_line": 8, "source_end_line": 41, "source_confidence": 57, "target_start_line": 6, "target_confidence": 67}, {"target_end_line": 48, "source_start_line": 59, "source_end_line": 67, "source_confidence": 57, "target_start_line": 39, "target_confidence": 67}, {"target_end_line": 74, "source_start_line": 100, "source_end_line": 104, "source_confidence": 57, "target_start_line": 70, "target_confidence": 67}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 57, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 59, "source_start_line": 77, "source_end_line": 86, "source_confidence": 57, "target_start_line": 51, "target_confidence": 67}, {"target_end_line": 67, "source_start_line": 90, "source_end_line": 97, "source_confidence": 57, "target_start_line": 61, "target_confidence": 67}, {"target_end_line": 39, "source_start_line": 8, "source_end_line": 41, "source_confidence": 57, "target_start_line": 6, "target_confidence": 67}, {"target_end_line": 48, "source_start_line": 59, "source_end_line": 67, "source_confidence": 57, "target_start_line": 39, "target_confidence": 67}, {"target_end_line": 74, "source_start_line": 100, "source_end_line": 104, "source_confidence": 57, "target_start_line": 70, "target_confidence": 67}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 57, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 59, "source_start_line": 77, "source_end_line": 86, "source_confidence": 57, "target_start_line": 51, "target_confidence": 67}, {"target_end_line": 67, "source_start_line": 90, "source_end_line": 97, "source_confidence": 57, "target_start_line": 61, "target_confidence": 67}, {"target_end_line": 39, "source_start_line": 8, "source_end_line": 41, "source_confidence": 57, "target_start_line": 6, "target_confidence": 67}, {"target_end_line": 48, "source_start_line": 59, "source_end_line": 67, "source_confidence": 57, "target_start_line": 39, "target_confidence": 67}, {"target_end_line": 74, "source_start_line": 100, "source_end_line": 104, "source_confidence": 57, "target_start_line": 70, "target_confidence": 67}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 57, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 59, "source_start_line": 77, "source_end_line": 86, "source_confidence": 57, "target_start_line": 51, "target_confidence": 67}, {"target_end_line": 67, "source_start_line": 90, "source_end_line": 97, "source_confidence": 57, "target_start_line": 61, "target_confidence": 67}, {"target_end_line": 39, "source_start_line": 8, "source_end_line": 41, "source_confidence": 57, "target_start_line": 6, "target_confidence": 67}, {"target_end_line": 48, "source_start_line": 59, "source_end_line": 67, "source_confidence": 57, "target_start_line": 39, "target_confidence": 67}, {"target_end_line": 74, "source_start_line": 100, "source_end_line": 104, "source_confidence": 57, "target_start_line": 70, "target_confidence": 67}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 6, "source_confidence": 57, "target_start_line": 1, "target_confidence": 67}, {"target_end_line": 59, "source_start_line": 77, "source_end_line": 86, "source_confidence": 57, "target_start_line": 51, "target_confidence": 67}, {"target_end_line": 67, "source_start_line": 90, "source_end_line": 97, "source_confidence": 57, "target_start_line": 61, "target_confidence": 67}]}, {"source": "aiMojica10_5e50953f06f120deb19a39441bf1f81a", "value": 32, "target": "davidgutierrez_473d7579c839fe90735dcba659f8171b", "links": [{"target_end_line": 98, "source_start_line": 76, "source_end_line": 83, "source_confidence": 38, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 28, "source_end_line": 32, "source_confidence": 38, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 38, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 69, "source_start_line": 55, "source_end_line": 61, "source_confidence": 38, "target_start_line": 62, "target_confidence": 26}, {"target_end_line": 83, "source_start_line": 66, "source_end_line": 72, "source_confidence": 38, "target_start_line": 77, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 76, "source_end_line": 83, "source_confidence": 38, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 28, "source_end_line": 32, "source_confidence": 38, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 38, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 69, "source_start_line": 55, "source_end_line": 61, "source_confidence": 38, "target_start_line": 62, "target_confidence": 26}, {"target_end_line": 83, "source_start_line": 66, "source_end_line": 72, "source_confidence": 38, "target_start_line": 77, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 76, "source_end_line": 83, "source_confidence": 38, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 28, "source_end_line": 32, "source_confidence": 38, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 38, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 69, "source_start_line": 55, "source_end_line": 61, "source_confidence": 38, "target_start_line": 62, "target_confidence": 26}, {"target_end_line": 83, "source_start_line": 66, "source_end_line": 72, "source_confidence": 38, "target_start_line": 77, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 76, "source_end_line": 83, "source_confidence": 38, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 28, "source_end_line": 32, "source_confidence": 38, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 38, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 69, "source_start_line": 55, "source_end_line": 61, "source_confidence": 38, "target_start_line": 62, "target_confidence": 26}, {"target_end_line": 83, "source_start_line": 66, "source_end_line": 72, "source_confidence": 38, "target_start_line": 77, "target_confidence": 26}, {"target_end_line": 98, "source_start_line": 76, "source_end_line": 83, "source_confidence": 38, "target_start_line": 90, "target_confidence": 26}, {"target_end_line": 32, "source_start_line": 28, "source_end_line": 32, "source_confidence": 38, "target_start_line": 28, "target_confidence": 26}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 38, "target_start_line": 3, "target_confidence": 26}, {"target_end_line": 69, "source_start_line": 55, "source_end_line": 61, "source_confidence": 38, "target_start_line": 62, "target_confidence": 26}, {"target_end_line": 83, "source_start_line": 66, "source_end_line": 72, "source_confidence": 38, "target_start_line": 77, "target_confidence": 26}]}, {"source": "carlosfelipetorres_2d6cb01ddd672176836356517433cb88", "value": 35, "target": "damayor_368d648d9b931cbbd310cc6f7260c8b1", "links": [{"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}, {"target_end_line": 180, "source_start_line": 23, "source_end_line": 27, "source_confidence": 28, "target_start_line": 176, "target_confidence": 15}, {"target_end_line": 196, "source_start_line": 40, "source_end_line": 49, "source_confidence": 28, "target_start_line": 190, "target_confidence": 15}, {"target_end_line": 140, "source_start_line": 3, "source_end_line": 7, "source_confidence": 28, "target_start_line": 136, "target_confidence": 15}, {"target_end_line": 300, "source_start_line": 106, "source_end_line": 111, "source_confidence": 28, "target_start_line": 295, "target_confidence": 15}, {"target_end_line": 214, "source_start_line": 63, "source_end_line": 71, "source_confidence": 28, "target_start_line": 205, "target_confidence": 15}]}, {"source": "aiMojica10_5e50953f06f120deb19a39441bf1f81a", "value": 24, "target": "damayor_092bb5b3f7478bbeeaf56f60ed9565cc", "links": [{"target_end_line": 31, "source_start_line": 3, "source_end_line": 5, "source_confidence": 28, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 63, "source_start_line": 30, "source_end_line": 32, "source_confidence": 28, "target_start_line": 61, "target_confidence": 20}, {"target_end_line": 91, "source_start_line": 64, "source_end_line": 72, "source_confidence": 28, "target_start_line": 81, "target_confidence": 20}, {"target_end_line": 42, "source_start_line": 18, "source_end_line": 23, "source_confidence": 28, "target_start_line": 36, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 3, "source_end_line": 5, "source_confidence": 28, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 63, "source_start_line": 30, "source_end_line": 32, "source_confidence": 28, "target_start_line": 61, "target_confidence": 20}, {"target_end_line": 91, "source_start_line": 64, "source_end_line": 72, "source_confidence": 28, "target_start_line": 81, "target_confidence": 20}, {"target_end_line": 42, "source_start_line": 18, "source_end_line": 23, "source_confidence": 28, "target_start_line": 36, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 3, "source_end_line": 5, "source_confidence": 28, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 63, "source_start_line": 30, "source_end_line": 32, "source_confidence": 28, "target_start_line": 61, "target_confidence": 20}, {"target_end_line": 91, "source_start_line": 64, "source_end_line": 72, "source_confidence": 28, "target_start_line": 81, "target_confidence": 20}, {"target_end_line": 42, "source_start_line": 18, "source_end_line": 23, "source_confidence": 28, "target_start_line": 36, "target_confidence": 20}, {"target_end_line": 31, "source_start_line": 3, "source_end_line": 5, "source_confidence": 28, "target_start_line": 29, "target_confidence": 20}, {"target_end_line": 63, "source_start_line": 30, "source_end_line": 32, "source_confidence": 28, "target_start_line": 61, "target_confidence": 20}, {"target_end_line": 91, "source_start_line": 64, "source_end_line": 72, "source_confidence": 28, "target_start_line": 81, "target_confidence": 20}, {"target_end_line": 42, "source_start_line": 18, "source_end_line": 23, "source_confidence": 28, "target_start_line": 36, "target_confidence": 20}]}, {"source": "elt12njo_dd2391dc0796b79d7291aff529e50fb0", "value": 19, "target": "aiMojica10_5e50953f06f120deb19a39441bf1f81a", "links": [{"target_end_line": 84, "source_start_line": 39, "source_end_line": 49, "source_confidence": 34, "target_start_line": 75, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 34, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 32, "source_start_line": 18, "source_end_line": 20, "source_confidence": 34, "target_start_line": 30, "target_confidence": 29}, {"target_end_line": 84, "source_start_line": 39, "source_end_line": 49, "source_confidence": 34, "target_start_line": 75, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 34, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 32, "source_start_line": 18, "source_end_line": 20, "source_confidence": 34, "target_start_line": 30, "target_confidence": 29}, {"target_end_line": 84, "source_start_line": 39, "source_end_line": 49, "source_confidence": 34, "target_start_line": 75, "target_confidence": 29}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 8, "source_confidence": 34, "target_start_line": 3, "target_confidence": 29}, {"target_end_line": 32, "source_start_line": 18, "source_end_line": 20, "source_confidence": 34, "target_start_line": 30, "target_confidence": 29}]}, {"source": "carlosfelipetorres_2d6cb01ddd672176836356517433cb88", "value": 22, "target": "elt12njo_dd2391dc0796b79d7291aff529e50fb0", "links": [{"target_end_line": 23, "source_start_line": 21, "source_end_line": 27, "source_confidence": 21, "target_start_line": 17, "target_confidence": 38}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 4, "target_confidence": 38}, {"target_end_line": 37, "source_start_line": 40, "source_end_line": 45, "source_confidence": 21, "target_start_line": 35, "target_confidence": 38}, {"target_end_line": 45, "source_start_line": 67, "source_end_line": 72, "source_confidence": 21, "target_start_line": 40, "target_confidence": 38}, {"target_end_line": 23, "source_start_line": 21, "source_end_line": 27, "source_confidence": 21, "target_start_line": 17, "target_confidence": 38}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 4, "target_confidence": 38}, {"target_end_line": 37, "source_start_line": 40, "source_end_line": 45, "source_confidence": 21, "target_start_line": 35, "target_confidence": 38}, {"target_end_line": 45, "source_start_line": 67, "source_end_line": 72, "source_confidence": 21, "target_start_line": 40, "target_confidence": 38}, {"target_end_line": 23, "source_start_line": 21, "source_end_line": 27, "source_confidence": 21, "target_start_line": 17, "target_confidence": 38}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 4, "target_confidence": 38}, {"target_end_line": 37, "source_start_line": 40, "source_end_line": 45, "source_confidence": 21, "target_start_line": 35, "target_confidence": 38}, {"target_end_line": 45, "source_start_line": 67, "source_end_line": 72, "source_confidence": 21, "target_start_line": 40, "target_confidence": 38}, {"target_end_line": 23, "source_start_line": 21, "source_end_line": 27, "source_confidence": 21, "target_start_line": 17, "target_confidence": 38}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 4, "target_confidence": 38}, {"target_end_line": 37, "source_start_line": 40, "source_end_line": 45, "source_confidence": 21, "target_start_line": 35, "target_confidence": 38}, {"target_end_line": 45, "source_start_line": 67, "source_end_line": 72, "source_confidence": 21, "target_start_line": 40, "target_confidence": 38}]}, {"source": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908", "value": 28, "target": "syntagmatic_1dd1acd35f77c1fc64863e42f4a405bb", "links": [{"target_end_line": 15, "source_start_line": 10, "source_end_line": 18, "source_confidence": 29, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 29, "target_start_line": 3, "target_confidence": 27}, {"target_end_line": 40, "source_start_line": 30, "source_end_line": 33, "source_confidence": 29, "target_start_line": 38, "target_confidence": 27}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 67, "source_start_line": 36, "source_end_line": 41, "source_confidence": 29, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 18, "source_confidence": 29, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 29, "target_start_line": 3, "target_confidence": 27}, {"target_end_line": 40, "source_start_line": 30, "source_end_line": 33, "source_confidence": 29, "target_start_line": 38, "target_confidence": 27}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 67, "source_start_line": 36, "source_end_line": 41, "source_confidence": 29, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 18, "source_confidence": 29, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 29, "target_start_line": 3, "target_confidence": 27}, {"target_end_line": 40, "source_start_line": 30, "source_end_line": 33, "source_confidence": 29, "target_start_line": 38, "target_confidence": 27}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 67, "source_start_line": 36, "source_end_line": 41, "source_confidence": 29, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 18, "source_confidence": 29, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 29, "target_start_line": 3, "target_confidence": 27}, {"target_end_line": 40, "source_start_line": 30, "source_end_line": 33, "source_confidence": 29, "target_start_line": 38, "target_confidence": 27}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 67, "source_start_line": 36, "source_end_line": 41, "source_confidence": 29, "target_start_line": 63, "target_confidence": 27}, {"target_end_line": 15, "source_start_line": 10, "source_end_line": 18, "source_confidence": 29, "target_start_line": 7, "target_confidence": 27}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 29, "target_start_line": 3, "target_confidence": 27}, {"target_end_line": 40, "source_start_line": 30, "source_end_line": 33, "source_confidence": 29, "target_start_line": 38, "target_confidence": 27}, {"target_end_line": 22, "source_start_line": 25, "source_end_line": 30, "source_confidence": 29, "target_start_line": 19, "target_confidence": 27}, {"target_end_line": 67, "source_start_line": 36, "source_end_line": 41, "source_confidence": 29, "target_start_line": 63, "target_confidence": 27}]}, {"source": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908", "value": 60, "target": "carlosfelipetorres_2d6cb01ddd672176836356517433cb88", "links": [{"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}]}, {"source": "emilioalvarado_b314651b76f2e0d7f63ae7b32ccfcb2d", "value": 24, "target": "LauraCortes_df8e68d8bf899bf4af425ff2e665aaae", "links": [{"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 29, "source_start_line": 27, "source_end_line": 29, "source_confidence": 21, "target_start_line": 27, "target_confidence": 35}, {"target_end_line": 63, "source_start_line": 50, "source_end_line": 59, "source_confidence": 21, "target_start_line": 55, "target_confidence": 35}, {"target_end_line": 25, "source_start_line": 18, "source_end_line": 25, "source_confidence": 21, "target_start_line": 19, "target_confidence": 35}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 29, "source_start_line": 27, "source_end_line": 29, "source_confidence": 21, "target_start_line": 27, "target_confidence": 35}, {"target_end_line": 63, "source_start_line": 50, "source_end_line": 59, "source_confidence": 21, "target_start_line": 55, "target_confidence": 35}, {"target_end_line": 25, "source_start_line": 18, "source_end_line": 25, "source_confidence": 21, "target_start_line": 19, "target_confidence": 35}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 29, "source_start_line": 27, "source_end_line": 29, "source_confidence": 21, "target_start_line": 27, "target_confidence": 35}, {"target_end_line": 63, "source_start_line": 50, "source_end_line": 59, "source_confidence": 21, "target_start_line": 55, "target_confidence": 35}, {"target_end_line": 25, "source_start_line": 18, "source_end_line": 25, "source_confidence": 21, "target_start_line": 19, "target_confidence": 35}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 21, "target_start_line": 3, "target_confidence": 35}, {"target_end_line": 29, "source_start_line": 27, "source_end_line": 29, "source_confidence": 21, "target_start_line": 27, "target_confidence": 35}, {"target_end_line": 63, "source_start_line": 50, "source_end_line": 59, "source_confidence": 21, "target_start_line": 55, "target_confidence": 35}, {"target_end_line": 25, "source_start_line": 18, "source_end_line": 25, "source_confidence": 21, "target_start_line": 19, "target_confidence": 35}]}, {"source": "EvertLagerberg_e5183b20ef9578bcce8f208686e77c30", "value": 31, "target": "tarekrached_30700ff04941b39d3d57d38a7e91cd5b", "links": [{"target_end_line": 39, "source_start_line": 18, "source_end_line": 40, "source_confidence": 72, "target_start_line": 17, "target_confidence": 77}, {"target_end_line": 14, "source_start_line": 9, "source_end_line": 16, "source_confidence": 72, "target_start_line": 7, "target_confidence": 77}, {"target_end_line": 39, "source_start_line": 18, "source_end_line": 40, "source_confidence": 72, "target_start_line": 17, "target_confidence": 77}, {"target_end_line": 14, "source_start_line": 9, "source_end_line": 16, "source_confidence": 72, "target_start_line": 7, "target_confidence": 77}]}, {"source": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908", "value": 60, "target": "carlosfelipetorres_9eea8d99357e9f7e02208dd63a68358c", "links": [{"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}, {"target_end_line": 116, "source_start_line": 81, "source_end_line": 97, "source_confidence": 56, "target_start_line": 100, "target_confidence": 45}, {"target_end_line": 29, "source_start_line": 23, "source_end_line": 30, "source_confidence": 56, "target_start_line": 23, "target_confidence": 45}, {"target_end_line": 97, "source_start_line": 67, "source_end_line": 77, "source_confidence": 56, "target_start_line": 87, "target_confidence": 45}, {"target_end_line": 48, "source_start_line": 30, "source_end_line": 37, "source_confidence": 56, "target_start_line": 40, "target_confidence": 45}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 56, "target_start_line": 3, "target_confidence": 45}, {"target_end_line": 75, "source_start_line": 41, "source_end_line": 44, "source_confidence": 56, "target_start_line": 72, "target_confidence": 45}, {"target_end_line": 124, "source_start_line": 56, "source_end_line": 63, "source_confidence": 56, "target_start_line": 116, "target_confidence": 45}]}, {"source": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908", "value": 50, "target": "carlosfelipetorres_1fd0b1a3784de17f52a5db8211eb6898", "links": [{"target_end_line": 33, "source_start_line": 17, "source_end_line": 28, "source_confidence": 48, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 111, "source_start_line": 81, "source_end_line": 99, "source_confidence": 48, "target_start_line": 91, "target_confidence": 46}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 48, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 30, "source_end_line": 37, "source_confidence": 48, "target_start_line": 38, "target_confidence": 46}, {"target_end_line": 72, "source_start_line": 63, "source_end_line": 70, "source_confidence": 48, "target_start_line": 67, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 17, "source_end_line": 28, "source_confidence": 48, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 111, "source_start_line": 81, "source_end_line": 99, "source_confidence": 48, "target_start_line": 91, "target_confidence": 46}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 48, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 30, "source_end_line": 37, "source_confidence": 48, "target_start_line": 38, "target_confidence": 46}, {"target_end_line": 72, "source_start_line": 63, "source_end_line": 70, "source_confidence": 48, "target_start_line": 67, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 17, "source_end_line": 28, "source_confidence": 48, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 111, "source_start_line": 81, "source_end_line": 99, "source_confidence": 48, "target_start_line": 91, "target_confidence": 46}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 48, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 30, "source_end_line": 37, "source_confidence": 48, "target_start_line": 38, "target_confidence": 46}, {"target_end_line": 72, "source_start_line": 63, "source_end_line": 70, "source_confidence": 48, "target_start_line": 67, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 17, "source_end_line": 28, "source_confidence": 48, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 111, "source_start_line": 81, "source_end_line": 99, "source_confidence": 48, "target_start_line": 91, "target_confidence": 46}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 48, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 30, "source_end_line": 37, "source_confidence": 48, "target_start_line": 38, "target_confidence": 46}, {"target_end_line": 72, "source_start_line": 63, "source_end_line": 70, "source_confidence": 48, "target_start_line": 67, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 17, "source_end_line": 28, "source_confidence": 48, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 111, "source_start_line": 81, "source_end_line": 99, "source_confidence": 48, "target_start_line": 91, "target_confidence": 46}, {"target_end_line": 5, "source_start_line": 5, "source_end_line": 7, "source_confidence": 48, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 46, "source_start_line": 30, "source_end_line": 37, "source_confidence": 48, "target_start_line": 38, "target_confidence": 46}, {"target_end_line": 72, "source_start_line": 63, "source_end_line": 70, "source_confidence": 48, "target_start_line": 67, "target_confidence": 46}]}, {"source": "carlosfelipetorres_820ebca0ba0b9ed3177be2dcf5c844bf", "value": 96, "target": "nychi713_a4245bf06eeb8c0c9b5ffbfc61c4a908", "links": [{"target_end_line": 99, "source_start_line": 7, "source_end_line": 102, "source_confidence": 95, "target_start_line": 4, "target_confidence": 97}]}, {"source": "carlosfelipetorres_820ebca0ba0b9ed3177be2dcf5c844bf", "value": 51, "target": "nychi713_521b41546408a6ecdf05970d6a217606", "links": [{"target_end_line": 98, "source_start_line": 84, "source_end_line": 102, "source_confidence": 46, "target_start_line": 78, "target_confidence": 51}, {"target_end_line": 29, "source_start_line": 26, "source_end_line": 31, "source_confidence": 46, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 75, "source_start_line": 66, "source_end_line": 80, "source_confidence": 46, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 46, "target_start_line": 3, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 40, "source_confidence": 46, "target_start_line": 34, "target_confidence": 51}, {"target_end_line": 98, "source_start_line": 84, "source_end_line": 102, "source_confidence": 46, "target_start_line": 78, "target_confidence": 51}, {"target_end_line": 29, "source_start_line": 26, "source_end_line": 31, "source_confidence": 46, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 75, "source_start_line": 66, "source_end_line": 80, "source_confidence": 46, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 46, "target_start_line": 3, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 40, "source_confidence": 46, "target_start_line": 34, "target_confidence": 51}, {"target_end_line": 98, "source_start_line": 84, "source_end_line": 102, "source_confidence": 46, "target_start_line": 78, "target_confidence": 51}, {"target_end_line": 29, "source_start_line": 26, "source_end_line": 31, "source_confidence": 46, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 75, "source_start_line": 66, "source_end_line": 80, "source_confidence": 46, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 46, "target_start_line": 3, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 40, "source_confidence": 46, "target_start_line": 34, "target_confidence": 51}, {"target_end_line": 98, "source_start_line": 84, "source_end_line": 102, "source_confidence": 46, "target_start_line": 78, "target_confidence": 51}, {"target_end_line": 29, "source_start_line": 26, "source_end_line": 31, "source_confidence": 46, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 75, "source_start_line": 66, "source_end_line": 80, "source_confidence": 46, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 46, "target_start_line": 3, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 40, "source_confidence": 46, "target_start_line": 34, "target_confidence": 51}, {"target_end_line": 98, "source_start_line": 84, "source_end_line": 102, "source_confidence": 46, "target_start_line": 78, "target_confidence": 51}, {"target_end_line": 29, "source_start_line": 26, "source_end_line": 31, "source_confidence": 46, "target_start_line": 25, "target_confidence": 51}, {"target_end_line": 75, "source_start_line": 66, "source_end_line": 80, "source_confidence": 46, "target_start_line": 63, "target_confidence": 51}, {"target_end_line": 5, "source_start_line": 8, "source_end_line": 10, "source_confidence": 46, "target_start_line": 3, "target_confidence": 51}, {"target_end_line": 42, "source_start_line": 33, "source_end_line": 40, "source_confidence": 46, "target_start_line": 34, "target_confidence": 51}]}, {"source": "rcrocker13_78368af248f42eae9f7cdf8bc530328b", "value": 17, "target": "carlosfelipetorres_820ebca0ba0b9ed3177be2dcf5c844bf", "links": [{"target_end_line": 31, "source_start_line": 17, "source_end_line": 21, "source_confidence": 42, "target_start_line": 26, "target_confidence": 25}, {"target_end_line": 46, "source_start_line": 47, "source_end_line": 54, "source_confidence": 42, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 4, "source_confidence": 42, "target_start_line": 8, "target_confidence": 25}, {"target_end_line": 31, "source_start_line": 17, "source_end_line": 21, "source_confidence": 42, "target_start_line": 26, "target_confidence": 25}, {"target_end_line": 46, "source_start_line": 47, "source_end_line": 54, "source_confidence": 42, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 4, "source_confidence": 42, "target_start_line": 8, "target_confidence": 25}, {"target_end_line": 31, "source_start_line": 17, "source_end_line": 21, "source_confidence": 42, "target_start_line": 26, "target_confidence": 25}, {"target_end_line": 46, "source_start_line": 47, "source_end_line": 54, "source_confidence": 42, "target_start_line": 39, "target_confidence": 25}, {"target_end_line": 10, "source_start_line": 2, "source_end_line": 4, "source_confidence": 42, "target_start_line": 8, "target_confidence": 25}]}, {"source": "emilioalvarado_b314651b76f2e0d7f63ae7b32ccfcb2d", "value": 27, "target": "rcrocker13_78368af248f42eae9f7cdf8bc530328b", "links": [{"target_end_line": 23, "source_start_line": 27, "source_end_line": 33, "source_confidence": 25, "target_start_line": 17, "target_confidence": 46}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 57, "source_confidence": 25, "target_start_line": 29, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 27, "source_end_line": 33, "source_confidence": 25, "target_start_line": 17, "target_confidence": 46}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 57, "source_confidence": 25, "target_start_line": 29, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 27, "source_end_line": 33, "source_confidence": 25, "target_start_line": 17, "target_confidence": 46}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 25, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 41, "source_start_line": 45, "source_end_line": 57, "source_confidence": 25, "target_start_line": 29, "target_confidence": 46}]}, {"source": "gpenam92_4481113e132b6c87a3375d7cc4ed1fdb", "value": 37, "target": "emilioalvarado_b314651b76f2e0d7f63ae7b32ccfcb2d", "links": [{"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 50, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 15, "source_end_line": 22, "source_confidence": 50, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 50, "source_start_line": 41, "source_end_line": 46, "source_confidence": 50, "target_start_line": 45, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 60, "source_confidence": 50, "target_start_line": 53, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 68, "source_end_line": 71, "source_confidence": 50, "target_start_line": 71, "target_confidence": 33}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 50, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 15, "source_end_line": 22, "source_confidence": 50, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 50, "source_start_line": 41, "source_end_line": 46, "source_confidence": 50, "target_start_line": 45, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 60, "source_confidence": 50, "target_start_line": 53, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 68, "source_end_line": 71, "source_confidence": 50, "target_start_line": 71, "target_confidence": 33}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 50, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 15, "source_end_line": 22, "source_confidence": 50, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 50, "source_start_line": 41, "source_end_line": 46, "source_confidence": 50, "target_start_line": 45, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 60, "source_confidence": 50, "target_start_line": 53, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 68, "source_end_line": 71, "source_confidence": 50, "target_start_line": 71, "target_confidence": 33}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 50, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 15, "source_end_line": 22, "source_confidence": 50, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 50, "source_start_line": 41, "source_end_line": 46, "source_confidence": 50, "target_start_line": 45, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 60, "source_confidence": 50, "target_start_line": 53, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 68, "source_end_line": 71, "source_confidence": 50, "target_start_line": 71, "target_confidence": 33}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 50, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 15, "source_end_line": 22, "source_confidence": 50, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 50, "source_start_line": 41, "source_end_line": 46, "source_confidence": 50, "target_start_line": 45, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 60, "source_confidence": 50, "target_start_line": 53, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 68, "source_end_line": 71, "source_confidence": 50, "target_start_line": 71, "target_confidence": 33}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 50, "target_start_line": 27, "target_confidence": 33}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 7, "source_confidence": 50, "target_start_line": 1, "target_confidence": 33}, {"target_end_line": 25, "source_start_line": 15, "source_end_line": 22, "source_confidence": 50, "target_start_line": 18, "target_confidence": 33}, {"target_end_line": 50, "source_start_line": 41, "source_end_line": 46, "source_confidence": 50, "target_start_line": 45, "target_confidence": 33}, {"target_end_line": 59, "source_start_line": 54, "source_end_line": 60, "source_confidence": 50, "target_start_line": 53, "target_confidence": 33}, {"target_end_line": 74, "source_start_line": 68, "source_end_line": 71, "source_confidence": 50, "target_start_line": 71, "target_confidence": 33}]}, {"source": "f94f_b350177133aac8f945017b91d43b321c", "value": 44, "target": "gpenam92_4481113e132b6c87a3375d7cc4ed1fdb", "links": [{"target_end_line": 71, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 63, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 31, "target_confidence": 65}, {"target_end_line": 53, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 44, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 41, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 39, "target_confidence": 65}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 9, "target_confidence": 65}, {"target_end_line": 71, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 63, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 31, "target_confidence": 65}, {"target_end_line": 53, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 44, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 41, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 39, "target_confidence": 65}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 9, "target_confidence": 65}, {"target_end_line": 71, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 63, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 31, "target_confidence": 65}, {"target_end_line": 53, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 44, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 41, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 39, "target_confidence": 65}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 9, "target_confidence": 65}, {"target_end_line": 71, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 63, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 31, "target_confidence": 65}, {"target_end_line": 53, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 44, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 41, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 39, "target_confidence": 65}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 9, "target_confidence": 65}, {"target_end_line": 71, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 63, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 31, "target_confidence": 65}, {"target_end_line": 53, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 44, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 41, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 39, "target_confidence": 65}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 9, "target_confidence": 65}, {"target_end_line": 71, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 63, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 31, "target_confidence": 65}, {"target_end_line": 53, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 44, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 41, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 39, "target_confidence": 65}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 9, "target_confidence": 65}, {"target_end_line": 71, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 63, "target_confidence": 65}, {"target_end_line": 35, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 31, "target_confidence": 65}, {"target_end_line": 53, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 44, "target_confidence": 65}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 65}, {"target_end_line": 22, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 15, "target_confidence": 65}, {"target_end_line": 41, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 39, "target_confidence": 65}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 9, "target_confidence": 65}]}, {"source": "f94f_b350177133aac8f945017b91d43b321c", "value": 44, "target": "gpenam92_3d36c5c08309ebd4ebeb19c91fe66b1a", "links": [{"target_end_line": 69, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 61, "target_confidence": 62}, {"target_end_line": 30, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 26, "target_confidence": 62}, {"target_end_line": 51, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 42, "target_confidence": 62}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 62}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 36, "target_confidence": 62}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 7, "target_confidence": 62}, {"target_end_line": 69, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 61, "target_confidence": 62}, {"target_end_line": 30, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 26, "target_confidence": 62}, {"target_end_line": 51, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 42, "target_confidence": 62}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 62}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 36, "target_confidence": 62}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 7, "target_confidence": 62}, {"target_end_line": 69, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 61, "target_confidence": 62}, {"target_end_line": 30, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 26, "target_confidence": 62}, {"target_end_line": 51, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 42, "target_confidence": 62}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 62}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 36, "target_confidence": 62}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 7, "target_confidence": 62}, {"target_end_line": 69, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 61, "target_confidence": 62}, {"target_end_line": 30, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 26, "target_confidence": 62}, {"target_end_line": 51, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 42, "target_confidence": 62}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 62}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 36, "target_confidence": 62}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 7, "target_confidence": 62}, {"target_end_line": 69, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 61, "target_confidence": 62}, {"target_end_line": 30, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 26, "target_confidence": 62}, {"target_end_line": 51, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 42, "target_confidence": 62}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 62}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 36, "target_confidence": 62}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 7, "target_confidence": 62}, {"target_end_line": 69, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 61, "target_confidence": 62}, {"target_end_line": 30, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 26, "target_confidence": 62}, {"target_end_line": 51, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 42, "target_confidence": 62}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 62}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 36, "target_confidence": 62}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 7, "target_confidence": 62}, {"target_end_line": 69, "source_start_line": 93, "source_end_line": 103, "source_confidence": 45, "target_start_line": 61, "target_confidence": 62}, {"target_end_line": 30, "source_start_line": 30, "source_end_line": 35, "source_confidence": 45, "target_start_line": 26, "target_confidence": 62}, {"target_end_line": 51, "source_start_line": 53, "source_end_line": 62, "source_confidence": 45, "target_start_line": 42, "target_confidence": 62}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 45, "target_start_line": 3, "target_confidence": 62}, {"target_end_line": 17, "source_start_line": 19, "source_end_line": 26, "source_confidence": 45, "target_start_line": 10, "target_confidence": 62}, {"target_end_line": 39, "source_start_line": 46, "source_end_line": 48, "source_confidence": 45, "target_start_line": 36, "target_confidence": 62}, {"target_end_line": 8, "source_start_line": 9, "source_end_line": 11, "source_confidence": 45, "target_start_line": 7, "target_confidence": 62}]}, {"source": "Adlopez2016_0a84dfac1d23ebbf8205e22d21cf75d9", "value": 49, "target": "jorgeehernandez_0fd0080aa77ea52304ce233d671ce485", "links": [{"target_end_line": 23, "source_start_line": 2, "source_end_line": 24, "source_confidence": 60, "target_start_line": 3, "target_confidence": 80}, {"target_end_line": 51, "source_start_line": 38, "source_end_line": 63, "source_confidence": 60, "target_start_line": 25, "target_confidence": 80}, {"target_end_line": 23, "source_start_line": 2, "source_end_line": 24, "source_confidence": 60, "target_start_line": 3, "target_confidence": 80}, {"target_end_line": 51, "source_start_line": 38, "source_end_line": 63, "source_confidence": 60, "target_start_line": 25, "target_confidence": 80}]}, {"source": "emilioalvarado_cc77d77a4173f5b3bc254c46762ca253", "value": 50, "target": "Adlopez2016_0a84dfac1d23ebbf8205e22d21cf75d9", "links": [{"target_end_line": 69, "source_start_line": 42, "source_end_line": 73, "source_confidence": 42, "target_start_line": 38, "target_confidence": 63}, {"target_end_line": 21, "source_start_line": 25, "source_end_line": 30, "source_confidence": 42, "target_start_line": 17, "target_confidence": 63}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 42, "target_start_line": 4, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 38, "source_confidence": 42, "target_start_line": 24, "target_confidence": 63}, {"target_end_line": 69, "source_start_line": 42, "source_end_line": 73, "source_confidence": 42, "target_start_line": 38, "target_confidence": 63}, {"target_end_line": 21, "source_start_line": 25, "source_end_line": 30, "source_confidence": 42, "target_start_line": 17, "target_confidence": 63}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 42, "target_start_line": 4, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 38, "source_confidence": 42, "target_start_line": 24, "target_confidence": 63}, {"target_end_line": 69, "source_start_line": 42, "source_end_line": 73, "source_confidence": 42, "target_start_line": 38, "target_confidence": 63}, {"target_end_line": 21, "source_start_line": 25, "source_end_line": 30, "source_confidence": 42, "target_start_line": 17, "target_confidence": 63}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 42, "target_start_line": 4, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 38, "source_confidence": 42, "target_start_line": 24, "target_confidence": 63}, {"target_end_line": 69, "source_start_line": 42, "source_end_line": 73, "source_confidence": 42, "target_start_line": 38, "target_confidence": 63}, {"target_end_line": 21, "source_start_line": 25, "source_end_line": 30, "source_confidence": 42, "target_start_line": 17, "target_confidence": 63}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 42, "target_start_line": 4, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 30, "source_end_line": 38, "source_confidence": 42, "target_start_line": 24, "target_confidence": 63}]}, {"source": "emilioalvarado_cc77d77a4173f5b3bc254c46762ca253", "value": 73, "target": "f94f_b350177133aac8f945017b91d43b321c", "links": [{"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}]}, {"source": "emilioalvarado_cc77d77a4173f5b3bc254c46762ca253", "value": 73, "target": "f94f_eaea26f110b8d76afc2a4330d737df69", "links": [{"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}, {"target_end_line": 35, "source_start_line": 12, "source_end_line": 30, "source_confidence": 64, "target_start_line": 18, "target_confidence": 66}, {"target_end_line": 13, "source_start_line": 1, "source_end_line": 12, "source_confidence": 64, "target_start_line": 1, "target_confidence": 66}, {"target_end_line": 103, "source_start_line": 116, "source_end_line": 124, "source_confidence": 64, "target_start_line": 92, "target_confidence": 66}, {"target_end_line": 52, "source_start_line": 89, "source_end_line": 96, "source_confidence": 64, "target_start_line": 46, "target_confidence": 66}, {"target_end_line": 62, "source_start_line": 96, "source_end_line": 105, "source_confidence": 64, "target_start_line": 53, "target_confidence": 66}, {"target_end_line": 43, "source_start_line": 77, "source_end_line": 82, "source_confidence": 64, "target_start_line": 38, "target_confidence": 66}, {"target_end_line": 79, "source_start_line": 44, "source_end_line": 50, "source_confidence": 64, "target_start_line": 73, "target_confidence": 66}]}, {"source": "f94f_6f1d5e3196c3a8896b282978f5fe536c", "value": 66, "target": "emilioalvarado_cc77d77a4173f5b3bc254c46762ca253", "links": [{"target_end_line": 30, "source_start_line": 1, "source_end_line": 31, "source_confidence": 88, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 110, "source_start_line": 42, "source_end_line": 62, "source_confidence": 88, "target_start_line": 89, "target_confidence": 59}, {"target_end_line": 124, "source_start_line": 63, "source_end_line": 76, "source_confidence": 88, "target_start_line": 111, "target_confidence": 59}, {"target_end_line": 30, "source_start_line": 1, "source_end_line": 31, "source_confidence": 88, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 110, "source_start_line": 42, "source_end_line": 62, "source_confidence": 88, "target_start_line": 89, "target_confidence": 59}, {"target_end_line": 124, "source_start_line": 63, "source_end_line": 76, "source_confidence": 88, "target_start_line": 111, "target_confidence": 59}, {"target_end_line": 30, "source_start_line": 1, "source_end_line": 31, "source_confidence": 88, "target_start_line": 1, "target_confidence": 59}, {"target_end_line": 110, "source_start_line": 42, "source_end_line": 62, "source_confidence": 88, "target_start_line": 89, "target_confidence": 59}, {"target_end_line": 124, "source_start_line": 63, "source_end_line": 76, "source_confidence": 88, "target_start_line": 111, "target_confidence": 59}]}, {"source": "cis321_756fd191aad4450867c2a5c309053e5b", "value": 49, "target": "f94f_6f1d5e3196c3a8896b282978f5fe536c", "links": [{"target_end_line": 64, "source_start_line": 44, "source_end_line": 61, "source_confidence": 62, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 62, "target_start_line": 26, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 64, "source_end_line": 71, "source_confidence": 62, "target_start_line": 69, "target_confidence": 73}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 62, "target_start_line": 3, "target_confidence": 73}, {"target_end_line": 22, "source_start_line": 15, "source_end_line": 22, "source_confidence": 62, "target_start_line": 14, "target_confidence": 73}, {"target_end_line": 11, "source_start_line": 9, "source_end_line": 13, "source_confidence": 62, "target_start_line": 9, "target_confidence": 73}, {"target_end_line": 44, "source_start_line": 41, "source_end_line": 42, "source_confidence": 62, "target_start_line": 43, "target_confidence": 73}, {"target_end_line": 64, "source_start_line": 44, "source_end_line": 61, "source_confidence": 62, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 62, "target_start_line": 26, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 64, "source_end_line": 71, "source_confidence": 62, "target_start_line": 69, "target_confidence": 73}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 62, "target_start_line": 3, "target_confidence": 73}, {"target_end_line": 22, "source_start_line": 15, "source_end_line": 22, "source_confidence": 62, "target_start_line": 14, "target_confidence": 73}, {"target_end_line": 11, "source_start_line": 9, "source_end_line": 13, "source_confidence": 62, "target_start_line": 9, "target_confidence": 73}, {"target_end_line": 44, "source_start_line": 41, "source_end_line": 42, "source_confidence": 62, "target_start_line": 43, "target_confidence": 73}, {"target_end_line": 64, "source_start_line": 44, "source_end_line": 61, "source_confidence": 62, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 62, "target_start_line": 26, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 64, "source_end_line": 71, "source_confidence": 62, "target_start_line": 69, "target_confidence": 73}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 62, "target_start_line": 3, "target_confidence": 73}, {"target_end_line": 22, "source_start_line": 15, "source_end_line": 22, "source_confidence": 62, "target_start_line": 14, "target_confidence": 73}, {"target_end_line": 11, "source_start_line": 9, "source_end_line": 13, "source_confidence": 62, "target_start_line": 9, "target_confidence": 73}, {"target_end_line": 44, "source_start_line": 41, "source_end_line": 42, "source_confidence": 62, "target_start_line": 43, "target_confidence": 73}, {"target_end_line": 64, "source_start_line": 44, "source_end_line": 61, "source_confidence": 62, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 62, "target_start_line": 26, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 64, "source_end_line": 71, "source_confidence": 62, "target_start_line": 69, "target_confidence": 73}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 62, "target_start_line": 3, "target_confidence": 73}, {"target_end_line": 22, "source_start_line": 15, "source_end_line": 22, "source_confidence": 62, "target_start_line": 14, "target_confidence": 73}, {"target_end_line": 11, "source_start_line": 9, "source_end_line": 13, "source_confidence": 62, "target_start_line": 9, "target_confidence": 73}, {"target_end_line": 44, "source_start_line": 41, "source_end_line": 42, "source_confidence": 62, "target_start_line": 43, "target_confidence": 73}, {"target_end_line": 64, "source_start_line": 44, "source_end_line": 61, "source_confidence": 62, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 62, "target_start_line": 26, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 64, "source_end_line": 71, "source_confidence": 62, "target_start_line": 69, "target_confidence": 73}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 62, "target_start_line": 3, "target_confidence": 73}, {"target_end_line": 22, "source_start_line": 15, "source_end_line": 22, "source_confidence": 62, "target_start_line": 14, "target_confidence": 73}, {"target_end_line": 11, "source_start_line": 9, "source_end_line": 13, "source_confidence": 62, "target_start_line": 9, "target_confidence": 73}, {"target_end_line": 44, "source_start_line": 41, "source_end_line": 42, "source_confidence": 62, "target_start_line": 43, "target_confidence": 73}, {"target_end_line": 64, "source_start_line": 44, "source_end_line": 61, "source_confidence": 62, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 62, "target_start_line": 26, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 64, "source_end_line": 71, "source_confidence": 62, "target_start_line": 69, "target_confidence": 73}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 62, "target_start_line": 3, "target_confidence": 73}, {"target_end_line": 22, "source_start_line": 15, "source_end_line": 22, "source_confidence": 62, "target_start_line": 14, "target_confidence": 73}, {"target_end_line": 11, "source_start_line": 9, "source_end_line": 13, "source_confidence": 62, "target_start_line": 9, "target_confidence": 73}, {"target_end_line": 44, "source_start_line": 41, "source_end_line": 42, "source_confidence": 62, "target_start_line": 43, "target_confidence": 73}, {"target_end_line": 64, "source_start_line": 44, "source_end_line": 61, "source_confidence": 62, "target_start_line": 47, "target_confidence": 73}, {"target_end_line": 31, "source_start_line": 31, "source_end_line": 35, "source_confidence": 62, "target_start_line": 26, "target_confidence": 73}, {"target_end_line": 76, "source_start_line": 64, "source_end_line": 71, "source_confidence": 62, "target_start_line": 69, "target_confidence": 73}, {"target_end_line": 5, "source_start_line": 3, "source_end_line": 5, "source_confidence": 62, "target_start_line": 3, "target_confidence": 73}, {"target_end_line": 22, "source_start_line": 15, "source_end_line": 22, "source_confidence": 62, "target_start_line": 14, "target_confidence": 73}, {"target_end_line": 11, "source_start_line": 9, "source_end_line": 13, "source_confidence": 62, "target_start_line": 9, "target_confidence": 73}, {"target_end_line": 44, "source_start_line": 41, "source_end_line": 42, "source_confidence": 62, "target_start_line": 43, "target_confidence": 73}]}, {"source": "davidgutierrez_1080f243bf9d715df7953c56bc2ebca6", "value": 57, "target": "emilioalvarado_c4246dbe21746463f53f05bf5da5db1b", "links": [{"target_end_line": 22, "source_start_line": 10, "source_end_line": 26, "source_confidence": 48, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 54, "source_start_line": 44, "source_end_line": 64, "source_confidence": 48, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 84, "source_start_line": 107, "source_end_line": 122, "source_confidence": 48, "target_start_line": 69, "target_confidence": 68}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 48, "target_start_line": 4, "target_confidence": 68}, {"target_end_line": 22, "source_start_line": 10, "source_end_line": 26, "source_confidence": 48, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 54, "source_start_line": 44, "source_end_line": 64, "source_confidence": 48, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 84, "source_start_line": 107, "source_end_line": 122, "source_confidence": 48, "target_start_line": 69, "target_confidence": 68}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 48, "target_start_line": 4, "target_confidence": 68}, {"target_end_line": 22, "source_start_line": 10, "source_end_line": 26, "source_confidence": 48, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 54, "source_start_line": 44, "source_end_line": 64, "source_confidence": 48, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 84, "source_start_line": 107, "source_end_line": 122, "source_confidence": 48, "target_start_line": 69, "target_confidence": 68}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 48, "target_start_line": 4, "target_confidence": 68}, {"target_end_line": 22, "source_start_line": 10, "source_end_line": 26, "source_confidence": 48, "target_start_line": 8, "target_confidence": 68}, {"target_end_line": 54, "source_start_line": 44, "source_end_line": 64, "source_confidence": 48, "target_start_line": 34, "target_confidence": 68}, {"target_end_line": 84, "source_start_line": 107, "source_end_line": 122, "source_confidence": 48, "target_start_line": 69, "target_confidence": 68}, {"target_end_line": 7, "source_start_line": 4, "source_end_line": 6, "source_confidence": 48, "target_start_line": 4, "target_confidence": 68}]}, {"source": "apolan_0a6ca5ab0effa6ce36d90ea700f70dac", "value": 50, "target": "cis321_756fd191aad4450867c2a5c309053e5b", "links": [{"target_end_line": 69, "source_start_line": 71, "source_end_line": 88, "source_confidence": 41, "target_start_line": 52, "target_confidence": 60}, {"target_end_line": 37, "source_start_line": 50, "source_end_line": 55, "source_confidence": 41, "target_start_line": 31, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 33, "source_end_line": 36, "source_confidence": 41, "target_start_line": 9, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 29, "source_end_line": 33, "source_confidence": 41, "target_start_line": 3, "target_confidence": 60}, {"target_end_line": 28, "source_start_line": 38, "source_end_line": 42, "source_confidence": 41, "target_start_line": 24, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 58, "source_end_line": 59, "source_confidence": 41, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 88, "source_confidence": 41, "target_start_line": 52, "target_confidence": 60}, {"target_end_line": 37, "source_start_line": 50, "source_end_line": 55, "source_confidence": 41, "target_start_line": 31, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 33, "source_end_line": 36, "source_confidence": 41, "target_start_line": 9, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 29, "source_end_line": 33, "source_confidence": 41, "target_start_line": 3, "target_confidence": 60}, {"target_end_line": 28, "source_start_line": 38, "source_end_line": 42, "source_confidence": 41, "target_start_line": 24, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 58, "source_end_line": 59, "source_confidence": 41, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 88, "source_confidence": 41, "target_start_line": 52, "target_confidence": 60}, {"target_end_line": 37, "source_start_line": 50, "source_end_line": 55, "source_confidence": 41, "target_start_line": 31, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 33, "source_end_line": 36, "source_confidence": 41, "target_start_line": 9, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 29, "source_end_line": 33, "source_confidence": 41, "target_start_line": 3, "target_confidence": 60}, {"target_end_line": 28, "source_start_line": 38, "source_end_line": 42, "source_confidence": 41, "target_start_line": 24, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 58, "source_end_line": 59, "source_confidence": 41, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 88, "source_confidence": 41, "target_start_line": 52, "target_confidence": 60}, {"target_end_line": 37, "source_start_line": 50, "source_end_line": 55, "source_confidence": 41, "target_start_line": 31, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 33, "source_end_line": 36, "source_confidence": 41, "target_start_line": 9, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 29, "source_end_line": 33, "source_confidence": 41, "target_start_line": 3, "target_confidence": 60}, {"target_end_line": 28, "source_start_line": 38, "source_end_line": 42, "source_confidence": 41, "target_start_line": 24, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 58, "source_end_line": 59, "source_confidence": 41, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 88, "source_confidence": 41, "target_start_line": 52, "target_confidence": 60}, {"target_end_line": 37, "source_start_line": 50, "source_end_line": 55, "source_confidence": 41, "target_start_line": 31, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 33, "source_end_line": 36, "source_confidence": 41, "target_start_line": 9, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 29, "source_end_line": 33, "source_confidence": 41, "target_start_line": 3, "target_confidence": 60}, {"target_end_line": 28, "source_start_line": 38, "source_end_line": 42, "source_confidence": 41, "target_start_line": 24, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 58, "source_end_line": 59, "source_confidence": 41, "target_start_line": 41, "target_confidence": 60}, {"target_end_line": 69, "source_start_line": 71, "source_end_line": 88, "source_confidence": 41, "target_start_line": 52, "target_confidence": 60}, {"target_end_line": 37, "source_start_line": 50, "source_end_line": 55, "source_confidence": 41, "target_start_line": 31, "target_confidence": 60}, {"target_end_line": 21, "source_start_line": 33, "source_end_line": 36, "source_confidence": 41, "target_start_line": 9, "target_confidence": 60}, {"target_end_line": 7, "source_start_line": 29, "source_end_line": 33, "source_confidence": 41, "target_start_line": 3, "target_confidence": 60}, {"target_end_line": 28, "source_start_line": 38, "source_end_line": 42, "source_confidence": 41, "target_start_line": 24, "target_confidence": 60}, {"target_end_line": 42, "source_start_line": 58, "source_end_line": 59, "source_confidence": 41, "target_start_line": 41, "target_confidence": 60}]}, {"source": "jcamilort_954faf8e73fa80a079146480b321d28e", "value": 42, "target": "davidgutierrez_1080f243bf9d715df7953c56bc2ebca6", "links": [{"target_end_line": 27, "source_start_line": 34, "source_end_line": 52, "source_confidence": 38, "target_start_line": 10, "target_confidence": 37}, {"target_end_line": 64, "source_start_line": 64, "source_end_line": 82, "source_confidence": 38, "target_start_line": 46, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 30, "source_end_line": 33, "source_confidence": 38, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 34, "source_end_line": 52, "source_confidence": 38, "target_start_line": 10, "target_confidence": 37}, {"target_end_line": 64, "source_start_line": 64, "source_end_line": 82, "source_confidence": 38, "target_start_line": 46, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 30, "source_end_line": 33, "source_confidence": 38, "target_start_line": 4, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 34, "source_end_line": 52, "source_confidence": 38, "target_start_line": 10, "target_confidence": 37}, {"target_end_line": 64, "source_start_line": 64, "source_end_line": 82, "source_confidence": 38, "target_start_line": 46, "target_confidence": 37}, {"target_end_line": 4, "source_start_line": 30, "source_end_line": 33, "source_confidence": 38, "target_start_line": 4, "target_confidence": 37}]}, {"source": "JuanSMartinez_175ee2ad21d78b4575b42156bcdabc45", "value": 37, "target": "jcamilort_954faf8e73fa80a079146480b321d28e", "links": [{"target_end_line": 47, "source_start_line": 4, "source_end_line": 19, "source_confidence": 68, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 82, "source_start_line": 26, "source_end_line": 44, "source_confidence": 68, "target_start_line": 64, "target_confidence": 35}, {"target_end_line": 47, "source_start_line": 4, "source_end_line": 19, "source_confidence": 68, "target_start_line": 30, "target_confidence": 35}, {"target_end_line": 82, "source_start_line": 26, "source_end_line": 44, "source_confidence": 68, "target_start_line": 64, "target_confidence": 35}]}, {"source": "john-guerra_221cb4c7fb676bcb58a25d4982114de3", "value": 34, "target": "jonsadka_55b7080d6105c0643148d49f0ebc8856", "links": [{"target_end_line": 11, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 6, "target_confidence": 18}, {"target_end_line": 107, "source_start_line": 71, "source_end_line": 78, "source_confidence": 36, "target_start_line": 100, "target_confidence": 18}, {"target_end_line": 117, "source_start_line": 79, "source_end_line": 88, "source_confidence": 36, "target_start_line": 108, "target_confidence": 18}, {"target_end_line": 55, "source_start_line": 37, "source_end_line": 41, "source_confidence": 36, "target_start_line": 46, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 6, "target_confidence": 18}, {"target_end_line": 107, "source_start_line": 71, "source_end_line": 78, "source_confidence": 36, "target_start_line": 100, "target_confidence": 18}, {"target_end_line": 117, "source_start_line": 79, "source_end_line": 88, "source_confidence": 36, "target_start_line": 108, "target_confidence": 18}, {"target_end_line": 55, "source_start_line": 37, "source_end_line": 41, "source_confidence": 36, "target_start_line": 46, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 6, "target_confidence": 18}, {"target_end_line": 107, "source_start_line": 71, "source_end_line": 78, "source_confidence": 36, "target_start_line": 100, "target_confidence": 18}, {"target_end_line": 117, "source_start_line": 79, "source_end_line": 88, "source_confidence": 36, "target_start_line": 108, "target_confidence": 18}, {"target_end_line": 55, "source_start_line": 37, "source_end_line": 41, "source_confidence": 36, "target_start_line": 46, "target_confidence": 18}, {"target_end_line": 11, "source_start_line": 23, "source_end_line": 27, "source_confidence": 36, "target_start_line": 6, "target_confidence": 18}, {"target_end_line": 107, "source_start_line": 71, "source_end_line": 78, "source_confidence": 36, "target_start_line": 100, "target_confidence": 18}, {"target_end_line": 117, "source_start_line": 79, "source_end_line": 88, "source_confidence": 36, "target_start_line": 108, "target_confidence": 18}, {"target_end_line": 55, "source_start_line": 37, "source_end_line": 41, "source_confidence": 36, "target_start_line": 46, "target_confidence": 18}]}, {"source": "Franramy_a92c9dcf7a75de2e8851f0c37c2add31", "value": 40, "target": "JuanSMartinez_175ee2ad21d78b4575b42156bcdabc45", "links": [{"target_end_line": 19, "source_start_line": 11, "source_end_line": 24, "source_confidence": 43, "target_start_line": 8, "target_confidence": 71}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 59, "source_confidence": 43, "target_start_line": 24, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 7, "source_confidence": 43, "target_start_line": 2, "target_confidence": 71}, {"target_end_line": 19, "source_start_line": 11, "source_end_line": 24, "source_confidence": 43, "target_start_line": 8, "target_confidence": 71}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 59, "source_confidence": 43, "target_start_line": 24, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 7, "source_confidence": 43, "target_start_line": 2, "target_confidence": 71}, {"target_end_line": 19, "source_start_line": 11, "source_end_line": 24, "source_confidence": 43, "target_start_line": 8, "target_confidence": 71}, {"target_end_line": 44, "source_start_line": 39, "source_end_line": 59, "source_confidence": 43, "target_start_line": 24, "target_confidence": 71}, {"target_end_line": 7, "source_start_line": 3, "source_end_line": 7, "source_confidence": 43, "target_start_line": 2, "target_confidence": 71}]}, {"source": "jcamilort_414002d5491797af4cccfdc4740f456e", "value": 69, "target": "Franramy_a92c9dcf7a75de2e8851f0c37c2add31", "links": [{"target_end_line": 27, "source_start_line": 8, "source_end_line": 24, "source_confidence": 75, "target_start_line": 11, "target_confidence": 68}, {"target_end_line": 96, "source_start_line": 63, "source_end_line": 86, "source_confidence": 75, "target_start_line": 71, "target_confidence": 68}, {"target_end_line": 59, "source_start_line": 36, "source_end_line": 56, "source_confidence": 75, "target_start_line": 39, "target_confidence": 68}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 7, "source_confidence": 75, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 8, "source_end_line": 24, "source_confidence": 75, "target_start_line": 11, "target_confidence": 68}, {"target_end_line": 96, "source_start_line": 63, "source_end_line": 86, "source_confidence": 75, "target_start_line": 71, "target_confidence": 68}, {"target_end_line": 59, "source_start_line": 36, "source_end_line": 56, "source_confidence": 75, "target_start_line": 39, "target_confidence": 68}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 7, "source_confidence": 75, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 8, "source_end_line": 24, "source_confidence": 75, "target_start_line": 11, "target_confidence": 68}, {"target_end_line": 96, "source_start_line": 63, "source_end_line": 86, "source_confidence": 75, "target_start_line": 71, "target_confidence": 68}, {"target_end_line": 59, "source_start_line": 36, "source_end_line": 56, "source_confidence": 75, "target_start_line": 39, "target_confidence": 68}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 7, "source_confidence": 75, "target_start_line": 1, "target_confidence": 68}, {"target_end_line": 27, "source_start_line": 8, "source_end_line": 24, "source_confidence": 75, "target_start_line": 11, "target_confidence": 68}, {"target_end_line": 96, "source_start_line": 63, "source_end_line": 86, "source_confidence": 75, "target_start_line": 71, "target_confidence": 68}, {"target_end_line": 59, "source_start_line": 36, "source_end_line": 56, "source_confidence": 75, "target_start_line": 39, "target_confidence": 68}, {"target_end_line": 5, "source_start_line": 1, "source_end_line": 7, "source_confidence": 75, "target_start_line": 1, "target_confidence": 68}]}, {"source": "aiMojica10_b745a9d70a0f581b3cea1dd957e82a6e", "value": 67, "target": "apolan_0a6ca5ab0effa6ce36d90ea700f70dac", "links": [{"target_end_line": 28, "source_start_line": 2, "source_end_line": 13, "source_confidence": 84, "target_start_line": 4, "target_confidence": 72}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 37, "source_confidence": 84, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 87, "source_start_line": 61, "source_end_line": 78, "source_confidence": 84, "target_start_line": 71, "target_confidence": 72}, {"target_end_line": 55, "source_start_line": 40, "source_end_line": 46, "source_confidence": 84, "target_start_line": 50, "target_confidence": 72}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 16, "source_confidence": 84, "target_start_line": 29, "target_confidence": 72}, {"target_end_line": 92, "source_start_line": 80, "source_end_line": 83, "source_confidence": 84, "target_start_line": 89, "target_confidence": 72}, {"target_end_line": 59, "source_start_line": 49, "source_end_line": 50, "source_confidence": 84, "target_start_line": 58, "target_confidence": 72}, {"target_end_line": 28, "source_start_line": 2, "source_end_line": 13, "source_confidence": 84, "target_start_line": 4, "target_confidence": 72}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 37, "source_confidence": 84, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 87, "source_start_line": 61, "source_end_line": 78, "source_confidence": 84, "target_start_line": 71, "target_confidence": 72}, {"target_end_line": 55, "source_start_line": 40, "source_end_line": 46, "source_confidence": 84, "target_start_line": 50, "target_confidence": 72}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 16, "source_confidence": 84, "target_start_line": 29, "target_confidence": 72}, {"target_end_line": 92, "source_start_line": 80, "source_end_line": 83, "source_confidence": 84, "target_start_line": 89, "target_confidence": 72}, {"target_end_line": 59, "source_start_line": 49, "source_end_line": 50, "source_confidence": 84, "target_start_line": 58, "target_confidence": 72}, {"target_end_line": 28, "source_start_line": 2, "source_end_line": 13, "source_confidence": 84, "target_start_line": 4, "target_confidence": 72}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 37, "source_confidence": 84, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 87, "source_start_line": 61, "source_end_line": 78, "source_confidence": 84, "target_start_line": 71, "target_confidence": 72}, {"target_end_line": 55, "source_start_line": 40, "source_end_line": 46, "source_confidence": 84, "target_start_line": 50, "target_confidence": 72}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 16, "source_confidence": 84, "target_start_line": 29, "target_confidence": 72}, {"target_end_line": 92, "source_start_line": 80, "source_end_line": 83, "source_confidence": 84, "target_start_line": 89, "target_confidence": 72}, {"target_end_line": 59, "source_start_line": 49, "source_end_line": 50, "source_confidence": 84, "target_start_line": 58, "target_confidence": 72}, {"target_end_line": 28, "source_start_line": 2, "source_end_line": 13, "source_confidence": 84, "target_start_line": 4, "target_confidence": 72}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 37, "source_confidence": 84, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 87, "source_start_line": 61, "source_end_line": 78, "source_confidence": 84, "target_start_line": 71, "target_confidence": 72}, {"target_end_line": 55, "source_start_line": 40, "source_end_line": 46, "source_confidence": 84, "target_start_line": 50, "target_confidence": 72}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 16, "source_confidence": 84, "target_start_line": 29, "target_confidence": 72}, {"target_end_line": 92, "source_start_line": 80, "source_end_line": 83, "source_confidence": 84, "target_start_line": 89, "target_confidence": 72}, {"target_end_line": 59, "source_start_line": 49, "source_end_line": 50, "source_confidence": 84, "target_start_line": 58, "target_confidence": 72}, {"target_end_line": 28, "source_start_line": 2, "source_end_line": 13, "source_confidence": 84, "target_start_line": 4, "target_confidence": 72}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 37, "source_confidence": 84, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 87, "source_start_line": 61, "source_end_line": 78, "source_confidence": 84, "target_start_line": 71, "target_confidence": 72}, {"target_end_line": 55, "source_start_line": 40, "source_end_line": 46, "source_confidence": 84, "target_start_line": 50, "target_confidence": 72}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 16, "source_confidence": 84, "target_start_line": 29, "target_confidence": 72}, {"target_end_line": 92, "source_start_line": 80, "source_end_line": 83, "source_confidence": 84, "target_start_line": 89, "target_confidence": 72}, {"target_end_line": 59, "source_start_line": 49, "source_end_line": 50, "source_confidence": 84, "target_start_line": 58, "target_confidence": 72}, {"target_end_line": 28, "source_start_line": 2, "source_end_line": 13, "source_confidence": 84, "target_start_line": 4, "target_confidence": 72}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 37, "source_confidence": 84, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 87, "source_start_line": 61, "source_end_line": 78, "source_confidence": 84, "target_start_line": 71, "target_confidence": 72}, {"target_end_line": 55, "source_start_line": 40, "source_end_line": 46, "source_confidence": 84, "target_start_line": 50, "target_confidence": 72}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 16, "source_confidence": 84, "target_start_line": 29, "target_confidence": 72}, {"target_end_line": 92, "source_start_line": 80, "source_end_line": 83, "source_confidence": 84, "target_start_line": 89, "target_confidence": 72}, {"target_end_line": 59, "source_start_line": 49, "source_end_line": 50, "source_confidence": 84, "target_start_line": 58, "target_confidence": 72}, {"target_end_line": 28, "source_start_line": 2, "source_end_line": 13, "source_confidence": 84, "target_start_line": 4, "target_confidence": 72}, {"target_end_line": 42, "source_start_line": 19, "source_end_line": 37, "source_confidence": 84, "target_start_line": 33, "target_confidence": 72}, {"target_end_line": 87, "source_start_line": 61, "source_end_line": 78, "source_confidence": 84, "target_start_line": 71, "target_confidence": 72}, {"target_end_line": 55, "source_start_line": 40, "source_end_line": 46, "source_confidence": 84, "target_start_line": 50, "target_confidence": 72}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 16, "source_confidence": 84, "target_start_line": 29, "target_confidence": 72}, {"target_end_line": 92, "source_start_line": 80, "source_end_line": 83, "source_confidence": 84, "target_start_line": 89, "target_confidence": 72}, {"target_end_line": 59, "source_start_line": 49, "source_end_line": 50, "source_confidence": 84, "target_start_line": 58, "target_confidence": 72}]}, {"source": "caev03_60a113c31e24ddfed238ca510cfd6246", "value": 42, "target": "aiMojica10_b745a9d70a0f581b3cea1dd957e82a6e", "links": [{"target_end_line": 44, "source_start_line": 28, "source_end_line": 33, "source_confidence": 44, "target_start_line": 40, "target_confidence": 36}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 8, "source_confidence": 44, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 60, "source_start_line": 50, "source_end_line": 58, "source_confidence": 44, "target_start_line": 52, "target_confidence": 36}, {"target_end_line": 71, "source_start_line": 58, "source_end_line": 67, "source_confidence": 44, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 50, "source_start_line": 45, "source_end_line": 47, "source_confidence": 44, "target_start_line": 46, "target_confidence": 36}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 21, "source_confidence": 44, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 44, "source_start_line": 28, "source_end_line": 33, "source_confidence": 44, "target_start_line": 40, "target_confidence": 36}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 8, "source_confidence": 44, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 60, "source_start_line": 50, "source_end_line": 58, "source_confidence": 44, "target_start_line": 52, "target_confidence": 36}, {"target_end_line": 71, "source_start_line": 58, "source_end_line": 67, "source_confidence": 44, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 50, "source_start_line": 45, "source_end_line": 47, "source_confidence": 44, "target_start_line": 46, "target_confidence": 36}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 21, "source_confidence": 44, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 44, "source_start_line": 28, "source_end_line": 33, "source_confidence": 44, "target_start_line": 40, "target_confidence": 36}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 8, "source_confidence": 44, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 60, "source_start_line": 50, "source_end_line": 58, "source_confidence": 44, "target_start_line": 52, "target_confidence": 36}, {"target_end_line": 71, "source_start_line": 58, "source_end_line": 67, "source_confidence": 44, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 50, "source_start_line": 45, "source_end_line": 47, "source_confidence": 44, "target_start_line": 46, "target_confidence": 36}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 21, "source_confidence": 44, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 44, "source_start_line": 28, "source_end_line": 33, "source_confidence": 44, "target_start_line": 40, "target_confidence": 36}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 8, "source_confidence": 44, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 60, "source_start_line": 50, "source_end_line": 58, "source_confidence": 44, "target_start_line": 52, "target_confidence": 36}, {"target_end_line": 71, "source_start_line": 58, "source_end_line": 67, "source_confidence": 44, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 50, "source_start_line": 45, "source_end_line": 47, "source_confidence": 44, "target_start_line": 46, "target_confidence": 36}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 21, "source_confidence": 44, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 44, "source_start_line": 28, "source_end_line": 33, "source_confidence": 44, "target_start_line": 40, "target_confidence": 36}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 8, "source_confidence": 44, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 60, "source_start_line": 50, "source_end_line": 58, "source_confidence": 44, "target_start_line": 52, "target_confidence": 36}, {"target_end_line": 71, "source_start_line": 58, "source_end_line": 67, "source_confidence": 44, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 50, "source_start_line": 45, "source_end_line": 47, "source_confidence": 44, "target_start_line": 46, "target_confidence": 36}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 21, "source_confidence": 44, "target_start_line": 25, "target_confidence": 36}, {"target_end_line": 44, "source_start_line": 28, "source_end_line": 33, "source_confidence": 44, "target_start_line": 40, "target_confidence": 36}, {"target_end_line": 18, "source_start_line": 3, "source_end_line": 8, "source_confidence": 44, "target_start_line": 14, "target_confidence": 36}, {"target_end_line": 60, "source_start_line": 50, "source_end_line": 58, "source_confidence": 44, "target_start_line": 52, "target_confidence": 36}, {"target_end_line": 71, "source_start_line": 58, "source_end_line": 67, "source_confidence": 44, "target_start_line": 61, "target_confidence": 36}, {"target_end_line": 50, "source_start_line": 45, "source_end_line": 47, "source_confidence": 44, "target_start_line": 46, "target_confidence": 36}, {"target_end_line": 31, "source_start_line": 14, "source_end_line": 21, "source_confidence": 44, "target_start_line": 25, "target_confidence": 36}]}, {"source": "f94f_d37674701c4901e8c753f861443bf945", "value": 84, "target": "caev03_60a113c31e24ddfed238ca510cfd6246", "links": [{"target_end_line": 91, "source_start_line": 37, "source_end_line": 91, "source_confidence": 94, "target_start_line": 37, "target_confidence": 94}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 94, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 33, "source_start_line": 28, "source_end_line": 34, "source_confidence": 94, "target_start_line": 27, "target_confidence": 94}, {"target_end_line": 91, "source_start_line": 37, "source_end_line": 91, "source_confidence": 94, "target_start_line": 37, "target_confidence": 94}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 94, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 33, "source_start_line": 28, "source_end_line": 34, "source_confidence": 94, "target_start_line": 27, "target_confidence": 94}, {"target_end_line": 91, "source_start_line": 37, "source_end_line": 91, "source_confidence": 94, "target_start_line": 37, "target_confidence": 94}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 94, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 33, "source_start_line": 28, "source_end_line": 34, "source_confidence": 94, "target_start_line": 27, "target_confidence": 94}]}, {"source": "caev03_4e8fabd047681b19e455006a21251ccf", "value": 84, "target": "f94f_d37674701c4901e8c753f861443bf945", "links": [{"target_end_line": 91, "source_start_line": 37, "source_end_line": 91, "source_confidence": 94, "target_start_line": 37, "target_confidence": 94}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 94, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 33, "source_confidence": 94, "target_start_line": 28, "target_confidence": 94}, {"target_end_line": 91, "source_start_line": 37, "source_end_line": 91, "source_confidence": 94, "target_start_line": 37, "target_confidence": 94}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 94, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 33, "source_confidence": 94, "target_start_line": 28, "target_confidence": 94}, {"target_end_line": 91, "source_start_line": 37, "source_end_line": 91, "source_confidence": 94, "target_start_line": 37, "target_confidence": 94}, {"target_end_line": 22, "source_start_line": 1, "source_end_line": 22, "source_confidence": 94, "target_start_line": 1, "target_confidence": 94}, {"target_end_line": 34, "source_start_line": 27, "source_end_line": 33, "source_confidence": 94, "target_start_line": 28, "target_confidence": 94}]}, {"source": "elt12njo_d179d2ce3a7f1b61e8503b30e9cf245d", "value": 21, "target": "caev03_4e8fabd047681b19e455006a21251ccf", "links": [{"target_end_line": 33, "source_start_line": 49, "source_end_line": 55, "source_confidence": 17, "target_start_line": 27, "target_confidence": 29}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 17, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 58, "source_end_line": 63, "source_confidence": 17, "target_start_line": 45, "target_confidence": 29}, {"target_end_line": 33, "source_start_line": 49, "source_end_line": 55, "source_confidence": 17, "target_start_line": 27, "target_confidence": 29}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 17, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 58, "source_end_line": 63, "source_confidence": 17, "target_start_line": 45, "target_confidence": 29}, {"target_end_line": 33, "source_start_line": 49, "source_end_line": 55, "source_confidence": 17, "target_start_line": 27, "target_confidence": 29}, {"target_end_line": 9, "source_start_line": 3, "source_end_line": 9, "source_confidence": 17, "target_start_line": 2, "target_confidence": 29}, {"target_end_line": 50, "source_start_line": 58, "source_end_line": 63, "source_confidence": 17, "target_start_line": 45, "target_confidence": 29}]}, {"source": "elt12njo_d179d2ce3a7f1b61e8503b30e9cf245d", "value": 32, "target": "damayor_3cd76524b53adcd478c1963fbf4f8264", "links": [{"target_end_line": 26, "source_start_line": 18, "source_end_line": 40, "source_confidence": 34, "target_start_line": 4, "target_confidence": 43}, {"target_end_line": 65, "source_start_line": 50, "source_end_line": 55, "source_confidence": 34, "target_start_line": 61, "target_confidence": 43}, {"target_end_line": 31, "source_start_line": 4, "source_end_line": 6, "source_confidence": 34, "target_start_line": 29, "target_confidence": 43}, {"target_end_line": 26, "source_start_line": 18, "source_end_line": 40, "source_confidence": 34, "target_start_line": 4, "target_confidence": 43}, {"target_end_line": 65, "source_start_line": 50, "source_end_line": 55, "source_confidence": 34, "target_start_line": 61, "target_confidence": 43}, {"target_end_line": 31, "source_start_line": 4, "source_end_line": 6, "source_confidence": 34, "target_start_line": 29, "target_confidence": 43}, {"target_end_line": 26, "source_start_line": 18, "source_end_line": 40, "source_confidence": 34, "target_start_line": 4, "target_confidence": 43}, {"target_end_line": 65, "source_start_line": 50, "source_end_line": 55, "source_confidence": 34, "target_start_line": 61, "target_confidence": 43}, {"target_end_line": 31, "source_start_line": 4, "source_end_line": 6, "source_confidence": 34, "target_start_line": 29, "target_confidence": 43}]}, {"source": "mvanegas10_cbd2c955eb7aaf336b1223ed8334c1d0", "value": 32, "target": "elt12njo_d179d2ce3a7f1b61e8503b30e9cf245d", "links": [{"target_end_line": 40, "source_start_line": 8, "source_end_line": 31, "source_confidence": 24, "target_start_line": 17, "target_confidence": 27}, {"target_end_line": 6, "source_start_line": 34, "source_end_line": 41, "source_confidence": 24, "target_start_line": 4, "target_confidence": 27}, {"target_end_line": 40, "source_start_line": 8, "source_end_line": 31, "source_confidence": 24, "target_start_line": 17, "target_confidence": 27}, {"target_end_line": 6, "source_start_line": 34, "source_end_line": 41, "source_confidence": 24, "target_start_line": 4, "target_confidence": 27}]}, {"source": "damayor_7ca91d178f923a4b5683bc28476c104f", "value": 47, "target": "zubcarz_6d5f4ff7b37b2e2a562c02f9daf59a75", "links": [{"target_end_line": 27, "source_start_line": 22, "source_end_line": 28, "source_confidence": 71, "target_start_line": 21, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 55, "source_confidence": 71, "target_start_line": 49, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 71, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 39, "source_start_line": 32, "source_end_line": 38, "source_confidence": 71, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 10, "source_end_line": 19, "source_confidence": 71, "target_start_line": 10, "target_confidence": 34}, {"target_end_line": 27, "source_start_line": 22, "source_end_line": 28, "source_confidence": 71, "target_start_line": 21, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 55, "source_confidence": 71, "target_start_line": 49, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 71, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 39, "source_start_line": 32, "source_end_line": 38, "source_confidence": 71, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 10, "source_end_line": 19, "source_confidence": 71, "target_start_line": 10, "target_confidence": 34}, {"target_end_line": 27, "source_start_line": 22, "source_end_line": 28, "source_confidence": 71, "target_start_line": 21, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 55, "source_confidence": 71, "target_start_line": 49, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 71, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 39, "source_start_line": 32, "source_end_line": 38, "source_confidence": 71, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 10, "source_end_line": 19, "source_confidence": 71, "target_start_line": 10, "target_confidence": 34}, {"target_end_line": 27, "source_start_line": 22, "source_end_line": 28, "source_confidence": 71, "target_start_line": 21, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 55, "source_confidence": 71, "target_start_line": 49, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 71, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 39, "source_start_line": 32, "source_end_line": 38, "source_confidence": 71, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 10, "source_end_line": 19, "source_confidence": 71, "target_start_line": 10, "target_confidence": 34}, {"target_end_line": 27, "source_start_line": 22, "source_end_line": 28, "source_confidence": 71, "target_start_line": 21, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 41, "source_end_line": 55, "source_confidence": 71, "target_start_line": 49, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 71, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 39, "source_start_line": 32, "source_end_line": 38, "source_confidence": 71, "target_start_line": 33, "target_confidence": 34}, {"target_end_line": 19, "source_start_line": 10, "source_end_line": 19, "source_confidence": 71, "target_start_line": 10, "target_confidence": 34}]}, {"source": "aiMojica10_cb8b73e9ef7e1b58e775dae8512e7476", "value": 40, "target": "mvanegas10_cbd2c955eb7aaf336b1223ed8334c1d0", "links": [{"target_end_line": 31, "source_start_line": 2, "source_end_line": 12, "source_confidence": 42, "target_start_line": 9, "target_confidence": 27}, {"target_end_line": 41, "source_start_line": 14, "source_end_line": 16, "source_confidence": 42, "target_start_line": 34, "target_confidence": 27}, {"target_end_line": 61, "source_start_line": 23, "source_end_line": 31, "source_confidence": 42, "target_start_line": 53, "target_confidence": 27}, {"target_end_line": 31, "source_start_line": 2, "source_end_line": 12, "source_confidence": 42, "target_start_line": 9, "target_confidence": 27}, {"target_end_line": 41, "source_start_line": 14, "source_end_line": 16, "source_confidence": 42, "target_start_line": 34, "target_confidence": 27}, {"target_end_line": 61, "source_start_line": 23, "source_end_line": 31, "source_confidence": 42, "target_start_line": 53, "target_confidence": 27}, {"target_end_line": 31, "source_start_line": 2, "source_end_line": 12, "source_confidence": 42, "target_start_line": 9, "target_confidence": 27}, {"target_end_line": 41, "source_start_line": 14, "source_end_line": 16, "source_confidence": 42, "target_start_line": 34, "target_confidence": 27}, {"target_end_line": 61, "source_start_line": 23, "source_end_line": 31, "source_confidence": 42, "target_start_line": 53, "target_confidence": 27}]}, {"source": "aiMojica10_cb8b73e9ef7e1b58e775dae8512e7476", "value": 39, "target": "damayor_7ca91d178f923a4b5683bc28476c104f", "links": [{"target_end_line": 54, "source_start_line": 65, "source_end_line": 78, "source_confidence": 37, "target_start_line": 41, "target_confidence": 64}, {"target_end_line": 26, "source_start_line": 40, "source_end_line": 44, "source_confidence": 37, "target_start_line": 22, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 49, "source_end_line": 55, "source_confidence": 37, "target_start_line": 32, "target_confidence": 64}, {"target_end_line": 19, "source_start_line": 22, "source_end_line": 31, "source_confidence": 37, "target_start_line": 10, "target_confidence": 64}, {"target_end_line": 5, "source_start_line": 14, "source_end_line": 16, "source_confidence": 37, "target_start_line": 3, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 65, "source_end_line": 78, "source_confidence": 37, "target_start_line": 41, "target_confidence": 64}, {"target_end_line": 26, "source_start_line": 40, "source_end_line": 44, "source_confidence": 37, "target_start_line": 22, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 49, "source_end_line": 55, "source_confidence": 37, "target_start_line": 32, "target_confidence": 64}, {"target_end_line": 19, "source_start_line": 22, "source_end_line": 31, "source_confidence": 37, "target_start_line": 10, "target_confidence": 64}, {"target_end_line": 5, "source_start_line": 14, "source_end_line": 16, "source_confidence": 37, "target_start_line": 3, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 65, "source_end_line": 78, "source_confidence": 37, "target_start_line": 41, "target_confidence": 64}, {"target_end_line": 26, "source_start_line": 40, "source_end_line": 44, "source_confidence": 37, "target_start_line": 22, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 49, "source_end_line": 55, "source_confidence": 37, "target_start_line": 32, "target_confidence": 64}, {"target_end_line": 19, "source_start_line": 22, "source_end_line": 31, "source_confidence": 37, "target_start_line": 10, "target_confidence": 64}, {"target_end_line": 5, "source_start_line": 14, "source_end_line": 16, "source_confidence": 37, "target_start_line": 3, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 65, "source_end_line": 78, "source_confidence": 37, "target_start_line": 41, "target_confidence": 64}, {"target_end_line": 26, "source_start_line": 40, "source_end_line": 44, "source_confidence": 37, "target_start_line": 22, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 49, "source_end_line": 55, "source_confidence": 37, "target_start_line": 32, "target_confidence": 64}, {"target_end_line": 19, "source_start_line": 22, "source_end_line": 31, "source_confidence": 37, "target_start_line": 10, "target_confidence": 64}, {"target_end_line": 5, "source_start_line": 14, "source_end_line": 16, "source_confidence": 37, "target_start_line": 3, "target_confidence": 64}, {"target_end_line": 54, "source_start_line": 65, "source_end_line": 78, "source_confidence": 37, "target_start_line": 41, "target_confidence": 64}, {"target_end_line": 26, "source_start_line": 40, "source_end_line": 44, "source_confidence": 37, "target_start_line": 22, "target_confidence": 64}, {"target_end_line": 38, "source_start_line": 49, "source_end_line": 55, "source_confidence": 37, "target_start_line": 32, "target_confidence": 64}, {"target_end_line": 19, "source_start_line": 22, "source_end_line": 31, "source_confidence": 37, "target_start_line": 10, "target_confidence": 64}, {"target_end_line": 5, "source_start_line": 14, "source_end_line": 16, "source_confidence": 37, "target_start_line": 3, "target_confidence": 64}]}, {"source": "damayor_f9af6617835cbb37e2c280703ce255ca", "value": 48, "target": "aiMojica10_cb8b73e9ef7e1b58e775dae8512e7476", "links": [{"target_end_line": 31, "source_start_line": 7, "source_end_line": 19, "source_confidence": 82, "target_start_line": 19, "target_confidence": 46}, {"target_end_line": 78, "source_start_line": 40, "source_end_line": 53, "source_confidence": 82, "target_start_line": 65, "target_confidence": 46}, {"target_end_line": 44, "source_start_line": 22, "source_end_line": 26, "source_confidence": 82, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 55, "source_start_line": 29, "source_end_line": 37, "source_confidence": 82, "target_start_line": 46, "target_confidence": 46}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 5, "source_confidence": 82, "target_start_line": 14, "target_confidence": 46}, {"target_end_line": 81, "source_start_line": 54, "source_end_line": 56, "source_confidence": 82, "target_start_line": 79, "target_confidence": 46}, {"target_end_line": 31, "source_start_line": 7, "source_end_line": 19, "source_confidence": 82, "target_start_line": 19, "target_confidence": 46}, {"target_end_line": 78, "source_start_line": 40, "source_end_line": 53, "source_confidence": 82, "target_start_line": 65, "target_confidence": 46}, {"target_end_line": 44, "source_start_line": 22, "source_end_line": 26, "source_confidence": 82, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 55, "source_start_line": 29, "source_end_line": 37, "source_confidence": 82, "target_start_line": 46, "target_confidence": 46}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 5, "source_confidence": 82, "target_start_line": 14, "target_confidence": 46}, {"target_end_line": 81, "source_start_line": 54, "source_end_line": 56, "source_confidence": 82, "target_start_line": 79, "target_confidence": 46}, {"target_end_line": 31, "source_start_line": 7, "source_end_line": 19, "source_confidence": 82, "target_start_line": 19, "target_confidence": 46}, {"target_end_line": 78, "source_start_line": 40, "source_end_line": 53, "source_confidence": 82, "target_start_line": 65, "target_confidence": 46}, {"target_end_line": 44, "source_start_line": 22, "source_end_line": 26, "source_confidence": 82, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 55, "source_start_line": 29, "source_end_line": 37, "source_confidence": 82, "target_start_line": 46, "target_confidence": 46}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 5, "source_confidence": 82, "target_start_line": 14, "target_confidence": 46}, {"target_end_line": 81, "source_start_line": 54, "source_end_line": 56, "source_confidence": 82, "target_start_line": 79, "target_confidence": 46}, {"target_end_line": 31, "source_start_line": 7, "source_end_line": 19, "source_confidence": 82, "target_start_line": 19, "target_confidence": 46}, {"target_end_line": 78, "source_start_line": 40, "source_end_line": 53, "source_confidence": 82, "target_start_line": 65, "target_confidence": 46}, {"target_end_line": 44, "source_start_line": 22, "source_end_line": 26, "source_confidence": 82, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 55, "source_start_line": 29, "source_end_line": 37, "source_confidence": 82, "target_start_line": 46, "target_confidence": 46}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 5, "source_confidence": 82, "target_start_line": 14, "target_confidence": 46}, {"target_end_line": 81, "source_start_line": 54, "source_end_line": 56, "source_confidence": 82, "target_start_line": 79, "target_confidence": 46}, {"target_end_line": 31, "source_start_line": 7, "source_end_line": 19, "source_confidence": 82, "target_start_line": 19, "target_confidence": 46}, {"target_end_line": 78, "source_start_line": 40, "source_end_line": 53, "source_confidence": 82, "target_start_line": 65, "target_confidence": 46}, {"target_end_line": 44, "source_start_line": 22, "source_end_line": 26, "source_confidence": 82, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 55, "source_start_line": 29, "source_end_line": 37, "source_confidence": 82, "target_start_line": 46, "target_confidence": 46}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 5, "source_confidence": 82, "target_start_line": 14, "target_confidence": 46}, {"target_end_line": 81, "source_start_line": 54, "source_end_line": 56, "source_confidence": 82, "target_start_line": 79, "target_confidence": 46}, {"target_end_line": 31, "source_start_line": 7, "source_end_line": 19, "source_confidence": 82, "target_start_line": 19, "target_confidence": 46}, {"target_end_line": 78, "source_start_line": 40, "source_end_line": 53, "source_confidence": 82, "target_start_line": 65, "target_confidence": 46}, {"target_end_line": 44, "source_start_line": 22, "source_end_line": 26, "source_confidence": 82, "target_start_line": 40, "target_confidence": 46}, {"target_end_line": 55, "source_start_line": 29, "source_end_line": 37, "source_confidence": 82, "target_start_line": 46, "target_confidence": 46}, {"target_end_line": 16, "source_start_line": 3, "source_end_line": 5, "source_confidence": 82, "target_start_line": 14, "target_confidence": 46}, {"target_end_line": 81, "source_start_line": 54, "source_end_line": 56, "source_confidence": 82, "target_start_line": 79, "target_confidence": 46}]}, {"source": "elt12njo_83be676a05d1f07ba702cff8c62a405e", "value": 35, "target": "damayor_f9af6617835cbb37e2c280703ce255ca", "links": [{"target_end_line": 55, "source_start_line": 66, "source_end_line": 87, "source_confidence": 31, "target_start_line": 34, "target_confidence": 63}, {"target_end_line": 26, "source_start_line": 52, "source_end_line": 56, "source_confidence": 31, "target_start_line": 22, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 32, "source_end_line": 37, "source_confidence": 31, "target_start_line": 3, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 62, "source_end_line": 63, "source_confidence": 31, "target_start_line": 31, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 66, "source_end_line": 87, "source_confidence": 31, "target_start_line": 34, "target_confidence": 63}, {"target_end_line": 26, "source_start_line": 52, "source_end_line": 56, "source_confidence": 31, "target_start_line": 22, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 32, "source_end_line": 37, "source_confidence": 31, "target_start_line": 3, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 62, "source_end_line": 63, "source_confidence": 31, "target_start_line": 31, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 66, "source_end_line": 87, "source_confidence": 31, "target_start_line": 34, "target_confidence": 63}, {"target_end_line": 26, "source_start_line": 52, "source_end_line": 56, "source_confidence": 31, "target_start_line": 22, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 32, "source_end_line": 37, "source_confidence": 31, "target_start_line": 3, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 62, "source_end_line": 63, "source_confidence": 31, "target_start_line": 31, "target_confidence": 63}, {"target_end_line": 55, "source_start_line": 66, "source_end_line": 87, "source_confidence": 31, "target_start_line": 34, "target_confidence": 63}, {"target_end_line": 26, "source_start_line": 52, "source_end_line": 56, "source_confidence": 31, "target_start_line": 22, "target_confidence": 63}, {"target_end_line": 7, "source_start_line": 32, "source_end_line": 37, "source_confidence": 31, "target_start_line": 3, "target_confidence": 63}, {"target_end_line": 32, "source_start_line": 62, "source_end_line": 63, "source_confidence": 31, "target_start_line": 31, "target_confidence": 63}]}, {"source": "apolan_6e76364f5e232260e82bb0a2e3745f1e", "value": 52, "target": "elt12njo_83be676a05d1f07ba702cff8c62a405e", "links": [{"target_end_line": 26, "source_start_line": 3, "source_end_line": 26, "source_confidence": 48, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 86, "source_start_line": 73, "source_end_line": 87, "source_confidence": 48, "target_start_line": 72, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 49, "source_end_line": 53, "source_confidence": 48, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 48, "target_start_line": 32, "target_confidence": 55}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 58, "source_confidence": 48, "target_start_line": 62, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 26, "source_confidence": 48, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 86, "source_start_line": 73, "source_end_line": 87, "source_confidence": 48, "target_start_line": 72, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 49, "source_end_line": 53, "source_confidence": 48, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 48, "target_start_line": 32, "target_confidence": 55}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 58, "source_confidence": 48, "target_start_line": 62, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 26, "source_confidence": 48, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 86, "source_start_line": 73, "source_end_line": 87, "source_confidence": 48, "target_start_line": 72, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 49, "source_end_line": 53, "source_confidence": 48, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 48, "target_start_line": 32, "target_confidence": 55}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 58, "source_confidence": 48, "target_start_line": 62, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 26, "source_confidence": 48, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 86, "source_start_line": 73, "source_end_line": 87, "source_confidence": 48, "target_start_line": 72, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 49, "source_end_line": 53, "source_confidence": 48, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 48, "target_start_line": 32, "target_confidence": 55}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 58, "source_confidence": 48, "target_start_line": 62, "target_confidence": 55}, {"target_end_line": 26, "source_start_line": 3, "source_end_line": 26, "source_confidence": 48, "target_start_line": 3, "target_confidence": 55}, {"target_end_line": 86, "source_start_line": 73, "source_end_line": 87, "source_confidence": 48, "target_start_line": 72, "target_confidence": 55}, {"target_end_line": 56, "source_start_line": 49, "source_end_line": 53, "source_confidence": 48, "target_start_line": 52, "target_confidence": 55}, {"target_end_line": 37, "source_start_line": 33, "source_end_line": 37, "source_confidence": 48, "target_start_line": 32, "target_confidence": 55}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 58, "source_confidence": 48, "target_start_line": 62, "target_confidence": 55}]}, {"source": "elt12njo_b44617b6288bc7bfa7a3eeb2c853c37c", "value": 50, "target": "apolan_6e76364f5e232260e82bb0a2e3745f1e", "links": [{"target_end_line": 28, "source_start_line": 4, "source_end_line": 29, "source_confidence": 22, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 37, "source_start_line": 36, "source_end_line": 46, "source_confidence": 22, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 58, "source_start_line": 70, "source_end_line": 75, "source_confidence": 22, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 79, "source_start_line": 92, "source_end_line": 98, "source_confidence": 22, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 28, "source_start_line": 4, "source_end_line": 29, "source_confidence": 22, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 37, "source_start_line": 36, "source_end_line": 46, "source_confidence": 22, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 58, "source_start_line": 70, "source_end_line": 75, "source_confidence": 22, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 79, "source_start_line": 92, "source_end_line": 98, "source_confidence": 22, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 28, "source_start_line": 4, "source_end_line": 29, "source_confidence": 22, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 37, "source_start_line": 36, "source_end_line": 46, "source_confidence": 22, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 58, "source_start_line": 70, "source_end_line": 75, "source_confidence": 22, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 79, "source_start_line": 92, "source_end_line": 98, "source_confidence": 22, "target_start_line": 73, "target_confidence": 37}, {"target_end_line": 28, "source_start_line": 4, "source_end_line": 29, "source_confidence": 22, "target_start_line": 3, "target_confidence": 37}, {"target_end_line": 37, "source_start_line": 36, "source_end_line": 46, "source_confidence": 22, "target_start_line": 33, "target_confidence": 37}, {"target_end_line": 58, "source_start_line": 70, "source_end_line": 75, "source_confidence": 22, "target_start_line": 57, "target_confidence": 37}, {"target_end_line": 79, "source_start_line": 92, "source_end_line": 98, "source_confidence": 22, "target_start_line": 73, "target_confidence": 37}]}, {"source": "jcamilort_eb99b8c1d5c55ddbce0519293501ba3f", "value": 47, "target": "elt12njo_b44617b6288bc7bfa7a3eeb2c853c37c", "links": [{"target_end_line": 27, "source_start_line": 3, "source_end_line": 25, "source_confidence": 50, "target_start_line": 5, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 27, "source_end_line": 29, "source_confidence": 50, "target_start_line": 36, "target_confidence": 21}, {"target_end_line": 75, "source_start_line": 55, "source_end_line": 58, "source_confidence": 50, "target_start_line": 67, "target_confidence": 21}, {"target_end_line": 98, "source_start_line": 71, "source_end_line": 77, "source_confidence": 50, "target_start_line": 92, "target_confidence": 21}, {"target_end_line": 27, "source_start_line": 3, "source_end_line": 25, "source_confidence": 50, "target_start_line": 5, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 27, "source_end_line": 29, "source_confidence": 50, "target_start_line": 36, "target_confidence": 21}, {"target_end_line": 75, "source_start_line": 55, "source_end_line": 58, "source_confidence": 50, "target_start_line": 67, "target_confidence": 21}, {"target_end_line": 98, "source_start_line": 71, "source_end_line": 77, "source_confidence": 50, "target_start_line": 92, "target_confidence": 21}, {"target_end_line": 27, "source_start_line": 3, "source_end_line": 25, "source_confidence": 50, "target_start_line": 5, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 27, "source_end_line": 29, "source_confidence": 50, "target_start_line": 36, "target_confidence": 21}, {"target_end_line": 75, "source_start_line": 55, "source_end_line": 58, "source_confidence": 50, "target_start_line": 67, "target_confidence": 21}, {"target_end_line": 98, "source_start_line": 71, "source_end_line": 77, "source_confidence": 50, "target_start_line": 92, "target_confidence": 21}, {"target_end_line": 27, "source_start_line": 3, "source_end_line": 25, "source_confidence": 50, "target_start_line": 5, "target_confidence": 21}, {"target_end_line": 43, "source_start_line": 27, "source_end_line": 29, "source_confidence": 50, "target_start_line": 36, "target_confidence": 21}, {"target_end_line": 75, "source_start_line": 55, "source_end_line": 58, "source_confidence": 50, "target_start_line": 67, "target_confidence": 21}, {"target_end_line": 98, "source_start_line": 71, "source_end_line": 77, "source_confidence": 50, "target_start_line": 92, "target_confidence": 21}]}, {"source": "davidgutierrez_5596b083b6e001758f97603a109a2794", "value": 23, "target": "jcamilort_eb99b8c1d5c55ddbce0519293501ba3f", "links": [{"target_end_line": 25, "source_start_line": 4, "source_end_line": 26, "source_confidence": 20, "target_start_line": 3, "target_confidence": 33}]}, {"source": "jorgeehernandez_0e90c70f509c3a91ed06196363411b82", "value": 37, "target": "jcamilort_414002d5491797af4cccfdc4740f456e", "links": [{"target_end_line": 24, "source_start_line": 56, "source_end_line": 65, "source_confidence": 19, "target_start_line": 17, "target_confidence": 49}, {"target_end_line": 13, "source_start_line": 30, "source_end_line": 37, "source_confidence": 19, "target_start_line": 4, "target_confidence": 49}, {"target_end_line": 58, "source_start_line": 111, "source_end_line": 121, "source_confidence": 19, "target_start_line": 48, "target_confidence": 49}, {"target_end_line": 45, "source_start_line": 74, "source_end_line": 81, "source_confidence": 19, "target_start_line": 38, "target_confidence": 49}, {"target_end_line": 24, "source_start_line": 56, "source_end_line": 65, "source_confidence": 19, "target_start_line": 17, "target_confidence": 49}, {"target_end_line": 13, "source_start_line": 30, "source_end_line": 37, "source_confidence": 19, "target_start_line": 4, "target_confidence": 49}, {"target_end_line": 58, "source_start_line": 111, "source_end_line": 121, "source_confidence": 19, "target_start_line": 48, "target_confidence": 49}, {"target_end_line": 45, "source_start_line": 74, "source_end_line": 81, "source_confidence": 19, "target_start_line": 38, "target_confidence": 49}, {"target_end_line": 24, "source_start_line": 56, "source_end_line": 65, "source_confidence": 19, "target_start_line": 17, "target_confidence": 49}, {"target_end_line": 13, "source_start_line": 30, "source_end_line": 37, "source_confidence": 19, "target_start_line": 4, "target_confidence": 49}, {"target_end_line": 58, "source_start_line": 111, "source_end_line": 121, "source_confidence": 19, "target_start_line": 48, "target_confidence": 49}, {"target_end_line": 45, "source_start_line": 74, "source_end_line": 81, "source_confidence": 19, "target_start_line": 38, "target_confidence": 49}, {"target_end_line": 24, "source_start_line": 56, "source_end_line": 65, "source_confidence": 19, "target_start_line": 17, "target_confidence": 49}, {"target_end_line": 13, "source_start_line": 30, "source_end_line": 37, "source_confidence": 19, "target_start_line": 4, "target_confidence": 49}, {"target_end_line": 58, "source_start_line": 111, "source_end_line": 121, "source_confidence": 19, "target_start_line": 48, "target_confidence": 49}, {"target_end_line": 45, "source_start_line": 74, "source_end_line": 81, "source_confidence": 19, "target_start_line": 38, "target_confidence": 49}]}, {"source": "deisydiazp_09447d7f697ab80b1c026fd296c83c9d", "value": 22, "target": "davidgutierrez_5596b083b6e001758f97603a109a2794", "links": [{"target_end_line": 24, "source_start_line": 3, "source_end_line": 24, "source_confidence": 28, "target_start_line": 3, "target_confidence": 18}]}, {"source": "LauraCortes_35070b2fc794f76e1a5ff0fcbacc0818", "value": 24, "target": "mavaron_29cb51ddfc1e1263947a8b4b5ec58269", "links": [{"target_end_line": 21, "source_start_line": 29, "source_end_line": 45, "source_confidence": 22, "target_start_line": 5, "target_confidence": 81}, {"target_end_line": 30, "source_start_line": 54, "source_end_line": 60, "source_confidence": 22, "target_start_line": 24, "target_confidence": 81}, {"target_end_line": 21, "source_start_line": 29, "source_end_line": 45, "source_confidence": 22, "target_start_line": 5, "target_confidence": 81}, {"target_end_line": 30, "source_start_line": 54, "source_end_line": 60, "source_confidence": 22, "target_start_line": 24, "target_confidence": 81}]}, {"source": "jorgeehernandez_0e90c70f509c3a91ed06196363411b82", "value": 21, "target": "deisydiazp_09447d7f697ab80b1c026fd296c83c9d", "links": [{"target_end_line": 24, "source_start_line": 4, "source_end_line": 24, "source_confidence": 17, "target_start_line": 4, "target_confidence": 28}]}, {"source": "jorgeehernandez_0e90c70f509c3a91ed06196363411b82", "value": 27, "target": "deisydiazp_cb96e9e269bb59effb60e37035cbe33b", "links": [{"target_end_line": 28, "source_start_line": 4, "source_end_line": 30, "source_confidence": 19, "target_start_line": 4, "target_confidence": 30}]}, {"source": "LauraCortes_35070b2fc794f76e1a5ff0fcbacc0818", "value": 40, "target": "jorgeehernandez_0e90c70f509c3a91ed06196363411b82", "links": [{"target_end_line": 35, "source_start_line": 1, "source_end_line": 33, "source_confidence": 43, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 60, "source_start_line": 54, "source_end_line": 58, "source_confidence": 43, "target_start_line": 56, "target_confidence": 30}, {"target_end_line": 35, "source_start_line": 1, "source_end_line": 33, "source_confidence": 43, "target_start_line": 1, "target_confidence": 30}, {"target_end_line": 60, "source_start_line": 54, "source_end_line": 58, "source_confidence": 43, "target_start_line": 56, "target_confidence": 30}]}, {"source": "LauraCortes_35070b2fc794f76e1a5ff0fcbacc0818", "value": 23, "target": "jorgeehernandez_d904788537ebd0f89da070b76db55a83", "links": [{"target_end_line": 89, "source_start_line": 4, "source_end_line": 26, "source_confidence": 27, "target_start_line": 67, "target_confidence": 29}]}, {"source": "emilioalvarado_6cc2d43b3fe2a8c8c16d8d523674e507", "value": 48, "target": "LauraCortes_35070b2fc794f76e1a5ff0fcbacc0818", "links": [{"target_end_line": 94, "source_start_line": 55, "source_end_line": 66, "source_confidence": 71, "target_start_line": 83, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 23, "source_end_line": 27, "source_confidence": 71, "target_start_line": 54, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 4, "source_end_line": 9, "source_confidence": 71, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 11, "source_end_line": 20, "source_confidence": 71, "target_start_line": 36, "target_confidence": 39}, {"target_end_line": 82, "source_start_line": 45, "source_end_line": 54, "source_confidence": 71, "target_start_line": 72, "target_confidence": 39}, {"target_end_line": 63, "source_start_line": 29, "source_end_line": 33, "source_confidence": 71, "target_start_line": 60, "target_confidence": 39}, {"target_end_line": 94, "source_start_line": 55, "source_end_line": 66, "source_confidence": 71, "target_start_line": 83, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 23, "source_end_line": 27, "source_confidence": 71, "target_start_line": 54, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 4, "source_end_line": 9, "source_confidence": 71, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 11, "source_end_line": 20, "source_confidence": 71, "target_start_line": 36, "target_confidence": 39}, {"target_end_line": 82, "source_start_line": 45, "source_end_line": 54, "source_confidence": 71, "target_start_line": 72, "target_confidence": 39}, {"target_end_line": 63, "source_start_line": 29, "source_end_line": 33, "source_confidence": 71, "target_start_line": 60, "target_confidence": 39}, {"target_end_line": 94, "source_start_line": 55, "source_end_line": 66, "source_confidence": 71, "target_start_line": 83, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 23, "source_end_line": 27, "source_confidence": 71, "target_start_line": 54, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 4, "source_end_line": 9, "source_confidence": 71, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 11, "source_end_line": 20, "source_confidence": 71, "target_start_line": 36, "target_confidence": 39}, {"target_end_line": 82, "source_start_line": 45, "source_end_line": 54, "source_confidence": 71, "target_start_line": 72, "target_confidence": 39}, {"target_end_line": 63, "source_start_line": 29, "source_end_line": 33, "source_confidence": 71, "target_start_line": 60, "target_confidence": 39}, {"target_end_line": 94, "source_start_line": 55, "source_end_line": 66, "source_confidence": 71, "target_start_line": 83, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 23, "source_end_line": 27, "source_confidence": 71, "target_start_line": 54, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 4, "source_end_line": 9, "source_confidence": 71, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 11, "source_end_line": 20, "source_confidence": 71, "target_start_line": 36, "target_confidence": 39}, {"target_end_line": 82, "source_start_line": 45, "source_end_line": 54, "source_confidence": 71, "target_start_line": 72, "target_confidence": 39}, {"target_end_line": 63, "source_start_line": 29, "source_end_line": 33, "source_confidence": 71, "target_start_line": 60, "target_confidence": 39}, {"target_end_line": 94, "source_start_line": 55, "source_end_line": 66, "source_confidence": 71, "target_start_line": 83, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 23, "source_end_line": 27, "source_confidence": 71, "target_start_line": 54, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 4, "source_end_line": 9, "source_confidence": 71, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 11, "source_end_line": 20, "source_confidence": 71, "target_start_line": 36, "target_confidence": 39}, {"target_end_line": 82, "source_start_line": 45, "source_end_line": 54, "source_confidence": 71, "target_start_line": 72, "target_confidence": 39}, {"target_end_line": 63, "source_start_line": 29, "source_end_line": 33, "source_confidence": 71, "target_start_line": 60, "target_confidence": 39}, {"target_end_line": 94, "source_start_line": 55, "source_end_line": 66, "source_confidence": 71, "target_start_line": 83, "target_confidence": 39}, {"target_end_line": 58, "source_start_line": 23, "source_end_line": 27, "source_confidence": 71, "target_start_line": 54, "target_confidence": 39}, {"target_end_line": 34, "source_start_line": 4, "source_end_line": 9, "source_confidence": 71, "target_start_line": 29, "target_confidence": 39}, {"target_end_line": 45, "source_start_line": 11, "source_end_line": 20, "source_confidence": 71, "target_start_line": 36, "target_confidence": 39}, {"target_end_line": 82, "source_start_line": 45, "source_end_line": 54, "source_confidence": 71, "target_start_line": 72, "target_confidence": 39}, {"target_end_line": 63, "source_start_line": 29, "source_end_line": 33, "source_confidence": 71, "target_start_line": 60, "target_confidence": 39}]}, {"source": "jhon0010_172294362415045014fe1e26f7f6ae1e", "value": 22, "target": "emilioalvarado_6cc2d43b3fe2a8c8c16d8d523674e507", "links": [{"target_end_line": 27, "source_start_line": 18, "source_end_line": 23, "source_confidence": 46, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 66, "source_start_line": 41, "source_end_line": 48, "source_confidence": 46, "target_start_line": 59, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 46, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 36, "source_end_line": 38, "source_confidence": 46, "target_start_line": 29, "target_confidence": 46}, {"target_end_line": 27, "source_start_line": 18, "source_end_line": 23, "source_confidence": 46, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 66, "source_start_line": 41, "source_end_line": 48, "source_confidence": 46, "target_start_line": 59, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 46, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 36, "source_end_line": 38, "source_confidence": 46, "target_start_line": 29, "target_confidence": 46}, {"target_end_line": 27, "source_start_line": 18, "source_end_line": 23, "source_confidence": 46, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 66, "source_start_line": 41, "source_end_line": 48, "source_confidence": 46, "target_start_line": 59, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 46, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 36, "source_end_line": 38, "source_confidence": 46, "target_start_line": 29, "target_confidence": 46}, {"target_end_line": 27, "source_start_line": 18, "source_end_line": 23, "source_confidence": 46, "target_start_line": 23, "target_confidence": 46}, {"target_end_line": 66, "source_start_line": 41, "source_end_line": 48, "source_confidence": 46, "target_start_line": 59, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 6, "source_confidence": 46, "target_start_line": 3, "target_confidence": 46}, {"target_end_line": 33, "source_start_line": 36, "source_end_line": 38, "source_confidence": 46, "target_start_line": 29, "target_confidence": 46}]}, {"source": "tizon9804_5c144f83193eba0c2603e30f7ebdb3db", "value": 20, "target": "jhon0010_172294362415045014fe1e26f7f6ae1e", "links": [{"target_end_line": 23, "source_start_line": 22, "source_end_line": 26, "source_confidence": 51, "target_start_line": 18, "target_confidence": 46}, {"target_end_line": 48, "source_start_line": 49, "source_end_line": 56, "source_confidence": 51, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 51, "target_start_line": 4, "target_confidence": 46}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 32, "source_confidence": 51, "target_start_line": 36, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 22, "source_end_line": 26, "source_confidence": 51, "target_start_line": 18, "target_confidence": 46}, {"target_end_line": 48, "source_start_line": 49, "source_end_line": 56, "source_confidence": 51, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 51, "target_start_line": 4, "target_confidence": 46}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 32, "source_confidence": 51, "target_start_line": 36, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 22, "source_end_line": 26, "source_confidence": 51, "target_start_line": 18, "target_confidence": 46}, {"target_end_line": 48, "source_start_line": 49, "source_end_line": 56, "source_confidence": 51, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 51, "target_start_line": 4, "target_confidence": 46}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 32, "source_confidence": 51, "target_start_line": 36, "target_confidence": 46}, {"target_end_line": 23, "source_start_line": 22, "source_end_line": 26, "source_confidence": 51, "target_start_line": 18, "target_confidence": 46}, {"target_end_line": 48, "source_start_line": 49, "source_end_line": 56, "source_confidence": 51, "target_start_line": 41, "target_confidence": 46}, {"target_end_line": 6, "source_start_line": 3, "source_end_line": 5, "source_confidence": 51, "target_start_line": 4, "target_confidence": 46}, {"target_end_line": 38, "source_start_line": 29, "source_end_line": 32, "source_confidence": 51, "target_start_line": 36, "target_confidence": 46}]}, {"source": "john-guerra_221cb4c7fb676bcb58a25d4982114de3", "value": 21, "target": "zubcarz_4384a27bb88b7393474703b64d19d9fe", "links": [{"target_end_line": 31, "source_start_line": 23, "source_end_line": 29, "source_confidence": 31, "target_start_line": 23, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 31, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 113, "source_start_line": 71, "source_end_line": 75, "source_confidence": 31, "target_start_line": 109, "target_confidence": 14}, {"target_end_line": 31, "source_start_line": 23, "source_end_line": 29, "source_confidence": 31, "target_start_line": 23, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 31, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 113, "source_start_line": 71, "source_end_line": 75, "source_confidence": 31, "target_start_line": 109, "target_confidence": 14}, {"target_end_line": 31, "source_start_line": 23, "source_end_line": 29, "source_confidence": 31, "target_start_line": 23, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 1, "source_end_line": 8, "source_confidence": 31, "target_start_line": 1, "target_confidence": 14}, {"target_end_line": 113, "source_start_line": 71, "source_end_line": 75, "source_confidence": 31, "target_start_line": 109, "target_confidence": 14}]}, {"source": "tizon9804_5c144f83193eba0c2603e30f7ebdb3db", "value": 43, "target": "willroj_77e180e3099997cfff2fc72545580439", "links": [{"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 33, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 29, "target_confidence": 54}, {"target_end_line": 47, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 33, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 29, "target_confidence": 54}, {"target_end_line": 47, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 33, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 29, "target_confidence": 54}, {"target_end_line": 47, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 58, "target_confidence": 54}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 70, "target_start_line": 1, "target_confidence": 54}, {"target_end_line": 33, "source_start_line": 22, "source_end_line": 26, "source_confidence": 70, "target_start_line": 29, "target_confidence": 54}, {"target_end_line": 47, "source_start_line": 29, "source_end_line": 37, "source_confidence": 70, "target_start_line": 39, "target_confidence": 54}, {"target_end_line": 67, "source_start_line": 44, "source_end_line": 53, "source_confidence": 70, "target_start_line": 58, "target_confidence": 54}]}, {"source": "nychi713_ebf98b4448c4565c8bc82d3691713ebc", "value": 23, "target": "JuanSMartinez_1625387015a32ef6ed3c0340d07965c8", "links": [{"target_end_line": 26, "source_start_line": 3, "source_end_line": 25, "source_confidence": 26, "target_start_line": 4, "target_confidence": 19}]}, {"source": "monfera_21be9bb116a8e5b2423b706155fdb718", "value": 20, "target": "mootari_387c84e7991517d93c914cf804aade37", "links": [{"target_end_line": 3, "source_start_line": 33, "source_end_line": 35, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 43, "source_end_line": 45, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 52, "source_end_line": 54, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 71, "source_end_line": 74, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 79, "source_end_line": 81, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 85, "source_end_line": 88, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 33, "source_end_line": 35, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 43, "source_end_line": 45, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 52, "source_end_line": 54, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 71, "source_end_line": 74, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 79, "source_end_line": 81, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 85, "source_end_line": 88, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 33, "source_end_line": 35, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 43, "source_end_line": 45, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 52, "source_end_line": 54, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 71, "source_end_line": 74, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 79, "source_end_line": 81, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 85, "source_end_line": 88, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 33, "source_end_line": 35, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 43, "source_end_line": 45, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 52, "source_end_line": 54, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 71, "source_end_line": 74, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 79, "source_end_line": 81, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 85, "source_end_line": 88, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 33, "source_end_line": 35, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 43, "source_end_line": 45, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 52, "source_end_line": 54, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 71, "source_end_line": 74, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 79, "source_end_line": 81, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 85, "source_end_line": 88, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 33, "source_end_line": 35, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 43, "source_end_line": 45, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 52, "source_end_line": 54, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 71, "source_end_line": 74, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 79, "source_end_line": 81, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}, {"target_end_line": 3, "source_start_line": 85, "source_end_line": 88, "source_confidence": 8, "target_start_line": 3, "target_confidence": 3}]}, {"source": "steveharoz_f74e5549ccd2884a5f61f488876f0fa6", "value": 98, "target": "d3noob_d7800f34062b116f9ec0588f2e85e549", "links": [{"target_end_line": 118, "source_start_line": 59, "source_end_line": 100, "source_confidence": 95, "target_start_line": 71, "target_confidence": 85}, {"target_end_line": 70, "source_start_line": 33, "source_end_line": 58, "source_confidence": 95, "target_start_line": 45, "target_confidence": 85}, {"target_end_line": 32, "source_start_line": 13, "source_end_line": 30, "source_confidence": 95, "target_start_line": 15, "target_confidence": 85}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 85}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 85}, {"target_end_line": 118, "source_start_line": 59, "source_end_line": 100, "source_confidence": 95, "target_start_line": 71, "target_confidence": 85}, {"target_end_line": 70, "source_start_line": 33, "source_end_line": 58, "source_confidence": 95, "target_start_line": 45, "target_confidence": 85}, {"target_end_line": 32, "source_start_line": 13, "source_end_line": 30, "source_confidence": 95, "target_start_line": 15, "target_confidence": 85}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 85}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 85}, {"target_end_line": 118, "source_start_line": 59, "source_end_line": 100, "source_confidence": 95, "target_start_line": 71, "target_confidence": 85}, {"target_end_line": 70, "source_start_line": 33, "source_end_line": 58, "source_confidence": 95, "target_start_line": 45, "target_confidence": 85}, {"target_end_line": 32, "source_start_line": 13, "source_end_line": 30, "source_confidence": 95, "target_start_line": 15, "target_confidence": 85}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 85}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 85}, {"target_end_line": 118, "source_start_line": 59, "source_end_line": 100, "source_confidence": 95, "target_start_line": 71, "target_confidence": 85}, {"target_end_line": 70, "source_start_line": 33, "source_end_line": 58, "source_confidence": 95, "target_start_line": 45, "target_confidence": 85}, {"target_end_line": 32, "source_start_line": 13, "source_end_line": 30, "source_confidence": 95, "target_start_line": 15, "target_confidence": 85}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 85}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 85}, {"target_end_line": 118, "source_start_line": 59, "source_end_line": 100, "source_confidence": 95, "target_start_line": 71, "target_confidence": 85}, {"target_end_line": 70, "source_start_line": 33, "source_end_line": 58, "source_confidence": 95, "target_start_line": 45, "target_confidence": 85}, {"target_end_line": 32, "source_start_line": 13, "source_end_line": 30, "source_confidence": 95, "target_start_line": 15, "target_confidence": 85}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 85}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 85}]}, {"source": "steveharoz_f74e5549ccd2884a5f61f488876f0fa6", "value": 101, "target": "d3noob_3337957c360d55c245f6057ab0866c05", "links": [{"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 90}, {"target_end_line": 98, "source_start_line": 60, "source_end_line": 92, "source_confidence": 95, "target_start_line": 62, "target_confidence": 90}, {"target_end_line": 108, "source_start_line": 92, "source_end_line": 100, "source_confidence": 95, "target_start_line": 98, "target_confidence": 90}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 90}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 90}, {"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 90}, {"target_end_line": 98, "source_start_line": 60, "source_end_line": 92, "source_confidence": 95, "target_start_line": 62, "target_confidence": 90}, {"target_end_line": 108, "source_start_line": 92, "source_end_line": 100, "source_confidence": 95, "target_start_line": 98, "target_confidence": 90}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 90}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 90}, {"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 90}, {"target_end_line": 98, "source_start_line": 60, "source_end_line": 92, "source_confidence": 95, "target_start_line": 62, "target_confidence": 90}, {"target_end_line": 108, "source_start_line": 92, "source_end_line": 100, "source_confidence": 95, "target_start_line": 98, "target_confidence": 90}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 90}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 90}, {"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 90}, {"target_end_line": 98, "source_start_line": 60, "source_end_line": 92, "source_confidence": 95, "target_start_line": 62, "target_confidence": 90}, {"target_end_line": 108, "source_start_line": 92, "source_end_line": 100, "source_confidence": 95, "target_start_line": 98, "target_confidence": 90}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 90}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 90}, {"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 90}, {"target_end_line": 98, "source_start_line": 60, "source_end_line": 92, "source_confidence": 95, "target_start_line": 62, "target_confidence": 90}, {"target_end_line": 108, "source_start_line": 92, "source_end_line": 100, "source_confidence": 95, "target_start_line": 98, "target_confidence": 90}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 90}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 90}]}, {"source": "steveharoz_f74e5549ccd2884a5f61f488876f0fa6", "value": 100, "target": "d3noob_013054e8d7807dff76247b81b0e29030", "links": [{"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 93}, {"target_end_line": 108, "source_start_line": 60, "source_end_line": 100, "source_confidence": 95, "target_start_line": 62, "target_confidence": 93}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 93}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 93}, {"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 93}, {"target_end_line": 108, "source_start_line": 60, "source_end_line": 100, "source_confidence": 95, "target_start_line": 62, "target_confidence": 93}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 93}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 93}, {"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 93}, {"target_end_line": 108, "source_start_line": 60, "source_end_line": 100, "source_confidence": 95, "target_start_line": 62, "target_confidence": 93}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 93}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 93}, {"target_end_line": 61, "source_start_line": 13, "source_end_line": 59, "source_confidence": 95, "target_start_line": 15, "target_confidence": 93}, {"target_end_line": 108, "source_start_line": 60, "source_end_line": 100, "source_confidence": 95, "target_start_line": 62, "target_confidence": 93}, {"target_end_line": 8, "source_start_line": 5, "source_end_line": 7, "source_confidence": 95, "target_start_line": 6, "target_confidence": 93}, {"target_end_line": 13, "source_start_line": 9, "source_end_line": 11, "source_confidence": 95, "target_start_line": 11, "target_confidence": 93}]}, {"source": "tizon9804_89d0aad8ad534420af82919773a7705d", "value": 36, "target": "nychi713_ebf98b4448c4565c8bc82d3691713ebc", "links": [{"target_end_line": 33, "source_start_line": 1, "source_end_line": 36, "source_confidence": 21, "target_start_line": 1, "target_confidence": 34}]}, {"source": "Franramy_a8c7971ed2a06e0a32610c7f937cbf7f", "value": 25, "target": "nychi713_3b17c5fded769dab6799fe54b2f85517", "links": [{"target_end_line": 11, "source_start_line": 23, "source_end_line": 27, "source_confidence": 26, "target_start_line": 7, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 26, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 64, "source_start_line": 70, "source_end_line": 81, "source_confidence": 26, "target_start_line": 51, "target_confidence": 20}, {"target_end_line": 11, "source_start_line": 23, "source_end_line": 27, "source_confidence": 26, "target_start_line": 7, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 26, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 64, "source_start_line": 70, "source_end_line": 81, "source_confidence": 26, "target_start_line": 51, "target_confidence": 20}, {"target_end_line": 11, "source_start_line": 23, "source_end_line": 27, "source_confidence": 26, "target_start_line": 7, "target_confidence": 20}, {"target_end_line": 6, "source_start_line": 1, "source_end_line": 6, "source_confidence": 26, "target_start_line": 1, "target_confidence": 20}, {"target_end_line": 64, "source_start_line": 70, "source_end_line": 81, "source_confidence": 26, "target_start_line": 51, "target_confidence": 20}]}, {"source": "willroj_6f0f1eb8b620d5ed3139d7e57dc801df", "value": 43, "target": "tizon9804_5c144f83193eba0c2603e30f7ebdb3db", "links": [{"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 56, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 26, "source_start_line": 28, "source_end_line": 32, "source_confidence": 56, "target_start_line": 22, "target_confidence": 70}, {"target_end_line": 37, "source_start_line": 38, "source_end_line": 46, "source_confidence": 56, "target_start_line": 29, "target_confidence": 70}, {"target_end_line": 53, "source_start_line": 57, "source_end_line": 66, "source_confidence": 56, "target_start_line": 44, "target_confidence": 70}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 56, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 26, "source_start_line": 28, "source_end_line": 32, "source_confidence": 56, "target_start_line": 22, "target_confidence": 70}, {"target_end_line": 37, "source_start_line": 38, "source_end_line": 46, "source_confidence": 56, "target_start_line": 29, "target_confidence": 70}, {"target_end_line": 53, "source_start_line": 57, "source_end_line": 66, "source_confidence": 56, "target_start_line": 44, "target_confidence": 70}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 56, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 26, "source_start_line": 28, "source_end_line": 32, "source_confidence": 56, "target_start_line": 22, "target_confidence": 70}, {"target_end_line": 37, "source_start_line": 38, "source_end_line": 46, "source_confidence": 56, "target_start_line": 29, "target_confidence": 70}, {"target_end_line": 53, "source_start_line": 57, "source_end_line": 66, "source_confidence": 56, "target_start_line": 44, "target_confidence": 70}, {"target_end_line": 19, "source_start_line": 1, "source_end_line": 19, "source_confidence": 56, "target_start_line": 1, "target_confidence": 70}, {"target_end_line": 26, "source_start_line": 28, "source_end_line": 32, "source_confidence": 56, "target_start_line": 22, "target_confidence": 70}, {"target_end_line": 37, "source_start_line": 38, "source_end_line": 46, "source_confidence": 56, "target_start_line": 29, "target_confidence": 70}, {"target_end_line": 53, "source_start_line": 57, "source_end_line": 66, "source_confidence": 56, "target_start_line": 44, "target_confidence": 70}]}, {"source": "tizon9804_89d0aad8ad534420af82919773a7705d", "value": 32, "target": "nychi713_d33cf7df5ffbb757a142fab18b134653", "links": [{"target_end_line": 29, "source_start_line": 1, "source_end_line": 32, "source_confidence": 18, "target_start_line": 1, "target_confidence": 45}]}, {"source": "tizon9804_89d0aad8ad534420af82919773a7705d", "value": 26, "target": "willroj_6f0f1eb8b620d5ed3139d7e57dc801df", "links": [{"target_end_line": 34, "source_start_line": 56, "source_end_line": 65, "source_confidence": 15, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 8, "source_start_line": 31, "source_end_line": 36, "source_confidence": 15, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 44, "source_start_line": 67, "source_end_line": 73, "source_confidence": 15, "target_start_line": 38, "target_confidence": 43}, {"target_end_line": 69, "source_start_line": 104, "source_end_line": 106, "source_confidence": 15, "target_start_line": 67, "target_confidence": 43}, {"target_end_line": 34, "source_start_line": 56, "source_end_line": 65, "source_confidence": 15, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 8, "source_start_line": 31, "source_end_line": 36, "source_confidence": 15, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 44, "source_start_line": 67, "source_end_line": 73, "source_confidence": 15, "target_start_line": 38, "target_confidence": 43}, {"target_end_line": 69, "source_start_line": 104, "source_end_line": 106, "source_confidence": 15, "target_start_line": 67, "target_confidence": 43}, {"target_end_line": 34, "source_start_line": 56, "source_end_line": 65, "source_confidence": 15, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 8, "source_start_line": 31, "source_end_line": 36, "source_confidence": 15, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 44, "source_start_line": 67, "source_end_line": 73, "source_confidence": 15, "target_start_line": 38, "target_confidence": 43}, {"target_end_line": 69, "source_start_line": 104, "source_end_line": 106, "source_confidence": 15, "target_start_line": 67, "target_confidence": 43}, {"target_end_line": 34, "source_start_line": 56, "source_end_line": 65, "source_confidence": 15, "target_start_line": 25, "target_confidence": 43}, {"target_end_line": 8, "source_start_line": 31, "source_end_line": 36, "source_confidence": 15, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 44, "source_start_line": 67, "source_end_line": 73, "source_confidence": 15, "target_start_line": 38, "target_confidence": 43}, {"target_end_line": 69, "source_start_line": 104, "source_end_line": 106, "source_confidence": 15, "target_start_line": 67, "target_confidence": 43}]}, {"source": "willroj_70008b54362298d88e1f039b1b186d99", "value": 26, "target": "tizon9804_89d0aad8ad534420af82919773a7705d", "links": [{"target_end_line": 65, "source_start_line": 25, "source_end_line": 34, "source_confidence": 45, "target_start_line": 56, "target_confidence": 15}, {"target_end_line": 36, "source_start_line": 3, "source_end_line": 8, "source_confidence": 45, "target_start_line": 31, "target_confidence": 15}, {"target_end_line": 73, "source_start_line": 36, "source_end_line": 41, "source_confidence": 45, "target_start_line": 67, "target_confidence": 15}, {"target_end_line": 106, "source_start_line": 64, "source_end_line": 66, "source_confidence": 45, "target_start_line": 104, "target_confidence": 15}, {"target_end_line": 65, "source_start_line": 25, "source_end_line": 34, "source_confidence": 45, "target_start_line": 56, "target_confidence": 15}, {"target_end_line": 36, "source_start_line": 3, "source_end_line": 8, "source_confidence": 45, "target_start_line": 31, "target_confidence": 15}, {"target_end_line": 73, "source_start_line": 36, "source_end_line": 41, "source_confidence": 45, "target_start_line": 67, "target_confidence": 15}, {"target_end_line": 106, "source_start_line": 64, "source_end_line": 66, "source_confidence": 45, "target_start_line": 104, "target_confidence": 15}, {"target_end_line": 65, "source_start_line": 25, "source_end_line": 34, "source_confidence": 45, "target_start_line": 56, "target_confidence": 15}, {"target_end_line": 36, "source_start_line": 3, "source_end_line": 8, "source_confidence": 45, "target_start_line": 31, "target_confidence": 15}, {"target_end_line": 73, "source_start_line": 36, "source_end_line": 41, "source_confidence": 45, "target_start_line": 67, "target_confidence": 15}, {"target_end_line": 106, "source_start_line": 64, "source_end_line": 66, "source_confidence": 45, "target_start_line": 104, "target_confidence": 15}, {"target_end_line": 65, "source_start_line": 25, "source_end_line": 34, "source_confidence": 45, "target_start_line": 56, "target_confidence": 15}, {"target_end_line": 36, "source_start_line": 3, "source_end_line": 8, "source_confidence": 45, "target_start_line": 31, "target_confidence": 15}, {"target_end_line": 73, "source_start_line": 36, "source_end_line": 41, "source_confidence": 45, "target_start_line": 67, "target_confidence": 15}, {"target_end_line": 106, "source_start_line": 64, "source_end_line": 66, "source_confidence": 45, "target_start_line": 104, "target_confidence": 15}]}, {"source": "Franramy_a8c7971ed2a06e0a32610c7f937cbf7f", "value": 35, "target": "willroj_70008b54362298d88e1f039b1b186d99", "links": [{"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 37, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 27, "source_confidence": 37, "target_start_line": 28, "target_confidence": 46}, {"target_end_line": 43, "source_start_line": 54, "source_end_line": 68, "source_confidence": 37, "target_start_line": 37, "target_confidence": 46}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 37, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 27, "source_confidence": 37, "target_start_line": 28, "target_confidence": 46}, {"target_end_line": 43, "source_start_line": 54, "source_end_line": 68, "source_confidence": 37, "target_start_line": 37, "target_confidence": 46}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 37, "target_start_line": 1, "target_confidence": 46}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 27, "source_confidence": 37, "target_start_line": 28, "target_confidence": 46}, {"target_end_line": 43, "source_start_line": 54, "source_end_line": 68, "source_confidence": 37, "target_start_line": 37, "target_confidence": 46}]}, {"source": "willroj_34fd56d0b126ead0d48fea27bff20f4f", "value": 35, "target": "Franramy_a8c7971ed2a06e0a32610c7f937cbf7f", "links": [{"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 46, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 28, "source_end_line": 32, "source_confidence": 46, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 37, "source_end_line": 43, "source_confidence": 46, "target_start_line": 54, "target_confidence": 37}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 46, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 28, "source_end_line": 32, "source_confidence": 46, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 37, "source_end_line": 43, "source_confidence": 46, "target_start_line": 54, "target_confidence": 37}, {"target_end_line": 15, "source_start_line": 1, "source_end_line": 15, "source_confidence": 46, "target_start_line": 1, "target_confidence": 37}, {"target_end_line": 27, "source_start_line": 28, "source_end_line": 32, "source_confidence": 46, "target_start_line": 23, "target_confidence": 37}, {"target_end_line": 68, "source_start_line": 37, "source_end_line": 43, "source_confidence": 46, "target_start_line": 54, "target_confidence": 37}]}, {"source": "john-guerra_221cb4c7fb676bcb58a25d4982114de3", "value": 23, "target": "willroj_34fd56d0b126ead0d48fea27bff20f4f", "links": [{"target_end_line": 32, "source_start_line": 23, "source_end_line": 27, "source_confidence": 30, "target_start_line": 28, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 30, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 66, "source_confidence": 30, "target_start_line": 54, "target_confidence": 34}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 27, "source_confidence": 30, "target_start_line": 28, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 30, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 66, "source_confidence": 30, "target_start_line": 54, "target_confidence": 34}, {"target_end_line": 32, "source_start_line": 23, "source_end_line": 27, "source_confidence": 30, "target_start_line": 28, "target_confidence": 34}, {"target_end_line": 8, "source_start_line": 1, "source_end_line": 8, "source_confidence": 30, "target_start_line": 1, "target_confidence": 34}, {"target_end_line": 63, "source_start_line": 57, "source_end_line": 66, "source_confidence": 30, "target_start_line": 54, "target_confidence": 34}]}, {"source": "carlosfelipetorres_cfc57e8ed16d9d7f5727cb10fdf63e2f", "value": 20, "target": "willroj_7b1610f824a258d36a1b3b554ebd2ea3", "links": [{"target_end_line": 35, "source_start_line": 57, "source_end_line": 62, "source_confidence": 27, "target_start_line": 31, "target_confidence": 43}, {"target_end_line": 65, "source_start_line": 70, "source_end_line": 77, "source_confidence": 27, "target_start_line": 58, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 37, "source_end_line": 39, "source_confidence": 27, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 41, "source_start_line": 65, "source_end_line": 67, "source_confidence": 27, "target_start_line": 39, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 57, "source_end_line": 62, "source_confidence": 27, "target_start_line": 31, "target_confidence": 43}, {"target_end_line": 65, "source_start_line": 70, "source_end_line": 77, "source_confidence": 27, "target_start_line": 58, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 37, "source_end_line": 39, "source_confidence": 27, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 41, "source_start_line": 65, "source_end_line": 67, "source_confidence": 27, "target_start_line": 39, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 57, "source_end_line": 62, "source_confidence": 27, "target_start_line": 31, "target_confidence": 43}, {"target_end_line": 65, "source_start_line": 70, "source_end_line": 77, "source_confidence": 27, "target_start_line": 58, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 37, "source_end_line": 39, "source_confidence": 27, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 41, "source_start_line": 65, "source_end_line": 67, "source_confidence": 27, "target_start_line": 39, "target_confidence": 43}, {"target_end_line": 35, "source_start_line": 57, "source_end_line": 62, "source_confidence": 27, "target_start_line": 31, "target_confidence": 43}, {"target_end_line": 65, "source_start_line": 70, "source_end_line": 77, "source_confidence": 27, "target_start_line": 58, "target_confidence": 43}, {"target_end_line": 5, "source_start_line": 37, "source_end_line": 39, "source_confidence": 27, "target_start_line": 3, "target_confidence": 43}, {"target_end_line": 41, "source_start_line": 65, "source_end_line": 67, "source_confidence": 27, "target_start_line": 39, "target_confidence": 43}]}, {"source": "aurelient_27ecb57c04bf42073312487720fb28d9", "value": 22, "target": "willroj_d4e1979c371393e2840883f1c211eb19", "links": [{"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 11, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 25, "source_start_line": 24, "source_end_line": 27, "source_confidence": 11, "target_start_line": 22, "target_confidence": 39}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 22, "source_confidence": 11, "target_start_line": 13, "target_confidence": 39}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 11, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 25, "source_start_line": 24, "source_end_line": 27, "source_confidence": 11, "target_start_line": 22, "target_confidence": 39}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 22, "source_confidence": 11, "target_start_line": 13, "target_confidence": 39}, {"target_end_line": 11, "source_start_line": 1, "source_end_line": 11, "source_confidence": 11, "target_start_line": 1, "target_confidence": 39}, {"target_end_line": 25, "source_start_line": 24, "source_end_line": 27, "source_confidence": 11, "target_start_line": 22, "target_confidence": 39}, {"target_end_line": 19, "source_start_line": 16, "source_end_line": 22, "source_confidence": 11, "target_start_line": 13, "target_confidence": 39}]}, {"source": "aiMojica10_2b9f00ac77b58d2d6d65a00666e5f60c", "value": 23, "target": "Franramy_38617a1b277ccbfebfa9c6968c16b8a3", "links": [{"target_end_line": 27, "source_start_line": 3, "source_end_line": 8, "source_confidence": 35, "target_start_line": 5, "target_confidence": 45}]}, {"source": "carlosfelipetorres_cfc57e8ed16d9d7f5727cb10fdf63e2f", "value": 25, "target": "aiMojica10_2b9f00ac77b58d2d6d65a00666e5f60c", "links": [{"target_end_line": 8, "source_start_line": 1, "source_end_line": 25, "source_confidence": 31, "target_start_line": 1, "target_confidence": 36}]}, {"source": "john-guerra_221cb4c7fb676bcb58a25d4982114de3", "value": 19, "target": "EfratVil_33de6b2fc516af2f60742055ecf1ca9a", "links": [{"target_end_line": 37, "source_start_line": 23, "source_end_line": 27, "source_confidence": 30, "target_start_line": 33, "target_confidence": 31}, {"target_end_line": 24, "source_start_line": 3, "source_end_line": 7, "source_confidence": 30, "target_start_line": 19, "target_confidence": 31}, {"target_end_line": 69, "source_start_line": 62, "source_end_line": 69, "source_confidence": 30, "target_start_line": 62, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 23, "source_end_line": 27, "source_confidence": 30, "target_start_line": 33, "target_confidence": 31}, {"target_end_line": 24, "source_start_line": 3, "source_end_line": 7, "source_confidence": 30, "target_start_line": 19, "target_confidence": 31}, {"target_end_line": 69, "source_start_line": 62, "source_end_line": 69, "source_confidence": 30, "target_start_line": 62, "target_confidence": 31}, {"target_end_line": 37, "source_start_line": 23, "source_end_line": 27, "source_confidence": 30, "target_start_line": 33, "target_confidence": 31}, {"target_end_line": 24, "source_start_line": 3, "source_end_line": 7, "source_confidence": 30, "target_start_line": 19, "target_confidence": 31}, {"target_end_line": 69, "source_start_line": 62, "source_end_line": 69, "source_confidence": 30, "target_start_line": 62, "target_confidence": 31}]}, {"source": "lwthatcher_3e61f97a6499ccfa77c85e8fe26bee19", "value": 22, "target": "carlosfelipetorres_cfc57e8ed16d9d7f5727cb10fdf63e2f", "links": [{"target_end_line": 65, "source_start_line": 41, "source_end_line": 49, "source_confidence": 15, "target_start_line": 56, "target_confidence": 22}, {"target_end_line": 41, "source_start_line": 2, "source_end_line": 7, "source_confidence": 15, "target_start_line": 36, "target_confidence": 22}, {"target_end_line": 86, "source_start_line": 106, "source_end_line": 111, "source_confidence": 15, "target_start_line": 81, "target_confidence": 22}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 49, "source_confidence": 15, "target_start_line": 56, "target_confidence": 22}, {"target_end_line": 41, "source_start_line": 2, "source_end_line": 7, "source_confidence": 15, "target_start_line": 36, "target_confidence": 22}, {"target_end_line": 86, "source_start_line": 106, "source_end_line": 111, "source_confidence": 15, "target_start_line": 81, "target_confidence": 22}, {"target_end_line": 65, "source_start_line": 41, "source_end_line": 49, "source_confidence": 15, "target_start_line": 56, "target_confidence": 22}, {"target_end_line": 41, "source_start_line": 2, "source_end_line": 7, "source_confidence": 15, "target_start_line": 36, "target_confidence": 22}, {"target_end_line": 86, "source_start_line": 106, "source_end_line": 111, "source_confidence": 15, "target_start_line": 81, "target_confidence": 22}]}, {"source": "carlosfelipetorres_f8e5b36812ae2cddacab5c8594117a31", "value": 22, "target": "lwthatcher_3e61f97a6499ccfa77c85e8fe26bee19", "links": [{"target_end_line": 49, "source_start_line": 48, "source_end_line": 57, "source_confidence": 22, "target_start_line": 41, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 27, "source_end_line": 32, "source_confidence": 22, "target_start_line": 2, "target_confidence": 14}, {"target_end_line": 111, "source_start_line": 76, "source_end_line": 81, "source_confidence": 22, "target_start_line": 106, "target_confidence": 14}, {"target_end_line": 49, "source_start_line": 48, "source_end_line": 57, "source_confidence": 22, "target_start_line": 41, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 27, "source_end_line": 32, "source_confidence": 22, "target_start_line": 2, "target_confidence": 14}, {"target_end_line": 111, "source_start_line": 76, "source_end_line": 81, "source_confidence": 22, "target_start_line": 106, "target_confidence": 14}, {"target_end_line": 49, "source_start_line": 48, "source_end_line": 57, "source_confidence": 22, "target_start_line": 41, "target_confidence": 14}, {"target_end_line": 7, "source_start_line": 27, "source_end_line": 32, "source_confidence": 22, "target_start_line": 2, "target_confidence": 14}, {"target_end_line": 111, "source_start_line": 76, "source_end_line": 81, "source_confidence": 22, "target_start_line": 106, "target_confidence": 14}]}, {"source": "lwthatcher_d6eb019c470bf3c9ca6df94213a111a0", "value": 22, "target": "carlosfelipetorres_f8e5b36812ae2cddacab5c8594117a31", "links": [{"target_end_line": 57, "source_start_line": 33, "source_end_line": 41, "source_confidence": 15, "target_start_line": 48, "target_confidence": 22}, {"target_end_line": 32, "source_start_line": 2, "source_end_line": 7, "source_confidence": 15, "target_start_line": 27, "target_confidence": 22}, {"target_end_line": 81, "source_start_line": 98, "source_end_line": 103, "source_confidence": 15, "target_start_line": 76, "target_confidence": 22}, {"target_end_line": 57, "source_start_line": 33, "source_end_line": 41, "source_confidence": 15, "target_start_line": 48, "target_confidence": 22}, {"target_end_line": 32, "source_start_line": 2, "source_end_line": 7, "source_confidence": 15, "target_start_line": 27, "target_confidence": 22}, {"target_end_line": 81, "source_start_line": 98, "source_end_line": 103, "source_confidence": 15, "target_start_line": 76, "target_confidence": 22}, {"target_end_line": 57, "source_start_line": 33, "source_end_line": 41, "source_confidence": 15, "target_start_line": 48, "target_confidence": 22}, {"target_end_line": 32, "source_start_line": 2, "source_end_line": 7, "source_confidence": 15, "target_start_line": 27, "target_confidence": 22}, {"target_end_line": 81, "source_start_line": 98, "source_end_line": 103, "source_confidence": 15, "target_start_line": 76, "target_confidence": 22}]}]}